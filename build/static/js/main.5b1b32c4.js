/*! For license information please see main.5b1b32c4.js.LICENSE.txt */
(() => {
  'use strict';
  var e = {
      730: (e, t, n) => {
        var r = n(43),
          i = n(853);
        function s(e) {
          for (var t = 'https://reactjs.org/docs/error-decoder.html?invariant=' + e, n = 1; n < arguments.length; n++)
            t += '&args[]=' + encodeURIComponent(arguments[n]);
          return (
            'Minified React error #' +
            e +
            '; visit ' +
            t +
            ' for the full message or use the non-minified dev environment for full errors and additional helpful warnings.'
          );
        }
        var a = new Set(),
          o = {};
        function l(e, t) {
          c(e, t), c(e + 'Capture', t);
        }
        function c(e, t) {
          for (o[e] = t, e = 0; e < t.length; e++) a.add(t[e]);
        }
        var u = !(
            'undefined' === typeof window ||
            'undefined' === typeof window.document ||
            'undefined' === typeof window.document.createElement
          ),
          d = Object.prototype.hasOwnProperty,
          h =
            /^[:A-Z_a-z\u00C0-\u00D6\u00D8-\u00F6\u00F8-\u02FF\u0370-\u037D\u037F-\u1FFF\u200C-\u200D\u2070-\u218F\u2C00-\u2FEF\u3001-\uD7FF\uF900-\uFDCF\uFDF0-\uFFFD][:A-Z_a-z\u00C0-\u00D6\u00D8-\u00F6\u00F8-\u02FF\u0370-\u037D\u037F-\u1FFF\u200C-\u200D\u2070-\u218F\u2C00-\u2FEF\u3001-\uD7FF\uF900-\uFDCF\uFDF0-\uFFFD\-.0-9\u00B7\u0300-\u036F\u203F-\u2040]*$/,
          f = {},
          p = {};
        function m(e, t, n, r, i, s, a) {
          (this.acceptsBooleans = 2 === t || 3 === t || 4 === t),
            (this.attributeName = r),
            (this.attributeNamespace = i),
            (this.mustUseProperty = n),
            (this.propertyName = e),
            (this.type = t),
            (this.sanitizeURL = s),
            (this.removeEmptyString = a);
        }
        var g = {};
        'children dangerouslySetInnerHTML defaultValue defaultChecked innerHTML suppressContentEditableWarning suppressHydrationWarning style'
          .split(' ')
          .forEach(function (e) {
            g[e] = new m(e, 0, !1, e, null, !1, !1);
          }),
          [
            ['acceptCharset', 'accept-charset'],
            ['className', 'class'],
            ['htmlFor', 'for'],
            ['httpEquiv', 'http-equiv'],
          ].forEach(function (e) {
            var t = e[0];
            g[t] = new m(t, 1, !1, e[1], null, !1, !1);
          }),
          ['contentEditable', 'draggable', 'spellCheck', 'value'].forEach(function (e) {
            g[e] = new m(e, 2, !1, e.toLowerCase(), null, !1, !1);
          }),
          ['autoReverse', 'externalResourcesRequired', 'focusable', 'preserveAlpha'].forEach(function (e) {
            g[e] = new m(e, 2, !1, e, null, !1, !1);
          }),
          'allowFullScreen async autoFocus autoPlay controls default defer disabled disablePictureInPicture disableRemotePlayback formNoValidate hidden loop noModule noValidate open playsInline readOnly required reversed scoped seamless itemScope'
            .split(' ')
            .forEach(function (e) {
              g[e] = new m(e, 3, !1, e.toLowerCase(), null, !1, !1);
            }),
          ['checked', 'multiple', 'muted', 'selected'].forEach(function (e) {
            g[e] = new m(e, 3, !0, e, null, !1, !1);
          }),
          ['capture', 'download'].forEach(function (e) {
            g[e] = new m(e, 4, !1, e, null, !1, !1);
          }),
          ['cols', 'rows', 'size', 'span'].forEach(function (e) {
            g[e] = new m(e, 6, !1, e, null, !1, !1);
          }),
          ['rowSpan', 'start'].forEach(function (e) {
            g[e] = new m(e, 5, !1, e.toLowerCase(), null, !1, !1);
          });
        var v = /[\-:]([a-z])/g;
        function y(e) {
          return e[1].toUpperCase();
        }
        function w(e, t, n, r) {
          var i = g.hasOwnProperty(t) ? g[t] : null;
          (null !== i
            ? 0 !== i.type
            : r || !(2 < t.length) || ('o' !== t[0] && 'O' !== t[0]) || ('n' !== t[1] && 'N' !== t[1])) &&
            ((function (e, t, n, r) {
              if (
                null === t ||
                'undefined' === typeof t ||
                (function (e, t, n, r) {
                  if (null !== n && 0 === n.type) return !1;
                  switch (typeof t) {
                    case 'function':
                    case 'symbol':
                      return !0;
                    case 'boolean':
                      return (
                        !r && (null !== n ? !n.acceptsBooleans : 'data-' !== (e = e.toLowerCase().slice(0, 5)) && 'aria-' !== e)
                      );
                    default:
                      return !1;
                  }
                })(e, t, n, r)
              )
                return !0;
              if (r) return !1;
              if (null !== n)
                switch (n.type) {
                  case 3:
                    return !t;
                  case 4:
                    return !1 === t;
                  case 5:
                    return isNaN(t);
                  case 6:
                    return isNaN(t) || 1 > t;
                }
              return !1;
            })(t, n, i, r) && (n = null),
            r || null === i
              ? (function (e) {
                  return !!d.call(p, e) || (!d.call(f, e) && (h.test(e) ? (p[e] = !0) : ((f[e] = !0), !1)));
                })(t) && (null === n ? e.removeAttribute(t) : e.setAttribute(t, '' + n))
              : i.mustUseProperty
                ? (e[i.propertyName] = null === n ? 3 !== i.type && '' : n)
                : ((t = i.attributeName),
                  (r = i.attributeNamespace),
                  null === n
                    ? e.removeAttribute(t)
                    : ((n = 3 === (i = i.type) || (4 === i && !0 === n) ? '' : '' + n),
                      r ? e.setAttributeNS(r, t, n) : e.setAttribute(t, n))));
        }
        'accent-height alignment-baseline arabic-form baseline-shift cap-height clip-path clip-rule color-interpolation color-interpolation-filters color-profile color-rendering dominant-baseline enable-background fill-opacity fill-rule flood-color flood-opacity font-family font-size font-size-adjust font-stretch font-style font-variant font-weight glyph-name glyph-orientation-horizontal glyph-orientation-vertical horiz-adv-x horiz-origin-x image-rendering letter-spacing lighting-color marker-end marker-mid marker-start overline-position overline-thickness paint-order panose-1 pointer-events rendering-intent shape-rendering stop-color stop-opacity strikethrough-position strikethrough-thickness stroke-dasharray stroke-dashoffset stroke-linecap stroke-linejoin stroke-miterlimit stroke-opacity stroke-width text-anchor text-decoration text-rendering underline-position underline-thickness unicode-bidi unicode-range units-per-em v-alphabetic v-hanging v-ideographic v-mathematical vector-effect vert-adv-y vert-origin-x vert-origin-y word-spacing writing-mode xmlns:xlink x-height'
          .split(' ')
          .forEach(function (e) {
            var t = e.replace(v, y);
            g[t] = new m(t, 1, !1, e, null, !1, !1);
          }),
          'xlink:actuate xlink:arcrole xlink:role xlink:show xlink:title xlink:type'.split(' ').forEach(function (e) {
            var t = e.replace(v, y);
            g[t] = new m(t, 1, !1, e, 'http://www.w3.org/1999/xlink', !1, !1);
          }),
          ['xml:base', 'xml:lang', 'xml:space'].forEach(function (e) {
            var t = e.replace(v, y);
            g[t] = new m(t, 1, !1, e, 'http://www.w3.org/XML/1998/namespace', !1, !1);
          }),
          ['tabIndex', 'crossOrigin'].forEach(function (e) {
            g[e] = new m(e, 1, !1, e.toLowerCase(), null, !1, !1);
          }),
          (g.xlinkHref = new m('xlinkHref', 1, !1, 'xlink:href', 'http://www.w3.org/1999/xlink', !0, !1)),
          ['src', 'href', 'action', 'formAction'].forEach(function (e) {
            g[e] = new m(e, 1, !1, e.toLowerCase(), null, !0, !0);
          });
        var b = r.__SECRET_INTERNALS_DO_NOT_USE_OR_YOU_WILL_BE_FIRED,
          S = Symbol.for('react.element'),
          E = Symbol.for('react.portal'),
          T = Symbol.for('react.fragment'),
          _ = Symbol.for('react.strict_mode'),
          I = Symbol.for('react.profiler'),
          x = Symbol.for('react.provider'),
          k = Symbol.for('react.context'),
          C = Symbol.for('react.forward_ref'),
          N = Symbol.for('react.suspense'),
          P = Symbol.for('react.suspense_list'),
          D = Symbol.for('react.memo'),
          A = Symbol.for('react.lazy');
        Symbol.for('react.scope'), Symbol.for('react.debug_trace_mode');
        var O = Symbol.for('react.offscreen');
        Symbol.for('react.legacy_hidden'), Symbol.for('react.cache'), Symbol.for('react.tracing_marker');
        var L = Symbol.iterator;
        function R(e) {
          return null === e || 'object' !== typeof e
            ? null
            : 'function' === typeof (e = (L && e[L]) || e['@@iterator'])
              ? e
              : null;
        }
        var M,
          F = Object.assign;
        function j(e) {
          if (void 0 === M)
            try {
              throw Error();
            } catch (n) {
              var t = n.stack.trim().match(/\n( *(at )?)/);
              M = (t && t[1]) || '';
            }
          return '\n' + M + e;
        }
        var U = !1;
        function V(e, t) {
          if (!e || U) return '';
          U = !0;
          var n = Error.prepareStackTrace;
          Error.prepareStackTrace = void 0;
          try {
            if (t)
              if (
                ((t = function () {
                  throw Error();
                }),
                Object.defineProperty(t.prototype, 'props', {
                  set: function () {
                    throw Error();
                  },
                }),
                'object' === typeof Reflect && Reflect.construct)
              ) {
                try {
                  Reflect.construct(t, []);
                } catch (c) {
                  var r = c;
                }
                Reflect.construct(e, [], t);
              } else {
                try {
                  t.call();
                } catch (c) {
                  r = c;
                }
                e.call(t.prototype);
              }
            else {
              try {
                throw Error();
              } catch (c) {
                r = c;
              }
              e();
            }
          } catch (c) {
            if (c && r && 'string' === typeof c.stack) {
              for (
                var i = c.stack.split('\n'), s = r.stack.split('\n'), a = i.length - 1, o = s.length - 1;
                1 <= a && 0 <= o && i[a] !== s[o];

              )
                o--;
              for (; 1 <= a && 0 <= o; a--, o--)
                if (i[a] !== s[o]) {
                  if (1 !== a || 1 !== o)
                    do {
                      if ((a--, 0 > --o || i[a] !== s[o])) {
                        var l = '\n' + i[a].replace(' at new ', ' at ');
                        return e.displayName && l.includes('<anonymous>') && (l = l.replace('<anonymous>', e.displayName)), l;
                      }
                    } while (1 <= a && 0 <= o);
                  break;
                }
            }
          } finally {
            (U = !1), (Error.prepareStackTrace = n);
          }
          return (e = e ? e.displayName || e.name : '') ? j(e) : '';
        }
        function z(e) {
          switch (e.tag) {
            case 5:
              return j(e.type);
            case 16:
              return j('Lazy');
            case 13:
              return j('Suspense');
            case 19:
              return j('SuspenseList');
            case 0:
            case 2:
            case 15:
              return (e = V(e.type, !1));
            case 11:
              return (e = V(e.type.render, !1));
            case 1:
              return (e = V(e.type, !0));
            default:
              return '';
          }
        }
        function B(e) {
          if (null == e) return null;
          if ('function' === typeof e) return e.displayName || e.name || null;
          if ('string' === typeof e) return e;
          switch (e) {
            case T:
              return 'Fragment';
            case E:
              return 'Portal';
            case I:
              return 'Profiler';
            case _:
              return 'StrictMode';
            case N:
              return 'Suspense';
            case P:
              return 'SuspenseList';
          }
          if ('object' === typeof e)
            switch (e.$$typeof) {
              case k:
                return (e.displayName || 'Context') + '.Consumer';
              case x:
                return (e._context.displayName || 'Context') + '.Provider';
              case C:
                var t = e.render;
                return (
                  (e = e.displayName) ||
                    (e = '' !== (e = t.displayName || t.name || '') ? 'ForwardRef(' + e + ')' : 'ForwardRef'),
                  e
                );
              case D:
                return null !== (t = e.displayName || null) ? t : B(e.type) || 'Memo';
              case A:
                (t = e._payload), (e = e._init);
                try {
                  return B(e(t));
                } catch (n) {}
            }
          return null;
        }
        function q(e) {
          var t = e.type;
          switch (e.tag) {
            case 24:
              return 'Cache';
            case 9:
              return (t.displayName || 'Context') + '.Consumer';
            case 10:
              return (t._context.displayName || 'Context') + '.Provider';
            case 18:
              return 'DehydratedFragment';
            case 11:
              return (
                (e = (e = t.render).displayName || e.name || ''),
                t.displayName || ('' !== e ? 'ForwardRef(' + e + ')' : 'ForwardRef')
              );
            case 7:
              return 'Fragment';
            case 5:
              return t;
            case 4:
              return 'Portal';
            case 3:
              return 'Root';
            case 6:
              return 'Text';
            case 16:
              return B(t);
            case 8:
              return t === _ ? 'StrictMode' : 'Mode';
            case 22:
              return 'Offscreen';
            case 12:
              return 'Profiler';
            case 21:
              return 'Scope';
            case 13:
              return 'Suspense';
            case 19:
              return 'SuspenseList';
            case 25:
              return 'TracingMarker';
            case 1:
            case 0:
            case 17:
            case 2:
            case 14:
            case 15:
              if ('function' === typeof t) return t.displayName || t.name || null;
              if ('string' === typeof t) return t;
          }
          return null;
        }
        function G(e) {
          switch (typeof e) {
            case 'boolean':
            case 'number':
            case 'string':
            case 'undefined':
            case 'object':
              return e;
            default:
              return '';
          }
        }
        function H(e) {
          var t = e.type;
          return (e = e.nodeName) && 'input' === e.toLowerCase() && ('checkbox' === t || 'radio' === t);
        }
        function K(e) {
          e._valueTracker ||
            (e._valueTracker = (function (e) {
              var t = H(e) ? 'checked' : 'value',
                n = Object.getOwnPropertyDescriptor(e.constructor.prototype, t),
                r = '' + e[t];
              if (
                !e.hasOwnProperty(t) &&
                'undefined' !== typeof n &&
                'function' === typeof n.get &&
                'function' === typeof n.set
              ) {
                var i = n.get,
                  s = n.set;
                return (
                  Object.defineProperty(e, t, {
                    configurable: !0,
                    get: function () {
                      return i.call(this);
                    },
                    set: function (e) {
                      (r = '' + e), s.call(this, e);
                    },
                  }),
                  Object.defineProperty(e, t, { enumerable: n.enumerable }),
                  {
                    getValue: function () {
                      return r;
                    },
                    setValue: function (e) {
                      r = '' + e;
                    },
                    stopTracking: function () {
                      (e._valueTracker = null), delete e[t];
                    },
                  }
                );
              }
            })(e));
        }
        function W(e) {
          if (!e) return !1;
          var t = e._valueTracker;
          if (!t) return !0;
          var n = t.getValue(),
            r = '';
          return e && (r = H(e) ? (e.checked ? 'true' : 'false') : e.value), (e = r) !== n && (t.setValue(e), !0);
        }
        function Q(e) {
          if ('undefined' === typeof (e = e || ('undefined' !== typeof document ? document : void 0))) return null;
          try {
            return e.activeElement || e.body;
          } catch (t) {
            return e.body;
          }
        }
        function Y(e, t) {
          var n = t.checked;
          return F({}, t, {
            defaultChecked: void 0,
            defaultValue: void 0,
            value: void 0,
            checked: null != n ? n : e._wrapperState.initialChecked,
          });
        }
        function J(e, t) {
          var n = null == t.defaultValue ? '' : t.defaultValue,
            r = null != t.checked ? t.checked : t.defaultChecked;
          (n = G(null != t.value ? t.value : n)),
            (e._wrapperState = {
              initialChecked: r,
              initialValue: n,
              controlled: 'checkbox' === t.type || 'radio' === t.type ? null != t.checked : null != t.value,
            });
        }
        function X(e, t) {
          null != (t = t.checked) && w(e, 'checked', t, !1);
        }
        function $(e, t) {
          X(e, t);
          var n = G(t.value),
            r = t.type;
          if (null != n)
            'number' === r
              ? ((0 === n && '' === e.value) || e.value != n) && (e.value = '' + n)
              : e.value !== '' + n && (e.value = '' + n);
          else if ('submit' === r || 'reset' === r) return void e.removeAttribute('value');
          t.hasOwnProperty('value') ? ee(e, t.type, n) : t.hasOwnProperty('defaultValue') && ee(e, t.type, G(t.defaultValue)),
            null == t.checked && null != t.defaultChecked && (e.defaultChecked = !!t.defaultChecked);
        }
        function Z(e, t, n) {
          if (t.hasOwnProperty('value') || t.hasOwnProperty('defaultValue')) {
            var r = t.type;
            if (!(('submit' !== r && 'reset' !== r) || (void 0 !== t.value && null !== t.value))) return;
            (t = '' + e._wrapperState.initialValue), n || t === e.value || (e.value = t), (e.defaultValue = t);
          }
          '' !== (n = e.name) && (e.name = ''), (e.defaultChecked = !!e._wrapperState.initialChecked), '' !== n && (e.name = n);
        }
        function ee(e, t, n) {
          ('number' === t && Q(e.ownerDocument) === e) ||
            (null == n
              ? (e.defaultValue = '' + e._wrapperState.initialValue)
              : e.defaultValue !== '' + n && (e.defaultValue = '' + n));
        }
        var te = Array.isArray;
        function ne(e, t, n, r) {
          if (((e = e.options), t)) {
            t = {};
            for (var i = 0; i < n.length; i++) t['$' + n[i]] = !0;
            for (n = 0; n < e.length; n++)
              (i = t.hasOwnProperty('$' + e[n].value)),
                e[n].selected !== i && (e[n].selected = i),
                i && r && (e[n].defaultSelected = !0);
          } else {
            for (n = '' + G(n), t = null, i = 0; i < e.length; i++) {
              if (e[i].value === n) return (e[i].selected = !0), void (r && (e[i].defaultSelected = !0));
              null !== t || e[i].disabled || (t = e[i]);
            }
            null !== t && (t.selected = !0);
          }
        }
        function re(e, t) {
          if (null != t.dangerouslySetInnerHTML) throw Error(s(91));
          return F({}, t, { value: void 0, defaultValue: void 0, children: '' + e._wrapperState.initialValue });
        }
        function ie(e, t) {
          var n = t.value;
          if (null == n) {
            if (((n = t.children), (t = t.defaultValue), null != n)) {
              if (null != t) throw Error(s(92));
              if (te(n)) {
                if (1 < n.length) throw Error(s(93));
                n = n[0];
              }
              t = n;
            }
            null == t && (t = ''), (n = t);
          }
          e._wrapperState = { initialValue: G(n) };
        }
        function se(e, t) {
          var n = G(t.value),
            r = G(t.defaultValue);
          null != n &&
            ((n = '' + n) !== e.value && (e.value = n), null == t.defaultValue && e.defaultValue !== n && (e.defaultValue = n)),
            null != r && (e.defaultValue = '' + r);
        }
        function ae(e) {
          var t = e.textContent;
          t === e._wrapperState.initialValue && '' !== t && null !== t && (e.value = t);
        }
        function oe(e) {
          switch (e) {
            case 'svg':
              return 'http://www.w3.org/2000/svg';
            case 'math':
              return 'http://www.w3.org/1998/Math/MathML';
            default:
              return 'http://www.w3.org/1999/xhtml';
          }
        }
        function le(e, t) {
          return null == e || 'http://www.w3.org/1999/xhtml' === e
            ? oe(t)
            : 'http://www.w3.org/2000/svg' === e && 'foreignObject' === t
              ? 'http://www.w3.org/1999/xhtml'
              : e;
        }
        var ce,
          ue,
          de =
            ((ue = function (e, t) {
              if ('http://www.w3.org/2000/svg' !== e.namespaceURI || 'innerHTML' in e) e.innerHTML = t;
              else {
                for (
                  (ce = ce || document.createElement('div')).innerHTML = '<svg>' + t.valueOf().toString() + '</svg>',
                    t = ce.firstChild;
                  e.firstChild;

                )
                  e.removeChild(e.firstChild);
                for (; t.firstChild; ) e.appendChild(t.firstChild);
              }
            }),
            'undefined' !== typeof MSApp && MSApp.execUnsafeLocalFunction
              ? function (e, t, n, r) {
                  MSApp.execUnsafeLocalFunction(function () {
                    return ue(e, t);
                  });
                }
              : ue);
        function he(e, t) {
          if (t) {
            var n = e.firstChild;
            if (n && n === e.lastChild && 3 === n.nodeType) return void (n.nodeValue = t);
          }
          e.textContent = t;
        }
        var fe = {
            animationIterationCount: !0,
            aspectRatio: !0,
            borderImageOutset: !0,
            borderImageSlice: !0,
            borderImageWidth: !0,
            boxFlex: !0,
            boxFlexGroup: !0,
            boxOrdinalGroup: !0,
            columnCount: !0,
            columns: !0,
            flex: !0,
            flexGrow: !0,
            flexPositive: !0,
            flexShrink: !0,
            flexNegative: !0,
            flexOrder: !0,
            gridArea: !0,
            gridRow: !0,
            gridRowEnd: !0,
            gridRowSpan: !0,
            gridRowStart: !0,
            gridColumn: !0,
            gridColumnEnd: !0,
            gridColumnSpan: !0,
            gridColumnStart: !0,
            fontWeight: !0,
            lineClamp: !0,
            lineHeight: !0,
            opacity: !0,
            order: !0,
            orphans: !0,
            tabSize: !0,
            widows: !0,
            zIndex: !0,
            zoom: !0,
            fillOpacity: !0,
            floodOpacity: !0,
            stopOpacity: !0,
            strokeDasharray: !0,
            strokeDashoffset: !0,
            strokeMiterlimit: !0,
            strokeOpacity: !0,
            strokeWidth: !0,
          },
          pe = ['Webkit', 'ms', 'Moz', 'O'];
        function me(e, t, n) {
          return null == t || 'boolean' === typeof t || '' === t
            ? ''
            : n || 'number' !== typeof t || 0 === t || (fe.hasOwnProperty(e) && fe[e])
              ? ('' + t).trim()
              : t + 'px';
        }
        function ge(e, t) {
          for (var n in ((e = e.style), t))
            if (t.hasOwnProperty(n)) {
              var r = 0 === n.indexOf('--'),
                i = me(n, t[n], r);
              'float' === n && (n = 'cssFloat'), r ? e.setProperty(n, i) : (e[n] = i);
            }
        }
        Object.keys(fe).forEach(function (e) {
          pe.forEach(function (t) {
            (t = t + e.charAt(0).toUpperCase() + e.substring(1)), (fe[t] = fe[e]);
          });
        });
        var ve = F(
          { menuitem: !0 },
          {
            area: !0,
            base: !0,
            br: !0,
            col: !0,
            embed: !0,
            hr: !0,
            img: !0,
            input: !0,
            keygen: !0,
            link: !0,
            meta: !0,
            param: !0,
            source: !0,
            track: !0,
            wbr: !0,
          },
        );
        function ye(e, t) {
          if (t) {
            if (ve[e] && (null != t.children || null != t.dangerouslySetInnerHTML)) throw Error(s(137, e));
            if (null != t.dangerouslySetInnerHTML) {
              if (null != t.children) throw Error(s(60));
              if ('object' !== typeof t.dangerouslySetInnerHTML || !('__html' in t.dangerouslySetInnerHTML)) throw Error(s(61));
            }
            if (null != t.style && 'object' !== typeof t.style) throw Error(s(62));
          }
        }
        function we(e, t) {
          if (-1 === e.indexOf('-')) return 'string' === typeof t.is;
          switch (e) {
            case 'annotation-xml':
            case 'color-profile':
            case 'font-face':
            case 'font-face-src':
            case 'font-face-uri':
            case 'font-face-format':
            case 'font-face-name':
            case 'missing-glyph':
              return !1;
            default:
              return !0;
          }
        }
        var be = null;
        function Se(e) {
          return (
            (e = e.target || e.srcElement || window).correspondingUseElement && (e = e.correspondingUseElement),
            3 === e.nodeType ? e.parentNode : e
          );
        }
        var Ee = null,
          Te = null,
          _e = null;
        function Ie(e) {
          if ((e = wi(e))) {
            if ('function' !== typeof Ee) throw Error(s(280));
            var t = e.stateNode;
            t && ((t = Si(t)), Ee(e.stateNode, e.type, t));
          }
        }
        function xe(e) {
          Te ? (_e ? _e.push(e) : (_e = [e])) : (Te = e);
        }
        function ke() {
          if (Te) {
            var e = Te,
              t = _e;
            if (((_e = Te = null), Ie(e), t)) for (e = 0; e < t.length; e++) Ie(t[e]);
          }
        }
        function Ce(e, t) {
          return e(t);
        }
        function Ne() {}
        var Pe = !1;
        function De(e, t, n) {
          if (Pe) return e(t, n);
          Pe = !0;
          try {
            return Ce(e, t, n);
          } finally {
            (Pe = !1), (null !== Te || null !== _e) && (Ne(), ke());
          }
        }
        function Ae(e, t) {
          var n = e.stateNode;
          if (null === n) return null;
          var r = Si(n);
          if (null === r) return null;
          n = r[t];
          e: switch (t) {
            case 'onClick':
            case 'onClickCapture':
            case 'onDoubleClick':
            case 'onDoubleClickCapture':
            case 'onMouseDown':
            case 'onMouseDownCapture':
            case 'onMouseMove':
            case 'onMouseMoveCapture':
            case 'onMouseUp':
            case 'onMouseUpCapture':
            case 'onMouseEnter':
              (r = !r.disabled) || (r = !('button' === (e = e.type) || 'input' === e || 'select' === e || 'textarea' === e)),
                (e = !r);
              break e;
            default:
              e = !1;
          }
          if (e) return null;
          if (n && 'function' !== typeof n) throw Error(s(231, t, typeof n));
          return n;
        }
        var Oe = !1;
        if (u)
          try {
            var Le = {};
            Object.defineProperty(Le, 'passive', {
              get: function () {
                Oe = !0;
              },
            }),
              window.addEventListener('test', Le, Le),
              window.removeEventListener('test', Le, Le);
          } catch (ue) {
            Oe = !1;
          }
        function Re(e, t, n, r, i, s, a, o, l) {
          var c = Array.prototype.slice.call(arguments, 3);
          try {
            t.apply(n, c);
          } catch (u) {
            this.onError(u);
          }
        }
        var Me = !1,
          Fe = null,
          je = !1,
          Ue = null,
          Ve = {
            onError: function (e) {
              (Me = !0), (Fe = e);
            },
          };
        function ze(e, t, n, r, i, s, a, o, l) {
          (Me = !1), (Fe = null), Re.apply(Ve, arguments);
        }
        function Be(e) {
          var t = e,
            n = e;
          if (e.alternate) for (; t.return; ) t = t.return;
          else {
            e = t;
            do {
              0 !== (4098 & (t = e).flags) && (n = t.return), (e = t.return);
            } while (e);
          }
          return 3 === t.tag ? n : null;
        }
        function qe(e) {
          if (13 === e.tag) {
            var t = e.memoizedState;
            if ((null === t && null !== (e = e.alternate) && (t = e.memoizedState), null !== t)) return t.dehydrated;
          }
          return null;
        }
        function Ge(e) {
          if (Be(e) !== e) throw Error(s(188));
        }
        function He(e) {
          return null !==
            (e = (function (e) {
              var t = e.alternate;
              if (!t) {
                if (null === (t = Be(e))) throw Error(s(188));
                return t !== e ? null : e;
              }
              for (var n = e, r = t; ; ) {
                var i = n.return;
                if (null === i) break;
                var a = i.alternate;
                if (null === a) {
                  if (null !== (r = i.return)) {
                    n = r;
                    continue;
                  }
                  break;
                }
                if (i.child === a.child) {
                  for (a = i.child; a; ) {
                    if (a === n) return Ge(i), e;
                    if (a === r) return Ge(i), t;
                    a = a.sibling;
                  }
                  throw Error(s(188));
                }
                if (n.return !== r.return) (n = i), (r = a);
                else {
                  for (var o = !1, l = i.child; l; ) {
                    if (l === n) {
                      (o = !0), (n = i), (r = a);
                      break;
                    }
                    if (l === r) {
                      (o = !0), (r = i), (n = a);
                      break;
                    }
                    l = l.sibling;
                  }
                  if (!o) {
                    for (l = a.child; l; ) {
                      if (l === n) {
                        (o = !0), (n = a), (r = i);
                        break;
                      }
                      if (l === r) {
                        (o = !0), (r = a), (n = i);
                        break;
                      }
                      l = l.sibling;
                    }
                    if (!o) throw Error(s(189));
                  }
                }
                if (n.alternate !== r) throw Error(s(190));
              }
              if (3 !== n.tag) throw Error(s(188));
              return n.stateNode.current === n ? e : t;
            })(e))
            ? Ke(e)
            : null;
        }
        function Ke(e) {
          if (5 === e.tag || 6 === e.tag) return e;
          for (e = e.child; null !== e; ) {
            var t = Ke(e);
            if (null !== t) return t;
            e = e.sibling;
          }
          return null;
        }
        var We = i.unstable_scheduleCallback,
          Qe = i.unstable_cancelCallback,
          Ye = i.unstable_shouldYield,
          Je = i.unstable_requestPaint,
          Xe = i.unstable_now,
          $e = i.unstable_getCurrentPriorityLevel,
          Ze = i.unstable_ImmediatePriority,
          et = i.unstable_UserBlockingPriority,
          tt = i.unstable_NormalPriority,
          nt = i.unstable_LowPriority,
          rt = i.unstable_IdlePriority,
          it = null,
          st = null;
        var at = Math.clz32
            ? Math.clz32
            : function (e) {
                return (e >>>= 0), 0 === e ? 32 : (31 - ((ot(e) / lt) | 0)) | 0;
              },
          ot = Math.log,
          lt = Math.LN2;
        var ct = 64,
          ut = 4194304;
        function dt(e) {
          switch (e & -e) {
            case 1:
              return 1;
            case 2:
              return 2;
            case 4:
              return 4;
            case 8:
              return 8;
            case 16:
              return 16;
            case 32:
              return 32;
            case 64:
            case 128:
            case 256:
            case 512:
            case 1024:
            case 2048:
            case 4096:
            case 8192:
            case 16384:
            case 32768:
            case 65536:
            case 131072:
            case 262144:
            case 524288:
            case 1048576:
            case 2097152:
              return 4194240 & e;
            case 4194304:
            case 8388608:
            case 16777216:
            case 33554432:
            case 67108864:
              return 130023424 & e;
            case 134217728:
              return 134217728;
            case 268435456:
              return 268435456;
            case 536870912:
              return 536870912;
            case 1073741824:
              return 1073741824;
            default:
              return e;
          }
        }
        function ht(e, t) {
          var n = e.pendingLanes;
          if (0 === n) return 0;
          var r = 0,
            i = e.suspendedLanes,
            s = e.pingedLanes,
            a = 268435455 & n;
          if (0 !== a) {
            var o = a & ~i;
            0 !== o ? (r = dt(o)) : 0 !== (s &= a) && (r = dt(s));
          } else 0 !== (a = n & ~i) ? (r = dt(a)) : 0 !== s && (r = dt(s));
          if (0 === r) return 0;
          if (0 !== t && t !== r && 0 === (t & i) && ((i = r & -r) >= (s = t & -t) || (16 === i && 0 !== (4194240 & s))))
            return t;
          if ((0 !== (4 & r) && (r |= 16 & n), 0 !== (t = e.entangledLanes)))
            for (e = e.entanglements, t &= r; 0 < t; ) (i = 1 << (n = 31 - at(t))), (r |= e[n]), (t &= ~i);
          return r;
        }
        function ft(e, t) {
          switch (e) {
            case 1:
            case 2:
            case 4:
              return t + 250;
            case 8:
            case 16:
            case 32:
            case 64:
            case 128:
            case 256:
            case 512:
            case 1024:
            case 2048:
            case 4096:
            case 8192:
            case 16384:
            case 32768:
            case 65536:
            case 131072:
            case 262144:
            case 524288:
            case 1048576:
            case 2097152:
              return t + 5e3;
            default:
              return -1;
          }
        }
        function pt(e) {
          return 0 !== (e = -1073741825 & e.pendingLanes) ? e : 1073741824 & e ? 1073741824 : 0;
        }
        function mt() {
          var e = ct;
          return 0 === (4194240 & (ct <<= 1)) && (ct = 64), e;
        }
        function gt(e) {
          for (var t = [], n = 0; 31 > n; n++) t.push(e);
          return t;
        }
        function vt(e, t, n) {
          (e.pendingLanes |= t),
            536870912 !== t && ((e.suspendedLanes = 0), (e.pingedLanes = 0)),
            ((e = e.eventTimes)[(t = 31 - at(t))] = n);
        }
        function yt(e, t) {
          var n = (e.entangledLanes |= t);
          for (e = e.entanglements; n; ) {
            var r = 31 - at(n),
              i = 1 << r;
            (i & t) | (e[r] & t) && (e[r] |= t), (n &= ~i);
          }
        }
        var wt = 0;
        function bt(e) {
          return 1 < (e &= -e) ? (4 < e ? (0 !== (268435455 & e) ? 16 : 536870912) : 4) : 1;
        }
        var St,
          Et,
          Tt,
          _t,
          It,
          xt = !1,
          kt = [],
          Ct = null,
          Nt = null,
          Pt = null,
          Dt = new Map(),
          At = new Map(),
          Ot = [],
          Lt =
            'mousedown mouseup touchcancel touchend touchstart auxclick dblclick pointercancel pointerdown pointerup dragend dragstart drop compositionend compositionstart keydown keypress keyup input textInput copy cut paste click change contextmenu reset submit'.split(
              ' ',
            );
        function Rt(e, t) {
          switch (e) {
            case 'focusin':
            case 'focusout':
              Ct = null;
              break;
            case 'dragenter':
            case 'dragleave':
              Nt = null;
              break;
            case 'mouseover':
            case 'mouseout':
              Pt = null;
              break;
            case 'pointerover':
            case 'pointerout':
              Dt.delete(t.pointerId);
              break;
            case 'gotpointercapture':
            case 'lostpointercapture':
              At.delete(t.pointerId);
          }
        }
        function Mt(e, t, n, r, i, s) {
          return null === e || e.nativeEvent !== s
            ? ((e = { blockedOn: t, domEventName: n, eventSystemFlags: r, nativeEvent: s, targetContainers: [i] }),
              null !== t && null !== (t = wi(t)) && Et(t),
              e)
            : ((e.eventSystemFlags |= r), (t = e.targetContainers), null !== i && -1 === t.indexOf(i) && t.push(i), e);
        }
        function Ft(e) {
          var t = yi(e.target);
          if (null !== t) {
            var n = Be(t);
            if (null !== n)
              if (13 === (t = n.tag)) {
                if (null !== (t = qe(n)))
                  return (
                    (e.blockedOn = t),
                    void It(e.priority, function () {
                      Tt(n);
                    })
                  );
              } else if (3 === t && n.stateNode.current.memoizedState.isDehydrated)
                return void (e.blockedOn = 3 === n.tag ? n.stateNode.containerInfo : null);
          }
          e.blockedOn = null;
        }
        function jt(e) {
          if (null !== e.blockedOn) return !1;
          for (var t = e.targetContainers; 0 < t.length; ) {
            var n = Yt(e.domEventName, e.eventSystemFlags, t[0], e.nativeEvent);
            if (null !== n) return null !== (t = wi(n)) && Et(t), (e.blockedOn = n), !1;
            var r = new (n = e.nativeEvent).constructor(n.type, n);
            (be = r), n.target.dispatchEvent(r), (be = null), t.shift();
          }
          return !0;
        }
        function Ut(e, t, n) {
          jt(e) && n.delete(t);
        }
        function Vt() {
          (xt = !1),
            null !== Ct && jt(Ct) && (Ct = null),
            null !== Nt && jt(Nt) && (Nt = null),
            null !== Pt && jt(Pt) && (Pt = null),
            Dt.forEach(Ut),
            At.forEach(Ut);
        }
        function zt(e, t) {
          e.blockedOn === t &&
            ((e.blockedOn = null), xt || ((xt = !0), i.unstable_scheduleCallback(i.unstable_NormalPriority, Vt)));
        }
        function Bt(e) {
          function t(t) {
            return zt(t, e);
          }
          if (0 < kt.length) {
            zt(kt[0], e);
            for (var n = 1; n < kt.length; n++) {
              var r = kt[n];
              r.blockedOn === e && (r.blockedOn = null);
            }
          }
          for (
            null !== Ct && zt(Ct, e), null !== Nt && zt(Nt, e), null !== Pt && zt(Pt, e), Dt.forEach(t), At.forEach(t), n = 0;
            n < Ot.length;
            n++
          )
            (r = Ot[n]).blockedOn === e && (r.blockedOn = null);
          for (; 0 < Ot.length && null === (n = Ot[0]).blockedOn; ) Ft(n), null === n.blockedOn && Ot.shift();
        }
        var qt = b.ReactCurrentBatchConfig,
          Gt = !0;
        function Ht(e, t, n, r) {
          var i = wt,
            s = qt.transition;
          qt.transition = null;
          try {
            (wt = 1), Wt(e, t, n, r);
          } finally {
            (wt = i), (qt.transition = s);
          }
        }
        function Kt(e, t, n, r) {
          var i = wt,
            s = qt.transition;
          qt.transition = null;
          try {
            (wt = 4), Wt(e, t, n, r);
          } finally {
            (wt = i), (qt.transition = s);
          }
        }
        function Wt(e, t, n, r) {
          if (Gt) {
            var i = Yt(e, t, n, r);
            if (null === i) Gr(e, t, r, Qt, n), Rt(e, r);
            else if (
              (function (e, t, n, r, i) {
                switch (t) {
                  case 'focusin':
                    return (Ct = Mt(Ct, e, t, n, r, i)), !0;
                  case 'dragenter':
                    return (Nt = Mt(Nt, e, t, n, r, i)), !0;
                  case 'mouseover':
                    return (Pt = Mt(Pt, e, t, n, r, i)), !0;
                  case 'pointerover':
                    var s = i.pointerId;
                    return Dt.set(s, Mt(Dt.get(s) || null, e, t, n, r, i)), !0;
                  case 'gotpointercapture':
                    return (s = i.pointerId), At.set(s, Mt(At.get(s) || null, e, t, n, r, i)), !0;
                }
                return !1;
              })(i, e, t, n, r)
            )
              r.stopPropagation();
            else if ((Rt(e, r), 4 & t && -1 < Lt.indexOf(e))) {
              for (; null !== i; ) {
                var s = wi(i);
                if ((null !== s && St(s), null === (s = Yt(e, t, n, r)) && Gr(e, t, r, Qt, n), s === i)) break;
                i = s;
              }
              null !== i && r.stopPropagation();
            } else Gr(e, t, r, null, n);
          }
        }
        var Qt = null;
        function Yt(e, t, n, r) {
          if (((Qt = null), null !== (e = yi((e = Se(r))))))
            if (null === (t = Be(e))) e = null;
            else if (13 === (n = t.tag)) {
              if (null !== (e = qe(t))) return e;
              e = null;
            } else if (3 === n) {
              if (t.stateNode.current.memoizedState.isDehydrated) return 3 === t.tag ? t.stateNode.containerInfo : null;
              e = null;
            } else t !== e && (e = null);
          return (Qt = e), null;
        }
        function Jt(e) {
          switch (e) {
            case 'cancel':
            case 'click':
            case 'close':
            case 'contextmenu':
            case 'copy':
            case 'cut':
            case 'auxclick':
            case 'dblclick':
            case 'dragend':
            case 'dragstart':
            case 'drop':
            case 'focusin':
            case 'focusout':
            case 'input':
            case 'invalid':
            case 'keydown':
            case 'keypress':
            case 'keyup':
            case 'mousedown':
            case 'mouseup':
            case 'paste':
            case 'pause':
            case 'play':
            case 'pointercancel':
            case 'pointerdown':
            case 'pointerup':
            case 'ratechange':
            case 'reset':
            case 'resize':
            case 'seeked':
            case 'submit':
            case 'touchcancel':
            case 'touchend':
            case 'touchstart':
            case 'volumechange':
            case 'change':
            case 'selectionchange':
            case 'textInput':
            case 'compositionstart':
            case 'compositionend':
            case 'compositionupdate':
            case 'beforeblur':
            case 'afterblur':
            case 'beforeinput':
            case 'blur':
            case 'fullscreenchange':
            case 'focus':
            case 'hashchange':
            case 'popstate':
            case 'select':
            case 'selectstart':
              return 1;
            case 'drag':
            case 'dragenter':
            case 'dragexit':
            case 'dragleave':
            case 'dragover':
            case 'mousemove':
            case 'mouseout':
            case 'mouseover':
            case 'pointermove':
            case 'pointerout':
            case 'pointerover':
            case 'scroll':
            case 'toggle':
            case 'touchmove':
            case 'wheel':
            case 'mouseenter':
            case 'mouseleave':
            case 'pointerenter':
            case 'pointerleave':
              return 4;
            case 'message':
              switch ($e()) {
                case Ze:
                  return 1;
                case et:
                  return 4;
                case tt:
                case nt:
                  return 16;
                case rt:
                  return 536870912;
                default:
                  return 16;
              }
            default:
              return 16;
          }
        }
        var Xt = null,
          $t = null,
          Zt = null;
        function en() {
          if (Zt) return Zt;
          var e,
            t,
            n = $t,
            r = n.length,
            i = 'value' in Xt ? Xt.value : Xt.textContent,
            s = i.length;
          for (e = 0; e < r && n[e] === i[e]; e++);
          var a = r - e;
          for (t = 1; t <= a && n[r - t] === i[s - t]; t++);
          return (Zt = i.slice(e, 1 < t ? 1 - t : void 0));
        }
        function tn(e) {
          var t = e.keyCode;
          return (
            'charCode' in e ? 0 === (e = e.charCode) && 13 === t && (e = 13) : (e = t),
            10 === e && (e = 13),
            32 <= e || 13 === e ? e : 0
          );
        }
        function nn() {
          return !0;
        }
        function rn() {
          return !1;
        }
        function sn(e) {
          function t(t, n, r, i, s) {
            for (var a in ((this._reactName = t),
            (this._targetInst = r),
            (this.type = n),
            (this.nativeEvent = i),
            (this.target = s),
            (this.currentTarget = null),
            e))
              e.hasOwnProperty(a) && ((t = e[a]), (this[a] = t ? t(i) : i[a]));
            return (
              (this.isDefaultPrevented = (null != i.defaultPrevented ? i.defaultPrevented : !1 === i.returnValue) ? nn : rn),
              (this.isPropagationStopped = rn),
              this
            );
          }
          return (
            F(t.prototype, {
              preventDefault: function () {
                this.defaultPrevented = !0;
                var e = this.nativeEvent;
                e &&
                  (e.preventDefault ? e.preventDefault() : 'unknown' !== typeof e.returnValue && (e.returnValue = !1),
                  (this.isDefaultPrevented = nn));
              },
              stopPropagation: function () {
                var e = this.nativeEvent;
                e &&
                  (e.stopPropagation ? e.stopPropagation() : 'unknown' !== typeof e.cancelBubble && (e.cancelBubble = !0),
                  (this.isPropagationStopped = nn));
              },
              persist: function () {},
              isPersistent: nn,
            }),
            t
          );
        }
        var an,
          on,
          ln,
          cn = {
            eventPhase: 0,
            bubbles: 0,
            cancelable: 0,
            timeStamp: function (e) {
              return e.timeStamp || Date.now();
            },
            defaultPrevented: 0,
            isTrusted: 0,
          },
          un = sn(cn),
          dn = F({}, cn, { view: 0, detail: 0 }),
          hn = sn(dn),
          fn = F({}, dn, {
            screenX: 0,
            screenY: 0,
            clientX: 0,
            clientY: 0,
            pageX: 0,
            pageY: 0,
            ctrlKey: 0,
            shiftKey: 0,
            altKey: 0,
            metaKey: 0,
            getModifierState: In,
            button: 0,
            buttons: 0,
            relatedTarget: function (e) {
              return void 0 === e.relatedTarget
                ? e.fromElement === e.srcElement
                  ? e.toElement
                  : e.fromElement
                : e.relatedTarget;
            },
            movementX: function (e) {
              return 'movementX' in e
                ? e.movementX
                : (e !== ln &&
                    (ln && 'mousemove' === e.type
                      ? ((an = e.screenX - ln.screenX), (on = e.screenY - ln.screenY))
                      : (on = an = 0),
                    (ln = e)),
                  an);
            },
            movementY: function (e) {
              return 'movementY' in e ? e.movementY : on;
            },
          }),
          pn = sn(fn),
          mn = sn(F({}, fn, { dataTransfer: 0 })),
          gn = sn(F({}, dn, { relatedTarget: 0 })),
          vn = sn(F({}, cn, { animationName: 0, elapsedTime: 0, pseudoElement: 0 })),
          yn = F({}, cn, {
            clipboardData: function (e) {
              return 'clipboardData' in e ? e.clipboardData : window.clipboardData;
            },
          }),
          wn = sn(yn),
          bn = sn(F({}, cn, { data: 0 })),
          Sn = {
            Esc: 'Escape',
            Spacebar: ' ',
            Left: 'ArrowLeft',
            Up: 'ArrowUp',
            Right: 'ArrowRight',
            Down: 'ArrowDown',
            Del: 'Delete',
            Win: 'OS',
            Menu: 'ContextMenu',
            Apps: 'ContextMenu',
            Scroll: 'ScrollLock',
            MozPrintableKey: 'Unidentified',
          },
          En = {
            8: 'Backspace',
            9: 'Tab',
            12: 'Clear',
            13: 'Enter',
            16: 'Shift',
            17: 'Control',
            18: 'Alt',
            19: 'Pause',
            20: 'CapsLock',
            27: 'Escape',
            32: ' ',
            33: 'PageUp',
            34: 'PageDown',
            35: 'End',
            36: 'Home',
            37: 'ArrowLeft',
            38: 'ArrowUp',
            39: 'ArrowRight',
            40: 'ArrowDown',
            45: 'Insert',
            46: 'Delete',
            112: 'F1',
            113: 'F2',
            114: 'F3',
            115: 'F4',
            116: 'F5',
            117: 'F6',
            118: 'F7',
            119: 'F8',
            120: 'F9',
            121: 'F10',
            122: 'F11',
            123: 'F12',
            144: 'NumLock',
            145: 'ScrollLock',
            224: 'Meta',
          },
          Tn = { Alt: 'altKey', Control: 'ctrlKey', Meta: 'metaKey', Shift: 'shiftKey' };
        function _n(e) {
          var t = this.nativeEvent;
          return t.getModifierState ? t.getModifierState(e) : !!(e = Tn[e]) && !!t[e];
        }
        function In() {
          return _n;
        }
        var xn = F({}, dn, {
            key: function (e) {
              if (e.key) {
                var t = Sn[e.key] || e.key;
                if ('Unidentified' !== t) return t;
              }
              return 'keypress' === e.type
                ? 13 === (e = tn(e))
                  ? 'Enter'
                  : String.fromCharCode(e)
                : 'keydown' === e.type || 'keyup' === e.type
                  ? En[e.keyCode] || 'Unidentified'
                  : '';
            },
            code: 0,
            location: 0,
            ctrlKey: 0,
            shiftKey: 0,
            altKey: 0,
            metaKey: 0,
            repeat: 0,
            locale: 0,
            getModifierState: In,
            charCode: function (e) {
              return 'keypress' === e.type ? tn(e) : 0;
            },
            keyCode: function (e) {
              return 'keydown' === e.type || 'keyup' === e.type ? e.keyCode : 0;
            },
            which: function (e) {
              return 'keypress' === e.type ? tn(e) : 'keydown' === e.type || 'keyup' === e.type ? e.keyCode : 0;
            },
          }),
          kn = sn(xn),
          Cn = sn(
            F({}, fn, {
              pointerId: 0,
              width: 0,
              height: 0,
              pressure: 0,
              tangentialPressure: 0,
              tiltX: 0,
              tiltY: 0,
              twist: 0,
              pointerType: 0,
              isPrimary: 0,
            }),
          ),
          Nn = sn(
            F({}, dn, {
              touches: 0,
              targetTouches: 0,
              changedTouches: 0,
              altKey: 0,
              metaKey: 0,
              ctrlKey: 0,
              shiftKey: 0,
              getModifierState: In,
            }),
          ),
          Pn = sn(F({}, cn, { propertyName: 0, elapsedTime: 0, pseudoElement: 0 })),
          Dn = F({}, fn, {
            deltaX: function (e) {
              return 'deltaX' in e ? e.deltaX : 'wheelDeltaX' in e ? -e.wheelDeltaX : 0;
            },
            deltaY: function (e) {
              return 'deltaY' in e ? e.deltaY : 'wheelDeltaY' in e ? -e.wheelDeltaY : 'wheelDelta' in e ? -e.wheelDelta : 0;
            },
            deltaZ: 0,
            deltaMode: 0,
          }),
          An = sn(Dn),
          On = [9, 13, 27, 32],
          Ln = u && 'CompositionEvent' in window,
          Rn = null;
        u && 'documentMode' in document && (Rn = document.documentMode);
        var Mn = u && 'TextEvent' in window && !Rn,
          Fn = u && (!Ln || (Rn && 8 < Rn && 11 >= Rn)),
          jn = String.fromCharCode(32),
          Un = !1;
        function Vn(e, t) {
          switch (e) {
            case 'keyup':
              return -1 !== On.indexOf(t.keyCode);
            case 'keydown':
              return 229 !== t.keyCode;
            case 'keypress':
            case 'mousedown':
            case 'focusout':
              return !0;
            default:
              return !1;
          }
        }
        function zn(e) {
          return 'object' === typeof (e = e.detail) && 'data' in e ? e.data : null;
        }
        var Bn = !1;
        var qn = {
          color: !0,
          date: !0,
          datetime: !0,
          'datetime-local': !0,
          email: !0,
          month: !0,
          number: !0,
          password: !0,
          range: !0,
          search: !0,
          tel: !0,
          text: !0,
          time: !0,
          url: !0,
          week: !0,
        };
        function Gn(e) {
          var t = e && e.nodeName && e.nodeName.toLowerCase();
          return 'input' === t ? !!qn[e.type] : 'textarea' === t;
        }
        function Hn(e, t, n, r) {
          xe(r),
            0 < (t = Kr(t, 'onChange')).length &&
              ((n = new un('onChange', 'change', null, n, r)), e.push({ event: n, listeners: t }));
        }
        var Kn = null,
          Wn = null;
        function Qn(e) {
          jr(e, 0);
        }
        function Yn(e) {
          if (W(bi(e))) return e;
        }
        function Jn(e, t) {
          if ('change' === e) return t;
        }
        var Xn = !1;
        if (u) {
          var $n;
          if (u) {
            var Zn = 'oninput' in document;
            if (!Zn) {
              var er = document.createElement('div');
              er.setAttribute('oninput', 'return;'), (Zn = 'function' === typeof er.oninput);
            }
            $n = Zn;
          } else $n = !1;
          Xn = $n && (!document.documentMode || 9 < document.documentMode);
        }
        function tr() {
          Kn && (Kn.detachEvent('onpropertychange', nr), (Wn = Kn = null));
        }
        function nr(e) {
          if ('value' === e.propertyName && Yn(Wn)) {
            var t = [];
            Hn(t, Wn, e, Se(e)), De(Qn, t);
          }
        }
        function rr(e, t, n) {
          'focusin' === e ? (tr(), (Wn = n), (Kn = t).attachEvent('onpropertychange', nr)) : 'focusout' === e && tr();
        }
        function ir(e) {
          if ('selectionchange' === e || 'keyup' === e || 'keydown' === e) return Yn(Wn);
        }
        function sr(e, t) {
          if ('click' === e) return Yn(t);
        }
        function ar(e, t) {
          if ('input' === e || 'change' === e) return Yn(t);
        }
        var or =
          'function' === typeof Object.is
            ? Object.is
            : function (e, t) {
                return (e === t && (0 !== e || 1 / e === 1 / t)) || (e !== e && t !== t);
              };
        function lr(e, t) {
          if (or(e, t)) return !0;
          if ('object' !== typeof e || null === e || 'object' !== typeof t || null === t) return !1;
          var n = Object.keys(e),
            r = Object.keys(t);
          if (n.length !== r.length) return !1;
          for (r = 0; r < n.length; r++) {
            var i = n[r];
            if (!d.call(t, i) || !or(e[i], t[i])) return !1;
          }
          return !0;
        }
        function cr(e) {
          for (; e && e.firstChild; ) e = e.firstChild;
          return e;
        }
        function ur(e, t) {
          var n,
            r = cr(e);
          for (e = 0; r; ) {
            if (3 === r.nodeType) {
              if (((n = e + r.textContent.length), e <= t && n >= t)) return { node: r, offset: t - e };
              e = n;
            }
            e: {
              for (; r; ) {
                if (r.nextSibling) {
                  r = r.nextSibling;
                  break e;
                }
                r = r.parentNode;
              }
              r = void 0;
            }
            r = cr(r);
          }
        }
        function dr(e, t) {
          return (
            !(!e || !t) &&
            (e === t ||
              ((!e || 3 !== e.nodeType) &&
                (t && 3 === t.nodeType
                  ? dr(e, t.parentNode)
                  : 'contains' in e
                    ? e.contains(t)
                    : !!e.compareDocumentPosition && !!(16 & e.compareDocumentPosition(t)))))
          );
        }
        function hr() {
          for (var e = window, t = Q(); t instanceof e.HTMLIFrameElement; ) {
            try {
              var n = 'string' === typeof t.contentWindow.location.href;
            } catch (r) {
              n = !1;
            }
            if (!n) break;
            t = Q((e = t.contentWindow).document);
          }
          return t;
        }
        function fr(e) {
          var t = e && e.nodeName && e.nodeName.toLowerCase();
          return (
            t &&
            (('input' === t &&
              ('text' === e.type || 'search' === e.type || 'tel' === e.type || 'url' === e.type || 'password' === e.type)) ||
              'textarea' === t ||
              'true' === e.contentEditable)
          );
        }
        function pr(e) {
          var t = hr(),
            n = e.focusedElem,
            r = e.selectionRange;
          if (t !== n && n && n.ownerDocument && dr(n.ownerDocument.documentElement, n)) {
            if (null !== r && fr(n))
              if (((t = r.start), void 0 === (e = r.end) && (e = t), 'selectionStart' in n))
                (n.selectionStart = t), (n.selectionEnd = Math.min(e, n.value.length));
              else if ((e = ((t = n.ownerDocument || document) && t.defaultView) || window).getSelection) {
                e = e.getSelection();
                var i = n.textContent.length,
                  s = Math.min(r.start, i);
                (r = void 0 === r.end ? s : Math.min(r.end, i)),
                  !e.extend && s > r && ((i = r), (r = s), (s = i)),
                  (i = ur(n, s));
                var a = ur(n, r);
                i &&
                  a &&
                  (1 !== e.rangeCount ||
                    e.anchorNode !== i.node ||
                    e.anchorOffset !== i.offset ||
                    e.focusNode !== a.node ||
                    e.focusOffset !== a.offset) &&
                  ((t = t.createRange()).setStart(i.node, i.offset),
                  e.removeAllRanges(),
                  s > r ? (e.addRange(t), e.extend(a.node, a.offset)) : (t.setEnd(a.node, a.offset), e.addRange(t)));
              }
            for (t = [], e = n; (e = e.parentNode); )
              1 === e.nodeType && t.push({ element: e, left: e.scrollLeft, top: e.scrollTop });
            for ('function' === typeof n.focus && n.focus(), n = 0; n < t.length; n++)
              ((e = t[n]).element.scrollLeft = e.left), (e.element.scrollTop = e.top);
          }
        }
        var mr = u && 'documentMode' in document && 11 >= document.documentMode,
          gr = null,
          vr = null,
          yr = null,
          wr = !1;
        function br(e, t, n) {
          var r = n.window === n ? n.document : 9 === n.nodeType ? n : n.ownerDocument;
          wr ||
            null == gr ||
            gr !== Q(r) ||
            ('selectionStart' in (r = gr) && fr(r)
              ? (r = { start: r.selectionStart, end: r.selectionEnd })
              : (r = {
                  anchorNode: (r = ((r.ownerDocument && r.ownerDocument.defaultView) || window).getSelection()).anchorNode,
                  anchorOffset: r.anchorOffset,
                  focusNode: r.focusNode,
                  focusOffset: r.focusOffset,
                }),
            (yr && lr(yr, r)) ||
              ((yr = r),
              0 < (r = Kr(vr, 'onSelect')).length &&
                ((t = new un('onSelect', 'select', null, t, n)), e.push({ event: t, listeners: r }), (t.target = gr))));
        }
        function Sr(e, t) {
          var n = {};
          return (n[e.toLowerCase()] = t.toLowerCase()), (n['Webkit' + e] = 'webkit' + t), (n['Moz' + e] = 'moz' + t), n;
        }
        var Er = {
            animationend: Sr('Animation', 'AnimationEnd'),
            animationiteration: Sr('Animation', 'AnimationIteration'),
            animationstart: Sr('Animation', 'AnimationStart'),
            transitionend: Sr('Transition', 'TransitionEnd'),
          },
          Tr = {},
          _r = {};
        function Ir(e) {
          if (Tr[e]) return Tr[e];
          if (!Er[e]) return e;
          var t,
            n = Er[e];
          for (t in n) if (n.hasOwnProperty(t) && t in _r) return (Tr[e] = n[t]);
          return e;
        }
        u &&
          ((_r = document.createElement('div').style),
          'AnimationEvent' in window ||
            (delete Er.animationend.animation, delete Er.animationiteration.animation, delete Er.animationstart.animation),
          'TransitionEvent' in window || delete Er.transitionend.transition);
        var xr = Ir('animationend'),
          kr = Ir('animationiteration'),
          Cr = Ir('animationstart'),
          Nr = Ir('transitionend'),
          Pr = new Map(),
          Dr =
            'abort auxClick cancel canPlay canPlayThrough click close contextMenu copy cut drag dragEnd dragEnter dragExit dragLeave dragOver dragStart drop durationChange emptied encrypted ended error gotPointerCapture input invalid keyDown keyPress keyUp load loadedData loadedMetadata loadStart lostPointerCapture mouseDown mouseMove mouseOut mouseOver mouseUp paste pause play playing pointerCancel pointerDown pointerMove pointerOut pointerOver pointerUp progress rateChange reset resize seeked seeking stalled submit suspend timeUpdate touchCancel touchEnd touchStart volumeChange scroll toggle touchMove waiting wheel'.split(
              ' ',
            );
        function Ar(e, t) {
          Pr.set(e, t), l(t, [e]);
        }
        for (var Or = 0; Or < Dr.length; Or++) {
          var Lr = Dr[Or];
          Ar(Lr.toLowerCase(), 'on' + (Lr[0].toUpperCase() + Lr.slice(1)));
        }
        Ar(xr, 'onAnimationEnd'),
          Ar(kr, 'onAnimationIteration'),
          Ar(Cr, 'onAnimationStart'),
          Ar('dblclick', 'onDoubleClick'),
          Ar('focusin', 'onFocus'),
          Ar('focusout', 'onBlur'),
          Ar(Nr, 'onTransitionEnd'),
          c('onMouseEnter', ['mouseout', 'mouseover']),
          c('onMouseLeave', ['mouseout', 'mouseover']),
          c('onPointerEnter', ['pointerout', 'pointerover']),
          c('onPointerLeave', ['pointerout', 'pointerover']),
          l('onChange', 'change click focusin focusout input keydown keyup selectionchange'.split(' ')),
          l('onSelect', 'focusout contextmenu dragend focusin keydown keyup mousedown mouseup selectionchange'.split(' ')),
          l('onBeforeInput', ['compositionend', 'keypress', 'textInput', 'paste']),
          l('onCompositionEnd', 'compositionend focusout keydown keypress keyup mousedown'.split(' ')),
          l('onCompositionStart', 'compositionstart focusout keydown keypress keyup mousedown'.split(' ')),
          l('onCompositionUpdate', 'compositionupdate focusout keydown keypress keyup mousedown'.split(' '));
        var Rr =
            'abort canplay canplaythrough durationchange emptied encrypted ended error loadeddata loadedmetadata loadstart pause play playing progress ratechange resize seeked seeking stalled suspend timeupdate volumechange waiting'.split(
              ' ',
            ),
          Mr = new Set('cancel close invalid load scroll toggle'.split(' ').concat(Rr));
        function Fr(e, t, n) {
          var r = e.type || 'unknown-event';
          (e.currentTarget = n),
            (function (e, t, n, r, i, a, o, l, c) {
              if ((ze.apply(this, arguments), Me)) {
                if (!Me) throw Error(s(198));
                var u = Fe;
                (Me = !1), (Fe = null), je || ((je = !0), (Ue = u));
              }
            })(r, t, void 0, e),
            (e.currentTarget = null);
        }
        function jr(e, t) {
          t = 0 !== (4 & t);
          for (var n = 0; n < e.length; n++) {
            var r = e[n],
              i = r.event;
            r = r.listeners;
            e: {
              var s = void 0;
              if (t)
                for (var a = r.length - 1; 0 <= a; a--) {
                  var o = r[a],
                    l = o.instance,
                    c = o.currentTarget;
                  if (((o = o.listener), l !== s && i.isPropagationStopped())) break e;
                  Fr(i, o, c), (s = l);
                }
              else
                for (a = 0; a < r.length; a++) {
                  if (((l = (o = r[a]).instance), (c = o.currentTarget), (o = o.listener), l !== s && i.isPropagationStopped()))
                    break e;
                  Fr(i, o, c), (s = l);
                }
            }
          }
          if (je) throw ((e = Ue), (je = !1), (Ue = null), e);
        }
        function Ur(e, t) {
          var n = t[mi];
          void 0 === n && (n = t[mi] = new Set());
          var r = e + '__bubble';
          n.has(r) || (qr(t, e, 2, !1), n.add(r));
        }
        function Vr(e, t, n) {
          var r = 0;
          t && (r |= 4), qr(n, e, r, t);
        }
        var zr = '_reactListening' + Math.random().toString(36).slice(2);
        function Br(e) {
          if (!e[zr]) {
            (e[zr] = !0),
              a.forEach(function (t) {
                'selectionchange' !== t && (Mr.has(t) || Vr(t, !1, e), Vr(t, !0, e));
              });
            var t = 9 === e.nodeType ? e : e.ownerDocument;
            null === t || t[zr] || ((t[zr] = !0), Vr('selectionchange', !1, t));
          }
        }
        function qr(e, t, n, r) {
          switch (Jt(t)) {
            case 1:
              var i = Ht;
              break;
            case 4:
              i = Kt;
              break;
            default:
              i = Wt;
          }
          (n = i.bind(null, t, n, e)),
            (i = void 0),
            !Oe || ('touchstart' !== t && 'touchmove' !== t && 'wheel' !== t) || (i = !0),
            r
              ? void 0 !== i
                ? e.addEventListener(t, n, { capture: !0, passive: i })
                : e.addEventListener(t, n, !0)
              : void 0 !== i
                ? e.addEventListener(t, n, { passive: i })
                : e.addEventListener(t, n, !1);
        }
        function Gr(e, t, n, r, i) {
          var s = r;
          if (0 === (1 & t) && 0 === (2 & t) && null !== r)
            e: for (;;) {
              if (null === r) return;
              var a = r.tag;
              if (3 === a || 4 === a) {
                var o = r.stateNode.containerInfo;
                if (o === i || (8 === o.nodeType && o.parentNode === i)) break;
                if (4 === a)
                  for (a = r.return; null !== a; ) {
                    var l = a.tag;
                    if (
                      (3 === l || 4 === l) &&
                      ((l = a.stateNode.containerInfo) === i || (8 === l.nodeType && l.parentNode === i))
                    )
                      return;
                    a = a.return;
                  }
                for (; null !== o; ) {
                  if (null === (a = yi(o))) return;
                  if (5 === (l = a.tag) || 6 === l) {
                    r = s = a;
                    continue e;
                  }
                  o = o.parentNode;
                }
              }
              r = r.return;
            }
          De(function () {
            var r = s,
              i = Se(n),
              a = [];
            e: {
              var o = Pr.get(e);
              if (void 0 !== o) {
                var l = un,
                  c = e;
                switch (e) {
                  case 'keypress':
                    if (0 === tn(n)) break e;
                  case 'keydown':
                  case 'keyup':
                    l = kn;
                    break;
                  case 'focusin':
                    (c = 'focus'), (l = gn);
                    break;
                  case 'focusout':
                    (c = 'blur'), (l = gn);
                    break;
                  case 'beforeblur':
                  case 'afterblur':
                    l = gn;
                    break;
                  case 'click':
                    if (2 === n.button) break e;
                  case 'auxclick':
                  case 'dblclick':
                  case 'mousedown':
                  case 'mousemove':
                  case 'mouseup':
                  case 'mouseout':
                  case 'mouseover':
                  case 'contextmenu':
                    l = pn;
                    break;
                  case 'drag':
                  case 'dragend':
                  case 'dragenter':
                  case 'dragexit':
                  case 'dragleave':
                  case 'dragover':
                  case 'dragstart':
                  case 'drop':
                    l = mn;
                    break;
                  case 'touchcancel':
                  case 'touchend':
                  case 'touchmove':
                  case 'touchstart':
                    l = Nn;
                    break;
                  case xr:
                  case kr:
                  case Cr:
                    l = vn;
                    break;
                  case Nr:
                    l = Pn;
                    break;
                  case 'scroll':
                    l = hn;
                    break;
                  case 'wheel':
                    l = An;
                    break;
                  case 'copy':
                  case 'cut':
                  case 'paste':
                    l = wn;
                    break;
                  case 'gotpointercapture':
                  case 'lostpointercapture':
                  case 'pointercancel':
                  case 'pointerdown':
                  case 'pointermove':
                  case 'pointerout':
                  case 'pointerover':
                  case 'pointerup':
                    l = Cn;
                }
                var u = 0 !== (4 & t),
                  d = !u && 'scroll' === e,
                  h = u ? (null !== o ? o + 'Capture' : null) : o;
                u = [];
                for (var f, p = r; null !== p; ) {
                  var m = (f = p).stateNode;
                  if ((5 === f.tag && null !== m && ((f = m), null !== h && null != (m = Ae(p, h)) && u.push(Hr(p, m, f))), d))
                    break;
                  p = p.return;
                }
                0 < u.length && ((o = new l(o, c, null, n, i)), a.push({ event: o, listeners: u }));
              }
            }
            if (0 === (7 & t)) {
              if (
                ((l = 'mouseout' === e || 'pointerout' === e),
                (!(o = 'mouseover' === e || 'pointerover' === e) ||
                  n === be ||
                  !(c = n.relatedTarget || n.fromElement) ||
                  (!yi(c) && !c[pi])) &&
                  (l || o) &&
                  ((o = i.window === i ? i : (o = i.ownerDocument) ? o.defaultView || o.parentWindow : window),
                  l
                    ? ((l = r),
                      null !== (c = (c = n.relatedTarget || n.toElement) ? yi(c) : null) &&
                        (c !== (d = Be(c)) || (5 !== c.tag && 6 !== c.tag)) &&
                        (c = null))
                    : ((l = null), (c = r)),
                  l !== c))
              ) {
                if (
                  ((u = pn),
                  (m = 'onMouseLeave'),
                  (h = 'onMouseEnter'),
                  (p = 'mouse'),
                  ('pointerout' !== e && 'pointerover' !== e) ||
                    ((u = Cn), (m = 'onPointerLeave'), (h = 'onPointerEnter'), (p = 'pointer')),
                  (d = null == l ? o : bi(l)),
                  (f = null == c ? o : bi(c)),
                  ((o = new u(m, p + 'leave', l, n, i)).target = d),
                  (o.relatedTarget = f),
                  (m = null),
                  yi(i) === r && (((u = new u(h, p + 'enter', c, n, i)).target = f), (u.relatedTarget = d), (m = u)),
                  (d = m),
                  l && c)
                )
                  e: {
                    for (h = c, p = 0, f = u = l; f; f = Wr(f)) p++;
                    for (f = 0, m = h; m; m = Wr(m)) f++;
                    for (; 0 < p - f; ) (u = Wr(u)), p--;
                    for (; 0 < f - p; ) (h = Wr(h)), f--;
                    for (; p--; ) {
                      if (u === h || (null !== h && u === h.alternate)) break e;
                      (u = Wr(u)), (h = Wr(h));
                    }
                    u = null;
                  }
                else u = null;
                null !== l && Qr(a, o, l, u, !1), null !== c && null !== d && Qr(a, d, c, u, !0);
              }
              if (
                'select' === (l = (o = r ? bi(r) : window).nodeName && o.nodeName.toLowerCase()) ||
                ('input' === l && 'file' === o.type)
              )
                var g = Jn;
              else if (Gn(o))
                if (Xn) g = ar;
                else {
                  g = ir;
                  var v = rr;
                }
              else (l = o.nodeName) && 'input' === l.toLowerCase() && ('checkbox' === o.type || 'radio' === o.type) && (g = sr);
              switch (
                (g && (g = g(e, r))
                  ? Hn(a, g, n, i)
                  : (v && v(e, o, r),
                    'focusout' === e && (v = o._wrapperState) && v.controlled && 'number' === o.type && ee(o, 'number', o.value)),
                (v = r ? bi(r) : window),
                e)
              ) {
                case 'focusin':
                  (Gn(v) || 'true' === v.contentEditable) && ((gr = v), (vr = r), (yr = null));
                  break;
                case 'focusout':
                  yr = vr = gr = null;
                  break;
                case 'mousedown':
                  wr = !0;
                  break;
                case 'contextmenu':
                case 'mouseup':
                case 'dragend':
                  (wr = !1), br(a, n, i);
                  break;
                case 'selectionchange':
                  if (mr) break;
                case 'keydown':
                case 'keyup':
                  br(a, n, i);
              }
              var y;
              if (Ln)
                e: {
                  switch (e) {
                    case 'compositionstart':
                      var w = 'onCompositionStart';
                      break e;
                    case 'compositionend':
                      w = 'onCompositionEnd';
                      break e;
                    case 'compositionupdate':
                      w = 'onCompositionUpdate';
                      break e;
                  }
                  w = void 0;
                }
              else Bn ? Vn(e, n) && (w = 'onCompositionEnd') : 'keydown' === e && 229 === n.keyCode && (w = 'onCompositionStart');
              w &&
                (Fn &&
                  'ko' !== n.locale &&
                  (Bn || 'onCompositionStart' !== w
                    ? 'onCompositionEnd' === w && Bn && (y = en())
                    : (($t = 'value' in (Xt = i) ? Xt.value : Xt.textContent), (Bn = !0))),
                0 < (v = Kr(r, w)).length &&
                  ((w = new bn(w, e, null, n, i)),
                  a.push({ event: w, listeners: v }),
                  y ? (w.data = y) : null !== (y = zn(n)) && (w.data = y))),
                (y = Mn
                  ? (function (e, t) {
                      switch (e) {
                        case 'compositionend':
                          return zn(t);
                        case 'keypress':
                          return 32 !== t.which ? null : ((Un = !0), jn);
                        case 'textInput':
                          return (e = t.data) === jn && Un ? null : e;
                        default:
                          return null;
                      }
                    })(e, n)
                  : (function (e, t) {
                      if (Bn)
                        return 'compositionend' === e || (!Ln && Vn(e, t))
                          ? ((e = en()), (Zt = $t = Xt = null), (Bn = !1), e)
                          : null;
                      switch (e) {
                        case 'paste':
                        default:
                          return null;
                        case 'keypress':
                          if (!(t.ctrlKey || t.altKey || t.metaKey) || (t.ctrlKey && t.altKey)) {
                            if (t.char && 1 < t.char.length) return t.char;
                            if (t.which) return String.fromCharCode(t.which);
                          }
                          return null;
                        case 'compositionend':
                          return Fn && 'ko' !== t.locale ? null : t.data;
                      }
                    })(e, n)) &&
                  0 < (r = Kr(r, 'onBeforeInput')).length &&
                  ((i = new bn('onBeforeInput', 'beforeinput', null, n, i)), a.push({ event: i, listeners: r }), (i.data = y));
            }
            jr(a, t);
          });
        }
        function Hr(e, t, n) {
          return { instance: e, listener: t, currentTarget: n };
        }
        function Kr(e, t) {
          for (var n = t + 'Capture', r = []; null !== e; ) {
            var i = e,
              s = i.stateNode;
            5 === i.tag &&
              null !== s &&
              ((i = s), null != (s = Ae(e, n)) && r.unshift(Hr(e, s, i)), null != (s = Ae(e, t)) && r.push(Hr(e, s, i))),
              (e = e.return);
          }
          return r;
        }
        function Wr(e) {
          if (null === e) return null;
          do {
            e = e.return;
          } while (e && 5 !== e.tag);
          return e || null;
        }
        function Qr(e, t, n, r, i) {
          for (var s = t._reactName, a = []; null !== n && n !== r; ) {
            var o = n,
              l = o.alternate,
              c = o.stateNode;
            if (null !== l && l === r) break;
            5 === o.tag &&
              null !== c &&
              ((o = c),
              i ? null != (l = Ae(n, s)) && a.unshift(Hr(n, l, o)) : i || (null != (l = Ae(n, s)) && a.push(Hr(n, l, o)))),
              (n = n.return);
          }
          0 !== a.length && e.push({ event: t, listeners: a });
        }
        var Yr = /\r\n?/g,
          Jr = /\u0000|\uFFFD/g;
        function Xr(e) {
          return ('string' === typeof e ? e : '' + e).replace(Yr, '\n').replace(Jr, '');
        }
        function $r(e, t, n) {
          if (((t = Xr(t)), Xr(e) !== t && n)) throw Error(s(425));
        }
        function Zr() {}
        var ei = null,
          ti = null;
        function ni(e, t) {
          return (
            'textarea' === e ||
            'noscript' === e ||
            'string' === typeof t.children ||
            'number' === typeof t.children ||
            ('object' === typeof t.dangerouslySetInnerHTML &&
              null !== t.dangerouslySetInnerHTML &&
              null != t.dangerouslySetInnerHTML.__html)
          );
        }
        var ri = 'function' === typeof setTimeout ? setTimeout : void 0,
          ii = 'function' === typeof clearTimeout ? clearTimeout : void 0,
          si = 'function' === typeof Promise ? Promise : void 0,
          ai =
            'function' === typeof queueMicrotask
              ? queueMicrotask
              : 'undefined' !== typeof si
                ? function (e) {
                    return si.resolve(null).then(e).catch(oi);
                  }
                : ri;
        function oi(e) {
          setTimeout(function () {
            throw e;
          });
        }
        function li(e, t) {
          var n = t,
            r = 0;
          do {
            var i = n.nextSibling;
            if ((e.removeChild(n), i && 8 === i.nodeType))
              if ('/$' === (n = i.data)) {
                if (0 === r) return e.removeChild(i), void Bt(t);
                r--;
              } else ('$' !== n && '$?' !== n && '$!' !== n) || r++;
            n = i;
          } while (n);
          Bt(t);
        }
        function ci(e) {
          for (; null != e; e = e.nextSibling) {
            var t = e.nodeType;
            if (1 === t || 3 === t) break;
            if (8 === t) {
              if ('$' === (t = e.data) || '$!' === t || '$?' === t) break;
              if ('/$' === t) return null;
            }
          }
          return e;
        }
        function ui(e) {
          e = e.previousSibling;
          for (var t = 0; e; ) {
            if (8 === e.nodeType) {
              var n = e.data;
              if ('$' === n || '$!' === n || '$?' === n) {
                if (0 === t) return e;
                t--;
              } else '/$' === n && t++;
            }
            e = e.previousSibling;
          }
          return null;
        }
        var di = Math.random().toString(36).slice(2),
          hi = '__reactFiber$' + di,
          fi = '__reactProps$' + di,
          pi = '__reactContainer$' + di,
          mi = '__reactEvents$' + di,
          gi = '__reactListeners$' + di,
          vi = '__reactHandles$' + di;
        function yi(e) {
          var t = e[hi];
          if (t) return t;
          for (var n = e.parentNode; n; ) {
            if ((t = n[pi] || n[hi])) {
              if (((n = t.alternate), null !== t.child || (null !== n && null !== n.child)))
                for (e = ui(e); null !== e; ) {
                  if ((n = e[hi])) return n;
                  e = ui(e);
                }
              return t;
            }
            n = (e = n).parentNode;
          }
          return null;
        }
        function wi(e) {
          return !(e = e[hi] || e[pi]) || (5 !== e.tag && 6 !== e.tag && 13 !== e.tag && 3 !== e.tag) ? null : e;
        }
        function bi(e) {
          if (5 === e.tag || 6 === e.tag) return e.stateNode;
          throw Error(s(33));
        }
        function Si(e) {
          return e[fi] || null;
        }
        var Ei = [],
          Ti = -1;
        function _i(e) {
          return { current: e };
        }
        function Ii(e) {
          0 > Ti || ((e.current = Ei[Ti]), (Ei[Ti] = null), Ti--);
        }
        function xi(e, t) {
          Ti++, (Ei[Ti] = e.current), (e.current = t);
        }
        var ki = {},
          Ci = _i(ki),
          Ni = _i(!1),
          Pi = ki;
        function Di(e, t) {
          var n = e.type.contextTypes;
          if (!n) return ki;
          var r = e.stateNode;
          if (r && r.__reactInternalMemoizedUnmaskedChildContext === t) return r.__reactInternalMemoizedMaskedChildContext;
          var i,
            s = {};
          for (i in n) s[i] = t[i];
          return (
            r &&
              (((e = e.stateNode).__reactInternalMemoizedUnmaskedChildContext = t),
              (e.__reactInternalMemoizedMaskedChildContext = s)),
            s
          );
        }
        function Ai(e) {
          return null !== (e = e.childContextTypes) && void 0 !== e;
        }
        function Oi() {
          Ii(Ni), Ii(Ci);
        }
        function Li(e, t, n) {
          if (Ci.current !== ki) throw Error(s(168));
          xi(Ci, t), xi(Ni, n);
        }
        function Ri(e, t, n) {
          var r = e.stateNode;
          if (((t = t.childContextTypes), 'function' !== typeof r.getChildContext)) return n;
          for (var i in (r = r.getChildContext())) if (!(i in t)) throw Error(s(108, q(e) || 'Unknown', i));
          return F({}, n, r);
        }
        function Mi(e) {
          return (
            (e = ((e = e.stateNode) && e.__reactInternalMemoizedMergedChildContext) || ki),
            (Pi = Ci.current),
            xi(Ci, e),
            xi(Ni, Ni.current),
            !0
          );
        }
        function Fi(e, t, n) {
          var r = e.stateNode;
          if (!r) throw Error(s(169));
          n ? ((e = Ri(e, t, Pi)), (r.__reactInternalMemoizedMergedChildContext = e), Ii(Ni), Ii(Ci), xi(Ci, e)) : Ii(Ni),
            xi(Ni, n);
        }
        var ji = null,
          Ui = !1,
          Vi = !1;
        function zi(e) {
          null === ji ? (ji = [e]) : ji.push(e);
        }
        function Bi() {
          if (!Vi && null !== ji) {
            Vi = !0;
            var e = 0,
              t = wt;
            try {
              var n = ji;
              for (wt = 1; e < n.length; e++) {
                var r = n[e];
                do {
                  r = r(!0);
                } while (null !== r);
              }
              (ji = null), (Ui = !1);
            } catch (i) {
              throw (null !== ji && (ji = ji.slice(e + 1)), We(Ze, Bi), i);
            } finally {
              (wt = t), (Vi = !1);
            }
          }
          return null;
        }
        var qi = [],
          Gi = 0,
          Hi = null,
          Ki = 0,
          Wi = [],
          Qi = 0,
          Yi = null,
          Ji = 1,
          Xi = '';
        function $i(e, t) {
          (qi[Gi++] = Ki), (qi[Gi++] = Hi), (Hi = e), (Ki = t);
        }
        function Zi(e, t, n) {
          (Wi[Qi++] = Ji), (Wi[Qi++] = Xi), (Wi[Qi++] = Yi), (Yi = e);
          var r = Ji;
          e = Xi;
          var i = 32 - at(r) - 1;
          (r &= ~(1 << i)), (n += 1);
          var s = 32 - at(t) + i;
          if (30 < s) {
            var a = i - (i % 5);
            (s = (r & ((1 << a) - 1)).toString(32)),
              (r >>= a),
              (i -= a),
              (Ji = (1 << (32 - at(t) + i)) | (n << i) | r),
              (Xi = s + e);
          } else (Ji = (1 << s) | (n << i) | r), (Xi = e);
        }
        function es(e) {
          null !== e.return && ($i(e, 1), Zi(e, 1, 0));
        }
        function ts(e) {
          for (; e === Hi; ) (Hi = qi[--Gi]), (qi[Gi] = null), (Ki = qi[--Gi]), (qi[Gi] = null);
          for (; e === Yi; ) (Yi = Wi[--Qi]), (Wi[Qi] = null), (Xi = Wi[--Qi]), (Wi[Qi] = null), (Ji = Wi[--Qi]), (Wi[Qi] = null);
        }
        var ns = null,
          rs = null,
          is = !1,
          ss = null;
        function as(e, t) {
          var n = Dc(5, null, null, 0);
          (n.elementType = 'DELETED'),
            (n.stateNode = t),
            (n.return = e),
            null === (t = e.deletions) ? ((e.deletions = [n]), (e.flags |= 16)) : t.push(n);
        }
        function os(e, t) {
          switch (e.tag) {
            case 5:
              var n = e.type;
              return (
                null !== (t = 1 !== t.nodeType || n.toLowerCase() !== t.nodeName.toLowerCase() ? null : t) &&
                ((e.stateNode = t), (ns = e), (rs = ci(t.firstChild)), !0)
              );
            case 6:
              return (
                null !== (t = '' === e.pendingProps || 3 !== t.nodeType ? null : t) &&
                ((e.stateNode = t), (ns = e), (rs = null), !0)
              );
            case 13:
              return (
                null !== (t = 8 !== t.nodeType ? null : t) &&
                ((n = null !== Yi ? { id: Ji, overflow: Xi } : null),
                (e.memoizedState = { dehydrated: t, treeContext: n, retryLane: 1073741824 }),
                ((n = Dc(18, null, null, 0)).stateNode = t),
                (n.return = e),
                (e.child = n),
                (ns = e),
                (rs = null),
                !0)
              );
            default:
              return !1;
          }
        }
        function ls(e) {
          return 0 !== (1 & e.mode) && 0 === (128 & e.flags);
        }
        function cs(e) {
          if (is) {
            var t = rs;
            if (t) {
              var n = t;
              if (!os(e, t)) {
                if (ls(e)) throw Error(s(418));
                t = ci(n.nextSibling);
                var r = ns;
                t && os(e, t) ? as(r, n) : ((e.flags = (-4097 & e.flags) | 2), (is = !1), (ns = e));
              }
            } else {
              if (ls(e)) throw Error(s(418));
              (e.flags = (-4097 & e.flags) | 2), (is = !1), (ns = e);
            }
          }
        }
        function us(e) {
          for (e = e.return; null !== e && 5 !== e.tag && 3 !== e.tag && 13 !== e.tag; ) e = e.return;
          ns = e;
        }
        function ds(e) {
          if (e !== ns) return !1;
          if (!is) return us(e), (is = !0), !1;
          var t;
          if (
            ((t = 3 !== e.tag) &&
              !(t = 5 !== e.tag) &&
              (t = 'head' !== (t = e.type) && 'body' !== t && !ni(e.type, e.memoizedProps)),
            t && (t = rs))
          ) {
            if (ls(e)) throw (hs(), Error(s(418)));
            for (; t; ) as(e, t), (t = ci(t.nextSibling));
          }
          if ((us(e), 13 === e.tag)) {
            if (!(e = null !== (e = e.memoizedState) ? e.dehydrated : null)) throw Error(s(317));
            e: {
              for (e = e.nextSibling, t = 0; e; ) {
                if (8 === e.nodeType) {
                  var n = e.data;
                  if ('/$' === n) {
                    if (0 === t) {
                      rs = ci(e.nextSibling);
                      break e;
                    }
                    t--;
                  } else ('$' !== n && '$!' !== n && '$?' !== n) || t++;
                }
                e = e.nextSibling;
              }
              rs = null;
            }
          } else rs = ns ? ci(e.stateNode.nextSibling) : null;
          return !0;
        }
        function hs() {
          for (var e = rs; e; ) e = ci(e.nextSibling);
        }
        function fs() {
          (rs = ns = null), (is = !1);
        }
        function ps(e) {
          null === ss ? (ss = [e]) : ss.push(e);
        }
        var ms = b.ReactCurrentBatchConfig;
        function gs(e, t, n) {
          if (null !== (e = n.ref) && 'function' !== typeof e && 'object' !== typeof e) {
            if (n._owner) {
              if ((n = n._owner)) {
                if (1 !== n.tag) throw Error(s(309));
                var r = n.stateNode;
              }
              if (!r) throw Error(s(147, e));
              var i = r,
                a = '' + e;
              return null !== t && null !== t.ref && 'function' === typeof t.ref && t.ref._stringRef === a
                ? t.ref
                : ((t = function (e) {
                    var t = i.refs;
                    null === e ? delete t[a] : (t[a] = e);
                  }),
                  (t._stringRef = a),
                  t);
            }
            if ('string' !== typeof e) throw Error(s(284));
            if (!n._owner) throw Error(s(290, e));
          }
          return e;
        }
        function vs(e, t) {
          throw (
            ((e = Object.prototype.toString.call(t)),
            Error(s(31, '[object Object]' === e ? 'object with keys {' + Object.keys(t).join(', ') + '}' : e)))
          );
        }
        function ys(e) {
          return (0, e._init)(e._payload);
        }
        function ws(e) {
          function t(t, n) {
            if (e) {
              var r = t.deletions;
              null === r ? ((t.deletions = [n]), (t.flags |= 16)) : r.push(n);
            }
          }
          function n(n, r) {
            if (!e) return null;
            for (; null !== r; ) t(n, r), (r = r.sibling);
            return null;
          }
          function r(e, t) {
            for (e = new Map(); null !== t; ) null !== t.key ? e.set(t.key, t) : e.set(t.index, t), (t = t.sibling);
            return e;
          }
          function i(e, t) {
            return ((e = Oc(e, t)).index = 0), (e.sibling = null), e;
          }
          function a(t, n, r) {
            return (
              (t.index = r),
              e
                ? null !== (r = t.alternate)
                  ? (r = r.index) < n
                    ? ((t.flags |= 2), n)
                    : r
                  : ((t.flags |= 2), n)
                : ((t.flags |= 1048576), n)
            );
          }
          function o(t) {
            return e && null === t.alternate && (t.flags |= 2), t;
          }
          function l(e, t, n, r) {
            return null === t || 6 !== t.tag ? (((t = Fc(n, e.mode, r)).return = e), t) : (((t = i(t, n)).return = e), t);
          }
          function c(e, t, n, r) {
            var s = n.type;
            return s === T
              ? d(e, t, n.props.children, r, n.key)
              : null !== t &&
                  (t.elementType === s || ('object' === typeof s && null !== s && s.$$typeof === A && ys(s) === t.type))
                ? (((r = i(t, n.props)).ref = gs(e, t, n)), (r.return = e), r)
                : (((r = Lc(n.type, n.key, n.props, null, e.mode, r)).ref = gs(e, t, n)), (r.return = e), r);
          }
          function u(e, t, n, r) {
            return null === t ||
              4 !== t.tag ||
              t.stateNode.containerInfo !== n.containerInfo ||
              t.stateNode.implementation !== n.implementation
              ? (((t = jc(n, e.mode, r)).return = e), t)
              : (((t = i(t, n.children || [])).return = e), t);
          }
          function d(e, t, n, r, s) {
            return null === t || 7 !== t.tag ? (((t = Rc(n, e.mode, r, s)).return = e), t) : (((t = i(t, n)).return = e), t);
          }
          function h(e, t, n) {
            if (('string' === typeof t && '' !== t) || 'number' === typeof t) return ((t = Fc('' + t, e.mode, n)).return = e), t;
            if ('object' === typeof t && null !== t) {
              switch (t.$$typeof) {
                case S:
                  return ((n = Lc(t.type, t.key, t.props, null, e.mode, n)).ref = gs(e, null, t)), (n.return = e), n;
                case E:
                  return ((t = jc(t, e.mode, n)).return = e), t;
                case A:
                  return h(e, (0, t._init)(t._payload), n);
              }
              if (te(t) || R(t)) return ((t = Rc(t, e.mode, n, null)).return = e), t;
              vs(e, t);
            }
            return null;
          }
          function f(e, t, n, r) {
            var i = null !== t ? t.key : null;
            if (('string' === typeof n && '' !== n) || 'number' === typeof n) return null !== i ? null : l(e, t, '' + n, r);
            if ('object' === typeof n && null !== n) {
              switch (n.$$typeof) {
                case S:
                  return n.key === i ? c(e, t, n, r) : null;
                case E:
                  return n.key === i ? u(e, t, n, r) : null;
                case A:
                  return f(e, t, (i = n._init)(n._payload), r);
              }
              if (te(n) || R(n)) return null !== i ? null : d(e, t, n, r, null);
              vs(e, n);
            }
            return null;
          }
          function p(e, t, n, r, i) {
            if (('string' === typeof r && '' !== r) || 'number' === typeof r) return l(t, (e = e.get(n) || null), '' + r, i);
            if ('object' === typeof r && null !== r) {
              switch (r.$$typeof) {
                case S:
                  return c(t, (e = e.get(null === r.key ? n : r.key) || null), r, i);
                case E:
                  return u(t, (e = e.get(null === r.key ? n : r.key) || null), r, i);
                case A:
                  return p(e, t, n, (0, r._init)(r._payload), i);
              }
              if (te(r) || R(r)) return d(t, (e = e.get(n) || null), r, i, null);
              vs(t, r);
            }
            return null;
          }
          function m(i, s, o, l) {
            for (var c = null, u = null, d = s, m = (s = 0), g = null; null !== d && m < o.length; m++) {
              d.index > m ? ((g = d), (d = null)) : (g = d.sibling);
              var v = f(i, d, o[m], l);
              if (null === v) {
                null === d && (d = g);
                break;
              }
              e && d && null === v.alternate && t(i, d),
                (s = a(v, s, m)),
                null === u ? (c = v) : (u.sibling = v),
                (u = v),
                (d = g);
            }
            if (m === o.length) return n(i, d), is && $i(i, m), c;
            if (null === d) {
              for (; m < o.length; m++)
                null !== (d = h(i, o[m], l)) && ((s = a(d, s, m)), null === u ? (c = d) : (u.sibling = d), (u = d));
              return is && $i(i, m), c;
            }
            for (d = r(i, d); m < o.length; m++)
              null !== (g = p(d, i, m, o[m], l)) &&
                (e && null !== g.alternate && d.delete(null === g.key ? m : g.key),
                (s = a(g, s, m)),
                null === u ? (c = g) : (u.sibling = g),
                (u = g));
            return (
              e &&
                d.forEach(function (e) {
                  return t(i, e);
                }),
              is && $i(i, m),
              c
            );
          }
          function g(i, o, l, c) {
            var u = R(l);
            if ('function' !== typeof u) throw Error(s(150));
            if (null == (l = u.call(l))) throw Error(s(151));
            for (var d = (u = null), m = o, g = (o = 0), v = null, y = l.next(); null !== m && !y.done; g++, y = l.next()) {
              m.index > g ? ((v = m), (m = null)) : (v = m.sibling);
              var w = f(i, m, y.value, c);
              if (null === w) {
                null === m && (m = v);
                break;
              }
              e && m && null === w.alternate && t(i, m),
                (o = a(w, o, g)),
                null === d ? (u = w) : (d.sibling = w),
                (d = w),
                (m = v);
            }
            if (y.done) return n(i, m), is && $i(i, g), u;
            if (null === m) {
              for (; !y.done; g++, y = l.next())
                null !== (y = h(i, y.value, c)) && ((o = a(y, o, g)), null === d ? (u = y) : (d.sibling = y), (d = y));
              return is && $i(i, g), u;
            }
            for (m = r(i, m); !y.done; g++, y = l.next())
              null !== (y = p(m, i, g, y.value, c)) &&
                (e && null !== y.alternate && m.delete(null === y.key ? g : y.key),
                (o = a(y, o, g)),
                null === d ? (u = y) : (d.sibling = y),
                (d = y));
            return (
              e &&
                m.forEach(function (e) {
                  return t(i, e);
                }),
              is && $i(i, g),
              u
            );
          }
          return function e(r, s, a, l) {
            if (
              ('object' === typeof a && null !== a && a.type === T && null === a.key && (a = a.props.children),
              'object' === typeof a && null !== a)
            ) {
              switch (a.$$typeof) {
                case S:
                  e: {
                    for (var c = a.key, u = s; null !== u; ) {
                      if (u.key === c) {
                        if ((c = a.type) === T) {
                          if (7 === u.tag) {
                            n(r, u.sibling), ((s = i(u, a.props.children)).return = r), (r = s);
                            break e;
                          }
                        } else if (
                          u.elementType === c ||
                          ('object' === typeof c && null !== c && c.$$typeof === A && ys(c) === u.type)
                        ) {
                          n(r, u.sibling), ((s = i(u, a.props)).ref = gs(r, u, a)), (s.return = r), (r = s);
                          break e;
                        }
                        n(r, u);
                        break;
                      }
                      t(r, u), (u = u.sibling);
                    }
                    a.type === T
                      ? (((s = Rc(a.props.children, r.mode, l, a.key)).return = r), (r = s))
                      : (((l = Lc(a.type, a.key, a.props, null, r.mode, l)).ref = gs(r, s, a)), (l.return = r), (r = l));
                  }
                  return o(r);
                case E:
                  e: {
                    for (u = a.key; null !== s; ) {
                      if (s.key === u) {
                        if (
                          4 === s.tag &&
                          s.stateNode.containerInfo === a.containerInfo &&
                          s.stateNode.implementation === a.implementation
                        ) {
                          n(r, s.sibling), ((s = i(s, a.children || [])).return = r), (r = s);
                          break e;
                        }
                        n(r, s);
                        break;
                      }
                      t(r, s), (s = s.sibling);
                    }
                    ((s = jc(a, r.mode, l)).return = r), (r = s);
                  }
                  return o(r);
                case A:
                  return e(r, s, (u = a._init)(a._payload), l);
              }
              if (te(a)) return m(r, s, a, l);
              if (R(a)) return g(r, s, a, l);
              vs(r, a);
            }
            return ('string' === typeof a && '' !== a) || 'number' === typeof a
              ? ((a = '' + a),
                null !== s && 6 === s.tag
                  ? (n(r, s.sibling), ((s = i(s, a)).return = r), (r = s))
                  : (n(r, s), ((s = Fc(a, r.mode, l)).return = r), (r = s)),
                o(r))
              : n(r, s);
          };
        }
        var bs = ws(!0),
          Ss = ws(!1),
          Es = _i(null),
          Ts = null,
          _s = null,
          Is = null;
        function xs() {
          Is = _s = Ts = null;
        }
        function ks(e) {
          var t = Es.current;
          Ii(Es), (e._currentValue = t);
        }
        function Cs(e, t, n) {
          for (; null !== e; ) {
            var r = e.alternate;
            if (
              ((e.childLanes & t) !== t
                ? ((e.childLanes |= t), null !== r && (r.childLanes |= t))
                : null !== r && (r.childLanes & t) !== t && (r.childLanes |= t),
              e === n)
            )
              break;
            e = e.return;
          }
        }
        function Ns(e, t) {
          (Ts = e),
            (Is = _s = null),
            null !== (e = e.dependencies) &&
              null !== e.firstContext &&
              (0 !== (e.lanes & t) && (wo = !0), (e.firstContext = null));
        }
        function Ps(e) {
          var t = e._currentValue;
          if (Is !== e)
            if (((e = { context: e, memoizedValue: t, next: null }), null === _s)) {
              if (null === Ts) throw Error(s(308));
              (_s = e), (Ts.dependencies = { lanes: 0, firstContext: e });
            } else _s = _s.next = e;
          return t;
        }
        var Ds = null;
        function As(e) {
          null === Ds ? (Ds = [e]) : Ds.push(e);
        }
        function Os(e, t, n, r) {
          var i = t.interleaved;
          return null === i ? ((n.next = n), As(t)) : ((n.next = i.next), (i.next = n)), (t.interleaved = n), Ls(e, r);
        }
        function Ls(e, t) {
          e.lanes |= t;
          var n = e.alternate;
          for (null !== n && (n.lanes |= t), n = e, e = e.return; null !== e; )
            (e.childLanes |= t), null !== (n = e.alternate) && (n.childLanes |= t), (n = e), (e = e.return);
          return 3 === n.tag ? n.stateNode : null;
        }
        var Rs = !1;
        function Ms(e) {
          e.updateQueue = {
            baseState: e.memoizedState,
            firstBaseUpdate: null,
            lastBaseUpdate: null,
            shared: { pending: null, interleaved: null, lanes: 0 },
            effects: null,
          };
        }
        function Fs(e, t) {
          (e = e.updateQueue),
            t.updateQueue === e &&
              (t.updateQueue = {
                baseState: e.baseState,
                firstBaseUpdate: e.firstBaseUpdate,
                lastBaseUpdate: e.lastBaseUpdate,
                shared: e.shared,
                effects: e.effects,
              });
        }
        function js(e, t) {
          return { eventTime: e, lane: t, tag: 0, payload: null, callback: null, next: null };
        }
        function Us(e, t, n) {
          var r = e.updateQueue;
          if (null === r) return null;
          if (((r = r.shared), 0 !== (2 & Cl))) {
            var i = r.pending;
            return null === i ? (t.next = t) : ((t.next = i.next), (i.next = t)), (r.pending = t), Ls(e, n);
          }
          return (
            null === (i = r.interleaved) ? ((t.next = t), As(r)) : ((t.next = i.next), (i.next = t)),
            (r.interleaved = t),
            Ls(e, n)
          );
        }
        function Vs(e, t, n) {
          if (null !== (t = t.updateQueue) && ((t = t.shared), 0 !== (4194240 & n))) {
            var r = t.lanes;
            (n |= r &= e.pendingLanes), (t.lanes = n), yt(e, n);
          }
        }
        function zs(e, t) {
          var n = e.updateQueue,
            r = e.alternate;
          if (null !== r && n === (r = r.updateQueue)) {
            var i = null,
              s = null;
            if (null !== (n = n.firstBaseUpdate)) {
              do {
                var a = {
                  eventTime: n.eventTime,
                  lane: n.lane,
                  tag: n.tag,
                  payload: n.payload,
                  callback: n.callback,
                  next: null,
                };
                null === s ? (i = s = a) : (s = s.next = a), (n = n.next);
              } while (null !== n);
              null === s ? (i = s = t) : (s = s.next = t);
            } else i = s = t;
            return (
              (n = { baseState: r.baseState, firstBaseUpdate: i, lastBaseUpdate: s, shared: r.shared, effects: r.effects }),
              void (e.updateQueue = n)
            );
          }
          null === (e = n.lastBaseUpdate) ? (n.firstBaseUpdate = t) : (e.next = t), (n.lastBaseUpdate = t);
        }
        function Bs(e, t, n, r) {
          var i = e.updateQueue;
          Rs = !1;
          var s = i.firstBaseUpdate,
            a = i.lastBaseUpdate,
            o = i.shared.pending;
          if (null !== o) {
            i.shared.pending = null;
            var l = o,
              c = l.next;
            (l.next = null), null === a ? (s = c) : (a.next = c), (a = l);
            var u = e.alternate;
            null !== u &&
              (o = (u = u.updateQueue).lastBaseUpdate) !== a &&
              (null === o ? (u.firstBaseUpdate = c) : (o.next = c), (u.lastBaseUpdate = l));
          }
          if (null !== s) {
            var d = i.baseState;
            for (a = 0, u = c = l = null, o = s; ; ) {
              var h = o.lane,
                f = o.eventTime;
              if ((r & h) === h) {
                null !== u &&
                  (u = u.next = { eventTime: f, lane: 0, tag: o.tag, payload: o.payload, callback: o.callback, next: null });
                e: {
                  var p = e,
                    m = o;
                  switch (((h = t), (f = n), m.tag)) {
                    case 1:
                      if ('function' === typeof (p = m.payload)) {
                        d = p.call(f, d, h);
                        break e;
                      }
                      d = p;
                      break e;
                    case 3:
                      p.flags = (-65537 & p.flags) | 128;
                    case 0:
                      if (null === (h = 'function' === typeof (p = m.payload) ? p.call(f, d, h) : p) || void 0 === h) break e;
                      d = F({}, d, h);
                      break e;
                    case 2:
                      Rs = !0;
                  }
                }
                null !== o.callback &&
                  0 !== o.lane &&
                  ((e.flags |= 64), null === (h = i.effects) ? (i.effects = [o]) : h.push(o));
              } else
                (f = { eventTime: f, lane: h, tag: o.tag, payload: o.payload, callback: o.callback, next: null }),
                  null === u ? ((c = u = f), (l = d)) : (u = u.next = f),
                  (a |= h);
              if (null === (o = o.next)) {
                if (null === (o = i.shared.pending)) break;
                (o = (h = o).next), (h.next = null), (i.lastBaseUpdate = h), (i.shared.pending = null);
              }
            }
            if (
              (null === u && (l = d),
              (i.baseState = l),
              (i.firstBaseUpdate = c),
              (i.lastBaseUpdate = u),
              null !== (t = i.shared.interleaved))
            ) {
              i = t;
              do {
                (a |= i.lane), (i = i.next);
              } while (i !== t);
            } else null === s && (i.shared.lanes = 0);
            (Ml |= a), (e.lanes = a), (e.memoizedState = d);
          }
        }
        function qs(e, t, n) {
          if (((e = t.effects), (t.effects = null), null !== e))
            for (t = 0; t < e.length; t++) {
              var r = e[t],
                i = r.callback;
              if (null !== i) {
                if (((r.callback = null), (r = n), 'function' !== typeof i)) throw Error(s(191, i));
                i.call(r);
              }
            }
        }
        var Gs = {},
          Hs = _i(Gs),
          Ks = _i(Gs),
          Ws = _i(Gs);
        function Qs(e) {
          if (e === Gs) throw Error(s(174));
          return e;
        }
        function Ys(e, t) {
          switch ((xi(Ws, t), xi(Ks, e), xi(Hs, Gs), (e = t.nodeType))) {
            case 9:
            case 11:
              t = (t = t.documentElement) ? t.namespaceURI : le(null, '');
              break;
            default:
              t = le((t = (e = 8 === e ? t.parentNode : t).namespaceURI || null), (e = e.tagName));
          }
          Ii(Hs), xi(Hs, t);
        }
        function Js() {
          Ii(Hs), Ii(Ks), Ii(Ws);
        }
        function Xs(e) {
          Qs(Ws.current);
          var t = Qs(Hs.current),
            n = le(t, e.type);
          t !== n && (xi(Ks, e), xi(Hs, n));
        }
        function $s(e) {
          Ks.current === e && (Ii(Hs), Ii(Ks));
        }
        var Zs = _i(0);
        function ea(e) {
          for (var t = e; null !== t; ) {
            if (13 === t.tag) {
              var n = t.memoizedState;
              if (null !== n && (null === (n = n.dehydrated) || '$?' === n.data || '$!' === n.data)) return t;
            } else if (19 === t.tag && void 0 !== t.memoizedProps.revealOrder) {
              if (0 !== (128 & t.flags)) return t;
            } else if (null !== t.child) {
              (t.child.return = t), (t = t.child);
              continue;
            }
            if (t === e) break;
            for (; null === t.sibling; ) {
              if (null === t.return || t.return === e) return null;
              t = t.return;
            }
            (t.sibling.return = t.return), (t = t.sibling);
          }
          return null;
        }
        var ta = [];
        function na() {
          for (var e = 0; e < ta.length; e++) ta[e]._workInProgressVersionPrimary = null;
          ta.length = 0;
        }
        var ra = b.ReactCurrentDispatcher,
          ia = b.ReactCurrentBatchConfig,
          sa = 0,
          aa = null,
          oa = null,
          la = null,
          ca = !1,
          ua = !1,
          da = 0,
          ha = 0;
        function fa() {
          throw Error(s(321));
        }
        function pa(e, t) {
          if (null === t) return !1;
          for (var n = 0; n < t.length && n < e.length; n++) if (!or(e[n], t[n])) return !1;
          return !0;
        }
        function ma(e, t, n, r, i, a) {
          if (
            ((sa = a),
            (aa = t),
            (t.memoizedState = null),
            (t.updateQueue = null),
            (t.lanes = 0),
            (ra.current = null === e || null === e.memoizedState ? $a : Za),
            (e = n(r, i)),
            ua)
          ) {
            a = 0;
            do {
              if (((ua = !1), (da = 0), 25 <= a)) throw Error(s(301));
              (a += 1), (la = oa = null), (t.updateQueue = null), (ra.current = eo), (e = n(r, i));
            } while (ua);
          }
          if (((ra.current = Xa), (t = null !== oa && null !== oa.next), (sa = 0), (la = oa = aa = null), (ca = !1), t))
            throw Error(s(300));
          return e;
        }
        function ga() {
          var e = 0 !== da;
          return (da = 0), e;
        }
        function va() {
          var e = { memoizedState: null, baseState: null, baseQueue: null, queue: null, next: null };
          return null === la ? (aa.memoizedState = la = e) : (la = la.next = e), la;
        }
        function ya() {
          if (null === oa) {
            var e = aa.alternate;
            e = null !== e ? e.memoizedState : null;
          } else e = oa.next;
          var t = null === la ? aa.memoizedState : la.next;
          if (null !== t) (la = t), (oa = e);
          else {
            if (null === e) throw Error(s(310));
            (e = {
              memoizedState: (oa = e).memoizedState,
              baseState: oa.baseState,
              baseQueue: oa.baseQueue,
              queue: oa.queue,
              next: null,
            }),
              null === la ? (aa.memoizedState = la = e) : (la = la.next = e);
          }
          return la;
        }
        function wa(e, t) {
          return 'function' === typeof t ? t(e) : t;
        }
        function ba(e) {
          var t = ya(),
            n = t.queue;
          if (null === n) throw Error(s(311));
          n.lastRenderedReducer = e;
          var r = oa,
            i = r.baseQueue,
            a = n.pending;
          if (null !== a) {
            if (null !== i) {
              var o = i.next;
              (i.next = a.next), (a.next = o);
            }
            (r.baseQueue = i = a), (n.pending = null);
          }
          if (null !== i) {
            (a = i.next), (r = r.baseState);
            var l = (o = null),
              c = null,
              u = a;
            do {
              var d = u.lane;
              if ((sa & d) === d)
                null !== c &&
                  (c = c.next =
                    { lane: 0, action: u.action, hasEagerState: u.hasEagerState, eagerState: u.eagerState, next: null }),
                  (r = u.hasEagerState ? u.eagerState : e(r, u.action));
              else {
                var h = { lane: d, action: u.action, hasEagerState: u.hasEagerState, eagerState: u.eagerState, next: null };
                null === c ? ((l = c = h), (o = r)) : (c = c.next = h), (aa.lanes |= d), (Ml |= d);
              }
              u = u.next;
            } while (null !== u && u !== a);
            null === c ? (o = r) : (c.next = l),
              or(r, t.memoizedState) || (wo = !0),
              (t.memoizedState = r),
              (t.baseState = o),
              (t.baseQueue = c),
              (n.lastRenderedState = r);
          }
          if (null !== (e = n.interleaved)) {
            i = e;
            do {
              (a = i.lane), (aa.lanes |= a), (Ml |= a), (i = i.next);
            } while (i !== e);
          } else null === i && (n.lanes = 0);
          return [t.memoizedState, n.dispatch];
        }
        function Sa(e) {
          var t = ya(),
            n = t.queue;
          if (null === n) throw Error(s(311));
          n.lastRenderedReducer = e;
          var r = n.dispatch,
            i = n.pending,
            a = t.memoizedState;
          if (null !== i) {
            n.pending = null;
            var o = (i = i.next);
            do {
              (a = e(a, o.action)), (o = o.next);
            } while (o !== i);
            or(a, t.memoizedState) || (wo = !0),
              (t.memoizedState = a),
              null === t.baseQueue && (t.baseState = a),
              (n.lastRenderedState = a);
          }
          return [a, r];
        }
        function Ea() {}
        function Ta(e, t) {
          var n = aa,
            r = ya(),
            i = t(),
            a = !or(r.memoizedState, i);
          if (
            (a && ((r.memoizedState = i), (wo = !0)),
            (r = r.queue),
            Ra(xa.bind(null, n, r, e), [e]),
            r.getSnapshot !== t || a || (null !== la && 1 & la.memoizedState.tag))
          ) {
            if (((n.flags |= 2048), Pa(9, Ia.bind(null, n, r, i, t), void 0, null), null === Nl)) throw Error(s(349));
            0 !== (30 & sa) || _a(n, t, i);
          }
          return i;
        }
        function _a(e, t, n) {
          (e.flags |= 16384),
            (e = { getSnapshot: t, value: n }),
            null === (t = aa.updateQueue)
              ? ((t = { lastEffect: null, stores: null }), (aa.updateQueue = t), (t.stores = [e]))
              : null === (n = t.stores)
                ? (t.stores = [e])
                : n.push(e);
        }
        function Ia(e, t, n, r) {
          (t.value = n), (t.getSnapshot = r), ka(t) && Ca(e);
        }
        function xa(e, t, n) {
          return n(function () {
            ka(t) && Ca(e);
          });
        }
        function ka(e) {
          var t = e.getSnapshot;
          e = e.value;
          try {
            var n = t();
            return !or(e, n);
          } catch (r) {
            return !0;
          }
        }
        function Ca(e) {
          var t = Ls(e, 1);
          null !== t && nc(t, e, 1, -1);
        }
        function Na(e) {
          var t = va();
          return (
            'function' === typeof e && (e = e()),
            (t.memoizedState = t.baseState = e),
            (e = { pending: null, interleaved: null, lanes: 0, dispatch: null, lastRenderedReducer: wa, lastRenderedState: e }),
            (t.queue = e),
            (e = e.dispatch = Wa.bind(null, aa, e)),
            [t.memoizedState, e]
          );
        }
        function Pa(e, t, n, r) {
          return (
            (e = { tag: e, create: t, destroy: n, deps: r, next: null }),
            null === (t = aa.updateQueue)
              ? ((t = { lastEffect: null, stores: null }), (aa.updateQueue = t), (t.lastEffect = e.next = e))
              : null === (n = t.lastEffect)
                ? (t.lastEffect = e.next = e)
                : ((r = n.next), (n.next = e), (e.next = r), (t.lastEffect = e)),
            e
          );
        }
        function Da() {
          return ya().memoizedState;
        }
        function Aa(e, t, n, r) {
          var i = va();
          (aa.flags |= e), (i.memoizedState = Pa(1 | t, n, void 0, void 0 === r ? null : r));
        }
        function Oa(e, t, n, r) {
          var i = ya();
          r = void 0 === r ? null : r;
          var s = void 0;
          if (null !== oa) {
            var a = oa.memoizedState;
            if (((s = a.destroy), null !== r && pa(r, a.deps))) return void (i.memoizedState = Pa(t, n, s, r));
          }
          (aa.flags |= e), (i.memoizedState = Pa(1 | t, n, s, r));
        }
        function La(e, t) {
          return Aa(8390656, 8, e, t);
        }
        function Ra(e, t) {
          return Oa(2048, 8, e, t);
        }
        function Ma(e, t) {
          return Oa(4, 2, e, t);
        }
        function Fa(e, t) {
          return Oa(4, 4, e, t);
        }
        function ja(e, t) {
          return 'function' === typeof t
            ? ((e = e()),
              t(e),
              function () {
                t(null);
              })
            : null !== t && void 0 !== t
              ? ((e = e()),
                (t.current = e),
                function () {
                  t.current = null;
                })
              : void 0;
        }
        function Ua(e, t, n) {
          return (n = null !== n && void 0 !== n ? n.concat([e]) : null), Oa(4, 4, ja.bind(null, t, e), n);
        }
        function Va() {}
        function za(e, t) {
          var n = ya();
          t = void 0 === t ? null : t;
          var r = n.memoizedState;
          return null !== r && null !== t && pa(t, r[1]) ? r[0] : ((n.memoizedState = [e, t]), e);
        }
        function Ba(e, t) {
          var n = ya();
          t = void 0 === t ? null : t;
          var r = n.memoizedState;
          return null !== r && null !== t && pa(t, r[1]) ? r[0] : ((e = e()), (n.memoizedState = [e, t]), e);
        }
        function qa(e, t, n) {
          return 0 === (21 & sa)
            ? (e.baseState && ((e.baseState = !1), (wo = !0)), (e.memoizedState = n))
            : (or(n, t) || ((n = mt()), (aa.lanes |= n), (Ml |= n), (e.baseState = !0)), t);
        }
        function Ga(e, t) {
          var n = wt;
          (wt = 0 !== n && 4 > n ? n : 4), e(!0);
          var r = ia.transition;
          ia.transition = {};
          try {
            e(!1), t();
          } finally {
            (wt = n), (ia.transition = r);
          }
        }
        function Ha() {
          return ya().memoizedState;
        }
        function Ka(e, t, n) {
          var r = tc(e);
          if (((n = { lane: r, action: n, hasEagerState: !1, eagerState: null, next: null }), Qa(e))) Ya(t, n);
          else if (null !== (n = Os(e, t, n, r))) {
            nc(n, e, r, ec()), Ja(n, t, r);
          }
        }
        function Wa(e, t, n) {
          var r = tc(e),
            i = { lane: r, action: n, hasEagerState: !1, eagerState: null, next: null };
          if (Qa(e)) Ya(t, i);
          else {
            var s = e.alternate;
            if (0 === e.lanes && (null === s || 0 === s.lanes) && null !== (s = t.lastRenderedReducer))
              try {
                var a = t.lastRenderedState,
                  o = s(a, n);
                if (((i.hasEagerState = !0), (i.eagerState = o), or(o, a))) {
                  var l = t.interleaved;
                  return null === l ? ((i.next = i), As(t)) : ((i.next = l.next), (l.next = i)), void (t.interleaved = i);
                }
              } catch (c) {}
            null !== (n = Os(e, t, i, r)) && (nc(n, e, r, (i = ec())), Ja(n, t, r));
          }
        }
        function Qa(e) {
          var t = e.alternate;
          return e === aa || (null !== t && t === aa);
        }
        function Ya(e, t) {
          ua = ca = !0;
          var n = e.pending;
          null === n ? (t.next = t) : ((t.next = n.next), (n.next = t)), (e.pending = t);
        }
        function Ja(e, t, n) {
          if (0 !== (4194240 & n)) {
            var r = t.lanes;
            (n |= r &= e.pendingLanes), (t.lanes = n), yt(e, n);
          }
        }
        var Xa = {
            readContext: Ps,
            useCallback: fa,
            useContext: fa,
            useEffect: fa,
            useImperativeHandle: fa,
            useInsertionEffect: fa,
            useLayoutEffect: fa,
            useMemo: fa,
            useReducer: fa,
            useRef: fa,
            useState: fa,
            useDebugValue: fa,
            useDeferredValue: fa,
            useTransition: fa,
            useMutableSource: fa,
            useSyncExternalStore: fa,
            useId: fa,
            unstable_isNewReconciler: !1,
          },
          $a = {
            readContext: Ps,
            useCallback: function (e, t) {
              return (va().memoizedState = [e, void 0 === t ? null : t]), e;
            },
            useContext: Ps,
            useEffect: La,
            useImperativeHandle: function (e, t, n) {
              return (n = null !== n && void 0 !== n ? n.concat([e]) : null), Aa(4194308, 4, ja.bind(null, t, e), n);
            },
            useLayoutEffect: function (e, t) {
              return Aa(4194308, 4, e, t);
            },
            useInsertionEffect: function (e, t) {
              return Aa(4, 2, e, t);
            },
            useMemo: function (e, t) {
              var n = va();
              return (t = void 0 === t ? null : t), (e = e()), (n.memoizedState = [e, t]), e;
            },
            useReducer: function (e, t, n) {
              var r = va();
              return (
                (t = void 0 !== n ? n(t) : t),
                (r.memoizedState = r.baseState = t),
                (e = {
                  pending: null,
                  interleaved: null,
                  lanes: 0,
                  dispatch: null,
                  lastRenderedReducer: e,
                  lastRenderedState: t,
                }),
                (r.queue = e),
                (e = e.dispatch = Ka.bind(null, aa, e)),
                [r.memoizedState, e]
              );
            },
            useRef: function (e) {
              return (e = { current: e }), (va().memoizedState = e);
            },
            useState: Na,
            useDebugValue: Va,
            useDeferredValue: function (e) {
              return (va().memoizedState = e);
            },
            useTransition: function () {
              var e = Na(!1),
                t = e[0];
              return (e = Ga.bind(null, e[1])), (va().memoizedState = e), [t, e];
            },
            useMutableSource: function () {},
            useSyncExternalStore: function (e, t, n) {
              var r = aa,
                i = va();
              if (is) {
                if (void 0 === n) throw Error(s(407));
                n = n();
              } else {
                if (((n = t()), null === Nl)) throw Error(s(349));
                0 !== (30 & sa) || _a(r, t, n);
              }
              i.memoizedState = n;
              var a = { value: n, getSnapshot: t };
              return (
                (i.queue = a),
                La(xa.bind(null, r, a, e), [e]),
                (r.flags |= 2048),
                Pa(9, Ia.bind(null, r, a, n, t), void 0, null),
                n
              );
            },
            useId: function () {
              var e = va(),
                t = Nl.identifierPrefix;
              if (is) {
                var n = Xi;
                (t = ':' + t + 'R' + (n = (Ji & ~(1 << (32 - at(Ji) - 1))).toString(32) + n)),
                  0 < (n = da++) && (t += 'H' + n.toString(32)),
                  (t += ':');
              } else t = ':' + t + 'r' + (n = ha++).toString(32) + ':';
              return (e.memoizedState = t);
            },
            unstable_isNewReconciler: !1,
          },
          Za = {
            readContext: Ps,
            useCallback: za,
            useContext: Ps,
            useEffect: Ra,
            useImperativeHandle: Ua,
            useInsertionEffect: Ma,
            useLayoutEffect: Fa,
            useMemo: Ba,
            useReducer: ba,
            useRef: Da,
            useState: function () {
              return ba(wa);
            },
            useDebugValue: Va,
            useDeferredValue: function (e) {
              return qa(ya(), oa.memoizedState, e);
            },
            useTransition: function () {
              return [ba(wa)[0], ya().memoizedState];
            },
            useMutableSource: Ea,
            useSyncExternalStore: Ta,
            useId: Ha,
            unstable_isNewReconciler: !1,
          },
          eo = {
            readContext: Ps,
            useCallback: za,
            useContext: Ps,
            useEffect: Ra,
            useImperativeHandle: Ua,
            useInsertionEffect: Ma,
            useLayoutEffect: Fa,
            useMemo: Ba,
            useReducer: Sa,
            useRef: Da,
            useState: function () {
              return Sa(wa);
            },
            useDebugValue: Va,
            useDeferredValue: function (e) {
              var t = ya();
              return null === oa ? (t.memoizedState = e) : qa(t, oa.memoizedState, e);
            },
            useTransition: function () {
              return [Sa(wa)[0], ya().memoizedState];
            },
            useMutableSource: Ea,
            useSyncExternalStore: Ta,
            useId: Ha,
            unstable_isNewReconciler: !1,
          };
        function to(e, t) {
          if (e && e.defaultProps) {
            for (var n in ((t = F({}, t)), (e = e.defaultProps))) void 0 === t[n] && (t[n] = e[n]);
            return t;
          }
          return t;
        }
        function no(e, t, n, r) {
          (n = null === (n = n(r, (t = e.memoizedState))) || void 0 === n ? t : F({}, t, n)),
            (e.memoizedState = n),
            0 === e.lanes && (e.updateQueue.baseState = n);
        }
        var ro = {
          isMounted: function (e) {
            return !!(e = e._reactInternals) && Be(e) === e;
          },
          enqueueSetState: function (e, t, n) {
            e = e._reactInternals;
            var r = ec(),
              i = tc(e),
              s = js(r, i);
            (s.payload = t),
              void 0 !== n && null !== n && (s.callback = n),
              null !== (t = Us(e, s, i)) && (nc(t, e, i, r), Vs(t, e, i));
          },
          enqueueReplaceState: function (e, t, n) {
            e = e._reactInternals;
            var r = ec(),
              i = tc(e),
              s = js(r, i);
            (s.tag = 1),
              (s.payload = t),
              void 0 !== n && null !== n && (s.callback = n),
              null !== (t = Us(e, s, i)) && (nc(t, e, i, r), Vs(t, e, i));
          },
          enqueueForceUpdate: function (e, t) {
            e = e._reactInternals;
            var n = ec(),
              r = tc(e),
              i = js(n, r);
            (i.tag = 2),
              void 0 !== t && null !== t && (i.callback = t),
              null !== (t = Us(e, i, r)) && (nc(t, e, r, n), Vs(t, e, r));
          },
        };
        function io(e, t, n, r, i, s, a) {
          return 'function' === typeof (e = e.stateNode).shouldComponentUpdate
            ? e.shouldComponentUpdate(r, s, a)
            : !t.prototype || !t.prototype.isPureReactComponent || !lr(n, r) || !lr(i, s);
        }
        function so(e, t, n) {
          var r = !1,
            i = ki,
            s = t.contextType;
          return (
            'object' === typeof s && null !== s
              ? (s = Ps(s))
              : ((i = Ai(t) ? Pi : Ci.current), (s = (r = null !== (r = t.contextTypes) && void 0 !== r) ? Di(e, i) : ki)),
            (t = new t(n, s)),
            (e.memoizedState = null !== t.state && void 0 !== t.state ? t.state : null),
            (t.updater = ro),
            (e.stateNode = t),
            (t._reactInternals = e),
            r &&
              (((e = e.stateNode).__reactInternalMemoizedUnmaskedChildContext = i),
              (e.__reactInternalMemoizedMaskedChildContext = s)),
            t
          );
        }
        function ao(e, t, n, r) {
          (e = t.state),
            'function' === typeof t.componentWillReceiveProps && t.componentWillReceiveProps(n, r),
            'function' === typeof t.UNSAFE_componentWillReceiveProps && t.UNSAFE_componentWillReceiveProps(n, r),
            t.state !== e && ro.enqueueReplaceState(t, t.state, null);
        }
        function oo(e, t, n, r) {
          var i = e.stateNode;
          (i.props = n), (i.state = e.memoizedState), (i.refs = {}), Ms(e);
          var s = t.contextType;
          'object' === typeof s && null !== s ? (i.context = Ps(s)) : ((s = Ai(t) ? Pi : Ci.current), (i.context = Di(e, s))),
            (i.state = e.memoizedState),
            'function' === typeof (s = t.getDerivedStateFromProps) && (no(e, t, s, n), (i.state = e.memoizedState)),
            'function' === typeof t.getDerivedStateFromProps ||
              'function' === typeof i.getSnapshotBeforeUpdate ||
              ('function' !== typeof i.UNSAFE_componentWillMount && 'function' !== typeof i.componentWillMount) ||
              ((t = i.state),
              'function' === typeof i.componentWillMount && i.componentWillMount(),
              'function' === typeof i.UNSAFE_componentWillMount && i.UNSAFE_componentWillMount(),
              t !== i.state && ro.enqueueReplaceState(i, i.state, null),
              Bs(e, n, i, r),
              (i.state = e.memoizedState)),
            'function' === typeof i.componentDidMount && (e.flags |= 4194308);
        }
        function lo(e, t) {
          try {
            var n = '',
              r = t;
            do {
              (n += z(r)), (r = r.return);
            } while (r);
            var i = n;
          } catch (s) {
            i = '\nError generating stack: ' + s.message + '\n' + s.stack;
          }
          return { value: e, source: t, stack: i, digest: null };
        }
        function co(e, t, n) {
          return { value: e, source: null, stack: null != n ? n : null, digest: null != t ? t : null };
        }
        function uo(e, t) {
          try {
            console.error(t.value);
          } catch (n) {
            setTimeout(function () {
              throw n;
            });
          }
        }
        var ho = 'function' === typeof WeakMap ? WeakMap : Map;
        function fo(e, t, n) {
          ((n = js(-1, n)).tag = 3), (n.payload = { element: null });
          var r = t.value;
          return (
            (n.callback = function () {
              Gl || ((Gl = !0), (Hl = r)), uo(0, t);
            }),
            n
          );
        }
        function po(e, t, n) {
          (n = js(-1, n)).tag = 3;
          var r = e.type.getDerivedStateFromError;
          if ('function' === typeof r) {
            var i = t.value;
            (n.payload = function () {
              return r(i);
            }),
              (n.callback = function () {
                uo(0, t);
              });
          }
          var s = e.stateNode;
          return (
            null !== s &&
              'function' === typeof s.componentDidCatch &&
              (n.callback = function () {
                uo(0, t), 'function' !== typeof r && (null === Kl ? (Kl = new Set([this])) : Kl.add(this));
                var e = t.stack;
                this.componentDidCatch(t.value, { componentStack: null !== e ? e : '' });
              }),
            n
          );
        }
        function mo(e, t, n) {
          var r = e.pingCache;
          if (null === r) {
            r = e.pingCache = new ho();
            var i = new Set();
            r.set(t, i);
          } else void 0 === (i = r.get(t)) && ((i = new Set()), r.set(t, i));
          i.has(n) || (i.add(n), (e = Ic.bind(null, e, t, n)), t.then(e, e));
        }
        function go(e) {
          do {
            var t;
            if (((t = 13 === e.tag) && (t = null === (t = e.memoizedState) || null !== t.dehydrated), t)) return e;
            e = e.return;
          } while (null !== e);
          return null;
        }
        function vo(e, t, n, r, i) {
          return 0 === (1 & e.mode)
            ? (e === t
                ? (e.flags |= 65536)
                : ((e.flags |= 128),
                  (n.flags |= 131072),
                  (n.flags &= -52805),
                  1 === n.tag && (null === n.alternate ? (n.tag = 17) : (((t = js(-1, 1)).tag = 2), Us(n, t, 1))),
                  (n.lanes |= 1)),
              e)
            : ((e.flags |= 65536), (e.lanes = i), e);
        }
        var yo = b.ReactCurrentOwner,
          wo = !1;
        function bo(e, t, n, r) {
          t.child = null === e ? Ss(t, null, n, r) : bs(t, e.child, n, r);
        }
        function So(e, t, n, r, i) {
          n = n.render;
          var s = t.ref;
          return (
            Ns(t, i),
            (r = ma(e, t, n, r, s, i)),
            (n = ga()),
            null === e || wo
              ? (is && n && es(t), (t.flags |= 1), bo(e, t, r, i), t.child)
              : ((t.updateQueue = e.updateQueue), (t.flags &= -2053), (e.lanes &= ~i), Go(e, t, i))
          );
        }
        function Eo(e, t, n, r, i) {
          if (null === e) {
            var s = n.type;
            return 'function' !== typeof s ||
              Ac(s) ||
              void 0 !== s.defaultProps ||
              null !== n.compare ||
              void 0 !== n.defaultProps
              ? (((e = Lc(n.type, null, r, t, t.mode, i)).ref = t.ref), (e.return = t), (t.child = e))
              : ((t.tag = 15), (t.type = s), To(e, t, s, r, i));
          }
          if (((s = e.child), 0 === (e.lanes & i))) {
            var a = s.memoizedProps;
            if ((n = null !== (n = n.compare) ? n : lr)(a, r) && e.ref === t.ref) return Go(e, t, i);
          }
          return (t.flags |= 1), ((e = Oc(s, r)).ref = t.ref), (e.return = t), (t.child = e);
        }
        function To(e, t, n, r, i) {
          if (null !== e) {
            var s = e.memoizedProps;
            if (lr(s, r) && e.ref === t.ref) {
              if (((wo = !1), (t.pendingProps = r = s), 0 === (e.lanes & i))) return (t.lanes = e.lanes), Go(e, t, i);
              0 !== (131072 & e.flags) && (wo = !0);
            }
          }
          return xo(e, t, n, r, i);
        }
        function _o(e, t, n) {
          var r = t.pendingProps,
            i = r.children,
            s = null !== e ? e.memoizedState : null;
          if ('hidden' === r.mode)
            if (0 === (1 & t.mode))
              (t.memoizedState = { baseLanes: 0, cachePool: null, transitions: null }), xi(Ol, Al), (Al |= n);
            else {
              if (0 === (1073741824 & n))
                return (
                  (e = null !== s ? s.baseLanes | n : n),
                  (t.lanes = t.childLanes = 1073741824),
                  (t.memoizedState = { baseLanes: e, cachePool: null, transitions: null }),
                  (t.updateQueue = null),
                  xi(Ol, Al),
                  (Al |= e),
                  null
                );
              (t.memoizedState = { baseLanes: 0, cachePool: null, transitions: null }),
                (r = null !== s ? s.baseLanes : n),
                xi(Ol, Al),
                (Al |= r);
            }
          else null !== s ? ((r = s.baseLanes | n), (t.memoizedState = null)) : (r = n), xi(Ol, Al), (Al |= r);
          return bo(e, t, i, n), t.child;
        }
        function Io(e, t) {
          var n = t.ref;
          ((null === e && null !== n) || (null !== e && e.ref !== n)) && ((t.flags |= 512), (t.flags |= 2097152));
        }
        function xo(e, t, n, r, i) {
          var s = Ai(n) ? Pi : Ci.current;
          return (
            (s = Di(t, s)),
            Ns(t, i),
            (n = ma(e, t, n, r, s, i)),
            (r = ga()),
            null === e || wo
              ? (is && r && es(t), (t.flags |= 1), bo(e, t, n, i), t.child)
              : ((t.updateQueue = e.updateQueue), (t.flags &= -2053), (e.lanes &= ~i), Go(e, t, i))
          );
        }
        function ko(e, t, n, r, i) {
          if (Ai(n)) {
            var s = !0;
            Mi(t);
          } else s = !1;
          if ((Ns(t, i), null === t.stateNode)) qo(e, t), so(t, n, r), oo(t, n, r, i), (r = !0);
          else if (null === e) {
            var a = t.stateNode,
              o = t.memoizedProps;
            a.props = o;
            var l = a.context,
              c = n.contextType;
            'object' === typeof c && null !== c ? (c = Ps(c)) : (c = Di(t, (c = Ai(n) ? Pi : Ci.current)));
            var u = n.getDerivedStateFromProps,
              d = 'function' === typeof u || 'function' === typeof a.getSnapshotBeforeUpdate;
            d ||
              ('function' !== typeof a.UNSAFE_componentWillReceiveProps && 'function' !== typeof a.componentWillReceiveProps) ||
              ((o !== r || l !== c) && ao(t, a, r, c)),
              (Rs = !1);
            var h = t.memoizedState;
            (a.state = h),
              Bs(t, r, a, i),
              (l = t.memoizedState),
              o !== r || h !== l || Ni.current || Rs
                ? ('function' === typeof u && (no(t, n, u, r), (l = t.memoizedState)),
                  (o = Rs || io(t, n, o, r, h, l, c))
                    ? (d ||
                        ('function' !== typeof a.UNSAFE_componentWillMount && 'function' !== typeof a.componentWillMount) ||
                        ('function' === typeof a.componentWillMount && a.componentWillMount(),
                        'function' === typeof a.UNSAFE_componentWillMount && a.UNSAFE_componentWillMount()),
                      'function' === typeof a.componentDidMount && (t.flags |= 4194308))
                    : ('function' === typeof a.componentDidMount && (t.flags |= 4194308),
                      (t.memoizedProps = r),
                      (t.memoizedState = l)),
                  (a.props = r),
                  (a.state = l),
                  (a.context = c),
                  (r = o))
                : ('function' === typeof a.componentDidMount && (t.flags |= 4194308), (r = !1));
          } else {
            (a = t.stateNode),
              Fs(e, t),
              (o = t.memoizedProps),
              (c = t.type === t.elementType ? o : to(t.type, o)),
              (a.props = c),
              (d = t.pendingProps),
              (h = a.context),
              'object' === typeof (l = n.contextType) && null !== l ? (l = Ps(l)) : (l = Di(t, (l = Ai(n) ? Pi : Ci.current)));
            var f = n.getDerivedStateFromProps;
            (u = 'function' === typeof f || 'function' === typeof a.getSnapshotBeforeUpdate) ||
              ('function' !== typeof a.UNSAFE_componentWillReceiveProps && 'function' !== typeof a.componentWillReceiveProps) ||
              ((o !== d || h !== l) && ao(t, a, r, l)),
              (Rs = !1),
              (h = t.memoizedState),
              (a.state = h),
              Bs(t, r, a, i);
            var p = t.memoizedState;
            o !== d || h !== p || Ni.current || Rs
              ? ('function' === typeof f && (no(t, n, f, r), (p = t.memoizedState)),
                (c = Rs || io(t, n, c, r, h, p, l) || !1)
                  ? (u ||
                      ('function' !== typeof a.UNSAFE_componentWillUpdate && 'function' !== typeof a.componentWillUpdate) ||
                      ('function' === typeof a.componentWillUpdate && a.componentWillUpdate(r, p, l),
                      'function' === typeof a.UNSAFE_componentWillUpdate && a.UNSAFE_componentWillUpdate(r, p, l)),
                    'function' === typeof a.componentDidUpdate && (t.flags |= 4),
                    'function' === typeof a.getSnapshotBeforeUpdate && (t.flags |= 1024))
                  : ('function' !== typeof a.componentDidUpdate ||
                      (o === e.memoizedProps && h === e.memoizedState) ||
                      (t.flags |= 4),
                    'function' !== typeof a.getSnapshotBeforeUpdate ||
                      (o === e.memoizedProps && h === e.memoizedState) ||
                      (t.flags |= 1024),
                    (t.memoizedProps = r),
                    (t.memoizedState = p)),
                (a.props = r),
                (a.state = p),
                (a.context = l),
                (r = c))
              : ('function' !== typeof a.componentDidUpdate || (o === e.memoizedProps && h === e.memoizedState) || (t.flags |= 4),
                'function' !== typeof a.getSnapshotBeforeUpdate ||
                  (o === e.memoizedProps && h === e.memoizedState) ||
                  (t.flags |= 1024),
                (r = !1));
          }
          return Co(e, t, n, r, s, i);
        }
        function Co(e, t, n, r, i, s) {
          Io(e, t);
          var a = 0 !== (128 & t.flags);
          if (!r && !a) return i && Fi(t, n, !1), Go(e, t, s);
          (r = t.stateNode), (yo.current = t);
          var o = a && 'function' !== typeof n.getDerivedStateFromError ? null : r.render();
          return (
            (t.flags |= 1),
            null !== e && a ? ((t.child = bs(t, e.child, null, s)), (t.child = bs(t, null, o, s))) : bo(e, t, o, s),
            (t.memoizedState = r.state),
            i && Fi(t, n, !0),
            t.child
          );
        }
        function No(e) {
          var t = e.stateNode;
          t.pendingContext ? Li(0, t.pendingContext, t.pendingContext !== t.context) : t.context && Li(0, t.context, !1),
            Ys(e, t.containerInfo);
        }
        function Po(e, t, n, r, i) {
          return fs(), ps(i), (t.flags |= 256), bo(e, t, n, r), t.child;
        }
        var Do,
          Ao,
          Oo,
          Lo,
          Ro = { dehydrated: null, treeContext: null, retryLane: 0 };
        function Mo(e) {
          return { baseLanes: e, cachePool: null, transitions: null };
        }
        function Fo(e, t, n) {
          var r,
            i = t.pendingProps,
            a = Zs.current,
            o = !1,
            l = 0 !== (128 & t.flags);
          if (
            ((r = l) || (r = (null === e || null !== e.memoizedState) && 0 !== (2 & a)),
            r ? ((o = !0), (t.flags &= -129)) : (null !== e && null === e.memoizedState) || (a |= 1),
            xi(Zs, 1 & a),
            null === e)
          )
            return (
              cs(t),
              null !== (e = t.memoizedState) && null !== (e = e.dehydrated)
                ? (0 === (1 & t.mode) ? (t.lanes = 1) : '$!' === e.data ? (t.lanes = 8) : (t.lanes = 1073741824), null)
                : ((l = i.children),
                  (e = i.fallback),
                  o
                    ? ((i = t.mode),
                      (o = t.child),
                      (l = { mode: 'hidden', children: l }),
                      0 === (1 & i) && null !== o ? ((o.childLanes = 0), (o.pendingProps = l)) : (o = Mc(l, i, 0, null)),
                      (e = Rc(e, i, n, null)),
                      (o.return = t),
                      (e.return = t),
                      (o.sibling = e),
                      (t.child = o),
                      (t.child.memoizedState = Mo(n)),
                      (t.memoizedState = Ro),
                      e)
                    : jo(t, l))
            );
          if (null !== (a = e.memoizedState) && null !== (r = a.dehydrated))
            return (function (e, t, n, r, i, a, o) {
              if (n)
                return 256 & t.flags
                  ? ((t.flags &= -257), Uo(e, t, o, (r = co(Error(s(422))))))
                  : null !== t.memoizedState
                    ? ((t.child = e.child), (t.flags |= 128), null)
                    : ((a = r.fallback),
                      (i = t.mode),
                      (r = Mc({ mode: 'visible', children: r.children }, i, 0, null)),
                      ((a = Rc(a, i, o, null)).flags |= 2),
                      (r.return = t),
                      (a.return = t),
                      (r.sibling = a),
                      (t.child = r),
                      0 !== (1 & t.mode) && bs(t, e.child, null, o),
                      (t.child.memoizedState = Mo(o)),
                      (t.memoizedState = Ro),
                      a);
              if (0 === (1 & t.mode)) return Uo(e, t, o, null);
              if ('$!' === i.data) {
                if ((r = i.nextSibling && i.nextSibling.dataset)) var l = r.dgst;
                return (r = l), Uo(e, t, o, (r = co((a = Error(s(419))), r, void 0)));
              }
              if (((l = 0 !== (o & e.childLanes)), wo || l)) {
                if (null !== (r = Nl)) {
                  switch (o & -o) {
                    case 4:
                      i = 2;
                      break;
                    case 16:
                      i = 8;
                      break;
                    case 64:
                    case 128:
                    case 256:
                    case 512:
                    case 1024:
                    case 2048:
                    case 4096:
                    case 8192:
                    case 16384:
                    case 32768:
                    case 65536:
                    case 131072:
                    case 262144:
                    case 524288:
                    case 1048576:
                    case 2097152:
                    case 4194304:
                    case 8388608:
                    case 16777216:
                    case 33554432:
                    case 67108864:
                      i = 32;
                      break;
                    case 536870912:
                      i = 268435456;
                      break;
                    default:
                      i = 0;
                  }
                  0 !== (i = 0 !== (i & (r.suspendedLanes | o)) ? 0 : i) &&
                    i !== a.retryLane &&
                    ((a.retryLane = i), Ls(e, i), nc(r, e, i, -1));
                }
                return mc(), Uo(e, t, o, (r = co(Error(s(421)))));
              }
              return '$?' === i.data
                ? ((t.flags |= 128), (t.child = e.child), (t = kc.bind(null, e)), (i._reactRetry = t), null)
                : ((e = a.treeContext),
                  (rs = ci(i.nextSibling)),
                  (ns = t),
                  (is = !0),
                  (ss = null),
                  null !== e && ((Wi[Qi++] = Ji), (Wi[Qi++] = Xi), (Wi[Qi++] = Yi), (Ji = e.id), (Xi = e.overflow), (Yi = t)),
                  (t = jo(t, r.children)),
                  (t.flags |= 4096),
                  t);
            })(e, t, l, i, r, a, n);
          if (o) {
            (o = i.fallback), (l = t.mode), (r = (a = e.child).sibling);
            var c = { mode: 'hidden', children: i.children };
            return (
              0 === (1 & l) && t.child !== a
                ? (((i = t.child).childLanes = 0), (i.pendingProps = c), (t.deletions = null))
                : ((i = Oc(a, c)).subtreeFlags = 14680064 & a.subtreeFlags),
              null !== r ? (o = Oc(r, o)) : ((o = Rc(o, l, n, null)).flags |= 2),
              (o.return = t),
              (i.return = t),
              (i.sibling = o),
              (t.child = i),
              (i = o),
              (o = t.child),
              (l =
                null === (l = e.child.memoizedState)
                  ? Mo(n)
                  : { baseLanes: l.baseLanes | n, cachePool: null, transitions: l.transitions }),
              (o.memoizedState = l),
              (o.childLanes = e.childLanes & ~n),
              (t.memoizedState = Ro),
              i
            );
          }
          return (
            (e = (o = e.child).sibling),
            (i = Oc(o, { mode: 'visible', children: i.children })),
            0 === (1 & t.mode) && (i.lanes = n),
            (i.return = t),
            (i.sibling = null),
            null !== e && (null === (n = t.deletions) ? ((t.deletions = [e]), (t.flags |= 16)) : n.push(e)),
            (t.child = i),
            (t.memoizedState = null),
            i
          );
        }
        function jo(e, t) {
          return ((t = Mc({ mode: 'visible', children: t }, e.mode, 0, null)).return = e), (e.child = t);
        }
        function Uo(e, t, n, r) {
          return (
            null !== r && ps(r),
            bs(t, e.child, null, n),
            ((e = jo(t, t.pendingProps.children)).flags |= 2),
            (t.memoizedState = null),
            e
          );
        }
        function Vo(e, t, n) {
          e.lanes |= t;
          var r = e.alternate;
          null !== r && (r.lanes |= t), Cs(e.return, t, n);
        }
        function zo(e, t, n, r, i) {
          var s = e.memoizedState;
          null === s
            ? (e.memoizedState = { isBackwards: t, rendering: null, renderingStartTime: 0, last: r, tail: n, tailMode: i })
            : ((s.isBackwards = t),
              (s.rendering = null),
              (s.renderingStartTime = 0),
              (s.last = r),
              (s.tail = n),
              (s.tailMode = i));
        }
        function Bo(e, t, n) {
          var r = t.pendingProps,
            i = r.revealOrder,
            s = r.tail;
          if ((bo(e, t, r.children, n), 0 !== (2 & (r = Zs.current)))) (r = (1 & r) | 2), (t.flags |= 128);
          else {
            if (null !== e && 0 !== (128 & e.flags))
              e: for (e = t.child; null !== e; ) {
                if (13 === e.tag) null !== e.memoizedState && Vo(e, n, t);
                else if (19 === e.tag) Vo(e, n, t);
                else if (null !== e.child) {
                  (e.child.return = e), (e = e.child);
                  continue;
                }
                if (e === t) break e;
                for (; null === e.sibling; ) {
                  if (null === e.return || e.return === t) break e;
                  e = e.return;
                }
                (e.sibling.return = e.return), (e = e.sibling);
              }
            r &= 1;
          }
          if ((xi(Zs, r), 0 === (1 & t.mode))) t.memoizedState = null;
          else
            switch (i) {
              case 'forwards':
                for (n = t.child, i = null; null !== n; )
                  null !== (e = n.alternate) && null === ea(e) && (i = n), (n = n.sibling);
                null === (n = i) ? ((i = t.child), (t.child = null)) : ((i = n.sibling), (n.sibling = null)), zo(t, !1, i, n, s);
                break;
              case 'backwards':
                for (n = null, i = t.child, t.child = null; null !== i; ) {
                  if (null !== (e = i.alternate) && null === ea(e)) {
                    t.child = i;
                    break;
                  }
                  (e = i.sibling), (i.sibling = n), (n = i), (i = e);
                }
                zo(t, !0, n, null, s);
                break;
              case 'together':
                zo(t, !1, null, null, void 0);
                break;
              default:
                t.memoizedState = null;
            }
          return t.child;
        }
        function qo(e, t) {
          0 === (1 & t.mode) && null !== e && ((e.alternate = null), (t.alternate = null), (t.flags |= 2));
        }
        function Go(e, t, n) {
          if ((null !== e && (t.dependencies = e.dependencies), (Ml |= t.lanes), 0 === (n & t.childLanes))) return null;
          if (null !== e && t.child !== e.child) throw Error(s(153));
          if (null !== t.child) {
            for (n = Oc((e = t.child), e.pendingProps), t.child = n, n.return = t; null !== e.sibling; )
              (e = e.sibling), ((n = n.sibling = Oc(e, e.pendingProps)).return = t);
            n.sibling = null;
          }
          return t.child;
        }
        function Ho(e, t) {
          if (!is)
            switch (e.tailMode) {
              case 'hidden':
                t = e.tail;
                for (var n = null; null !== t; ) null !== t.alternate && (n = t), (t = t.sibling);
                null === n ? (e.tail = null) : (n.sibling = null);
                break;
              case 'collapsed':
                n = e.tail;
                for (var r = null; null !== n; ) null !== n.alternate && (r = n), (n = n.sibling);
                null === r ? (t || null === e.tail ? (e.tail = null) : (e.tail.sibling = null)) : (r.sibling = null);
            }
        }
        function Ko(e) {
          var t = null !== e.alternate && e.alternate.child === e.child,
            n = 0,
            r = 0;
          if (t)
            for (var i = e.child; null !== i; )
              (n |= i.lanes | i.childLanes),
                (r |= 14680064 & i.subtreeFlags),
                (r |= 14680064 & i.flags),
                (i.return = e),
                (i = i.sibling);
          else
            for (i = e.child; null !== i; )
              (n |= i.lanes | i.childLanes), (r |= i.subtreeFlags), (r |= i.flags), (i.return = e), (i = i.sibling);
          return (e.subtreeFlags |= r), (e.childLanes = n), t;
        }
        function Wo(e, t, n) {
          var r = t.pendingProps;
          switch ((ts(t), t.tag)) {
            case 2:
            case 16:
            case 15:
            case 0:
            case 11:
            case 7:
            case 8:
            case 12:
            case 9:
            case 14:
              return Ko(t), null;
            case 1:
            case 17:
              return Ai(t.type) && Oi(), Ko(t), null;
            case 3:
              return (
                (r = t.stateNode),
                Js(),
                Ii(Ni),
                Ii(Ci),
                na(),
                r.pendingContext && ((r.context = r.pendingContext), (r.pendingContext = null)),
                (null !== e && null !== e.child) ||
                  (ds(t)
                    ? (t.flags |= 4)
                    : null === e ||
                      (e.memoizedState.isDehydrated && 0 === (256 & t.flags)) ||
                      ((t.flags |= 1024), null !== ss && (ac(ss), (ss = null)))),
                Ao(e, t),
                Ko(t),
                null
              );
            case 5:
              $s(t);
              var i = Qs(Ws.current);
              if (((n = t.type), null !== e && null != t.stateNode))
                Oo(e, t, n, r, i), e.ref !== t.ref && ((t.flags |= 512), (t.flags |= 2097152));
              else {
                if (!r) {
                  if (null === t.stateNode) throw Error(s(166));
                  return Ko(t), null;
                }
                if (((e = Qs(Hs.current)), ds(t))) {
                  (r = t.stateNode), (n = t.type);
                  var a = t.memoizedProps;
                  switch (((r[hi] = t), (r[fi] = a), (e = 0 !== (1 & t.mode)), n)) {
                    case 'dialog':
                      Ur('cancel', r), Ur('close', r);
                      break;
                    case 'iframe':
                    case 'object':
                    case 'embed':
                      Ur('load', r);
                      break;
                    case 'video':
                    case 'audio':
                      for (i = 0; i < Rr.length; i++) Ur(Rr[i], r);
                      break;
                    case 'source':
                      Ur('error', r);
                      break;
                    case 'img':
                    case 'image':
                    case 'link':
                      Ur('error', r), Ur('load', r);
                      break;
                    case 'details':
                      Ur('toggle', r);
                      break;
                    case 'input':
                      J(r, a), Ur('invalid', r);
                      break;
                    case 'select':
                      (r._wrapperState = { wasMultiple: !!a.multiple }), Ur('invalid', r);
                      break;
                    case 'textarea':
                      ie(r, a), Ur('invalid', r);
                  }
                  for (var l in (ye(n, a), (i = null), a))
                    if (a.hasOwnProperty(l)) {
                      var c = a[l];
                      'children' === l
                        ? 'string' === typeof c
                          ? r.textContent !== c &&
                            (!0 !== a.suppressHydrationWarning && $r(r.textContent, c, e), (i = ['children', c]))
                          : 'number' === typeof c &&
                            r.textContent !== '' + c &&
                            (!0 !== a.suppressHydrationWarning && $r(r.textContent, c, e), (i = ['children', '' + c]))
                        : o.hasOwnProperty(l) && null != c && 'onScroll' === l && Ur('scroll', r);
                    }
                  switch (n) {
                    case 'input':
                      K(r), Z(r, a, !0);
                      break;
                    case 'textarea':
                      K(r), ae(r);
                      break;
                    case 'select':
                    case 'option':
                      break;
                    default:
                      'function' === typeof a.onClick && (r.onclick = Zr);
                  }
                  (r = i), (t.updateQueue = r), null !== r && (t.flags |= 4);
                } else {
                  (l = 9 === i.nodeType ? i : i.ownerDocument),
                    'http://www.w3.org/1999/xhtml' === e && (e = oe(n)),
                    'http://www.w3.org/1999/xhtml' === e
                      ? 'script' === n
                        ? (((e = l.createElement('div')).innerHTML = '<script></script>'), (e = e.removeChild(e.firstChild)))
                        : 'string' === typeof r.is
                          ? (e = l.createElement(n, { is: r.is }))
                          : ((e = l.createElement(n)),
                            'select' === n && ((l = e), r.multiple ? (l.multiple = !0) : r.size && (l.size = r.size)))
                      : (e = l.createElementNS(e, n)),
                    (e[hi] = t),
                    (e[fi] = r),
                    Do(e, t, !1, !1),
                    (t.stateNode = e);
                  e: {
                    switch (((l = we(n, r)), n)) {
                      case 'dialog':
                        Ur('cancel', e), Ur('close', e), (i = r);
                        break;
                      case 'iframe':
                      case 'object':
                      case 'embed':
                        Ur('load', e), (i = r);
                        break;
                      case 'video':
                      case 'audio':
                        for (i = 0; i < Rr.length; i++) Ur(Rr[i], e);
                        i = r;
                        break;
                      case 'source':
                        Ur('error', e), (i = r);
                        break;
                      case 'img':
                      case 'image':
                      case 'link':
                        Ur('error', e), Ur('load', e), (i = r);
                        break;
                      case 'details':
                        Ur('toggle', e), (i = r);
                        break;
                      case 'input':
                        J(e, r), (i = Y(e, r)), Ur('invalid', e);
                        break;
                      case 'option':
                      default:
                        i = r;
                        break;
                      case 'select':
                        (e._wrapperState = { wasMultiple: !!r.multiple }), (i = F({}, r, { value: void 0 })), Ur('invalid', e);
                        break;
                      case 'textarea':
                        ie(e, r), (i = re(e, r)), Ur('invalid', e);
                    }
                    for (a in (ye(n, i), (c = i)))
                      if (c.hasOwnProperty(a)) {
                        var u = c[a];
                        'style' === a
                          ? ge(e, u)
                          : 'dangerouslySetInnerHTML' === a
                            ? null != (u = u ? u.__html : void 0) && de(e, u)
                            : 'children' === a
                              ? 'string' === typeof u
                                ? ('textarea' !== n || '' !== u) && he(e, u)
                                : 'number' === typeof u && he(e, '' + u)
                              : 'suppressContentEditableWarning' !== a &&
                                'suppressHydrationWarning' !== a &&
                                'autoFocus' !== a &&
                                (o.hasOwnProperty(a)
                                  ? null != u && 'onScroll' === a && Ur('scroll', e)
                                  : null != u && w(e, a, u, l));
                      }
                    switch (n) {
                      case 'input':
                        K(e), Z(e, r, !1);
                        break;
                      case 'textarea':
                        K(e), ae(e);
                        break;
                      case 'option':
                        null != r.value && e.setAttribute('value', '' + G(r.value));
                        break;
                      case 'select':
                        (e.multiple = !!r.multiple),
                          null != (a = r.value)
                            ? ne(e, !!r.multiple, a, !1)
                            : null != r.defaultValue && ne(e, !!r.multiple, r.defaultValue, !0);
                        break;
                      default:
                        'function' === typeof i.onClick && (e.onclick = Zr);
                    }
                    switch (n) {
                      case 'button':
                      case 'input':
                      case 'select':
                      case 'textarea':
                        r = !!r.autoFocus;
                        break e;
                      case 'img':
                        r = !0;
                        break e;
                      default:
                        r = !1;
                    }
                  }
                  r && (t.flags |= 4);
                }
                null !== t.ref && ((t.flags |= 512), (t.flags |= 2097152));
              }
              return Ko(t), null;
            case 6:
              if (e && null != t.stateNode) Lo(e, t, e.memoizedProps, r);
              else {
                if ('string' !== typeof r && null === t.stateNode) throw Error(s(166));
                if (((n = Qs(Ws.current)), Qs(Hs.current), ds(t))) {
                  if (((r = t.stateNode), (n = t.memoizedProps), (r[hi] = t), (a = r.nodeValue !== n) && null !== (e = ns)))
                    switch (e.tag) {
                      case 3:
                        $r(r.nodeValue, n, 0 !== (1 & e.mode));
                        break;
                      case 5:
                        !0 !== e.memoizedProps.suppressHydrationWarning && $r(r.nodeValue, n, 0 !== (1 & e.mode));
                    }
                  a && (t.flags |= 4);
                } else ((r = (9 === n.nodeType ? n : n.ownerDocument).createTextNode(r))[hi] = t), (t.stateNode = r);
              }
              return Ko(t), null;
            case 13:
              if (
                (Ii(Zs), (r = t.memoizedState), null === e || (null !== e.memoizedState && null !== e.memoizedState.dehydrated))
              ) {
                if (is && null !== rs && 0 !== (1 & t.mode) && 0 === (128 & t.flags)) hs(), fs(), (t.flags |= 98560), (a = !1);
                else if (((a = ds(t)), null !== r && null !== r.dehydrated)) {
                  if (null === e) {
                    if (!a) throw Error(s(318));
                    if (!(a = null !== (a = t.memoizedState) ? a.dehydrated : null)) throw Error(s(317));
                    a[hi] = t;
                  } else fs(), 0 === (128 & t.flags) && (t.memoizedState = null), (t.flags |= 4);
                  Ko(t), (a = !1);
                } else null !== ss && (ac(ss), (ss = null)), (a = !0);
                if (!a) return 65536 & t.flags ? t : null;
              }
              return 0 !== (128 & t.flags)
                ? ((t.lanes = n), t)
                : ((r = null !== r) !== (null !== e && null !== e.memoizedState) &&
                    r &&
                    ((t.child.flags |= 8192),
                    0 !== (1 & t.mode) && (null === e || 0 !== (1 & Zs.current) ? 0 === Ll && (Ll = 3) : mc())),
                  null !== t.updateQueue && (t.flags |= 4),
                  Ko(t),
                  null);
            case 4:
              return Js(), Ao(e, t), null === e && Br(t.stateNode.containerInfo), Ko(t), null;
            case 10:
              return ks(t.type._context), Ko(t), null;
            case 19:
              if ((Ii(Zs), null === (a = t.memoizedState))) return Ko(t), null;
              if (((r = 0 !== (128 & t.flags)), null === (l = a.rendering)))
                if (r) Ho(a, !1);
                else {
                  if (0 !== Ll || (null !== e && 0 !== (128 & e.flags)))
                    for (e = t.child; null !== e; ) {
                      if (null !== (l = ea(e))) {
                        for (
                          t.flags |= 128,
                            Ho(a, !1),
                            null !== (r = l.updateQueue) && ((t.updateQueue = r), (t.flags |= 4)),
                            t.subtreeFlags = 0,
                            r = n,
                            n = t.child;
                          null !== n;

                        )
                          (e = r),
                            ((a = n).flags &= 14680066),
                            null === (l = a.alternate)
                              ? ((a.childLanes = 0),
                                (a.lanes = e),
                                (a.child = null),
                                (a.subtreeFlags = 0),
                                (a.memoizedProps = null),
                                (a.memoizedState = null),
                                (a.updateQueue = null),
                                (a.dependencies = null),
                                (a.stateNode = null))
                              : ((a.childLanes = l.childLanes),
                                (a.lanes = l.lanes),
                                (a.child = l.child),
                                (a.subtreeFlags = 0),
                                (a.deletions = null),
                                (a.memoizedProps = l.memoizedProps),
                                (a.memoizedState = l.memoizedState),
                                (a.updateQueue = l.updateQueue),
                                (a.type = l.type),
                                (e = l.dependencies),
                                (a.dependencies = null === e ? null : { lanes: e.lanes, firstContext: e.firstContext })),
                            (n = n.sibling);
                        return xi(Zs, (1 & Zs.current) | 2), t.child;
                      }
                      e = e.sibling;
                    }
                  null !== a.tail && Xe() > Bl && ((t.flags |= 128), (r = !0), Ho(a, !1), (t.lanes = 4194304));
                }
              else {
                if (!r)
                  if (null !== (e = ea(l))) {
                    if (
                      ((t.flags |= 128),
                      (r = !0),
                      null !== (n = e.updateQueue) && ((t.updateQueue = n), (t.flags |= 4)),
                      Ho(a, !0),
                      null === a.tail && 'hidden' === a.tailMode && !l.alternate && !is)
                    )
                      return Ko(t), null;
                  } else
                    2 * Xe() - a.renderingStartTime > Bl &&
                      1073741824 !== n &&
                      ((t.flags |= 128), (r = !0), Ho(a, !1), (t.lanes = 4194304));
                a.isBackwards
                  ? ((l.sibling = t.child), (t.child = l))
                  : (null !== (n = a.last) ? (n.sibling = l) : (t.child = l), (a.last = l));
              }
              return null !== a.tail
                ? ((t = a.tail),
                  (a.rendering = t),
                  (a.tail = t.sibling),
                  (a.renderingStartTime = Xe()),
                  (t.sibling = null),
                  (n = Zs.current),
                  xi(Zs, r ? (1 & n) | 2 : 1 & n),
                  t)
                : (Ko(t), null);
            case 22:
            case 23:
              return (
                dc(),
                (r = null !== t.memoizedState),
                null !== e && (null !== e.memoizedState) !== r && (t.flags |= 8192),
                r && 0 !== (1 & t.mode) ? 0 !== (1073741824 & Al) && (Ko(t), 6 & t.subtreeFlags && (t.flags |= 8192)) : Ko(t),
                null
              );
            case 24:
            case 25:
              return null;
          }
          throw Error(s(156, t.tag));
        }
        function Qo(e, t) {
          switch ((ts(t), t.tag)) {
            case 1:
              return Ai(t.type) && Oi(), 65536 & (e = t.flags) ? ((t.flags = (-65537 & e) | 128), t) : null;
            case 3:
              return (
                Js(),
                Ii(Ni),
                Ii(Ci),
                na(),
                0 !== (65536 & (e = t.flags)) && 0 === (128 & e) ? ((t.flags = (-65537 & e) | 128), t) : null
              );
            case 5:
              return $s(t), null;
            case 13:
              if ((Ii(Zs), null !== (e = t.memoizedState) && null !== e.dehydrated)) {
                if (null === t.alternate) throw Error(s(340));
                fs();
              }
              return 65536 & (e = t.flags) ? ((t.flags = (-65537 & e) | 128), t) : null;
            case 19:
              return Ii(Zs), null;
            case 4:
              return Js(), null;
            case 10:
              return ks(t.type._context), null;
            case 22:
            case 23:
              return dc(), null;
            default:
              return null;
          }
        }
        (Do = function (e, t) {
          for (var n = t.child; null !== n; ) {
            if (5 === n.tag || 6 === n.tag) e.appendChild(n.stateNode);
            else if (4 !== n.tag && null !== n.child) {
              (n.child.return = n), (n = n.child);
              continue;
            }
            if (n === t) break;
            for (; null === n.sibling; ) {
              if (null === n.return || n.return === t) return;
              n = n.return;
            }
            (n.sibling.return = n.return), (n = n.sibling);
          }
        }),
          (Ao = function () {}),
          (Oo = function (e, t, n, r) {
            var i = e.memoizedProps;
            if (i !== r) {
              (e = t.stateNode), Qs(Hs.current);
              var s,
                a = null;
              switch (n) {
                case 'input':
                  (i = Y(e, i)), (r = Y(e, r)), (a = []);
                  break;
                case 'select':
                  (i = F({}, i, { value: void 0 })), (r = F({}, r, { value: void 0 })), (a = []);
                  break;
                case 'textarea':
                  (i = re(e, i)), (r = re(e, r)), (a = []);
                  break;
                default:
                  'function' !== typeof i.onClick && 'function' === typeof r.onClick && (e.onclick = Zr);
              }
              for (u in (ye(n, r), (n = null), i))
                if (!r.hasOwnProperty(u) && i.hasOwnProperty(u) && null != i[u])
                  if ('style' === u) {
                    var l = i[u];
                    for (s in l) l.hasOwnProperty(s) && (n || (n = {}), (n[s] = ''));
                  } else
                    'dangerouslySetInnerHTML' !== u &&
                      'children' !== u &&
                      'suppressContentEditableWarning' !== u &&
                      'suppressHydrationWarning' !== u &&
                      'autoFocus' !== u &&
                      (o.hasOwnProperty(u) ? a || (a = []) : (a = a || []).push(u, null));
              for (u in r) {
                var c = r[u];
                if (((l = null != i ? i[u] : void 0), r.hasOwnProperty(u) && c !== l && (null != c || null != l)))
                  if ('style' === u)
                    if (l) {
                      for (s in l) !l.hasOwnProperty(s) || (c && c.hasOwnProperty(s)) || (n || (n = {}), (n[s] = ''));
                      for (s in c) c.hasOwnProperty(s) && l[s] !== c[s] && (n || (n = {}), (n[s] = c[s]));
                    } else n || (a || (a = []), a.push(u, n)), (n = c);
                  else
                    'dangerouslySetInnerHTML' === u
                      ? ((c = c ? c.__html : void 0),
                        (l = l ? l.__html : void 0),
                        null != c && l !== c && (a = a || []).push(u, c))
                      : 'children' === u
                        ? ('string' !== typeof c && 'number' !== typeof c) || (a = a || []).push(u, '' + c)
                        : 'suppressContentEditableWarning' !== u &&
                          'suppressHydrationWarning' !== u &&
                          (o.hasOwnProperty(u)
                            ? (null != c && 'onScroll' === u && Ur('scroll', e), a || l === c || (a = []))
                            : (a = a || []).push(u, c));
              }
              n && (a = a || []).push('style', n);
              var u = a;
              (t.updateQueue = u) && (t.flags |= 4);
            }
          }),
          (Lo = function (e, t, n, r) {
            n !== r && (t.flags |= 4);
          });
        var Yo = !1,
          Jo = !1,
          Xo = 'function' === typeof WeakSet ? WeakSet : Set,
          $o = null;
        function Zo(e, t) {
          var n = e.ref;
          if (null !== n)
            if ('function' === typeof n)
              try {
                n(null);
              } catch (r) {
                _c(e, t, r);
              }
            else n.current = null;
        }
        function el(e, t, n) {
          try {
            n();
          } catch (r) {
            _c(e, t, r);
          }
        }
        var tl = !1;
        function nl(e, t, n) {
          var r = t.updateQueue;
          if (null !== (r = null !== r ? r.lastEffect : null)) {
            var i = (r = r.next);
            do {
              if ((i.tag & e) === e) {
                var s = i.destroy;
                (i.destroy = void 0), void 0 !== s && el(t, n, s);
              }
              i = i.next;
            } while (i !== r);
          }
        }
        function rl(e, t) {
          if (null !== (t = null !== (t = t.updateQueue) ? t.lastEffect : null)) {
            var n = (t = t.next);
            do {
              if ((n.tag & e) === e) {
                var r = n.create;
                n.destroy = r();
              }
              n = n.next;
            } while (n !== t);
          }
        }
        function il(e) {
          var t = e.ref;
          if (null !== t) {
            var n = e.stateNode;
            e.tag, (e = n), 'function' === typeof t ? t(e) : (t.current = e);
          }
        }
        function sl(e) {
          var t = e.alternate;
          null !== t && ((e.alternate = null), sl(t)),
            (e.child = null),
            (e.deletions = null),
            (e.sibling = null),
            5 === e.tag && null !== (t = e.stateNode) && (delete t[hi], delete t[fi], delete t[mi], delete t[gi], delete t[vi]),
            (e.stateNode = null),
            (e.return = null),
            (e.dependencies = null),
            (e.memoizedProps = null),
            (e.memoizedState = null),
            (e.pendingProps = null),
            (e.stateNode = null),
            (e.updateQueue = null);
        }
        function al(e) {
          return 5 === e.tag || 3 === e.tag || 4 === e.tag;
        }
        function ol(e) {
          e: for (;;) {
            for (; null === e.sibling; ) {
              if (null === e.return || al(e.return)) return null;
              e = e.return;
            }
            for (e.sibling.return = e.return, e = e.sibling; 5 !== e.tag && 6 !== e.tag && 18 !== e.tag; ) {
              if (2 & e.flags) continue e;
              if (null === e.child || 4 === e.tag) continue e;
              (e.child.return = e), (e = e.child);
            }
            if (!(2 & e.flags)) return e.stateNode;
          }
        }
        function ll(e, t, n) {
          var r = e.tag;
          if (5 === r || 6 === r)
            (e = e.stateNode),
              t
                ? 8 === n.nodeType
                  ? n.parentNode.insertBefore(e, t)
                  : n.insertBefore(e, t)
                : (8 === n.nodeType ? (t = n.parentNode).insertBefore(e, n) : (t = n).appendChild(e),
                  (null !== (n = n._reactRootContainer) && void 0 !== n) || null !== t.onclick || (t.onclick = Zr));
          else if (4 !== r && null !== (e = e.child)) for (ll(e, t, n), e = e.sibling; null !== e; ) ll(e, t, n), (e = e.sibling);
        }
        function cl(e, t, n) {
          var r = e.tag;
          if (5 === r || 6 === r) (e = e.stateNode), t ? n.insertBefore(e, t) : n.appendChild(e);
          else if (4 !== r && null !== (e = e.child)) for (cl(e, t, n), e = e.sibling; null !== e; ) cl(e, t, n), (e = e.sibling);
        }
        var ul = null,
          dl = !1;
        function hl(e, t, n) {
          for (n = n.child; null !== n; ) fl(e, t, n), (n = n.sibling);
        }
        function fl(e, t, n) {
          if (st && 'function' === typeof st.onCommitFiberUnmount)
            try {
              st.onCommitFiberUnmount(it, n);
            } catch (o) {}
          switch (n.tag) {
            case 5:
              Jo || Zo(n, t);
            case 6:
              var r = ul,
                i = dl;
              (ul = null),
                hl(e, t, n),
                (dl = i),
                null !== (ul = r) &&
                  (dl
                    ? ((e = ul), (n = n.stateNode), 8 === e.nodeType ? e.parentNode.removeChild(n) : e.removeChild(n))
                    : ul.removeChild(n.stateNode));
              break;
            case 18:
              null !== ul &&
                (dl
                  ? ((e = ul), (n = n.stateNode), 8 === e.nodeType ? li(e.parentNode, n) : 1 === e.nodeType && li(e, n), Bt(e))
                  : li(ul, n.stateNode));
              break;
            case 4:
              (r = ul), (i = dl), (ul = n.stateNode.containerInfo), (dl = !0), hl(e, t, n), (ul = r), (dl = i);
              break;
            case 0:
            case 11:
            case 14:
            case 15:
              if (!Jo && null !== (r = n.updateQueue) && null !== (r = r.lastEffect)) {
                i = r = r.next;
                do {
                  var s = i,
                    a = s.destroy;
                  (s = s.tag), void 0 !== a && (0 !== (2 & s) || 0 !== (4 & s)) && el(n, t, a), (i = i.next);
                } while (i !== r);
              }
              hl(e, t, n);
              break;
            case 1:
              if (!Jo && (Zo(n, t), 'function' === typeof (r = n.stateNode).componentWillUnmount))
                try {
                  (r.props = n.memoizedProps), (r.state = n.memoizedState), r.componentWillUnmount();
                } catch (o) {
                  _c(n, t, o);
                }
              hl(e, t, n);
              break;
            case 21:
              hl(e, t, n);
              break;
            case 22:
              1 & n.mode ? ((Jo = (r = Jo) || null !== n.memoizedState), hl(e, t, n), (Jo = r)) : hl(e, t, n);
              break;
            default:
              hl(e, t, n);
          }
        }
        function pl(e) {
          var t = e.updateQueue;
          if (null !== t) {
            e.updateQueue = null;
            var n = e.stateNode;
            null === n && (n = e.stateNode = new Xo()),
              t.forEach(function (t) {
                var r = Cc.bind(null, e, t);
                n.has(t) || (n.add(t), t.then(r, r));
              });
          }
        }
        function ml(e, t) {
          var n = t.deletions;
          if (null !== n)
            for (var r = 0; r < n.length; r++) {
              var i = n[r];
              try {
                var a = e,
                  o = t,
                  l = o;
                e: for (; null !== l; ) {
                  switch (l.tag) {
                    case 5:
                      (ul = l.stateNode), (dl = !1);
                      break e;
                    case 3:
                    case 4:
                      (ul = l.stateNode.containerInfo), (dl = !0);
                      break e;
                  }
                  l = l.return;
                }
                if (null === ul) throw Error(s(160));
                fl(a, o, i), (ul = null), (dl = !1);
                var c = i.alternate;
                null !== c && (c.return = null), (i.return = null);
              } catch (u) {
                _c(i, t, u);
              }
            }
          if (12854 & t.subtreeFlags) for (t = t.child; null !== t; ) gl(t, e), (t = t.sibling);
        }
        function gl(e, t) {
          var n = e.alternate,
            r = e.flags;
          switch (e.tag) {
            case 0:
            case 11:
            case 14:
            case 15:
              if ((ml(t, e), vl(e), 4 & r)) {
                try {
                  nl(3, e, e.return), rl(3, e);
                } catch (g) {
                  _c(e, e.return, g);
                }
                try {
                  nl(5, e, e.return);
                } catch (g) {
                  _c(e, e.return, g);
                }
              }
              break;
            case 1:
              ml(t, e), vl(e), 512 & r && null !== n && Zo(n, n.return);
              break;
            case 5:
              if ((ml(t, e), vl(e), 512 & r && null !== n && Zo(n, n.return), 32 & e.flags)) {
                var i = e.stateNode;
                try {
                  he(i, '');
                } catch (g) {
                  _c(e, e.return, g);
                }
              }
              if (4 & r && null != (i = e.stateNode)) {
                var a = e.memoizedProps,
                  o = null !== n ? n.memoizedProps : a,
                  l = e.type,
                  c = e.updateQueue;
                if (((e.updateQueue = null), null !== c))
                  try {
                    'input' === l && 'radio' === a.type && null != a.name && X(i, a), we(l, o);
                    var u = we(l, a);
                    for (o = 0; o < c.length; o += 2) {
                      var d = c[o],
                        h = c[o + 1];
                      'style' === d
                        ? ge(i, h)
                        : 'dangerouslySetInnerHTML' === d
                          ? de(i, h)
                          : 'children' === d
                            ? he(i, h)
                            : w(i, d, h, u);
                    }
                    switch (l) {
                      case 'input':
                        $(i, a);
                        break;
                      case 'textarea':
                        se(i, a);
                        break;
                      case 'select':
                        var f = i._wrapperState.wasMultiple;
                        i._wrapperState.wasMultiple = !!a.multiple;
                        var p = a.value;
                        null != p
                          ? ne(i, !!a.multiple, p, !1)
                          : f !== !!a.multiple &&
                            (null != a.defaultValue
                              ? ne(i, !!a.multiple, a.defaultValue, !0)
                              : ne(i, !!a.multiple, a.multiple ? [] : '', !1));
                    }
                    i[fi] = a;
                  } catch (g) {
                    _c(e, e.return, g);
                  }
              }
              break;
            case 6:
              if ((ml(t, e), vl(e), 4 & r)) {
                if (null === e.stateNode) throw Error(s(162));
                (i = e.stateNode), (a = e.memoizedProps);
                try {
                  i.nodeValue = a;
                } catch (g) {
                  _c(e, e.return, g);
                }
              }
              break;
            case 3:
              if ((ml(t, e), vl(e), 4 & r && null !== n && n.memoizedState.isDehydrated))
                try {
                  Bt(t.containerInfo);
                } catch (g) {
                  _c(e, e.return, g);
                }
              break;
            case 4:
            default:
              ml(t, e), vl(e);
              break;
            case 13:
              ml(t, e),
                vl(e),
                8192 & (i = e.child).flags &&
                  ((a = null !== i.memoizedState),
                  (i.stateNode.isHidden = a),
                  !a || (null !== i.alternate && null !== i.alternate.memoizedState) || (zl = Xe())),
                4 & r && pl(e);
              break;
            case 22:
              if (
                ((d = null !== n && null !== n.memoizedState),
                1 & e.mode ? ((Jo = (u = Jo) || d), ml(t, e), (Jo = u)) : ml(t, e),
                vl(e),
                8192 & r)
              ) {
                if (((u = null !== e.memoizedState), (e.stateNode.isHidden = u) && !d && 0 !== (1 & e.mode)))
                  for ($o = e, d = e.child; null !== d; ) {
                    for (h = $o = d; null !== $o; ) {
                      switch (((p = (f = $o).child), f.tag)) {
                        case 0:
                        case 11:
                        case 14:
                        case 15:
                          nl(4, f, f.return);
                          break;
                        case 1:
                          Zo(f, f.return);
                          var m = f.stateNode;
                          if ('function' === typeof m.componentWillUnmount) {
                            (r = f), (n = f.return);
                            try {
                              (t = r), (m.props = t.memoizedProps), (m.state = t.memoizedState), m.componentWillUnmount();
                            } catch (g) {
                              _c(r, n, g);
                            }
                          }
                          break;
                        case 5:
                          Zo(f, f.return);
                          break;
                        case 22:
                          if (null !== f.memoizedState) {
                            Sl(h);
                            continue;
                          }
                      }
                      null !== p ? ((p.return = f), ($o = p)) : Sl(h);
                    }
                    d = d.sibling;
                  }
                e: for (d = null, h = e; ; ) {
                  if (5 === h.tag) {
                    if (null === d) {
                      d = h;
                      try {
                        (i = h.stateNode),
                          u
                            ? 'function' === typeof (a = i.style).setProperty
                              ? a.setProperty('display', 'none', 'important')
                              : (a.display = 'none')
                            : ((l = h.stateNode),
                              (o =
                                void 0 !== (c = h.memoizedProps.style) && null !== c && c.hasOwnProperty('display')
                                  ? c.display
                                  : null),
                              (l.style.display = me('display', o)));
                      } catch (g) {
                        _c(e, e.return, g);
                      }
                    }
                  } else if (6 === h.tag) {
                    if (null === d)
                      try {
                        h.stateNode.nodeValue = u ? '' : h.memoizedProps;
                      } catch (g) {
                        _c(e, e.return, g);
                      }
                  } else if (((22 !== h.tag && 23 !== h.tag) || null === h.memoizedState || h === e) && null !== h.child) {
                    (h.child.return = h), (h = h.child);
                    continue;
                  }
                  if (h === e) break e;
                  for (; null === h.sibling; ) {
                    if (null === h.return || h.return === e) break e;
                    d === h && (d = null), (h = h.return);
                  }
                  d === h && (d = null), (h.sibling.return = h.return), (h = h.sibling);
                }
              }
              break;
            case 19:
              ml(t, e), vl(e), 4 & r && pl(e);
            case 21:
          }
        }
        function vl(e) {
          var t = e.flags;
          if (2 & t) {
            try {
              e: {
                for (var n = e.return; null !== n; ) {
                  if (al(n)) {
                    var r = n;
                    break e;
                  }
                  n = n.return;
                }
                throw Error(s(160));
              }
              switch (r.tag) {
                case 5:
                  var i = r.stateNode;
                  32 & r.flags && (he(i, ''), (r.flags &= -33)), cl(e, ol(e), i);
                  break;
                case 3:
                case 4:
                  var a = r.stateNode.containerInfo;
                  ll(e, ol(e), a);
                  break;
                default:
                  throw Error(s(161));
              }
            } catch (o) {
              _c(e, e.return, o);
            }
            e.flags &= -3;
          }
          4096 & t && (e.flags &= -4097);
        }
        function yl(e, t, n) {
          ($o = e), wl(e, t, n);
        }
        function wl(e, t, n) {
          for (var r = 0 !== (1 & e.mode); null !== $o; ) {
            var i = $o,
              s = i.child;
            if (22 === i.tag && r) {
              var a = null !== i.memoizedState || Yo;
              if (!a) {
                var o = i.alternate,
                  l = (null !== o && null !== o.memoizedState) || Jo;
                o = Yo;
                var c = Jo;
                if (((Yo = a), (Jo = l) && !c))
                  for ($o = i; null !== $o; )
                    (l = (a = $o).child),
                      22 === a.tag && null !== a.memoizedState ? El(i) : null !== l ? ((l.return = a), ($o = l)) : El(i);
                for (; null !== s; ) ($o = s), wl(s, t, n), (s = s.sibling);
                ($o = i), (Yo = o), (Jo = c);
              }
              bl(e);
            } else 0 !== (8772 & i.subtreeFlags) && null !== s ? ((s.return = i), ($o = s)) : bl(e);
          }
        }
        function bl(e) {
          for (; null !== $o; ) {
            var t = $o;
            if (0 !== (8772 & t.flags)) {
              var n = t.alternate;
              try {
                if (0 !== (8772 & t.flags))
                  switch (t.tag) {
                    case 0:
                    case 11:
                    case 15:
                      Jo || rl(5, t);
                      break;
                    case 1:
                      var r = t.stateNode;
                      if (4 & t.flags && !Jo)
                        if (null === n) r.componentDidMount();
                        else {
                          var i = t.elementType === t.type ? n.memoizedProps : to(t.type, n.memoizedProps);
                          r.componentDidUpdate(i, n.memoizedState, r.__reactInternalSnapshotBeforeUpdate);
                        }
                      var a = t.updateQueue;
                      null !== a && qs(t, a, r);
                      break;
                    case 3:
                      var o = t.updateQueue;
                      if (null !== o) {
                        if (((n = null), null !== t.child))
                          switch (t.child.tag) {
                            case 5:
                            case 1:
                              n = t.child.stateNode;
                          }
                        qs(t, o, n);
                      }
                      break;
                    case 5:
                      var l = t.stateNode;
                      if (null === n && 4 & t.flags) {
                        n = l;
                        var c = t.memoizedProps;
                        switch (t.type) {
                          case 'button':
                          case 'input':
                          case 'select':
                          case 'textarea':
                            c.autoFocus && n.focus();
                            break;
                          case 'img':
                            c.src && (n.src = c.src);
                        }
                      }
                      break;
                    case 6:
                    case 4:
                    case 12:
                    case 19:
                    case 17:
                    case 21:
                    case 22:
                    case 23:
                    case 25:
                      break;
                    case 13:
                      if (null === t.memoizedState) {
                        var u = t.alternate;
                        if (null !== u) {
                          var d = u.memoizedState;
                          if (null !== d) {
                            var h = d.dehydrated;
                            null !== h && Bt(h);
                          }
                        }
                      }
                      break;
                    default:
                      throw Error(s(163));
                  }
                Jo || (512 & t.flags && il(t));
              } catch (f) {
                _c(t, t.return, f);
              }
            }
            if (t === e) {
              $o = null;
              break;
            }
            if (null !== (n = t.sibling)) {
              (n.return = t.return), ($o = n);
              break;
            }
            $o = t.return;
          }
        }
        function Sl(e) {
          for (; null !== $o; ) {
            var t = $o;
            if (t === e) {
              $o = null;
              break;
            }
            var n = t.sibling;
            if (null !== n) {
              (n.return = t.return), ($o = n);
              break;
            }
            $o = t.return;
          }
        }
        function El(e) {
          for (; null !== $o; ) {
            var t = $o;
            try {
              switch (t.tag) {
                case 0:
                case 11:
                case 15:
                  var n = t.return;
                  try {
                    rl(4, t);
                  } catch (l) {
                    _c(t, n, l);
                  }
                  break;
                case 1:
                  var r = t.stateNode;
                  if ('function' === typeof r.componentDidMount) {
                    var i = t.return;
                    try {
                      r.componentDidMount();
                    } catch (l) {
                      _c(t, i, l);
                    }
                  }
                  var s = t.return;
                  try {
                    il(t);
                  } catch (l) {
                    _c(t, s, l);
                  }
                  break;
                case 5:
                  var a = t.return;
                  try {
                    il(t);
                  } catch (l) {
                    _c(t, a, l);
                  }
              }
            } catch (l) {
              _c(t, t.return, l);
            }
            if (t === e) {
              $o = null;
              break;
            }
            var o = t.sibling;
            if (null !== o) {
              (o.return = t.return), ($o = o);
              break;
            }
            $o = t.return;
          }
        }
        var Tl,
          _l = Math.ceil,
          Il = b.ReactCurrentDispatcher,
          xl = b.ReactCurrentOwner,
          kl = b.ReactCurrentBatchConfig,
          Cl = 0,
          Nl = null,
          Pl = null,
          Dl = 0,
          Al = 0,
          Ol = _i(0),
          Ll = 0,
          Rl = null,
          Ml = 0,
          Fl = 0,
          jl = 0,
          Ul = null,
          Vl = null,
          zl = 0,
          Bl = 1 / 0,
          ql = null,
          Gl = !1,
          Hl = null,
          Kl = null,
          Wl = !1,
          Ql = null,
          Yl = 0,
          Jl = 0,
          Xl = null,
          $l = -1,
          Zl = 0;
        function ec() {
          return 0 !== (6 & Cl) ? Xe() : -1 !== $l ? $l : ($l = Xe());
        }
        function tc(e) {
          return 0 === (1 & e.mode)
            ? 1
            : 0 !== (2 & Cl) && 0 !== Dl
              ? Dl & -Dl
              : null !== ms.transition
                ? (0 === Zl && (Zl = mt()), Zl)
                : 0 !== (e = wt)
                  ? e
                  : (e = void 0 === (e = window.event) ? 16 : Jt(e.type));
        }
        function nc(e, t, n, r) {
          if (50 < Jl) throw ((Jl = 0), (Xl = null), Error(s(185)));
          vt(e, n, r),
            (0 !== (2 & Cl) && e === Nl) ||
              (e === Nl && (0 === (2 & Cl) && (Fl |= n), 4 === Ll && oc(e, Dl)),
              rc(e, r),
              1 === n && 0 === Cl && 0 === (1 & t.mode) && ((Bl = Xe() + 500), Ui && Bi()));
        }
        function rc(e, t) {
          var n = e.callbackNode;
          !(function (e, t) {
            for (var n = e.suspendedLanes, r = e.pingedLanes, i = e.expirationTimes, s = e.pendingLanes; 0 < s; ) {
              var a = 31 - at(s),
                o = 1 << a,
                l = i[a];
              -1 === l ? (0 !== (o & n) && 0 === (o & r)) || (i[a] = ft(o, t)) : l <= t && (e.expiredLanes |= o), (s &= ~o);
            }
          })(e, t);
          var r = ht(e, e === Nl ? Dl : 0);
          if (0 === r) null !== n && Qe(n), (e.callbackNode = null), (e.callbackPriority = 0);
          else if (((t = r & -r), e.callbackPriority !== t)) {
            if ((null != n && Qe(n), 1 === t))
              0 === e.tag
                ? (function (e) {
                    (Ui = !0), zi(e);
                  })(lc.bind(null, e))
                : zi(lc.bind(null, e)),
                ai(function () {
                  0 === (6 & Cl) && Bi();
                }),
                (n = null);
            else {
              switch (bt(r)) {
                case 1:
                  n = Ze;
                  break;
                case 4:
                  n = et;
                  break;
                case 16:
                default:
                  n = tt;
                  break;
                case 536870912:
                  n = rt;
              }
              n = Nc(n, ic.bind(null, e));
            }
            (e.callbackPriority = t), (e.callbackNode = n);
          }
        }
        function ic(e, t) {
          if ((($l = -1), (Zl = 0), 0 !== (6 & Cl))) throw Error(s(327));
          var n = e.callbackNode;
          if (Ec() && e.callbackNode !== n) return null;
          var r = ht(e, e === Nl ? Dl : 0);
          if (0 === r) return null;
          if (0 !== (30 & r) || 0 !== (r & e.expiredLanes) || t) t = gc(e, r);
          else {
            t = r;
            var i = Cl;
            Cl |= 2;
            var a = pc();
            for ((Nl === e && Dl === t) || ((ql = null), (Bl = Xe() + 500), hc(e, t)); ; )
              try {
                yc();
                break;
              } catch (l) {
                fc(e, l);
              }
            xs(), (Il.current = a), (Cl = i), null !== Pl ? (t = 0) : ((Nl = null), (Dl = 0), (t = Ll));
          }
          if (0 !== t) {
            if ((2 === t && 0 !== (i = pt(e)) && ((r = i), (t = sc(e, i))), 1 === t))
              throw ((n = Rl), hc(e, 0), oc(e, r), rc(e, Xe()), n);
            if (6 === t) oc(e, r);
            else {
              if (
                ((i = e.current.alternate),
                0 === (30 & r) &&
                  !(function (e) {
                    for (var t = e; ; ) {
                      if (16384 & t.flags) {
                        var n = t.updateQueue;
                        if (null !== n && null !== (n = n.stores))
                          for (var r = 0; r < n.length; r++) {
                            var i = n[r],
                              s = i.getSnapshot;
                            i = i.value;
                            try {
                              if (!or(s(), i)) return !1;
                            } catch (o) {
                              return !1;
                            }
                          }
                      }
                      if (((n = t.child), 16384 & t.subtreeFlags && null !== n)) (n.return = t), (t = n);
                      else {
                        if (t === e) break;
                        for (; null === t.sibling; ) {
                          if (null === t.return || t.return === e) return !0;
                          t = t.return;
                        }
                        (t.sibling.return = t.return), (t = t.sibling);
                      }
                    }
                    return !0;
                  })(i) &&
                  (2 === (t = gc(e, r)) && 0 !== (a = pt(e)) && ((r = a), (t = sc(e, a))), 1 === t))
              )
                throw ((n = Rl), hc(e, 0), oc(e, r), rc(e, Xe()), n);
              switch (((e.finishedWork = i), (e.finishedLanes = r), t)) {
                case 0:
                case 1:
                  throw Error(s(345));
                case 2:
                case 5:
                  Sc(e, Vl, ql);
                  break;
                case 3:
                  if ((oc(e, r), (130023424 & r) === r && 10 < (t = zl + 500 - Xe()))) {
                    if (0 !== ht(e, 0)) break;
                    if (((i = e.suspendedLanes) & r) !== r) {
                      ec(), (e.pingedLanes |= e.suspendedLanes & i);
                      break;
                    }
                    e.timeoutHandle = ri(Sc.bind(null, e, Vl, ql), t);
                    break;
                  }
                  Sc(e, Vl, ql);
                  break;
                case 4:
                  if ((oc(e, r), (4194240 & r) === r)) break;
                  for (t = e.eventTimes, i = -1; 0 < r; ) {
                    var o = 31 - at(r);
                    (a = 1 << o), (o = t[o]) > i && (i = o), (r &= ~a);
                  }
                  if (
                    ((r = i),
                    10 <
                      (r =
                        (120 > (r = Xe() - r)
                          ? 120
                          : 480 > r
                            ? 480
                            : 1080 > r
                              ? 1080
                              : 1920 > r
                                ? 1920
                                : 3e3 > r
                                  ? 3e3
                                  : 4320 > r
                                    ? 4320
                                    : 1960 * _l(r / 1960)) - r))
                  ) {
                    e.timeoutHandle = ri(Sc.bind(null, e, Vl, ql), r);
                    break;
                  }
                  Sc(e, Vl, ql);
                  break;
                default:
                  throw Error(s(329));
              }
            }
          }
          return rc(e, Xe()), e.callbackNode === n ? ic.bind(null, e) : null;
        }
        function sc(e, t) {
          var n = Ul;
          return (
            e.current.memoizedState.isDehydrated && (hc(e, t).flags |= 256),
            2 !== (e = gc(e, t)) && ((t = Vl), (Vl = n), null !== t && ac(t)),
            e
          );
        }
        function ac(e) {
          null === Vl ? (Vl = e) : Vl.push.apply(Vl, e);
        }
        function oc(e, t) {
          for (t &= ~jl, t &= ~Fl, e.suspendedLanes |= t, e.pingedLanes &= ~t, e = e.expirationTimes; 0 < t; ) {
            var n = 31 - at(t),
              r = 1 << n;
            (e[n] = -1), (t &= ~r);
          }
        }
        function lc(e) {
          if (0 !== (6 & Cl)) throw Error(s(327));
          Ec();
          var t = ht(e, 0);
          if (0 === (1 & t)) return rc(e, Xe()), null;
          var n = gc(e, t);
          if (0 !== e.tag && 2 === n) {
            var r = pt(e);
            0 !== r && ((t = r), (n = sc(e, r)));
          }
          if (1 === n) throw ((n = Rl), hc(e, 0), oc(e, t), rc(e, Xe()), n);
          if (6 === n) throw Error(s(345));
          return (e.finishedWork = e.current.alternate), (e.finishedLanes = t), Sc(e, Vl, ql), rc(e, Xe()), null;
        }
        function cc(e, t) {
          var n = Cl;
          Cl |= 1;
          try {
            return e(t);
          } finally {
            0 === (Cl = n) && ((Bl = Xe() + 500), Ui && Bi());
          }
        }
        function uc(e) {
          null !== Ql && 0 === Ql.tag && 0 === (6 & Cl) && Ec();
          var t = Cl;
          Cl |= 1;
          var n = kl.transition,
            r = wt;
          try {
            if (((kl.transition = null), (wt = 1), e)) return e();
          } finally {
            (wt = r), (kl.transition = n), 0 === (6 & (Cl = t)) && Bi();
          }
        }
        function dc() {
          (Al = Ol.current), Ii(Ol);
        }
        function hc(e, t) {
          (e.finishedWork = null), (e.finishedLanes = 0);
          var n = e.timeoutHandle;
          if ((-1 !== n && ((e.timeoutHandle = -1), ii(n)), null !== Pl))
            for (n = Pl.return; null !== n; ) {
              var r = n;
              switch ((ts(r), r.tag)) {
                case 1:
                  null !== (r = r.type.childContextTypes) && void 0 !== r && Oi();
                  break;
                case 3:
                  Js(), Ii(Ni), Ii(Ci), na();
                  break;
                case 5:
                  $s(r);
                  break;
                case 4:
                  Js();
                  break;
                case 13:
                case 19:
                  Ii(Zs);
                  break;
                case 10:
                  ks(r.type._context);
                  break;
                case 22:
                case 23:
                  dc();
              }
              n = n.return;
            }
          if (
            ((Nl = e),
            (Pl = e = Oc(e.current, null)),
            (Dl = Al = t),
            (Ll = 0),
            (Rl = null),
            (jl = Fl = Ml = 0),
            (Vl = Ul = null),
            null !== Ds)
          ) {
            for (t = 0; t < Ds.length; t++)
              if (null !== (r = (n = Ds[t]).interleaved)) {
                n.interleaved = null;
                var i = r.next,
                  s = n.pending;
                if (null !== s) {
                  var a = s.next;
                  (s.next = i), (r.next = a);
                }
                n.pending = r;
              }
            Ds = null;
          }
          return e;
        }
        function fc(e, t) {
          for (;;) {
            var n = Pl;
            try {
              if ((xs(), (ra.current = Xa), ca)) {
                for (var r = aa.memoizedState; null !== r; ) {
                  var i = r.queue;
                  null !== i && (i.pending = null), (r = r.next);
                }
                ca = !1;
              }
              if (((sa = 0), (la = oa = aa = null), (ua = !1), (da = 0), (xl.current = null), null === n || null === n.return)) {
                (Ll = 1), (Rl = t), (Pl = null);
                break;
              }
              e: {
                var a = e,
                  o = n.return,
                  l = n,
                  c = t;
                if (((t = Dl), (l.flags |= 32768), null !== c && 'object' === typeof c && 'function' === typeof c.then)) {
                  var u = c,
                    d = l,
                    h = d.tag;
                  if (0 === (1 & d.mode) && (0 === h || 11 === h || 15 === h)) {
                    var f = d.alternate;
                    f
                      ? ((d.updateQueue = f.updateQueue), (d.memoizedState = f.memoizedState), (d.lanes = f.lanes))
                      : ((d.updateQueue = null), (d.memoizedState = null));
                  }
                  var p = go(o);
                  if (null !== p) {
                    (p.flags &= -257), vo(p, o, l, 0, t), 1 & p.mode && mo(a, u, t), (c = u);
                    var m = (t = p).updateQueue;
                    if (null === m) {
                      var g = new Set();
                      g.add(c), (t.updateQueue = g);
                    } else m.add(c);
                    break e;
                  }
                  if (0 === (1 & t)) {
                    mo(a, u, t), mc();
                    break e;
                  }
                  c = Error(s(426));
                } else if (is && 1 & l.mode) {
                  var v = go(o);
                  if (null !== v) {
                    0 === (65536 & v.flags) && (v.flags |= 256), vo(v, o, l, 0, t), ps(lo(c, l));
                    break e;
                  }
                }
                (a = c = lo(c, l)), 4 !== Ll && (Ll = 2), null === Ul ? (Ul = [a]) : Ul.push(a), (a = o);
                do {
                  switch (a.tag) {
                    case 3:
                      (a.flags |= 65536), (t &= -t), (a.lanes |= t), zs(a, fo(0, c, t));
                      break e;
                    case 1:
                      l = c;
                      var y = a.type,
                        w = a.stateNode;
                      if (
                        0 === (128 & a.flags) &&
                        ('function' === typeof y.getDerivedStateFromError ||
                          (null !== w && 'function' === typeof w.componentDidCatch && (null === Kl || !Kl.has(w))))
                      ) {
                        (a.flags |= 65536), (t &= -t), (a.lanes |= t), zs(a, po(a, l, t));
                        break e;
                      }
                  }
                  a = a.return;
                } while (null !== a);
              }
              bc(n);
            } catch (b) {
              (t = b), Pl === n && null !== n && (Pl = n = n.return);
              continue;
            }
            break;
          }
        }
        function pc() {
          var e = Il.current;
          return (Il.current = Xa), null === e ? Xa : e;
        }
        function mc() {
          (0 !== Ll && 3 !== Ll && 2 !== Ll) || (Ll = 4),
            null === Nl || (0 === (268435455 & Ml) && 0 === (268435455 & Fl)) || oc(Nl, Dl);
        }
        function gc(e, t) {
          var n = Cl;
          Cl |= 2;
          var r = pc();
          for ((Nl === e && Dl === t) || ((ql = null), hc(e, t)); ; )
            try {
              vc();
              break;
            } catch (i) {
              fc(e, i);
            }
          if ((xs(), (Cl = n), (Il.current = r), null !== Pl)) throw Error(s(261));
          return (Nl = null), (Dl = 0), Ll;
        }
        function vc() {
          for (; null !== Pl; ) wc(Pl);
        }
        function yc() {
          for (; null !== Pl && !Ye(); ) wc(Pl);
        }
        function wc(e) {
          var t = Tl(e.alternate, e, Al);
          (e.memoizedProps = e.pendingProps), null === t ? bc(e) : (Pl = t), (xl.current = null);
        }
        function bc(e) {
          var t = e;
          do {
            var n = t.alternate;
            if (((e = t.return), 0 === (32768 & t.flags))) {
              if (null !== (n = Wo(n, t, Al))) return void (Pl = n);
            } else {
              if (null !== (n = Qo(n, t))) return (n.flags &= 32767), void (Pl = n);
              if (null === e) return (Ll = 6), void (Pl = null);
              (e.flags |= 32768), (e.subtreeFlags = 0), (e.deletions = null);
            }
            if (null !== (t = t.sibling)) return void (Pl = t);
            Pl = t = e;
          } while (null !== t);
          0 === Ll && (Ll = 5);
        }
        function Sc(e, t, n) {
          var r = wt,
            i = kl.transition;
          try {
            (kl.transition = null),
              (wt = 1),
              (function (e, t, n, r) {
                do {
                  Ec();
                } while (null !== Ql);
                if (0 !== (6 & Cl)) throw Error(s(327));
                n = e.finishedWork;
                var i = e.finishedLanes;
                if (null === n) return null;
                if (((e.finishedWork = null), (e.finishedLanes = 0), n === e.current)) throw Error(s(177));
                (e.callbackNode = null), (e.callbackPriority = 0);
                var a = n.lanes | n.childLanes;
                if (
                  ((function (e, t) {
                    var n = e.pendingLanes & ~t;
                    (e.pendingLanes = t),
                      (e.suspendedLanes = 0),
                      (e.pingedLanes = 0),
                      (e.expiredLanes &= t),
                      (e.mutableReadLanes &= t),
                      (e.entangledLanes &= t),
                      (t = e.entanglements);
                    var r = e.eventTimes;
                    for (e = e.expirationTimes; 0 < n; ) {
                      var i = 31 - at(n),
                        s = 1 << i;
                      (t[i] = 0), (r[i] = -1), (e[i] = -1), (n &= ~s);
                    }
                  })(e, a),
                  e === Nl && ((Pl = Nl = null), (Dl = 0)),
                  (0 === (2064 & n.subtreeFlags) && 0 === (2064 & n.flags)) ||
                    Wl ||
                    ((Wl = !0),
                    Nc(tt, function () {
                      return Ec(), null;
                    })),
                  (a = 0 !== (15990 & n.flags)),
                  0 !== (15990 & n.subtreeFlags) || a)
                ) {
                  (a = kl.transition), (kl.transition = null);
                  var o = wt;
                  wt = 1;
                  var l = Cl;
                  (Cl |= 4),
                    (xl.current = null),
                    (function (e, t) {
                      if (((ei = Gt), fr((e = hr())))) {
                        if ('selectionStart' in e) var n = { start: e.selectionStart, end: e.selectionEnd };
                        else
                          e: {
                            var r = (n = ((n = e.ownerDocument) && n.defaultView) || window).getSelection && n.getSelection();
                            if (r && 0 !== r.rangeCount) {
                              n = r.anchorNode;
                              var i = r.anchorOffset,
                                a = r.focusNode;
                              r = r.focusOffset;
                              try {
                                n.nodeType, a.nodeType;
                              } catch (S) {
                                n = null;
                                break e;
                              }
                              var o = 0,
                                l = -1,
                                c = -1,
                                u = 0,
                                d = 0,
                                h = e,
                                f = null;
                              t: for (;;) {
                                for (
                                  var p;
                                  h !== n || (0 !== i && 3 !== h.nodeType) || (l = o + i),
                                    h !== a || (0 !== r && 3 !== h.nodeType) || (c = o + r),
                                    3 === h.nodeType && (o += h.nodeValue.length),
                                    null !== (p = h.firstChild);

                                )
                                  (f = h), (h = p);
                                for (;;) {
                                  if (h === e) break t;
                                  if (
                                    (f === n && ++u === i && (l = o),
                                    f === a && ++d === r && (c = o),
                                    null !== (p = h.nextSibling))
                                  )
                                    break;
                                  f = (h = f).parentNode;
                                }
                                h = p;
                              }
                              n = -1 === l || -1 === c ? null : { start: l, end: c };
                            } else n = null;
                          }
                        n = n || { start: 0, end: 0 };
                      } else n = null;
                      for (ti = { focusedElem: e, selectionRange: n }, Gt = !1, $o = t; null !== $o; )
                        if (((e = (t = $o).child), 0 !== (1028 & t.subtreeFlags) && null !== e)) (e.return = t), ($o = e);
                        else
                          for (; null !== $o; ) {
                            t = $o;
                            try {
                              var m = t.alternate;
                              if (0 !== (1024 & t.flags))
                                switch (t.tag) {
                                  case 0:
                                  case 11:
                                  case 15:
                                  case 5:
                                  case 6:
                                  case 4:
                                  case 17:
                                    break;
                                  case 1:
                                    if (null !== m) {
                                      var g = m.memoizedProps,
                                        v = m.memoizedState,
                                        y = t.stateNode,
                                        w = y.getSnapshotBeforeUpdate(t.elementType === t.type ? g : to(t.type, g), v);
                                      y.__reactInternalSnapshotBeforeUpdate = w;
                                    }
                                    break;
                                  case 3:
                                    var b = t.stateNode.containerInfo;
                                    1 === b.nodeType
                                      ? (b.textContent = '')
                                      : 9 === b.nodeType && b.documentElement && b.removeChild(b.documentElement);
                                    break;
                                  default:
                                    throw Error(s(163));
                                }
                            } catch (S) {
                              _c(t, t.return, S);
                            }
                            if (null !== (e = t.sibling)) {
                              (e.return = t.return), ($o = e);
                              break;
                            }
                            $o = t.return;
                          }
                      (m = tl), (tl = !1);
                    })(e, n),
                    gl(n, e),
                    pr(ti),
                    (Gt = !!ei),
                    (ti = ei = null),
                    (e.current = n),
                    yl(n, e, i),
                    Je(),
                    (Cl = l),
                    (wt = o),
                    (kl.transition = a);
                } else e.current = n;
                if (
                  (Wl && ((Wl = !1), (Ql = e), (Yl = i)),
                  (a = e.pendingLanes),
                  0 === a && (Kl = null),
                  (function (e) {
                    if (st && 'function' === typeof st.onCommitFiberRoot)
                      try {
                        st.onCommitFiberRoot(it, e, void 0, 128 === (128 & e.current.flags));
                      } catch (t) {}
                  })(n.stateNode),
                  rc(e, Xe()),
                  null !== t)
                )
                  for (r = e.onRecoverableError, n = 0; n < t.length; n++)
                    (i = t[n]), r(i.value, { componentStack: i.stack, digest: i.digest });
                if (Gl) throw ((Gl = !1), (e = Hl), (Hl = null), e);
                0 !== (1 & Yl) && 0 !== e.tag && Ec(),
                  (a = e.pendingLanes),
                  0 !== (1 & a) ? (e === Xl ? Jl++ : ((Jl = 0), (Xl = e))) : (Jl = 0),
                  Bi();
              })(e, t, n, r);
          } finally {
            (kl.transition = i), (wt = r);
          }
          return null;
        }
        function Ec() {
          if (null !== Ql) {
            var e = bt(Yl),
              t = kl.transition,
              n = wt;
            try {
              if (((kl.transition = null), (wt = 16 > e ? 16 : e), null === Ql)) var r = !1;
              else {
                if (((e = Ql), (Ql = null), (Yl = 0), 0 !== (6 & Cl))) throw Error(s(331));
                var i = Cl;
                for (Cl |= 4, $o = e.current; null !== $o; ) {
                  var a = $o,
                    o = a.child;
                  if (0 !== (16 & $o.flags)) {
                    var l = a.deletions;
                    if (null !== l) {
                      for (var c = 0; c < l.length; c++) {
                        var u = l[c];
                        for ($o = u; null !== $o; ) {
                          var d = $o;
                          switch (d.tag) {
                            case 0:
                            case 11:
                            case 15:
                              nl(8, d, a);
                          }
                          var h = d.child;
                          if (null !== h) (h.return = d), ($o = h);
                          else
                            for (; null !== $o; ) {
                              var f = (d = $o).sibling,
                                p = d.return;
                              if ((sl(d), d === u)) {
                                $o = null;
                                break;
                              }
                              if (null !== f) {
                                (f.return = p), ($o = f);
                                break;
                              }
                              $o = p;
                            }
                        }
                      }
                      var m = a.alternate;
                      if (null !== m) {
                        var g = m.child;
                        if (null !== g) {
                          m.child = null;
                          do {
                            var v = g.sibling;
                            (g.sibling = null), (g = v);
                          } while (null !== g);
                        }
                      }
                      $o = a;
                    }
                  }
                  if (0 !== (2064 & a.subtreeFlags) && null !== o) (o.return = a), ($o = o);
                  else
                    e: for (; null !== $o; ) {
                      if (0 !== (2048 & (a = $o).flags))
                        switch (a.tag) {
                          case 0:
                          case 11:
                          case 15:
                            nl(9, a, a.return);
                        }
                      var y = a.sibling;
                      if (null !== y) {
                        (y.return = a.return), ($o = y);
                        break e;
                      }
                      $o = a.return;
                    }
                }
                var w = e.current;
                for ($o = w; null !== $o; ) {
                  var b = (o = $o).child;
                  if (0 !== (2064 & o.subtreeFlags) && null !== b) (b.return = o), ($o = b);
                  else
                    e: for (o = w; null !== $o; ) {
                      if (0 !== (2048 & (l = $o).flags))
                        try {
                          switch (l.tag) {
                            case 0:
                            case 11:
                            case 15:
                              rl(9, l);
                          }
                        } catch (E) {
                          _c(l, l.return, E);
                        }
                      if (l === o) {
                        $o = null;
                        break e;
                      }
                      var S = l.sibling;
                      if (null !== S) {
                        (S.return = l.return), ($o = S);
                        break e;
                      }
                      $o = l.return;
                    }
                }
                if (((Cl = i), Bi(), st && 'function' === typeof st.onPostCommitFiberRoot))
                  try {
                    st.onPostCommitFiberRoot(it, e);
                  } catch (E) {}
                r = !0;
              }
              return r;
            } finally {
              (wt = n), (kl.transition = t);
            }
          }
          return !1;
        }
        function Tc(e, t, n) {
          (e = Us(e, (t = fo(0, (t = lo(n, t)), 1)), 1)), (t = ec()), null !== e && (vt(e, 1, t), rc(e, t));
        }
        function _c(e, t, n) {
          if (3 === e.tag) Tc(e, e, n);
          else
            for (; null !== t; ) {
              if (3 === t.tag) {
                Tc(t, e, n);
                break;
              }
              if (1 === t.tag) {
                var r = t.stateNode;
                if (
                  'function' === typeof t.type.getDerivedStateFromError ||
                  ('function' === typeof r.componentDidCatch && (null === Kl || !Kl.has(r)))
                ) {
                  (t = Us(t, (e = po(t, (e = lo(n, e)), 1)), 1)), (e = ec()), null !== t && (vt(t, 1, e), rc(t, e));
                  break;
                }
              }
              t = t.return;
            }
        }
        function Ic(e, t, n) {
          var r = e.pingCache;
          null !== r && r.delete(t),
            (t = ec()),
            (e.pingedLanes |= e.suspendedLanes & n),
            Nl === e &&
              (Dl & n) === n &&
              (4 === Ll || (3 === Ll && (130023424 & Dl) === Dl && 500 > Xe() - zl) ? hc(e, 0) : (jl |= n)),
            rc(e, t);
        }
        function xc(e, t) {
          0 === t && (0 === (1 & e.mode) ? (t = 1) : ((t = ut), 0 === (130023424 & (ut <<= 1)) && (ut = 4194304)));
          var n = ec();
          null !== (e = Ls(e, t)) && (vt(e, t, n), rc(e, n));
        }
        function kc(e) {
          var t = e.memoizedState,
            n = 0;
          null !== t && (n = t.retryLane), xc(e, n);
        }
        function Cc(e, t) {
          var n = 0;
          switch (e.tag) {
            case 13:
              var r = e.stateNode,
                i = e.memoizedState;
              null !== i && (n = i.retryLane);
              break;
            case 19:
              r = e.stateNode;
              break;
            default:
              throw Error(s(314));
          }
          null !== r && r.delete(t), xc(e, n);
        }
        function Nc(e, t) {
          return We(e, t);
        }
        function Pc(e, t, n, r) {
          (this.tag = e),
            (this.key = n),
            (this.sibling = this.child = this.return = this.stateNode = this.type = this.elementType = null),
            (this.index = 0),
            (this.ref = null),
            (this.pendingProps = t),
            (this.dependencies = this.memoizedState = this.updateQueue = this.memoizedProps = null),
            (this.mode = r),
            (this.subtreeFlags = this.flags = 0),
            (this.deletions = null),
            (this.childLanes = this.lanes = 0),
            (this.alternate = null);
        }
        function Dc(e, t, n, r) {
          return new Pc(e, t, n, r);
        }
        function Ac(e) {
          return !(!(e = e.prototype) || !e.isReactComponent);
        }
        function Oc(e, t) {
          var n = e.alternate;
          return (
            null === n
              ? (((n = Dc(e.tag, t, e.key, e.mode)).elementType = e.elementType),
                (n.type = e.type),
                (n.stateNode = e.stateNode),
                (n.alternate = e),
                (e.alternate = n))
              : ((n.pendingProps = t), (n.type = e.type), (n.flags = 0), (n.subtreeFlags = 0), (n.deletions = null)),
            (n.flags = 14680064 & e.flags),
            (n.childLanes = e.childLanes),
            (n.lanes = e.lanes),
            (n.child = e.child),
            (n.memoizedProps = e.memoizedProps),
            (n.memoizedState = e.memoizedState),
            (n.updateQueue = e.updateQueue),
            (t = e.dependencies),
            (n.dependencies = null === t ? null : { lanes: t.lanes, firstContext: t.firstContext }),
            (n.sibling = e.sibling),
            (n.index = e.index),
            (n.ref = e.ref),
            n
          );
        }
        function Lc(e, t, n, r, i, a) {
          var o = 2;
          if (((r = e), 'function' === typeof e)) Ac(e) && (o = 1);
          else if ('string' === typeof e) o = 5;
          else
            e: switch (e) {
              case T:
                return Rc(n.children, i, a, t);
              case _:
                (o = 8), (i |= 8);
                break;
              case I:
                return ((e = Dc(12, n, t, 2 | i)).elementType = I), (e.lanes = a), e;
              case N:
                return ((e = Dc(13, n, t, i)).elementType = N), (e.lanes = a), e;
              case P:
                return ((e = Dc(19, n, t, i)).elementType = P), (e.lanes = a), e;
              case O:
                return Mc(n, i, a, t);
              default:
                if ('object' === typeof e && null !== e)
                  switch (e.$$typeof) {
                    case x:
                      o = 10;
                      break e;
                    case k:
                      o = 9;
                      break e;
                    case C:
                      o = 11;
                      break e;
                    case D:
                      o = 14;
                      break e;
                    case A:
                      (o = 16), (r = null);
                      break e;
                  }
                throw Error(s(130, null == e ? e : typeof e, ''));
            }
          return ((t = Dc(o, n, t, i)).elementType = e), (t.type = r), (t.lanes = a), t;
        }
        function Rc(e, t, n, r) {
          return ((e = Dc(7, e, r, t)).lanes = n), e;
        }
        function Mc(e, t, n, r) {
          return ((e = Dc(22, e, r, t)).elementType = O), (e.lanes = n), (e.stateNode = { isHidden: !1 }), e;
        }
        function Fc(e, t, n) {
          return ((e = Dc(6, e, null, t)).lanes = n), e;
        }
        function jc(e, t, n) {
          return (
            ((t = Dc(4, null !== e.children ? e.children : [], e.key, t)).lanes = n),
            (t.stateNode = { containerInfo: e.containerInfo, pendingChildren: null, implementation: e.implementation }),
            t
          );
        }
        function Uc(e, t, n, r, i) {
          (this.tag = t),
            (this.containerInfo = e),
            (this.finishedWork = this.pingCache = this.current = this.pendingChildren = null),
            (this.timeoutHandle = -1),
            (this.callbackNode = this.pendingContext = this.context = null),
            (this.callbackPriority = 0),
            (this.eventTimes = gt(0)),
            (this.expirationTimes = gt(-1)),
            (this.entangledLanes =
              this.finishedLanes =
              this.mutableReadLanes =
              this.expiredLanes =
              this.pingedLanes =
              this.suspendedLanes =
              this.pendingLanes =
                0),
            (this.entanglements = gt(0)),
            (this.identifierPrefix = r),
            (this.onRecoverableError = i),
            (this.mutableSourceEagerHydrationData = null);
        }
        function Vc(e, t, n, r, i, s, a, o, l) {
          return (
            (e = new Uc(e, t, n, o, l)),
            1 === t ? ((t = 1), !0 === s && (t |= 8)) : (t = 0),
            (s = Dc(3, null, null, t)),
            (e.current = s),
            (s.stateNode = e),
            (s.memoizedState = { element: r, isDehydrated: n, cache: null, transitions: null, pendingSuspenseBoundaries: null }),
            Ms(s),
            e
          );
        }
        function zc(e) {
          if (!e) return ki;
          e: {
            if (Be((e = e._reactInternals)) !== e || 1 !== e.tag) throw Error(s(170));
            var t = e;
            do {
              switch (t.tag) {
                case 3:
                  t = t.stateNode.context;
                  break e;
                case 1:
                  if (Ai(t.type)) {
                    t = t.stateNode.__reactInternalMemoizedMergedChildContext;
                    break e;
                  }
              }
              t = t.return;
            } while (null !== t);
            throw Error(s(171));
          }
          if (1 === e.tag) {
            var n = e.type;
            if (Ai(n)) return Ri(e, n, t);
          }
          return t;
        }
        function Bc(e, t, n, r, i, s, a, o, l) {
          return (
            ((e = Vc(n, r, !0, e, 0, s, 0, o, l)).context = zc(null)),
            (n = e.current),
            ((s = js((r = ec()), (i = tc(n)))).callback = void 0 !== t && null !== t ? t : null),
            Us(n, s, i),
            (e.current.lanes = i),
            vt(e, i, r),
            rc(e, r),
            e
          );
        }
        function qc(e, t, n, r) {
          var i = t.current,
            s = ec(),
            a = tc(i);
          return (
            (n = zc(n)),
            null === t.context ? (t.context = n) : (t.pendingContext = n),
            ((t = js(s, a)).payload = { element: e }),
            null !== (r = void 0 === r ? null : r) && (t.callback = r),
            null !== (e = Us(i, t, a)) && (nc(e, i, a, s), Vs(e, i, a)),
            a
          );
        }
        function Gc(e) {
          return (e = e.current).child ? (e.child.tag, e.child.stateNode) : null;
        }
        function Hc(e, t) {
          if (null !== (e = e.memoizedState) && null !== e.dehydrated) {
            var n = e.retryLane;
            e.retryLane = 0 !== n && n < t ? n : t;
          }
        }
        function Kc(e, t) {
          Hc(e, t), (e = e.alternate) && Hc(e, t);
        }
        Tl = function (e, t, n) {
          if (null !== e)
            if (e.memoizedProps !== t.pendingProps || Ni.current) wo = !0;
            else {
              if (0 === (e.lanes & n) && 0 === (128 & t.flags))
                return (
                  (wo = !1),
                  (function (e, t, n) {
                    switch (t.tag) {
                      case 3:
                        No(t), fs();
                        break;
                      case 5:
                        Xs(t);
                        break;
                      case 1:
                        Ai(t.type) && Mi(t);
                        break;
                      case 4:
                        Ys(t, t.stateNode.containerInfo);
                        break;
                      case 10:
                        var r = t.type._context,
                          i = t.memoizedProps.value;
                        xi(Es, r._currentValue), (r._currentValue = i);
                        break;
                      case 13:
                        if (null !== (r = t.memoizedState))
                          return null !== r.dehydrated
                            ? (xi(Zs, 1 & Zs.current), (t.flags |= 128), null)
                            : 0 !== (n & t.child.childLanes)
                              ? Fo(e, t, n)
                              : (xi(Zs, 1 & Zs.current), null !== (e = Go(e, t, n)) ? e.sibling : null);
                        xi(Zs, 1 & Zs.current);
                        break;
                      case 19:
                        if (((r = 0 !== (n & t.childLanes)), 0 !== (128 & e.flags))) {
                          if (r) return Bo(e, t, n);
                          t.flags |= 128;
                        }
                        if (
                          (null !== (i = t.memoizedState) && ((i.rendering = null), (i.tail = null), (i.lastEffect = null)),
                          xi(Zs, Zs.current),
                          r)
                        )
                          break;
                        return null;
                      case 22:
                      case 23:
                        return (t.lanes = 0), _o(e, t, n);
                    }
                    return Go(e, t, n);
                  })(e, t, n)
                );
              wo = 0 !== (131072 & e.flags);
            }
          else (wo = !1), is && 0 !== (1048576 & t.flags) && Zi(t, Ki, t.index);
          switch (((t.lanes = 0), t.tag)) {
            case 2:
              var r = t.type;
              qo(e, t), (e = t.pendingProps);
              var i = Di(t, Ci.current);
              Ns(t, n), (i = ma(null, t, r, e, i, n));
              var a = ga();
              return (
                (t.flags |= 1),
                'object' === typeof i && null !== i && 'function' === typeof i.render && void 0 === i.$$typeof
                  ? ((t.tag = 1),
                    (t.memoizedState = null),
                    (t.updateQueue = null),
                    Ai(r) ? ((a = !0), Mi(t)) : (a = !1),
                    (t.memoizedState = null !== i.state && void 0 !== i.state ? i.state : null),
                    Ms(t),
                    (i.updater = ro),
                    (t.stateNode = i),
                    (i._reactInternals = t),
                    oo(t, r, e, n),
                    (t = Co(null, t, r, !0, a, n)))
                  : ((t.tag = 0), is && a && es(t), bo(null, t, i, n), (t = t.child)),
                t
              );
            case 16:
              r = t.elementType;
              e: {
                switch (
                  (qo(e, t),
                  (e = t.pendingProps),
                  (r = (i = r._init)(r._payload)),
                  (t.type = r),
                  (i = t.tag =
                    (function (e) {
                      if ('function' === typeof e) return Ac(e) ? 1 : 0;
                      if (void 0 !== e && null !== e) {
                        if ((e = e.$$typeof) === C) return 11;
                        if (e === D) return 14;
                      }
                      return 2;
                    })(r)),
                  (e = to(r, e)),
                  i)
                ) {
                  case 0:
                    t = xo(null, t, r, e, n);
                    break e;
                  case 1:
                    t = ko(null, t, r, e, n);
                    break e;
                  case 11:
                    t = So(null, t, r, e, n);
                    break e;
                  case 14:
                    t = Eo(null, t, r, to(r.type, e), n);
                    break e;
                }
                throw Error(s(306, r, ''));
              }
              return t;
            case 0:
              return (r = t.type), (i = t.pendingProps), xo(e, t, r, (i = t.elementType === r ? i : to(r, i)), n);
            case 1:
              return (r = t.type), (i = t.pendingProps), ko(e, t, r, (i = t.elementType === r ? i : to(r, i)), n);
            case 3:
              e: {
                if ((No(t), null === e)) throw Error(s(387));
                (r = t.pendingProps), (i = (a = t.memoizedState).element), Fs(e, t), Bs(t, r, null, n);
                var o = t.memoizedState;
                if (((r = o.element), a.isDehydrated)) {
                  if (
                    ((a = {
                      element: r,
                      isDehydrated: !1,
                      cache: o.cache,
                      pendingSuspenseBoundaries: o.pendingSuspenseBoundaries,
                      transitions: o.transitions,
                    }),
                    (t.updateQueue.baseState = a),
                    (t.memoizedState = a),
                    256 & t.flags)
                  ) {
                    t = Po(e, t, r, n, (i = lo(Error(s(423)), t)));
                    break e;
                  }
                  if (r !== i) {
                    t = Po(e, t, r, n, (i = lo(Error(s(424)), t)));
                    break e;
                  }
                  for (
                    rs = ci(t.stateNode.containerInfo.firstChild), ns = t, is = !0, ss = null, n = Ss(t, null, r, n), t.child = n;
                    n;

                  )
                    (n.flags = (-3 & n.flags) | 4096), (n = n.sibling);
                } else {
                  if ((fs(), r === i)) {
                    t = Go(e, t, n);
                    break e;
                  }
                  bo(e, t, r, n);
                }
                t = t.child;
              }
              return t;
            case 5:
              return (
                Xs(t),
                null === e && cs(t),
                (r = t.type),
                (i = t.pendingProps),
                (a = null !== e ? e.memoizedProps : null),
                (o = i.children),
                ni(r, i) ? (o = null) : null !== a && ni(r, a) && (t.flags |= 32),
                Io(e, t),
                bo(e, t, o, n),
                t.child
              );
            case 6:
              return null === e && cs(t), null;
            case 13:
              return Fo(e, t, n);
            case 4:
              return (
                Ys(t, t.stateNode.containerInfo),
                (r = t.pendingProps),
                null === e ? (t.child = bs(t, null, r, n)) : bo(e, t, r, n),
                t.child
              );
            case 11:
              return (r = t.type), (i = t.pendingProps), So(e, t, r, (i = t.elementType === r ? i : to(r, i)), n);
            case 7:
              return bo(e, t, t.pendingProps, n), t.child;
            case 8:
            case 12:
              return bo(e, t, t.pendingProps.children, n), t.child;
            case 10:
              e: {
                if (
                  ((r = t.type._context),
                  (i = t.pendingProps),
                  (a = t.memoizedProps),
                  (o = i.value),
                  xi(Es, r._currentValue),
                  (r._currentValue = o),
                  null !== a)
                )
                  if (or(a.value, o)) {
                    if (a.children === i.children && !Ni.current) {
                      t = Go(e, t, n);
                      break e;
                    }
                  } else
                    for (null !== (a = t.child) && (a.return = t); null !== a; ) {
                      var l = a.dependencies;
                      if (null !== l) {
                        o = a.child;
                        for (var c = l.firstContext; null !== c; ) {
                          if (c.context === r) {
                            if (1 === a.tag) {
                              (c = js(-1, n & -n)).tag = 2;
                              var u = a.updateQueue;
                              if (null !== u) {
                                var d = (u = u.shared).pending;
                                null === d ? (c.next = c) : ((c.next = d.next), (d.next = c)), (u.pending = c);
                              }
                            }
                            (a.lanes |= n), null !== (c = a.alternate) && (c.lanes |= n), Cs(a.return, n, t), (l.lanes |= n);
                            break;
                          }
                          c = c.next;
                        }
                      } else if (10 === a.tag) o = a.type === t.type ? null : a.child;
                      else if (18 === a.tag) {
                        if (null === (o = a.return)) throw Error(s(341));
                        (o.lanes |= n), null !== (l = o.alternate) && (l.lanes |= n), Cs(o, n, t), (o = a.sibling);
                      } else o = a.child;
                      if (null !== o) o.return = a;
                      else
                        for (o = a; null !== o; ) {
                          if (o === t) {
                            o = null;
                            break;
                          }
                          if (null !== (a = o.sibling)) {
                            (a.return = o.return), (o = a);
                            break;
                          }
                          o = o.return;
                        }
                      a = o;
                    }
                bo(e, t, i.children, n), (t = t.child);
              }
              return t;
            case 9:
              return (
                (i = t.type),
                (r = t.pendingProps.children),
                Ns(t, n),
                (r = r((i = Ps(i)))),
                (t.flags |= 1),
                bo(e, t, r, n),
                t.child
              );
            case 14:
              return (i = to((r = t.type), t.pendingProps)), Eo(e, t, r, (i = to(r.type, i)), n);
            case 15:
              return To(e, t, t.type, t.pendingProps, n);
            case 17:
              return (
                (r = t.type),
                (i = t.pendingProps),
                (i = t.elementType === r ? i : to(r, i)),
                qo(e, t),
                (t.tag = 1),
                Ai(r) ? ((e = !0), Mi(t)) : (e = !1),
                Ns(t, n),
                so(t, r, i),
                oo(t, r, i, n),
                Co(null, t, r, !0, e, n)
              );
            case 19:
              return Bo(e, t, n);
            case 22:
              return _o(e, t, n);
          }
          throw Error(s(156, t.tag));
        };
        var Wc =
          'function' === typeof reportError
            ? reportError
            : function (e) {
                console.error(e);
              };
        function Qc(e) {
          this._internalRoot = e;
        }
        function Yc(e) {
          this._internalRoot = e;
        }
        function Jc(e) {
          return !(!e || (1 !== e.nodeType && 9 !== e.nodeType && 11 !== e.nodeType));
        }
        function Xc(e) {
          return !(
            !e ||
            (1 !== e.nodeType &&
              9 !== e.nodeType &&
              11 !== e.nodeType &&
              (8 !== e.nodeType || ' react-mount-point-unstable ' !== e.nodeValue))
          );
        }
        function $c() {}
        function Zc(e, t, n, r, i) {
          var s = n._reactRootContainer;
          if (s) {
            var a = s;
            if ('function' === typeof i) {
              var o = i;
              i = function () {
                var e = Gc(a);
                o.call(e);
              };
            }
            qc(t, a, e, i);
          } else
            a = (function (e, t, n, r, i) {
              if (i) {
                if ('function' === typeof r) {
                  var s = r;
                  r = function () {
                    var e = Gc(a);
                    s.call(e);
                  };
                }
                var a = Bc(t, r, e, 0, null, !1, 0, '', $c);
                return (e._reactRootContainer = a), (e[pi] = a.current), Br(8 === e.nodeType ? e.parentNode : e), uc(), a;
              }
              for (; (i = e.lastChild); ) e.removeChild(i);
              if ('function' === typeof r) {
                var o = r;
                r = function () {
                  var e = Gc(l);
                  o.call(e);
                };
              }
              var l = Vc(e, 0, !1, null, 0, !1, 0, '', $c);
              return (
                (e._reactRootContainer = l),
                (e[pi] = l.current),
                Br(8 === e.nodeType ? e.parentNode : e),
                uc(function () {
                  qc(t, l, n, r);
                }),
                l
              );
            })(n, t, e, i, r);
          return Gc(a);
        }
        (Yc.prototype.render = Qc.prototype.render =
          function (e) {
            var t = this._internalRoot;
            if (null === t) throw Error(s(409));
            qc(e, t, null, null);
          }),
          (Yc.prototype.unmount = Qc.prototype.unmount =
            function () {
              var e = this._internalRoot;
              if (null !== e) {
                this._internalRoot = null;
                var t = e.containerInfo;
                uc(function () {
                  qc(null, e, null, null);
                }),
                  (t[pi] = null);
              }
            }),
          (Yc.prototype.unstable_scheduleHydration = function (e) {
            if (e) {
              var t = _t();
              e = { blockedOn: null, target: e, priority: t };
              for (var n = 0; n < Ot.length && 0 !== t && t < Ot[n].priority; n++);
              Ot.splice(n, 0, e), 0 === n && Ft(e);
            }
          }),
          (St = function (e) {
            switch (e.tag) {
              case 3:
                var t = e.stateNode;
                if (t.current.memoizedState.isDehydrated) {
                  var n = dt(t.pendingLanes);
                  0 !== n && (yt(t, 1 | n), rc(t, Xe()), 0 === (6 & Cl) && ((Bl = Xe() + 500), Bi()));
                }
                break;
              case 13:
                uc(function () {
                  var t = Ls(e, 1);
                  if (null !== t) {
                    var n = ec();
                    nc(t, e, 1, n);
                  }
                }),
                  Kc(e, 1);
            }
          }),
          (Et = function (e) {
            if (13 === e.tag) {
              var t = Ls(e, 134217728);
              if (null !== t) nc(t, e, 134217728, ec());
              Kc(e, 134217728);
            }
          }),
          (Tt = function (e) {
            if (13 === e.tag) {
              var t = tc(e),
                n = Ls(e, t);
              if (null !== n) nc(n, e, t, ec());
              Kc(e, t);
            }
          }),
          (_t = function () {
            return wt;
          }),
          (It = function (e, t) {
            var n = wt;
            try {
              return (wt = e), t();
            } finally {
              wt = n;
            }
          }),
          (Ee = function (e, t, n) {
            switch (t) {
              case 'input':
                if (($(e, n), (t = n.name), 'radio' === n.type && null != t)) {
                  for (n = e; n.parentNode; ) n = n.parentNode;
                  for (
                    n = n.querySelectorAll('input[name=' + JSON.stringify('' + t) + '][type="radio"]'), t = 0;
                    t < n.length;
                    t++
                  ) {
                    var r = n[t];
                    if (r !== e && r.form === e.form) {
                      var i = Si(r);
                      if (!i) throw Error(s(90));
                      W(r), $(r, i);
                    }
                  }
                }
                break;
              case 'textarea':
                se(e, n);
                break;
              case 'select':
                null != (t = n.value) && ne(e, !!n.multiple, t, !1);
            }
          }),
          (Ce = cc),
          (Ne = uc);
        var eu = { usingClientEntryPoint: !1, Events: [wi, bi, Si, xe, ke, cc] },
          tu = { findFiberByHostInstance: yi, bundleType: 0, version: '18.3.1', rendererPackageName: 'react-dom' },
          nu = {
            bundleType: tu.bundleType,
            version: tu.version,
            rendererPackageName: tu.rendererPackageName,
            rendererConfig: tu.rendererConfig,
            overrideHookState: null,
            overrideHookStateDeletePath: null,
            overrideHookStateRenamePath: null,
            overrideProps: null,
            overridePropsDeletePath: null,
            overridePropsRenamePath: null,
            setErrorHandler: null,
            setSuspenseHandler: null,
            scheduleUpdate: null,
            currentDispatcherRef: b.ReactCurrentDispatcher,
            findHostInstanceByFiber: function (e) {
              return null === (e = He(e)) ? null : e.stateNode;
            },
            findFiberByHostInstance:
              tu.findFiberByHostInstance ||
              function () {
                return null;
              },
            findHostInstancesForRefresh: null,
            scheduleRefresh: null,
            scheduleRoot: null,
            setRefreshHandler: null,
            getCurrentFiber: null,
            reconcilerVersion: '18.3.1-next-f1338f8080-20240426',
          };
        if ('undefined' !== typeof __REACT_DEVTOOLS_GLOBAL_HOOK__) {
          var ru = __REACT_DEVTOOLS_GLOBAL_HOOK__;
          if (!ru.isDisabled && ru.supportsFiber)
            try {
              (it = ru.inject(nu)), (st = ru);
            } catch (ue) {}
        }
        (t.__SECRET_INTERNALS_DO_NOT_USE_OR_YOU_WILL_BE_FIRED = eu),
          (t.createPortal = function (e, t) {
            var n = 2 < arguments.length && void 0 !== arguments[2] ? arguments[2] : null;
            if (!Jc(t)) throw Error(s(200));
            return (function (e, t, n) {
              var r = 3 < arguments.length && void 0 !== arguments[3] ? arguments[3] : null;
              return { $$typeof: E, key: null == r ? null : '' + r, children: e, containerInfo: t, implementation: n };
            })(e, t, null, n);
          }),
          (t.createRoot = function (e, t) {
            if (!Jc(e)) throw Error(s(299));
            var n = !1,
              r = '',
              i = Wc;
            return (
              null !== t &&
                void 0 !== t &&
                (!0 === t.unstable_strictMode && (n = !0),
                void 0 !== t.identifierPrefix && (r = t.identifierPrefix),
                void 0 !== t.onRecoverableError && (i = t.onRecoverableError)),
              (t = Vc(e, 1, !1, null, 0, n, 0, r, i)),
              (e[pi] = t.current),
              Br(8 === e.nodeType ? e.parentNode : e),
              new Qc(t)
            );
          }),
          (t.findDOMNode = function (e) {
            if (null == e) return null;
            if (1 === e.nodeType) return e;
            var t = e._reactInternals;
            if (void 0 === t) {
              if ('function' === typeof e.render) throw Error(s(188));
              throw ((e = Object.keys(e).join(',')), Error(s(268, e)));
            }
            return (e = null === (e = He(t)) ? null : e.stateNode);
          }),
          (t.flushSync = function (e) {
            return uc(e);
          }),
          (t.hydrate = function (e, t, n) {
            if (!Xc(t)) throw Error(s(200));
            return Zc(null, e, t, !0, n);
          }),
          (t.hydrateRoot = function (e, t, n) {
            if (!Jc(e)) throw Error(s(405));
            var r = (null != n && n.hydratedSources) || null,
              i = !1,
              a = '',
              o = Wc;
            if (
              (null !== n &&
                void 0 !== n &&
                (!0 === n.unstable_strictMode && (i = !0),
                void 0 !== n.identifierPrefix && (a = n.identifierPrefix),
                void 0 !== n.onRecoverableError && (o = n.onRecoverableError)),
              (t = Bc(t, null, e, 1, null != n ? n : null, i, 0, a, o)),
              (e[pi] = t.current),
              Br(e),
              r)
            )
              for (e = 0; e < r.length; e++)
                (i = (i = (n = r[e])._getVersion)(n._source)),
                  null == t.mutableSourceEagerHydrationData
                    ? (t.mutableSourceEagerHydrationData = [n, i])
                    : t.mutableSourceEagerHydrationData.push(n, i);
            return new Yc(t);
          }),
          (t.render = function (e, t, n) {
            if (!Xc(t)) throw Error(s(200));
            return Zc(null, e, t, !1, n);
          }),
          (t.unmountComponentAtNode = function (e) {
            if (!Xc(e)) throw Error(s(40));
            return (
              !!e._reactRootContainer &&
              (uc(function () {
                Zc(null, null, e, !1, function () {
                  (e._reactRootContainer = null), (e[pi] = null);
                });
              }),
              !0)
            );
          }),
          (t.unstable_batchedUpdates = cc),
          (t.unstable_renderSubtreeIntoContainer = function (e, t, n, r) {
            if (!Xc(n)) throw Error(s(200));
            if (null == e || void 0 === e._reactInternals) throw Error(s(38));
            return Zc(e, t, n, !1, r);
          }),
          (t.version = '18.3.1-next-f1338f8080-20240426');
      },
      391: (e, t, n) => {
        var r = n(950);
        (t.createRoot = r.createRoot), (t.hydrateRoot = r.hydrateRoot);
      },
      950: (e, t, n) => {
        !(function e() {
          if (
            'undefined' !== typeof __REACT_DEVTOOLS_GLOBAL_HOOK__ &&
            'function' === typeof __REACT_DEVTOOLS_GLOBAL_HOOK__.checkDCE
          )
            try {
              __REACT_DEVTOOLS_GLOBAL_HOOK__.checkDCE(e);
            } catch (t) {
              console.error(t);
            }
        })(),
          (e.exports = n(730));
      },
      153: (e, t, n) => {
        var r = n(43),
          i = Symbol.for('react.element'),
          s = Symbol.for('react.fragment'),
          a = Object.prototype.hasOwnProperty,
          o = r.__SECRET_INTERNALS_DO_NOT_USE_OR_YOU_WILL_BE_FIRED.ReactCurrentOwner,
          l = { key: !0, ref: !0, __self: !0, __source: !0 };
        function c(e, t, n) {
          var r,
            s = {},
            c = null,
            u = null;
          for (r in (void 0 !== n && (c = '' + n), void 0 !== t.key && (c = '' + t.key), void 0 !== t.ref && (u = t.ref), t))
            a.call(t, r) && !l.hasOwnProperty(r) && (s[r] = t[r]);
          if (e && e.defaultProps) for (r in (t = e.defaultProps)) void 0 === s[r] && (s[r] = t[r]);
          return { $$typeof: i, type: e, key: c, ref: u, props: s, _owner: o.current };
        }
        (t.Fragment = s), (t.jsx = c), (t.jsxs = c);
      },
      202: (e, t) => {
        var n = Symbol.for('react.element'),
          r = Symbol.for('react.portal'),
          i = Symbol.for('react.fragment'),
          s = Symbol.for('react.strict_mode'),
          a = Symbol.for('react.profiler'),
          o = Symbol.for('react.provider'),
          l = Symbol.for('react.context'),
          c = Symbol.for('react.forward_ref'),
          u = Symbol.for('react.suspense'),
          d = Symbol.for('react.memo'),
          h = Symbol.for('react.lazy'),
          f = Symbol.iterator;
        var p = {
            isMounted: function () {
              return !1;
            },
            enqueueForceUpdate: function () {},
            enqueueReplaceState: function () {},
            enqueueSetState: function () {},
          },
          m = Object.assign,
          g = {};
        function v(e, t, n) {
          (this.props = e), (this.context = t), (this.refs = g), (this.updater = n || p);
        }
        function y() {}
        function w(e, t, n) {
          (this.props = e), (this.context = t), (this.refs = g), (this.updater = n || p);
        }
        (v.prototype.isReactComponent = {}),
          (v.prototype.setState = function (e, t) {
            if ('object' !== typeof e && 'function' !== typeof e && null != e)
              throw Error(
                'setState(...): takes an object of state variables to update or a function which returns an object of state variables.',
              );
            this.updater.enqueueSetState(this, e, t, 'setState');
          }),
          (v.prototype.forceUpdate = function (e) {
            this.updater.enqueueForceUpdate(this, e, 'forceUpdate');
          }),
          (y.prototype = v.prototype);
        var b = (w.prototype = new y());
        (b.constructor = w), m(b, v.prototype), (b.isPureReactComponent = !0);
        var S = Array.isArray,
          E = Object.prototype.hasOwnProperty,
          T = { current: null },
          _ = { key: !0, ref: !0, __self: !0, __source: !0 };
        function I(e, t, r) {
          var i,
            s = {},
            a = null,
            o = null;
          if (null != t)
            for (i in (void 0 !== t.ref && (o = t.ref), void 0 !== t.key && (a = '' + t.key), t))
              E.call(t, i) && !_.hasOwnProperty(i) && (s[i] = t[i]);
          var l = arguments.length - 2;
          if (1 === l) s.children = r;
          else if (1 < l) {
            for (var c = Array(l), u = 0; u < l; u++) c[u] = arguments[u + 2];
            s.children = c;
          }
          if (e && e.defaultProps) for (i in (l = e.defaultProps)) void 0 === s[i] && (s[i] = l[i]);
          return { $$typeof: n, type: e, key: a, ref: o, props: s, _owner: T.current };
        }
        function x(e) {
          return 'object' === typeof e && null !== e && e.$$typeof === n;
        }
        var k = /\/+/g;
        function C(e, t) {
          return 'object' === typeof e && null !== e && null != e.key
            ? (function (e) {
                var t = { '=': '=0', ':': '=2' };
                return (
                  '$' +
                  e.replace(/[=:]/g, function (e) {
                    return t[e];
                  })
                );
              })('' + e.key)
            : t.toString(36);
        }
        function N(e, t, i, s, a) {
          var o = typeof e;
          ('undefined' !== o && 'boolean' !== o) || (e = null);
          var l = !1;
          if (null === e) l = !0;
          else
            switch (o) {
              case 'string':
              case 'number':
                l = !0;
                break;
              case 'object':
                switch (e.$$typeof) {
                  case n:
                  case r:
                    l = !0;
                }
            }
          if (l)
            return (
              (a = a((l = e))),
              (e = '' === s ? '.' + C(l, 0) : s),
              S(a)
                ? ((i = ''),
                  null != e && (i = e.replace(k, '$&/') + '/'),
                  N(a, t, i, '', function (e) {
                    return e;
                  }))
                : null != a &&
                  (x(a) &&
                    (a = (function (e, t) {
                      return { $$typeof: n, type: e.type, key: t, ref: e.ref, props: e.props, _owner: e._owner };
                    })(a, i + (!a.key || (l && l.key === a.key) ? '' : ('' + a.key).replace(k, '$&/') + '/') + e)),
                  t.push(a)),
              1
            );
          if (((l = 0), (s = '' === s ? '.' : s + ':'), S(e)))
            for (var c = 0; c < e.length; c++) {
              var u = s + C((o = e[c]), c);
              l += N(o, t, i, u, a);
            }
          else if (
            ((u = (function (e) {
              return null === e || 'object' !== typeof e
                ? null
                : 'function' === typeof (e = (f && e[f]) || e['@@iterator'])
                  ? e
                  : null;
            })(e)),
            'function' === typeof u)
          )
            for (e = u.call(e), c = 0; !(o = e.next()).done; ) l += N((o = o.value), t, i, (u = s + C(o, c++)), a);
          else if ('object' === o)
            throw (
              ((t = String(e)),
              Error(
                'Objects are not valid as a React child (found: ' +
                  ('[object Object]' === t ? 'object with keys {' + Object.keys(e).join(', ') + '}' : t) +
                  '). If you meant to render a collection of children, use an array instead.',
              ))
            );
          return l;
        }
        function P(e, t, n) {
          if (null == e) return e;
          var r = [],
            i = 0;
          return (
            N(e, r, '', '', function (e) {
              return t.call(n, e, i++);
            }),
            r
          );
        }
        function D(e) {
          if (-1 === e._status) {
            var t = e._result;
            (t = t()).then(
              function (t) {
                (0 !== e._status && -1 !== e._status) || ((e._status = 1), (e._result = t));
              },
              function (t) {
                (0 !== e._status && -1 !== e._status) || ((e._status = 2), (e._result = t));
              },
            ),
              -1 === e._status && ((e._status = 0), (e._result = t));
          }
          if (1 === e._status) return e._result.default;
          throw e._result;
        }
        var A = { current: null },
          O = { transition: null },
          L = { ReactCurrentDispatcher: A, ReactCurrentBatchConfig: O, ReactCurrentOwner: T };
        function R() {
          throw Error('act(...) is not supported in production builds of React.');
        }
        (t.Children = {
          map: P,
          forEach: function (e, t, n) {
            P(
              e,
              function () {
                t.apply(this, arguments);
              },
              n,
            );
          },
          count: function (e) {
            var t = 0;
            return (
              P(e, function () {
                t++;
              }),
              t
            );
          },
          toArray: function (e) {
            return (
              P(e, function (e) {
                return e;
              }) || []
            );
          },
          only: function (e) {
            if (!x(e)) throw Error('React.Children.only expected to receive a single React element child.');
            return e;
          },
        }),
          (t.Component = v),
          (t.Fragment = i),
          (t.Profiler = a),
          (t.PureComponent = w),
          (t.StrictMode = s),
          (t.Suspense = u),
          (t.__SECRET_INTERNALS_DO_NOT_USE_OR_YOU_WILL_BE_FIRED = L),
          (t.act = R),
          (t.cloneElement = function (e, t, r) {
            if (null === e || void 0 === e)
              throw Error('React.cloneElement(...): The argument must be a React element, but you passed ' + e + '.');
            var i = m({}, e.props),
              s = e.key,
              a = e.ref,
              o = e._owner;
            if (null != t) {
              if (
                (void 0 !== t.ref && ((a = t.ref), (o = T.current)),
                void 0 !== t.key && (s = '' + t.key),
                e.type && e.type.defaultProps)
              )
                var l = e.type.defaultProps;
              for (c in t) E.call(t, c) && !_.hasOwnProperty(c) && (i[c] = void 0 === t[c] && void 0 !== l ? l[c] : t[c]);
            }
            var c = arguments.length - 2;
            if (1 === c) i.children = r;
            else if (1 < c) {
              l = Array(c);
              for (var u = 0; u < c; u++) l[u] = arguments[u + 2];
              i.children = l;
            }
            return { $$typeof: n, type: e.type, key: s, ref: a, props: i, _owner: o };
          }),
          (t.createContext = function (e) {
            return (
              ((e = {
                $$typeof: l,
                _currentValue: e,
                _currentValue2: e,
                _threadCount: 0,
                Provider: null,
                Consumer: null,
                _defaultValue: null,
                _globalName: null,
              }).Provider = { $$typeof: o, _context: e }),
              (e.Consumer = e)
            );
          }),
          (t.createElement = I),
          (t.createFactory = function (e) {
            var t = I.bind(null, e);
            return (t.type = e), t;
          }),
          (t.createRef = function () {
            return { current: null };
          }),
          (t.forwardRef = function (e) {
            return { $$typeof: c, render: e };
          }),
          (t.isValidElement = x),
          (t.lazy = function (e) {
            return { $$typeof: h, _payload: { _status: -1, _result: e }, _init: D };
          }),
          (t.memo = function (e, t) {
            return { $$typeof: d, type: e, compare: void 0 === t ? null : t };
          }),
          (t.startTransition = function (e) {
            var t = O.transition;
            O.transition = {};
            try {
              e();
            } finally {
              O.transition = t;
            }
          }),
          (t.unstable_act = R),
          (t.useCallback = function (e, t) {
            return A.current.useCallback(e, t);
          }),
          (t.useContext = function (e) {
            return A.current.useContext(e);
          }),
          (t.useDebugValue = function () {}),
          (t.useDeferredValue = function (e) {
            return A.current.useDeferredValue(e);
          }),
          (t.useEffect = function (e, t) {
            return A.current.useEffect(e, t);
          }),
          (t.useId = function () {
            return A.current.useId();
          }),
          (t.useImperativeHandle = function (e, t, n) {
            return A.current.useImperativeHandle(e, t, n);
          }),
          (t.useInsertionEffect = function (e, t) {
            return A.current.useInsertionEffect(e, t);
          }),
          (t.useLayoutEffect = function (e, t) {
            return A.current.useLayoutEffect(e, t);
          }),
          (t.useMemo = function (e, t) {
            return A.current.useMemo(e, t);
          }),
          (t.useReducer = function (e, t, n) {
            return A.current.useReducer(e, t, n);
          }),
          (t.useRef = function (e) {
            return A.current.useRef(e);
          }),
          (t.useState = function (e) {
            return A.current.useState(e);
          }),
          (t.useSyncExternalStore = function (e, t, n) {
            return A.current.useSyncExternalStore(e, t, n);
          }),
          (t.useTransition = function () {
            return A.current.useTransition();
          }),
          (t.version = '18.3.1');
      },
      43: (e, t, n) => {
        e.exports = n(202);
      },
      579: (e, t, n) => {
        e.exports = n(153);
      },
      234: (e, t) => {
        function n(e, t) {
          var n = e.length;
          e.push(t);
          e: for (; 0 < n; ) {
            var r = (n - 1) >>> 1,
              i = e[r];
            if (!(0 < s(i, t))) break e;
            (e[r] = t), (e[n] = i), (n = r);
          }
        }
        function r(e) {
          return 0 === e.length ? null : e[0];
        }
        function i(e) {
          if (0 === e.length) return null;
          var t = e[0],
            n = e.pop();
          if (n !== t) {
            e[0] = n;
            e: for (var r = 0, i = e.length, a = i >>> 1; r < a; ) {
              var o = 2 * (r + 1) - 1,
                l = e[o],
                c = o + 1,
                u = e[c];
              if (0 > s(l, n)) c < i && 0 > s(u, l) ? ((e[r] = u), (e[c] = n), (r = c)) : ((e[r] = l), (e[o] = n), (r = o));
              else {
                if (!(c < i && 0 > s(u, n))) break e;
                (e[r] = u), (e[c] = n), (r = c);
              }
            }
          }
          return t;
        }
        function s(e, t) {
          var n = e.sortIndex - t.sortIndex;
          return 0 !== n ? n : e.id - t.id;
        }
        if ('object' === typeof performance && 'function' === typeof performance.now) {
          var a = performance;
          t.unstable_now = function () {
            return a.now();
          };
        } else {
          var o = Date,
            l = o.now();
          t.unstable_now = function () {
            return o.now() - l;
          };
        }
        var c = [],
          u = [],
          d = 1,
          h = null,
          f = 3,
          p = !1,
          m = !1,
          g = !1,
          v = 'function' === typeof setTimeout ? setTimeout : null,
          y = 'function' === typeof clearTimeout ? clearTimeout : null,
          w = 'undefined' !== typeof setImmediate ? setImmediate : null;
        function b(e) {
          for (var t = r(u); null !== t; ) {
            if (null === t.callback) i(u);
            else {
              if (!(t.startTime <= e)) break;
              i(u), (t.sortIndex = t.expirationTime), n(c, t);
            }
            t = r(u);
          }
        }
        function S(e) {
          if (((g = !1), b(e), !m))
            if (null !== r(c)) (m = !0), O(E);
            else {
              var t = r(u);
              null !== t && L(S, t.startTime - e);
            }
        }
        function E(e, n) {
          (m = !1), g && ((g = !1), y(x), (x = -1)), (p = !0);
          var s = f;
          try {
            for (b(n), h = r(c); null !== h && (!(h.expirationTime > n) || (e && !N())); ) {
              var a = h.callback;
              if ('function' === typeof a) {
                (h.callback = null), (f = h.priorityLevel);
                var o = a(h.expirationTime <= n);
                (n = t.unstable_now()), 'function' === typeof o ? (h.callback = o) : h === r(c) && i(c), b(n);
              } else i(c);
              h = r(c);
            }
            if (null !== h) var l = !0;
            else {
              var d = r(u);
              null !== d && L(S, d.startTime - n), (l = !1);
            }
            return l;
          } finally {
            (h = null), (f = s), (p = !1);
          }
        }
        'undefined' !== typeof navigator &&
          void 0 !== navigator.scheduling &&
          void 0 !== navigator.scheduling.isInputPending &&
          navigator.scheduling.isInputPending.bind(navigator.scheduling);
        var T,
          _ = !1,
          I = null,
          x = -1,
          k = 5,
          C = -1;
        function N() {
          return !(t.unstable_now() - C < k);
        }
        function P() {
          if (null !== I) {
            var e = t.unstable_now();
            C = e;
            var n = !0;
            try {
              n = I(!0, e);
            } finally {
              n ? T() : ((_ = !1), (I = null));
            }
          } else _ = !1;
        }
        if ('function' === typeof w)
          T = function () {
            w(P);
          };
        else if ('undefined' !== typeof MessageChannel) {
          var D = new MessageChannel(),
            A = D.port2;
          (D.port1.onmessage = P),
            (T = function () {
              A.postMessage(null);
            });
        } else
          T = function () {
            v(P, 0);
          };
        function O(e) {
          (I = e), _ || ((_ = !0), T());
        }
        function L(e, n) {
          x = v(function () {
            e(t.unstable_now());
          }, n);
        }
        (t.unstable_IdlePriority = 5),
          (t.unstable_ImmediatePriority = 1),
          (t.unstable_LowPriority = 4),
          (t.unstable_NormalPriority = 3),
          (t.unstable_Profiling = null),
          (t.unstable_UserBlockingPriority = 2),
          (t.unstable_cancelCallback = function (e) {
            e.callback = null;
          }),
          (t.unstable_continueExecution = function () {
            m || p || ((m = !0), O(E));
          }),
          (t.unstable_forceFrameRate = function (e) {
            0 > e || 125 < e
              ? console.error(
                  'forceFrameRate takes a positive int between 0 and 125, forcing frame rates higher than 125 fps is not supported',
                )
              : (k = 0 < e ? Math.floor(1e3 / e) : 5);
          }),
          (t.unstable_getCurrentPriorityLevel = function () {
            return f;
          }),
          (t.unstable_getFirstCallbackNode = function () {
            return r(c);
          }),
          (t.unstable_next = function (e) {
            switch (f) {
              case 1:
              case 2:
              case 3:
                var t = 3;
                break;
              default:
                t = f;
            }
            var n = f;
            f = t;
            try {
              return e();
            } finally {
              f = n;
            }
          }),
          (t.unstable_pauseExecution = function () {}),
          (t.unstable_requestPaint = function () {}),
          (t.unstable_runWithPriority = function (e, t) {
            switch (e) {
              case 1:
              case 2:
              case 3:
              case 4:
              case 5:
                break;
              default:
                e = 3;
            }
            var n = f;
            f = e;
            try {
              return t();
            } finally {
              f = n;
            }
          }),
          (t.unstable_scheduleCallback = function (e, i, s) {
            var a = t.unstable_now();
            switch (
              ('object' === typeof s && null !== s ? (s = 'number' === typeof (s = s.delay) && 0 < s ? a + s : a) : (s = a), e)
            ) {
              case 1:
                var o = -1;
                break;
              case 2:
                o = 250;
                break;
              case 5:
                o = 1073741823;
                break;
              case 4:
                o = 1e4;
                break;
              default:
                o = 5e3;
            }
            return (
              (e = { id: d++, callback: i, priorityLevel: e, startTime: s, expirationTime: (o = s + o), sortIndex: -1 }),
              s > a
                ? ((e.sortIndex = s), n(u, e), null === r(c) && e === r(u) && (g ? (y(x), (x = -1)) : (g = !0), L(S, s - a)))
                : ((e.sortIndex = o), n(c, e), m || p || ((m = !0), O(E))),
              e
            );
          }),
          (t.unstable_shouldYield = N),
          (t.unstable_wrapCallback = function (e) {
            var t = f;
            return function () {
              var n = f;
              f = t;
              try {
                return e.apply(this, arguments);
              } finally {
                f = n;
              }
            };
          });
      },
      853: (e, t, n) => {
        e.exports = n(234);
      },
    },
    t = {};
  function n(r) {
    var i = t[r];
    if (void 0 !== i) return i.exports;
    var s = (t[r] = { exports: {} });
    return e[r](s, s.exports, n), s.exports;
  }
  (n.m = e),
    (() => {
      var e,
        t = Object.getPrototypeOf ? (e) => Object.getPrototypeOf(e) : (e) => e.__proto__;
      n.t = function (r, i) {
        if ((1 & i && (r = this(r)), 8 & i)) return r;
        if ('object' === typeof r && r) {
          if (4 & i && r.__esModule) return r;
          if (16 & i && 'function' === typeof r.then) return r;
        }
        var s = Object.create(null);
        n.r(s);
        var a = {};
        e = e || [null, t({}), t([]), t(t)];
        for (var o = 2 & i && r; 'object' == typeof o && !~e.indexOf(o); o = t(o))
          Object.getOwnPropertyNames(o).forEach((e) => (a[e] = () => r[e]));
        return (a.default = () => r), n.d(s, a), s;
      };
    })(),
    (n.d = (e, t) => {
      for (var r in t) n.o(t, r) && !n.o(e, r) && Object.defineProperty(e, r, { enumerable: !0, get: t[r] });
    }),
    (n.f = {}),
    (n.e = (e) => Promise.all(Object.keys(n.f).reduce((t, r) => (n.f[r](e, t), t), []))),
    (n.u = (e) => 'static/js/' + e + '.bbc72baf.chunk.js'),
    (n.miniCssF = (e) => {}),
    (n.g = (function () {
      if ('object' === typeof globalThis) return globalThis;
      try {
        return this || new Function('return this')();
      } catch (e) {
        if ('object' === typeof window) return window;
      }
    })()),
    (n.o = (e, t) => Object.prototype.hasOwnProperty.call(e, t)),
    (() => {
      var e = {},
        t = 'adv-app-dev-assignment:';
      n.l = (r, i, s, a) => {
        if (e[r]) e[r].push(i);
        else {
          var o, l;
          if (void 0 !== s)
            for (var c = document.getElementsByTagName('script'), u = 0; u < c.length; u++) {
              var d = c[u];
              if (d.getAttribute('src') == r || d.getAttribute('data-webpack') == t + s) {
                o = d;
                break;
              }
            }
          o ||
            ((l = !0),
            ((o = document.createElement('script')).charset = 'utf-8'),
            (o.timeout = 120),
            n.nc && o.setAttribute('nonce', n.nc),
            o.setAttribute('data-webpack', t + s),
            (o.src = r)),
            (e[r] = [i]);
          var h = (t, n) => {
              (o.onerror = o.onload = null), clearTimeout(f);
              var i = e[r];
              if ((delete e[r], o.parentNode && o.parentNode.removeChild(o), i && i.forEach((e) => e(n)), t)) return t(n);
            },
            f = setTimeout(h.bind(null, void 0, { type: 'timeout', target: o }), 12e4);
          (o.onerror = h.bind(null, o.onerror)), (o.onload = h.bind(null, o.onload)), l && document.head.appendChild(o);
        }
      };
    })(),
    (n.r = (e) => {
      'undefined' !== typeof Symbol && Symbol.toStringTag && Object.defineProperty(e, Symbol.toStringTag, { value: 'Module' }),
        Object.defineProperty(e, '__esModule', { value: !0 });
    }),
    (n.p = '/'),
    (() => {
      var e = { 792: 0 };
      n.f.j = (t, r) => {
        var i = n.o(e, t) ? e[t] : void 0;
        if (0 !== i)
          if (i) r.push(i[2]);
          else {
            var s = new Promise((n, r) => (i = e[t] = [n, r]));
            r.push((i[2] = s));
            var a = n.p + n.u(t),
              o = new Error();
            n.l(
              a,
              (r) => {
                if (n.o(e, t) && (0 !== (i = e[t]) && (e[t] = void 0), i)) {
                  var s = r && ('load' === r.type ? 'missing' : r.type),
                    a = r && r.target && r.target.src;
                  (o.message = 'Loading chunk ' + t + ' failed.\n(' + s + ': ' + a + ')'),
                    (o.name = 'ChunkLoadError'),
                    (o.type = s),
                    (o.request = a),
                    i[1](o);
                }
              },
              'chunk-' + t,
              t,
            );
          }
      };
      var t = (t, r) => {
          var i,
            s,
            a = r[0],
            o = r[1],
            l = r[2],
            c = 0;
          if (a.some((t) => 0 !== e[t])) {
            for (i in o) n.o(o, i) && (n.m[i] = o[i]);
            if (l) l(n);
          }
          for (t && t(r); c < a.length; c++) (s = a[c]), n.o(e, s) && e[s] && e[s][0](), (e[s] = 0);
        },
        r = (self.webpackChunkadv_app_dev_assignment = self.webpackChunkadv_app_dev_assignment || []);
      r.forEach(t.bind(null, 0)), (r.push = t.bind(null, r.push.bind(r)));
    })(),
    (() => {
      var e,
        t = n(43),
        r = n.t(t, 2),
        i = n(391);
      function s() {
        return (
          (s = Object.assign
            ? Object.assign.bind()
            : function (e) {
                for (var t = 1; t < arguments.length; t++) {
                  var n = arguments[t];
                  for (var r in n) Object.prototype.hasOwnProperty.call(n, r) && (e[r] = n[r]);
                }
                return e;
              }),
          s.apply(this, arguments)
        );
      }
      !(function (e) {
        (e.Pop = 'POP'), (e.Push = 'PUSH'), (e.Replace = 'REPLACE');
      })(e || (e = {}));
      const a = 'popstate';
      function o(e, t) {
        if (!1 === e || null === e || 'undefined' === typeof e) throw new Error(t);
      }
      function l(e, t) {
        if (!e) {
          'undefined' !== typeof console && console.warn(t);
          try {
            throw new Error(t);
          } catch (Wy) {}
        }
      }
      function c(e, t) {
        return { usr: e.state, key: e.key, idx: t };
      }
      function u(e, t, n, r) {
        return (
          void 0 === n && (n = null),
          s({ pathname: 'string' === typeof e ? e : e.pathname, search: '', hash: '' }, 'string' === typeof t ? h(t) : t, {
            state: n,
            key: (t && t.key) || r || Math.random().toString(36).substr(2, 8),
          })
        );
      }
      function d(e) {
        let { pathname: t = '/', search: n = '', hash: r = '' } = e;
        return (
          n && '?' !== n && (t += '?' === n.charAt(0) ? n : '?' + n),
          r && '#' !== r && (t += '#' === r.charAt(0) ? r : '#' + r),
          t
        );
      }
      function h(e) {
        let t = {};
        if (e) {
          let n = e.indexOf('#');
          n >= 0 && ((t.hash = e.substr(n)), (e = e.substr(0, n)));
          let r = e.indexOf('?');
          r >= 0 && ((t.search = e.substr(r)), (e = e.substr(0, r))), e && (t.pathname = e);
        }
        return t;
      }
      function f(t, n, r, i) {
        void 0 === i && (i = {});
        let { window: l = document.defaultView, v5Compat: h = !1 } = i,
          f = l.history,
          p = e.Pop,
          m = null,
          g = v();
        function v() {
          return (f.state || { idx: null }).idx;
        }
        function y() {
          p = e.Pop;
          let t = v(),
            n = null == t ? null : t - g;
          (g = t), m && m({ action: p, location: b.location, delta: n });
        }
        function w(e) {
          let t = 'null' !== l.location.origin ? l.location.origin : l.location.href,
            n = 'string' === typeof e ? e : d(e);
          return (
            (n = n.replace(/ $/, '%20')),
            o(t, 'No window.location.(origin|href) available to create URL for href: ' + n),
            new URL(n, t)
          );
        }
        null == g && ((g = 0), f.replaceState(s({}, f.state, { idx: g }), ''));
        let b = {
          get action() {
            return p;
          },
          get location() {
            return t(l, f);
          },
          listen(e) {
            if (m) throw new Error('A history only accepts one active listener');
            return (
              l.addEventListener(a, y),
              (m = e),
              () => {
                l.removeEventListener(a, y), (m = null);
              }
            );
          },
          createHref: (e) => n(l, e),
          createURL: w,
          encodeLocation(e) {
            let t = w(e);
            return { pathname: t.pathname, search: t.search, hash: t.hash };
          },
          push: function (t, n) {
            p = e.Push;
            let i = u(b.location, t, n);
            r && r(i, t), (g = v() + 1);
            let s = c(i, g),
              a = b.createHref(i);
            try {
              f.pushState(s, '', a);
            } catch (o) {
              if (o instanceof DOMException && 'DataCloneError' === o.name) throw o;
              l.location.assign(a);
            }
            h && m && m({ action: p, location: b.location, delta: 1 });
          },
          replace: function (t, n) {
            p = e.Replace;
            let i = u(b.location, t, n);
            r && r(i, t), (g = v());
            let s = c(i, g),
              a = b.createHref(i);
            f.replaceState(s, '', a), h && m && m({ action: p, location: b.location, delta: 0 });
          },
          go: (e) => f.go(e),
        };
        return b;
      }
      var p;
      !(function (e) {
        (e.data = 'data'), (e.deferred = 'deferred'), (e.redirect = 'redirect'), (e.error = 'error');
      })(p || (p = {}));
      const m = new Set(['lazy', 'caseSensitive', 'path', 'id', 'index', 'children']);
      function g(e, t, n, r) {
        return (
          void 0 === n && (n = []),
          void 0 === r && (r = {}),
          e.map((e, i) => {
            let a = [...n, i],
              l = 'string' === typeof e.id ? e.id : a.join('-');
            if (
              (o(!0 !== e.index || !e.children, 'Cannot specify children on an index route'),
              o(
                !r[l],
                'Found a route id collision on id "' + l + '".  Route id\'s must be globally unique within Data Router usages',
              ),
              (function (e) {
                return !0 === e.index;
              })(e))
            ) {
              let n = s({}, e, t(e), { id: l });
              return (r[l] = n), n;
            }
            {
              let n = s({}, e, t(e), { id: l, children: void 0 });
              return (r[l] = n), e.children && (n.children = g(e.children, t, a, r)), n;
            }
          })
        );
      }
      function v(e, t, n) {
        void 0 === n && (n = '/');
        let r = D(('string' === typeof t ? h(t) : t).pathname || '/', n);
        if (null == r) return null;
        let i = y(e);
        !(function (e) {
          e.sort((e, t) =>
            e.score !== t.score
              ? t.score - e.score
              : (function (e, t) {
                  let n = e.length === t.length && e.slice(0, -1).every((e, n) => e === t[n]);
                  return n ? e[e.length - 1] - t[t.length - 1] : 0;
                })(
                  e.routesMeta.map((e) => e.childrenIndex),
                  t.routesMeta.map((e) => e.childrenIndex),
                ),
          );
        })(i);
        let s = null;
        for (let a = 0; null == s && a < i.length; ++a) {
          let e = P(r);
          s = C(i[a], e);
        }
        return s;
      }
      function y(e, t, n, r) {
        void 0 === t && (t = []), void 0 === n && (n = []), void 0 === r && (r = '');
        let i = (e, i, s) => {
          let a = {
            relativePath: void 0 === s ? e.path || '' : s,
            caseSensitive: !0 === e.caseSensitive,
            childrenIndex: i,
            route: e,
          };
          a.relativePath.startsWith('/') &&
            (o(
              a.relativePath.startsWith(r),
              'Absolute route path "' +
                a.relativePath +
                '" nested under path "' +
                r +
                '" is not valid. An absolute child route path must start with the combined path of all its parent routes.',
            ),
            (a.relativePath = a.relativePath.slice(r.length)));
          let l = M([r, a.relativePath]),
            c = n.concat(a);
          e.children &&
            e.children.length > 0 &&
            (o(
              !0 !== e.index,
              'Index routes must not have child routes. Please remove all child routes from route path "' + l + '".',
            ),
            y(e.children, t, c, l)),
            (null != e.path || e.index) && t.push({ path: l, score: k(l, e.index), routesMeta: c });
        };
        return (
          e.forEach((e, t) => {
            var n;
            if ('' !== e.path && null != (n = e.path) && n.includes('?')) for (let r of w(e.path)) i(e, t, r);
            else i(e, t);
          }),
          t
        );
      }
      function w(e) {
        let t = e.split('/');
        if (0 === t.length) return [];
        let [n, ...r] = t,
          i = n.endsWith('?'),
          s = n.replace(/\?$/, '');
        if (0 === r.length) return i ? [s, ''] : [s];
        let a = w(r.join('/')),
          o = [];
        return (
          o.push(...a.map((e) => ('' === e ? s : [s, e].join('/')))),
          i && o.push(...a),
          o.map((t) => (e.startsWith('/') && '' === t ? '/' : t))
        );
      }
      const b = /^:[\w-]+$/,
        S = 3,
        E = 2,
        T = 1,
        _ = 10,
        I = -2,
        x = (e) => '*' === e;
      function k(e, t) {
        let n = e.split('/'),
          r = n.length;
        return (
          n.some(x) && (r += I), t && (r += E), n.filter((e) => !x(e)).reduce((e, t) => e + (b.test(t) ? S : '' === t ? T : _), r)
        );
      }
      function C(e, t) {
        let { routesMeta: n } = e,
          r = {},
          i = '/',
          s = [];
        for (let a = 0; a < n.length; ++a) {
          let e = n[a],
            o = a === n.length - 1,
            l = '/' === i ? t : t.slice(i.length) || '/',
            c = N({ path: e.relativePath, caseSensitive: e.caseSensitive, end: o }, l);
          if (!c) return null;
          Object.assign(r, c.params);
          let u = e.route;
          s.push({ params: r, pathname: M([i, c.pathname]), pathnameBase: F(M([i, c.pathnameBase])), route: u }),
            '/' !== c.pathnameBase && (i = M([i, c.pathnameBase]));
        }
        return s;
      }
      function N(e, t) {
        'string' === typeof e && (e = { path: e, caseSensitive: !1, end: !0 });
        let [n, r] = (function (e, t, n) {
            void 0 === t && (t = !1);
            void 0 === n && (n = !0);
            l(
              '*' === e || !e.endsWith('*') || e.endsWith('/*'),
              'Route path "' +
                e +
                '" will be treated as if it were "' +
                e.replace(/\*$/, '/*') +
                '" because the `*` character must always follow a `/` in the pattern. To get rid of this warning, please change the route path to "' +
                e.replace(/\*$/, '/*') +
                '".',
            );
            let r = [],
              i =
                '^' +
                e
                  .replace(/\/*\*?$/, '')
                  .replace(/^\/*/, '/')
                  .replace(/[\\.*+^${}|()[\]]/g, '\\$&')
                  .replace(
                    /\/:([\w-]+)(\?)?/g,
                    (e, t, n) => (r.push({ paramName: t, isOptional: null != n }), n ? '/?([^\\/]+)?' : '/([^\\/]+)'),
                  );
            e.endsWith('*')
              ? (r.push({ paramName: '*' }), (i += '*' === e || '/*' === e ? '(.*)$' : '(?:\\/(.+)|\\/*)$'))
              : n
                ? (i += '\\/*$')
                : '' !== e && '/' !== e && (i += '(?:(?=\\/|$))');
            let s = new RegExp(i, t ? void 0 : 'i');
            return [s, r];
          })(e.path, e.caseSensitive, e.end),
          i = t.match(n);
        if (!i) return null;
        let s = i[0],
          a = s.replace(/(.)\/+$/, '$1'),
          o = i.slice(1);
        return {
          params: r.reduce((e, t, n) => {
            let { paramName: r, isOptional: i } = t;
            if ('*' === r) {
              let e = o[n] || '';
              a = s.slice(0, s.length - e.length).replace(/(.)\/+$/, '$1');
            }
            const l = o[n];
            return (e[r] = i && !l ? void 0 : (l || '').replace(/%2F/g, '/')), e;
          }, {}),
          pathname: s,
          pathnameBase: a,
          pattern: e,
        };
      }
      function P(e) {
        try {
          return e
            .split('/')
            .map((e) => decodeURIComponent(e).replace(/\//g, '%2F'))
            .join('/');
        } catch (t) {
          return (
            l(
              !1,
              'The URL path "' +
                e +
                '" could not be decoded because it is is a malformed URL segment. This is probably due to a bad percent encoding (' +
                t +
                ').',
            ),
            e
          );
        }
      }
      function D(e, t) {
        if ('/' === t) return e;
        if (!e.toLowerCase().startsWith(t.toLowerCase())) return null;
        let n = t.endsWith('/') ? t.length - 1 : t.length,
          r = e.charAt(n);
        return r && '/' !== r ? null : e.slice(n) || '/';
      }
      function A(e, t, n, r) {
        return (
          "Cannot include a '" +
          e +
          "' character in a manually specified `to." +
          t +
          '` field [' +
          JSON.stringify(r) +
          '].  Please separate it out to the `to.' +
          n +
          '` field. Alternatively you may provide the full path as a string in <Link to="..."> and the router will parse it for you.'
        );
      }
      function O(e) {
        return e.filter((e, t) => 0 === t || (e.route.path && e.route.path.length > 0));
      }
      function L(e, t) {
        let n = O(e);
        return t ? n.map((t, n) => (n === e.length - 1 ? t.pathname : t.pathnameBase)) : n.map((e) => e.pathnameBase);
      }
      function R(e, t, n, r) {
        let i;
        void 0 === r && (r = !1),
          'string' === typeof e
            ? (i = h(e))
            : ((i = s({}, e)),
              o(!i.pathname || !i.pathname.includes('?'), A('?', 'pathname', 'search', i)),
              o(!i.pathname || !i.pathname.includes('#'), A('#', 'pathname', 'hash', i)),
              o(!i.search || !i.search.includes('#'), A('#', 'search', 'hash', i)));
        let a,
          l = '' === e || '' === i.pathname,
          c = l ? '/' : i.pathname;
        if (null == c) a = n;
        else {
          let e = t.length - 1;
          if (!r && c.startsWith('..')) {
            let t = c.split('/');
            for (; '..' === t[0]; ) t.shift(), (e -= 1);
            i.pathname = t.join('/');
          }
          a = e >= 0 ? t[e] : '/';
        }
        let u = (function (e, t) {
            void 0 === t && (t = '/');
            let { pathname: n, search: r = '', hash: i = '' } = 'string' === typeof e ? h(e) : e,
              s = n
                ? n.startsWith('/')
                  ? n
                  : (function (e, t) {
                      let n = t.replace(/\/+$/, '').split('/');
                      return (
                        e.split('/').forEach((e) => {
                          '..' === e ? n.length > 1 && n.pop() : '.' !== e && n.push(e);
                        }),
                        n.length > 1 ? n.join('/') : '/'
                      );
                    })(n, t)
                : t;
            return { pathname: s, search: j(r), hash: U(i) };
          })(i, a),
          d = c && '/' !== c && c.endsWith('/'),
          f = (l || '.' === c) && n.endsWith('/');
        return u.pathname.endsWith('/') || (!d && !f) || (u.pathname += '/'), u;
      }
      const M = (e) => e.join('/').replace(/\/\/+/g, '/'),
        F = (e) => e.replace(/\/+$/, '').replace(/^\/*/, '/'),
        j = (e) => (e && '?' !== e ? (e.startsWith('?') ? e : '?' + e) : ''),
        U = (e) => (e && '#' !== e ? (e.startsWith('#') ? e : '#' + e) : '');
      Error;
      class V {
        constructor(e, t, n, r) {
          void 0 === r && (r = !1),
            (this.status = e),
            (this.statusText = t || ''),
            (this.internal = r),
            n instanceof Error ? ((this.data = n.toString()), (this.error = n)) : (this.data = n);
        }
      }
      function z(e) {
        return (
          null != e &&
          'number' === typeof e.status &&
          'string' === typeof e.statusText &&
          'boolean' === typeof e.internal &&
          'data' in e
        );
      }
      const B = ['post', 'put', 'patch', 'delete'],
        q = new Set(B),
        G = ['get', ...B],
        H = new Set(G),
        K = new Set([301, 302, 303, 307, 308]),
        W = new Set([307, 308]),
        Q = {
          state: 'idle',
          location: void 0,
          formMethod: void 0,
          formAction: void 0,
          formEncType: void 0,
          formData: void 0,
          json: void 0,
          text: void 0,
        },
        Y = {
          state: 'idle',
          data: void 0,
          formMethod: void 0,
          formAction: void 0,
          formEncType: void 0,
          formData: void 0,
          json: void 0,
          text: void 0,
        },
        J = { state: 'unblocked', proceed: void 0, reset: void 0, location: void 0 },
        X = /^(?:[a-z][a-z0-9+.-]*:|\/\/)/i,
        $ = (e) => ({ hasErrorBoundary: Boolean(e.hasErrorBoundary) }),
        Z = 'remix-router-transitions';
      function ee(t) {
        const n = t.window ? t.window : 'undefined' !== typeof window ? window : void 0,
          r = 'undefined' !== typeof n && 'undefined' !== typeof n.document && 'undefined' !== typeof n.document.createElement,
          i = !r;
        let a;
        if ((o(t.routes.length > 0, 'You must provide a non-empty routes array to createRouter'), t.mapRouteProperties))
          a = t.mapRouteProperties;
        else if (t.detectErrorBoundary) {
          let e = t.detectErrorBoundary;
          a = (t) => ({ hasErrorBoundary: e(t) });
        } else a = $;
        let c,
          d,
          h = {},
          f = g(t.routes, a, void 0, h),
          m = t.basename || '/',
          y = t.unstable_dataStrategy || le,
          w = s(
            {
              v7_fetcherPersist: !1,
              v7_normalizeFormMethod: !1,
              v7_partialHydration: !1,
              v7_prependBasename: !1,
              v7_relativeSplatPath: !1,
              unstable_skipActionErrorRevalidation: !1,
            },
            t.future,
          ),
          b = null,
          S = new Set(),
          E = null,
          T = null,
          _ = null,
          I = null != t.hydrationData,
          x = v(f, t.history.location, m),
          k = null;
        if (null == x) {
          let e = Ee(404, { pathname: t.history.location.pathname }),
            { matches: n, route: r } = Se(f);
          (x = n), (k = { [r.id]: e });
        }
        let C,
          N = x.some((e) => e.route.lazy),
          P = x.some((e) => e.route.loader);
        if (N) d = !1;
        else if (P)
          if (w.v7_partialHydration) {
            let e = t.hydrationData ? t.hydrationData.loaderData : null,
              n = t.hydrationData ? t.hydrationData.errors : null,
              r = (t) =>
                !t.route.loader ||
                (('function' !== typeof t.route.loader || !0 !== t.route.loader.hydrate) &&
                  ((e && void 0 !== e[t.route.id]) || (n && void 0 !== n[t.route.id])));
            if (n) {
              let e = x.findIndex((e) => void 0 !== n[e.route.id]);
              d = x.slice(0, e + 1).every(r);
            } else d = x.every(r);
          } else d = null != t.hydrationData;
        else d = !0;
        let A,
          O = {
            historyAction: t.history.action,
            location: t.history.location,
            matches: x,
            initialized: d,
            navigation: Q,
            restoreScrollPosition: null == t.hydrationData && null,
            preventScrollReset: !1,
            revalidation: 'idle',
            loaderData: (t.hydrationData && t.hydrationData.loaderData) || {},
            actionData: (t.hydrationData && t.hydrationData.actionData) || null,
            errors: (t.hydrationData && t.hydrationData.errors) || k,
            fetchers: new Map(),
            blockers: new Map(),
          },
          L = e.Pop,
          R = !1,
          M = !1,
          F = new Map(),
          j = null,
          U = !1,
          V = !1,
          z = [],
          B = [],
          q = new Map(),
          G = 0,
          H = -1,
          K = new Map(),
          ee = new Set(),
          re = new Map(),
          se = new Map(),
          ae = new Set(),
          oe = new Map(),
          pe = new Map(),
          me = !1;
        function ge(e, t) {
          void 0 === t && (t = {}), (O = s({}, O, e));
          let n = [],
            r = [];
          w.v7_fetcherPersist &&
            O.fetchers.forEach((e, t) => {
              'idle' === e.state && (ae.has(t) ? r.push(t) : n.push(t));
            }),
            [...S].forEach((e) =>
              e(O, {
                deletedFetchers: r,
                unstable_viewTransitionOpts: t.viewTransitionOpts,
                unstable_flushSync: !0 === t.flushSync,
              }),
            ),
            w.v7_fetcherPersist && (n.forEach((e) => O.fetchers.delete(e)), r.forEach((e) => He(e)));
        }
        function _e(n, r, i) {
          var a, o;
          let l,
            { flushSync: u } = void 0 === i ? {} : i,
            d =
              null != O.actionData &&
              null != O.navigation.formMethod &&
              De(O.navigation.formMethod) &&
              'loading' === O.navigation.state &&
              !0 !== (null == (a = n.state) ? void 0 : a._isRedirect);
          l = r.actionData ? (Object.keys(r.actionData).length > 0 ? r.actionData : null) : d ? O.actionData : null;
          let h = r.loaderData ? ye(O.loaderData, r.loaderData, r.matches || [], r.errors) : O.loaderData,
            p = O.blockers;
          p.size > 0 && ((p = new Map(p)), p.forEach((e, t) => p.set(t, J)));
          let m,
            g =
              !0 === R ||
              (null != O.navigation.formMethod &&
                De(O.navigation.formMethod) &&
                !0 !== (null == (o = n.state) ? void 0 : o._isRedirect));
          if (
            (c && ((f = c), (c = void 0)),
            U || L === e.Pop || (L === e.Push ? t.history.push(n, n.state) : L === e.Replace && t.history.replace(n, n.state)),
            L === e.Pop)
          ) {
            let e = F.get(O.location.pathname);
            e && e.has(n.pathname)
              ? (m = { currentLocation: O.location, nextLocation: n })
              : F.has(n.pathname) && (m = { currentLocation: n, nextLocation: O.location });
          } else if (M) {
            let e = F.get(O.location.pathname);
            e ? e.add(n.pathname) : ((e = new Set([n.pathname])), F.set(O.location.pathname, e)),
              (m = { currentLocation: O.location, nextLocation: n });
          }
          ge(
            s({}, r, {
              actionData: l,
              loaderData: h,
              historyAction: L,
              location: n,
              initialized: !0,
              navigation: Q,
              revalidation: 'idle',
              restoreScrollPosition: tt(n, r.matches || O.matches),
              preventScrollReset: g,
              blockers: p,
            }),
            { viewTransitionOpts: m, flushSync: !0 === u },
          ),
            (L = e.Pop),
            (R = !1),
            (M = !1),
            (U = !1),
            (V = !1),
            (z = []),
            (B = []);
        }
        async function Ne(n, r, i) {
          A && A.abort(),
            (A = null),
            (L = n),
            (U = !0 === (i && i.startUninterruptedRevalidation)),
            (function (e, t) {
              if (E && _) {
                let n = et(e, t);
                E[n] = _();
              }
            })(O.location, O.matches),
            (R = !0 === (i && i.preventScrollReset)),
            (M = !0 === (i && i.enableViewTransition));
          let a = c || f,
            o = i && i.overrideNavigation,
            l = v(a, r, m),
            u = !0 === (i && i.flushSync);
          if (!l) {
            let e = Ee(404, { pathname: r.pathname }),
              { matches: t, route: n } = Se(a);
            return Ze(), void _e(r, { matches: t, loaderData: {}, errors: { [n.id]: e } }, { flushSync: u });
          }
          if (
            O.initialized &&
            !V &&
            (function (e, t) {
              if (e.pathname !== t.pathname || e.search !== t.search) return !1;
              if ('' === e.hash) return '' !== t.hash;
              if (e.hash === t.hash) return !0;
              if ('' !== t.hash) return !0;
              return !1;
            })(O.location, r) &&
            !(i && i.submission && De(i.submission.formMethod))
          )
            return void _e(r, { matches: l }, { flushSync: u });
          A = new AbortController();
          let d,
            h = fe(t.history, r, A.signal, i && i.submission);
          if (i && i.pendingError) d = [be(l).route.id, { type: p.error, error: i.pendingError }];
          else if (i && i.submission && De(i.submission.formMethod)) {
            let n = await (async function (t, n, r, i, s) {
              void 0 === s && (s = {});
              ze();
              let a,
                o = (function (e, t) {
                  let n = {
                    state: 'submitting',
                    location: e,
                    formMethod: t.formMethod,
                    formAction: t.formAction,
                    formEncType: t.formEncType,
                    formData: t.formData,
                    json: t.json,
                    text: t.text,
                  };
                  return n;
                })(n, r);
              ge({ navigation: o }, { flushSync: !0 === s.flushSync });
              let l = Re(i, n);
              if (l.route.action || l.route.lazy) {
                if (((a = (await Le('action', t, [l], i))[0]), t.signal.aborted)) return { shortCircuited: !0 };
              } else a = { type: p.error, error: Ee(405, { method: t.method, pathname: n.pathname, routeId: l.route.id }) };
              if (Ce(a)) {
                let e;
                if (s && null != s.replace) e = s.replace;
                else {
                  e = he(a.response.headers.get('Location'), new URL(t.url), m) === O.location.pathname + O.location.search;
                }
                return await Pe(t, a, { submission: r, replace: e }), { shortCircuited: !0 };
              }
              if (xe(a)) throw Ee(400, { type: 'defer-action' });
              if (ke(a)) {
                let t = be(i, l.route.id);
                return !0 !== (s && s.replace) && (L = e.Push), { pendingActionResult: [t.route.id, a] };
              }
              return { pendingActionResult: [l.route.id, a] };
            })(h, r, i.submission, l, { replace: i.replace, flushSync: u });
            if (n.shortCircuited) return;
            (d = n.pendingActionResult), (o = Fe(r, i.submission)), (u = !1), (h = fe(t.history, h.url, h.signal));
          }
          let {
            shortCircuited: g,
            loaderData: y,
            errors: b,
          } = await (async function (e, n, r, i, a, o, l, u, d, h) {
            let p = i || Fe(n, a),
              g = a || o || Me(p),
              v = c || f,
              [y, b] = ie(
                t.history,
                O,
                r,
                g,
                n,
                w.v7_partialHydration && !0 === u,
                w.unstable_skipActionErrorRevalidation,
                V,
                z,
                B,
                ae,
                re,
                ee,
                v,
                m,
                h,
              );
            if (
              (Ze((e) => !(r && r.some((t) => t.route.id === e)) || (y && y.some((t) => t.route.id === e))),
              (H = ++G),
              0 === y.length && 0 === b.length)
            ) {
              let e = Qe();
              return (
                _e(
                  n,
                  s(
                    { matches: r, loaderData: {}, errors: h && ke(h[1]) ? { [h[0]]: h[1].error } : null },
                    we(h),
                    e ? { fetchers: new Map(O.fetchers) } : {},
                  ),
                  { flushSync: d },
                ),
                { shortCircuited: !0 }
              );
            }
            if (!U && (!w.v7_partialHydration || !u)) {
              let e;
              b.forEach((e) => {
                let t = O.fetchers.get(e.key),
                  n = je(void 0, t ? t.data : void 0);
                O.fetchers.set(e.key, n);
              }),
                h && !ke(h[1])
                  ? (e = { [h[0]]: h[1].data })
                  : O.actionData && (e = 0 === Object.keys(O.actionData).length ? null : O.actionData),
                ge(
                  s(
                    { navigation: p },
                    void 0 !== e ? { actionData: e } : {},
                    b.length > 0 ? { fetchers: new Map(O.fetchers) } : {},
                  ),
                  { flushSync: d },
                );
            }
            b.forEach((e) => {
              q.has(e.key) && Ke(e.key), e.controller && q.set(e.key, e.controller);
            });
            let S = () => b.forEach((e) => Ke(e.key));
            A && A.signal.addEventListener('abort', S);
            let { loaderResults: E, fetcherResults: T } = await Ve(O.matches, r, y, b, e);
            if (e.signal.aborted) return { shortCircuited: !0 };
            A && A.signal.removeEventListener('abort', S);
            b.forEach((e) => q.delete(e.key));
            let _ = Te([...E, ...T]);
            if (_) {
              if (_.idx >= y.length) {
                let e = b[_.idx - y.length].key;
                ee.add(e);
              }
              return await Pe(e, _.result, { replace: l }), { shortCircuited: !0 };
            }
            let { loaderData: I, errors: x } = ve(O, r, y, E, h, b, T, oe);
            oe.forEach((e, t) => {
              e.subscribe((n) => {
                (n || e.done) && oe.delete(t);
              });
            }),
              w.v7_partialHydration &&
                u &&
                O.errors &&
                Object.entries(O.errors)
                  .filter((e) => {
                    let [t] = e;
                    return !y.some((e) => e.route.id === t);
                  })
                  .forEach((e) => {
                    let [t, n] = e;
                    x = Object.assign(x || {}, { [t]: n });
                  });
            let k = Qe(),
              C = Ye(H),
              N = k || C || b.length > 0;
            return s({ loaderData: I, errors: x }, N ? { fetchers: new Map(O.fetchers) } : {});
          })(h, r, l, o, i && i.submission, i && i.fetcherSubmission, i && i.replace, i && !0 === i.initialHydration, u, d);
          g || ((A = null), _e(r, s({ matches: l }, we(d), { loaderData: y, errors: b })));
        }
        async function Pe(i, a, l) {
          let { submission: c, fetcherSubmission: d, replace: h } = void 0 === l ? {} : l;
          a.response.headers.has('X-Remix-Revalidate') && (V = !0);
          let f = a.response.headers.get('Location');
          o(f, 'Expected a Location header on the redirect Response'), (f = he(f, new URL(i.url), m));
          let p = u(O.location, f, { _isRedirect: !0 });
          if (r) {
            let e = !1;
            if (a.response.headers.has('X-Remix-Reload-Document')) e = !0;
            else if (X.test(f)) {
              const r = t.history.createURL(f);
              e = r.origin !== n.location.origin || null == D(r.pathname, m);
            }
            if (e) return void (h ? n.location.replace(f) : n.location.assign(f));
          }
          A = null;
          let g = !0 === h ? e.Replace : e.Push,
            { formMethod: v, formAction: y, formEncType: w } = O.navigation;
          !c && !d && v && y && w && (c = Me(O.navigation));
          let b = c || d;
          if (W.has(a.response.status) && b && De(b.formMethod))
            await Ne(g, p, { submission: s({}, b, { formAction: f }), preventScrollReset: R });
          else {
            let e = Fe(p, c);
            await Ne(g, p, { overrideNavigation: e, fetcherSubmission: d, preventScrollReset: R });
          }
        }
        async function Le(e, t, n, r) {
          try {
            let i = await ce(y, e, t, n, r, h, a);
            return await Promise.all(
              i.map((e, i) => {
                if (Ie(e)) {
                  let s = e.result;
                  return { type: p.redirect, response: de(s, t, n[i].route.id, r, m, w.v7_relativeSplatPath) };
                }
                return ue(e);
              }),
            );
          } catch (Wy) {
            return n.map(() => ({ type: p.error, error: Wy }));
          }
        }
        async function Ve(e, n, r, i, s) {
          let [a, ...o] = await Promise.all([
            r.length ? Le('loader', s, r, n) : [],
            ...i.map((e) => {
              if (e.matches && e.match && e.controller) {
                return Le('loader', fe(t.history, e.path, e.controller.signal), [e.match], e.matches).then((e) => e[0]);
              }
              return Promise.resolve({ type: p.error, error: Ee(404, { pathname: e.path }) });
            }),
          ]);
          return (
            await Promise.all([
              Ae(
                e,
                r,
                a,
                a.map(() => s.signal),
                !1,
                O.loaderData,
              ),
              Ae(
                e,
                i.map((e) => e.match),
                o,
                i.map((e) => (e.controller ? e.controller.signal : null)),
                !0,
              ),
            ]),
            { loaderResults: a, fetcherResults: o }
          );
        }
        function ze() {
          (V = !0),
            z.push(...Ze()),
            re.forEach((e, t) => {
              q.has(t) && (B.push(t), Ke(t));
            });
        }
        function Be(e, t, n) {
          void 0 === n && (n = {}),
            O.fetchers.set(e, t),
            ge({ fetchers: new Map(O.fetchers) }, { flushSync: !0 === (n && n.flushSync) });
        }
        function qe(e, t, n, r) {
          void 0 === r && (r = {});
          let i = be(O.matches, t);
          He(e), ge({ errors: { [i.route.id]: n }, fetchers: new Map(O.fetchers) }, { flushSync: !0 === (r && r.flushSync) });
        }
        function Ge(e) {
          return w.v7_fetcherPersist && (se.set(e, (se.get(e) || 0) + 1), ae.has(e) && ae.delete(e)), O.fetchers.get(e) || Y;
        }
        function He(e) {
          let t = O.fetchers.get(e);
          !q.has(e) || (t && 'loading' === t.state && K.has(e)) || Ke(e),
            re.delete(e),
            K.delete(e),
            ee.delete(e),
            ae.delete(e),
            O.fetchers.delete(e);
        }
        function Ke(e) {
          let t = q.get(e);
          o(t, 'Expected fetch controller: ' + e), t.abort(), q.delete(e);
        }
        function We(e) {
          for (let t of e) {
            let e = Ue(Ge(t).data);
            O.fetchers.set(t, e);
          }
        }
        function Qe() {
          let e = [],
            t = !1;
          for (let n of ee) {
            let r = O.fetchers.get(n);
            o(r, 'Expected fetcher: ' + n), 'loading' === r.state && (ee.delete(n), e.push(n), (t = !0));
          }
          return We(e), t;
        }
        function Ye(e) {
          let t = [];
          for (let [n, r] of K)
            if (r < e) {
              let e = O.fetchers.get(n);
              o(e, 'Expected fetcher: ' + n), 'loading' === e.state && (Ke(n), K.delete(n), t.push(n));
            }
          return We(t), t.length > 0;
        }
        function Je(e) {
          O.blockers.delete(e), pe.delete(e);
        }
        function Xe(e, t) {
          let n = O.blockers.get(e) || J;
          o(
            ('unblocked' === n.state && 'blocked' === t.state) ||
              ('blocked' === n.state && 'blocked' === t.state) ||
              ('blocked' === n.state && 'proceeding' === t.state) ||
              ('blocked' === n.state && 'unblocked' === t.state) ||
              ('proceeding' === n.state && 'unblocked' === t.state),
            'Invalid blocker state transition: ' + n.state + ' -> ' + t.state,
          );
          let r = new Map(O.blockers);
          r.set(e, t), ge({ blockers: r });
        }
        function $e(e) {
          let { currentLocation: t, nextLocation: n, historyAction: r } = e;
          if (0 === pe.size) return;
          pe.size > 1 && l(!1, 'A router only supports one blocker at a time');
          let i = Array.from(pe.entries()),
            [s, a] = i[i.length - 1],
            o = O.blockers.get(s);
          return o && 'proceeding' === o.state
            ? void 0
            : a({ currentLocation: t, nextLocation: n, historyAction: r })
              ? s
              : void 0;
        }
        function Ze(e) {
          let t = [];
          return (
            oe.forEach((n, r) => {
              (e && !e(r)) || (n.cancel(), t.push(r), oe.delete(r));
            }),
            t
          );
        }
        function et(e, t) {
          if (T) {
            return (
              T(
                e,
                t.map((e) =>
                  (function (e, t) {
                    let { route: n, pathname: r, params: i } = e;
                    return { id: n.id, pathname: r, params: i, data: t[n.id], handle: n.handle };
                  })(e, O.loaderData),
                ),
              ) || e.key
            );
          }
          return e.key;
        }
        function tt(e, t) {
          if (E) {
            let n = et(e, t),
              r = E[n];
            if ('number' === typeof r) return r;
          }
          return null;
        }
        return (
          (C = {
            get basename() {
              return m;
            },
            get future() {
              return w;
            },
            get state() {
              return O;
            },
            get routes() {
              return f;
            },
            get window() {
              return n;
            },
            initialize: function () {
              if (
                ((b = t.history.listen((e) => {
                  let { action: n, location: r, delta: i } = e;
                  if (me) return void (me = !1);
                  l(
                    0 === pe.size || null != i,
                    'You are trying to use a blocker on a POP navigation to a location that was not created by @remix-run/router. This will fail silently in production. This can happen if you are navigating outside the router via `window.history.pushState`/`window.location.hash` instead of using router navigation APIs.  This can also happen if you are using createHashRouter and the user manually changes the URL.',
                  );
                  let s = $e({ currentLocation: O.location, nextLocation: r, historyAction: n });
                  return s && null != i
                    ? ((me = !0),
                      t.history.go(-1 * i),
                      void Xe(s, {
                        state: 'blocked',
                        location: r,
                        proceed() {
                          Xe(s, { state: 'proceeding', proceed: void 0, reset: void 0, location: r }), t.history.go(i);
                        },
                        reset() {
                          let e = new Map(O.blockers);
                          e.set(s, J), ge({ blockers: e });
                        },
                      }))
                    : Ne(n, r);
                })),
                r)
              ) {
                !(function (e, t) {
                  try {
                    let n = e.sessionStorage.getItem(Z);
                    if (n) {
                      let e = JSON.parse(n);
                      for (let [n, r] of Object.entries(e || {})) r && Array.isArray(r) && t.set(n, new Set(r || []));
                    }
                  } catch (Wy) {}
                })(n, F);
                let e = () =>
                  (function (e, t) {
                    if (t.size > 0) {
                      let r = {};
                      for (let [e, n] of t) r[e] = [...n];
                      try {
                        e.sessionStorage.setItem(Z, JSON.stringify(r));
                      } catch (n) {
                        l(!1, 'Failed to save applied view transitions in sessionStorage (' + n + ').');
                      }
                    }
                  })(n, F);
                n.addEventListener('pagehide', e), (j = () => n.removeEventListener('pagehide', e));
              }
              return O.initialized || Ne(e.Pop, O.location, { initialHydration: !0 }), C;
            },
            subscribe: function (e) {
              return S.add(e), () => S.delete(e);
            },
            enableScrollRestoration: function (e, t, n) {
              if (((E = e), (_ = t), (T = n || null), !I && O.navigation === Q)) {
                I = !0;
                let e = tt(O.location, O.matches);
                null != e && ge({ restoreScrollPosition: e });
              }
              return () => {
                (E = null), (_ = null), (T = null);
              };
            },
            navigate: async function n(r, i) {
              if ('number' === typeof r) return void t.history.go(r);
              let a = te(
                  O.location,
                  O.matches,
                  m,
                  w.v7_prependBasename,
                  r,
                  w.v7_relativeSplatPath,
                  null == i ? void 0 : i.fromRouteId,
                  null == i ? void 0 : i.relative,
                ),
                { path: o, submission: l, error: c } = ne(w.v7_normalizeFormMethod, !1, a, i),
                d = O.location,
                h = u(O.location, o, i && i.state);
              h = s({}, h, t.history.encodeLocation(h));
              let f = i && null != i.replace ? i.replace : void 0,
                p = e.Push;
              !0 === f
                ? (p = e.Replace)
                : !1 === f ||
                  (null != l && De(l.formMethod) && l.formAction === O.location.pathname + O.location.search && (p = e.Replace));
              let g = i && 'preventScrollReset' in i ? !0 === i.preventScrollReset : void 0,
                v = !0 === (i && i.unstable_flushSync),
                y = $e({ currentLocation: d, nextLocation: h, historyAction: p });
              if (!y)
                return await Ne(p, h, {
                  submission: l,
                  pendingError: c,
                  preventScrollReset: g,
                  replace: i && i.replace,
                  enableViewTransition: i && i.unstable_viewTransition,
                  flushSync: v,
                });
              Xe(y, {
                state: 'blocked',
                location: h,
                proceed() {
                  Xe(y, { state: 'proceeding', proceed: void 0, reset: void 0, location: h }), n(r, i);
                },
                reset() {
                  let e = new Map(O.blockers);
                  e.set(y, J), ge({ blockers: e });
                },
              });
            },
            fetch: function (e, n, r, s) {
              if (i)
                throw new Error(
                  "router.fetch() was called during the server render, but it shouldn't be. You are likely calling a useFetcher() method in the body of your component. Try moving it to a useEffect or a callback.",
                );
              q.has(e) && Ke(e);
              let a = !0 === (s && s.unstable_flushSync),
                l = c || f,
                u = te(
                  O.location,
                  O.matches,
                  m,
                  w.v7_prependBasename,
                  r,
                  w.v7_relativeSplatPath,
                  n,
                  null == s ? void 0 : s.relative,
                ),
                d = v(l, u, m);
              if (!d) return void qe(e, n, Ee(404, { pathname: u }), { flushSync: a });
              let { path: h, submission: p, error: g } = ne(w.v7_normalizeFormMethod, !0, u, s);
              if (g) return void qe(e, n, g, { flushSync: a });
              let y = Re(d, h);
              (R = !0 === (s && s.preventScrollReset)),
                p && De(p.formMethod)
                  ? (async function (e, n, r, i, s, a, l) {
                      if ((ze(), re.delete(e), !i.route.action && !i.route.lazy)) {
                        let t = Ee(405, { method: l.formMethod, pathname: r, routeId: n });
                        return void qe(e, n, t, { flushSync: a });
                      }
                      let u = O.fetchers.get(e);
                      Be(
                        e,
                        (function (e, t) {
                          let n = {
                            state: 'submitting',
                            formMethod: e.formMethod,
                            formAction: e.formAction,
                            formEncType: e.formEncType,
                            formData: e.formData,
                            json: e.json,
                            text: e.text,
                            data: t ? t.data : void 0,
                          };
                          return n;
                        })(l, u),
                        { flushSync: a },
                      );
                      let d = new AbortController(),
                        h = fe(t.history, r, d.signal, l);
                      q.set(e, d);
                      let p = G,
                        g = await Le('action', h, [i], s),
                        y = g[0];
                      if (h.signal.aborted) return void (q.get(e) === d && q.delete(e));
                      if (w.v7_fetcherPersist && ae.has(e)) {
                        if (Ce(y) || ke(y)) return void Be(e, Ue(void 0));
                      } else {
                        if (Ce(y))
                          return (
                            q.delete(e),
                            H > p ? void Be(e, Ue(void 0)) : (ee.add(e), Be(e, je(l)), Pe(h, y, { fetcherSubmission: l }))
                          );
                        if (ke(y)) return void qe(e, n, y.error);
                      }
                      if (xe(y)) throw Ee(400, { type: 'defer-action' });
                      let b = O.navigation.location || O.location,
                        S = fe(t.history, b, d.signal),
                        E = c || f,
                        T = 'idle' !== O.navigation.state ? v(E, O.navigation.location, m) : O.matches;
                      o(T, "Didn't find any matches after fetcher action");
                      let _ = ++G;
                      K.set(e, _);
                      let I = je(l, y.data);
                      O.fetchers.set(e, I);
                      let [x, k] = ie(
                        t.history,
                        O,
                        T,
                        l,
                        b,
                        !1,
                        w.unstable_skipActionErrorRevalidation,
                        V,
                        z,
                        B,
                        ae,
                        re,
                        ee,
                        E,
                        m,
                        [i.route.id, y],
                      );
                      k
                        .filter((t) => t.key !== e)
                        .forEach((e) => {
                          let t = e.key,
                            n = O.fetchers.get(t),
                            r = je(void 0, n ? n.data : void 0);
                          O.fetchers.set(t, r), q.has(t) && Ke(t), e.controller && q.set(t, e.controller);
                        }),
                        ge({ fetchers: new Map(O.fetchers) });
                      let C = () => k.forEach((e) => Ke(e.key));
                      d.signal.addEventListener('abort', C);
                      let { loaderResults: N, fetcherResults: P } = await Ve(O.matches, T, x, k, S);
                      if (d.signal.aborted) return;
                      d.signal.removeEventListener('abort', C), K.delete(e), q.delete(e), k.forEach((e) => q.delete(e.key));
                      let D = Te([...N, ...P]);
                      if (D) {
                        if (D.idx >= x.length) {
                          let e = k[D.idx - x.length].key;
                          ee.add(e);
                        }
                        return Pe(S, D.result);
                      }
                      let { loaderData: R, errors: M } = ve(O, O.matches, x, N, void 0, k, P, oe);
                      if (O.fetchers.has(e)) {
                        let t = Ue(y.data);
                        O.fetchers.set(e, t);
                      }
                      Ye(_),
                        'loading' === O.navigation.state && _ > H
                          ? (o(L, 'Expected pending action'),
                            A && A.abort(),
                            _e(O.navigation.location, { matches: T, loaderData: R, errors: M, fetchers: new Map(O.fetchers) }))
                          : (ge({ errors: M, loaderData: ye(O.loaderData, R, T, M), fetchers: new Map(O.fetchers) }), (V = !1));
                    })(e, n, h, y, d, a, p)
                  : (re.set(e, { routeId: n, path: h }),
                    (async function (e, n, r, i, s, a, l) {
                      let c = O.fetchers.get(e);
                      Be(e, je(l, c ? c.data : void 0), { flushSync: a });
                      let u = new AbortController(),
                        d = fe(t.history, r, u.signal);
                      q.set(e, u);
                      let h = G,
                        f = await Le('loader', d, [i], s),
                        p = f[0];
                      xe(p) && (p = (await Oe(p, d.signal, !0)) || p);
                      q.get(e) === u && q.delete(e);
                      if (d.signal.aborted) return;
                      if (ae.has(e)) return void Be(e, Ue(void 0));
                      if (Ce(p)) return H > h ? void Be(e, Ue(void 0)) : (ee.add(e), void (await Pe(d, p)));
                      if (ke(p)) return void qe(e, n, p.error);
                      o(!xe(p), 'Unhandled fetcher deferred data'), Be(e, Ue(p.data));
                    })(e, n, h, y, d, a, p));
            },
            revalidate: function () {
              ze(),
                ge({ revalidation: 'loading' }),
                'submitting' !== O.navigation.state &&
                  ('idle' !== O.navigation.state
                    ? Ne(L || O.historyAction, O.navigation.location, { overrideNavigation: O.navigation })
                    : Ne(O.historyAction, O.location, { startUninterruptedRevalidation: !0 }));
            },
            createHref: (e) => t.history.createHref(e),
            encodeLocation: (e) => t.history.encodeLocation(e),
            getFetcher: Ge,
            deleteFetcher: function (e) {
              if (w.v7_fetcherPersist) {
                let t = (se.get(e) || 0) - 1;
                t <= 0 ? (se.delete(e), ae.add(e)) : se.set(e, t);
              } else He(e);
              ge({ fetchers: new Map(O.fetchers) });
            },
            dispose: function () {
              b && b(),
                j && j(),
                S.clear(),
                A && A.abort(),
                O.fetchers.forEach((e, t) => He(t)),
                O.blockers.forEach((e, t) => Je(t));
            },
            getBlocker: function (e, t) {
              let n = O.blockers.get(e) || J;
              return pe.get(e) !== t && pe.set(e, t), n;
            },
            deleteBlocker: Je,
            _internalFetchControllers: q,
            _internalActiveDeferreds: oe,
            _internalSetRoutes: function (e) {
              (h = {}), (c = g(e, a, void 0, h));
            },
          }),
          C
        );
      }
      Symbol('deferred');
      function te(e, t, n, r, i, s, a, o) {
        let l, c;
        if (a) {
          l = [];
          for (let e of t)
            if ((l.push(e), e.route.id === a)) {
              c = e;
              break;
            }
        } else (l = t), (c = t[t.length - 1]);
        let u = R(i || '.', L(l, s), D(e.pathname, n) || e.pathname, 'path' === o);
        return (
          null == i && ((u.search = e.search), (u.hash = e.hash)),
          (null != i && '' !== i && '.' !== i) ||
            !c ||
            !c.route.index ||
            Le(u.search) ||
            (u.search = u.search ? u.search.replace(/^\?/, '?index&') : '?index'),
          r && '/' !== n && (u.pathname = '/' === u.pathname ? n : M([n, u.pathname])),
          d(u)
        );
      }
      function ne(e, t, n, r) {
        if (
          !r ||
          !(function (e) {
            return null != e && (('formData' in e && null != e.formData) || ('body' in e && void 0 !== e.body));
          })(r)
        )
          return { path: n };
        if (r.formMethod && !Pe(r.formMethod)) return { path: n, error: Ee(405, { method: r.formMethod }) };
        let i,
          s,
          a = () => ({ path: n, error: Ee(400, { type: 'invalid-body' }) }),
          l = r.formMethod || 'get',
          c = e ? l.toUpperCase() : l.toLowerCase(),
          u = _e(n);
        if (void 0 !== r.body) {
          if ('text/plain' === r.formEncType) {
            if (!De(c)) return a();
            let e =
              'string' === typeof r.body
                ? r.body
                : r.body instanceof FormData || r.body instanceof URLSearchParams
                  ? Array.from(r.body.entries()).reduce((e, t) => {
                      let [n, r] = t;
                      return '' + e + n + '=' + r + '\n';
                    }, '')
                  : String(r.body);
            return {
              path: n,
              submission: { formMethod: c, formAction: u, formEncType: r.formEncType, formData: void 0, json: void 0, text: e },
            };
          }
          if ('application/json' === r.formEncType) {
            if (!De(c)) return a();
            try {
              let e = 'string' === typeof r.body ? JSON.parse(r.body) : r.body;
              return {
                path: n,
                submission: { formMethod: c, formAction: u, formEncType: r.formEncType, formData: void 0, json: e, text: void 0 },
              };
            } catch (Wy) {
              return a();
            }
          }
        }
        if ((o('function' === typeof FormData, 'FormData is not available in this environment'), r.formData))
          (i = pe(r.formData)), (s = r.formData);
        else if (r.body instanceof FormData) (i = pe(r.body)), (s = r.body);
        else if (r.body instanceof URLSearchParams) (i = r.body), (s = me(i));
        else if (null == r.body) (i = new URLSearchParams()), (s = new FormData());
        else
          try {
            (i = new URLSearchParams(r.body)), (s = me(i));
          } catch (Wy) {
            return a();
          }
        let f = {
          formMethod: c,
          formAction: u,
          formEncType: (r && r.formEncType) || 'application/x-www-form-urlencoded',
          formData: s,
          json: void 0,
          text: void 0,
        };
        if (De(f.formMethod)) return { path: n, submission: f };
        let p = h(n);
        return t && p.search && Le(p.search) && i.append('index', ''), (p.search = '?' + i), { path: d(p), submission: f };
      }
      function re(e, t) {
        let n = e;
        if (t) {
          let r = e.findIndex((e) => e.route.id === t);
          r >= 0 && (n = e.slice(0, r));
        }
        return n;
      }
      function ie(e, t, n, r, i, a, o, l, c, u, d, h, f, p, m, g) {
        let y = g ? (ke(g[1]) ? g[1].error : g[1].data) : void 0,
          w = e.createURL(t.location),
          b = e.createURL(i),
          S = g && ke(g[1]) ? g[0] : void 0,
          E = S ? re(n, S) : n,
          T = g ? g[1].statusCode : void 0,
          _ = o && T && T >= 400,
          I = E.filter((e, n) => {
            let { route: i } = e;
            if (i.lazy) return !0;
            if (null == i.loader) return !1;
            if (a)
              return (
                !('function' === typeof i.loader && !i.loader.hydrate) ||
                (void 0 === t.loaderData[i.id] && (!t.errors || void 0 === t.errors[i.id]))
              );
            if (
              (function (e, t, n) {
                let r = !t || n.route.id !== t.route.id,
                  i = void 0 === e[n.route.id];
                return r || i;
              })(t.loaderData, t.matches[n], e) ||
              c.some((t) => t === e.route.id)
            )
              return !0;
            let o = t.matches[n],
              u = e;
            return ae(
              e,
              s({ currentUrl: w, currentParams: o.params, nextUrl: b, nextParams: u.params }, r, {
                actionResult: y,
                unstable_actionStatus: T,
                defaultShouldRevalidate:
                  !_ && (l || w.pathname + w.search === b.pathname + b.search || w.search !== b.search || se(o, u)),
              }),
            );
          }),
          x = [];
        return (
          h.forEach((e, i) => {
            if (a || !n.some((t) => t.route.id === e.routeId) || d.has(i)) return;
            let o = v(p, e.path, m);
            if (!o)
              return void x.push({ key: i, routeId: e.routeId, path: e.path, matches: null, match: null, controller: null });
            let c = t.fetchers.get(i),
              h = Re(o, e.path),
              g = !1;
            (g =
              !f.has(i) &&
              (!!u.includes(i) ||
                (c && 'idle' !== c.state && void 0 === c.data
                  ? l
                  : ae(
                      h,
                      s(
                        {
                          currentUrl: w,
                          currentParams: t.matches[t.matches.length - 1].params,
                          nextUrl: b,
                          nextParams: n[n.length - 1].params,
                        },
                        r,
                        { actionResult: y, unstable_actionStatus: T, defaultShouldRevalidate: !_ && l },
                      ),
                    )))),
              g && x.push({ key: i, routeId: e.routeId, path: e.path, matches: o, match: h, controller: new AbortController() });
          }),
          [I, x]
        );
      }
      function se(e, t) {
        let n = e.route.path;
        return e.pathname !== t.pathname || (null != n && n.endsWith('*') && e.params['*'] !== t.params['*']);
      }
      function ae(e, t) {
        if (e.route.shouldRevalidate) {
          let n = e.route.shouldRevalidate(t);
          if ('boolean' === typeof n) return n;
        }
        return t.defaultShouldRevalidate;
      }
      async function oe(e, t, n) {
        if (!e.lazy) return;
        let r = await e.lazy();
        if (!e.lazy) return;
        let i = n[e.id];
        o(i, 'No route found in manifest');
        let a = {};
        for (let s in r) {
          let e = void 0 !== i[s] && 'hasErrorBoundary' !== s;
          l(
            !e,
            'Route "' +
              i.id +
              '" has a static property "' +
              s +
              '" defined but its lazy function is also returning a value for this property. The lazy route property "' +
              s +
              '" will be ignored.',
          ),
            e || m.has(s) || (a[s] = r[s]);
        }
        Object.assign(i, a), Object.assign(i, s({}, t(i), { lazy: void 0 }));
      }
      function le(e) {
        return Promise.all(e.matches.map((e) => e.resolve()));
      }
      async function ce(e, t, n, r, i, a, l, c) {
        let u = r.reduce((e, t) => e.add(t.route.id), new Set()),
          d = new Set(),
          h = await e({
            matches: i.map((e) => {
              let r = u.has(e.route.id);
              return s({}, e, {
                shouldLoad: r,
                resolve: (i) => (
                  d.add(e.route.id),
                  r
                    ? (async function (e, t, n, r, i, s, a) {
                        let l,
                          c,
                          u = (r) => {
                            let i,
                              o = new Promise((e, t) => (i = t));
                            (c = () => i()), t.signal.addEventListener('abort', c);
                            let l,
                              u = (i) =>
                                'function' !== typeof r
                                  ? Promise.reject(
                                      new Error(
                                        'You cannot call the handler for a route which defines a boolean "' +
                                          e +
                                          '" [routeId: ' +
                                          n.route.id +
                                          ']',
                                      ),
                                    )
                                  : r({ request: t, params: n.params, context: a }, ...(void 0 !== i ? [i] : []));
                            return (
                              (l = s
                                ? s((e) => u(e))
                                : (async () => {
                                    try {
                                      return { type: 'data', result: await u() };
                                    } catch (Wy) {
                                      return { type: 'error', result: Wy };
                                    }
                                  })()),
                              Promise.race([l, o])
                            );
                          };
                        try {
                          let s = n.route[e];
                          if (n.route.lazy)
                            if (s) {
                              let e,
                                [t] = await Promise.all([
                                  u(s).catch((t) => {
                                    e = t;
                                  }),
                                  oe(n.route, i, r),
                                ]);
                              if (void 0 !== e) throw e;
                              l = t;
                            } else {
                              if ((await oe(n.route, i, r), (s = n.route[e]), !s)) {
                                if ('action' === e) {
                                  let e = new URL(t.url),
                                    r = e.pathname + e.search;
                                  throw Ee(405, { method: t.method, pathname: r, routeId: n.route.id });
                                }
                                return { type: p.data, result: void 0 };
                              }
                              l = await u(s);
                            }
                          else {
                            if (!s) {
                              let e = new URL(t.url);
                              throw Ee(404, { pathname: e.pathname + e.search });
                            }
                            l = await u(s);
                          }
                          o(
                            void 0 !== l.result,
                            'You defined ' +
                              ('action' === e ? 'an action' : 'a loader') +
                              ' for route "' +
                              n.route.id +
                              '" but didn\'t return anything from your `' +
                              e +
                              '` function. Please return a value or `null`.',
                          );
                        } catch (Wy) {
                          return { type: p.error, result: Wy };
                        } finally {
                          c && t.signal.removeEventListener('abort', c);
                        }
                        return l;
                      })(t, n, e, a, l, i, c)
                    : Promise.resolve({ type: p.data, result: void 0 })
                ),
              });
            }),
            request: n,
            params: i[0].params,
            context: c,
          });
        return (
          i.forEach((e) =>
            o(
              d.has(e.route.id),
              '`match.resolve()` was not called for route id "' +
                e.route.id +
                '". You must call `match.resolve()` on every match passed to `dataStrategy` to ensure all routes are properly loaded.',
            ),
          ),
          h.filter((e, t) => u.has(i[t].route.id))
        );
      }
      async function ue(e) {
        let { result: t, type: n, status: r } = e;
        if (Ne(t)) {
          let e;
          try {
            let n = t.headers.get('Content-Type');
            e = n && /\bapplication\/json\b/.test(n) ? (null == t.body ? null : await t.json()) : await t.text();
          } catch (Wy) {
            return { type: p.error, error: Wy };
          }
          return n === p.error
            ? { type: p.error, error: new V(t.status, t.statusText, e), statusCode: t.status, headers: t.headers }
            : { type: p.data, data: e, statusCode: t.status, headers: t.headers };
        }
        return n === p.error
          ? { type: p.error, error: t, statusCode: z(t) ? t.status : r }
          : (function (e) {
                let t = e;
                return (
                  t &&
                  'object' === typeof t &&
                  'object' === typeof t.data &&
                  'function' === typeof t.subscribe &&
                  'function' === typeof t.cancel &&
                  'function' === typeof t.resolveData
                );
              })(t)
            ? {
                type: p.deferred,
                deferredData: t,
                statusCode: null == (i = t.init) ? void 0 : i.status,
                headers: (null == (s = t.init) ? void 0 : s.headers) && new Headers(t.init.headers),
              }
            : { type: p.data, data: t, statusCode: r };
        var i, s;
      }
      function de(e, t, n, r, i, s) {
        let a = e.headers.get('Location');
        if ((o(a, 'Redirects returned/thrown from loaders/actions must have a Location header'), !X.test(a))) {
          let o = r.slice(0, r.findIndex((e) => e.route.id === n) + 1);
          (a = te(new URL(t.url), o, i, !0, a, s)), e.headers.set('Location', a);
        }
        return e;
      }
      function he(e, t, n) {
        if (X.test(e)) {
          let r = e,
            i = r.startsWith('//') ? new URL(t.protocol + r) : new URL(r),
            s = null != D(i.pathname, n);
          if (i.origin === t.origin && s) return i.pathname + i.search + i.hash;
        }
        return e;
      }
      function fe(e, t, n, r) {
        let i = e.createURL(_e(t)).toString(),
          s = { signal: n };
        if (r && De(r.formMethod)) {
          let { formMethod: e, formEncType: t } = r;
          (s.method = e.toUpperCase()),
            'application/json' === t
              ? ((s.headers = new Headers({ 'Content-Type': t })), (s.body = JSON.stringify(r.json)))
              : 'text/plain' === t
                ? (s.body = r.text)
                : 'application/x-www-form-urlencoded' === t && r.formData
                  ? (s.body = pe(r.formData))
                  : (s.body = r.formData);
        }
        return new Request(i, s);
      }
      function pe(e) {
        let t = new URLSearchParams();
        for (let [n, r] of e.entries()) t.append(n, 'string' === typeof r ? r : r.name);
        return t;
      }
      function me(e) {
        let t = new FormData();
        for (let [n, r] of e.entries()) t.append(n, r);
        return t;
      }
      function ge(e, t, n, r, i, s) {
        let a,
          l = {},
          c = null,
          u = !1,
          d = {},
          h = r && ke(r[1]) ? r[1].error : void 0;
        return (
          n.forEach((n, r) => {
            let f = t[r].route.id;
            if ((o(!Ce(n), 'Cannot handle redirect results in processLoaderData'), ke(n))) {
              let t = n.error;
              if ((void 0 !== h && ((t = h), (h = void 0)), (c = c || {}), s)) c[f] = t;
              else {
                let n = be(e, f);
                null == c[n.route.id] && (c[n.route.id] = t);
              }
              (l[f] = void 0), u || ((u = !0), (a = z(n.error) ? n.error.status : 500)), n.headers && (d[f] = n.headers);
            } else
              xe(n)
                ? (i.set(f, n.deferredData),
                  (l[f] = n.deferredData.data),
                  null == n.statusCode || 200 === n.statusCode || u || (a = n.statusCode),
                  n.headers && (d[f] = n.headers))
                : ((l[f] = n.data),
                  n.statusCode && 200 !== n.statusCode && !u && (a = n.statusCode),
                  n.headers && (d[f] = n.headers));
          }),
          void 0 !== h && r && ((c = { [r[0]]: h }), (l[r[0]] = void 0)),
          { loaderData: l, errors: c, statusCode: a || 200, loaderHeaders: d }
        );
      }
      function ve(e, t, n, r, i, a, l, c) {
        let { loaderData: u, errors: d } = ge(t, n, r, i, c, !1);
        for (let h = 0; h < a.length; h++) {
          let { key: t, match: n, controller: r } = a[h];
          o(void 0 !== l && void 0 !== l[h], 'Did not find corresponding fetcher result');
          let i = l[h];
          if (!r || !r.signal.aborted)
            if (ke(i)) {
              let r = be(e.matches, null == n ? void 0 : n.route.id);
              (d && d[r.route.id]) || (d = s({}, d, { [r.route.id]: i.error })), e.fetchers.delete(t);
            } else if (Ce(i)) o(!1, 'Unhandled fetcher revalidation redirect');
            else if (xe(i)) o(!1, 'Unhandled fetcher deferred data');
            else {
              let n = Ue(i.data);
              e.fetchers.set(t, n);
            }
        }
        return { loaderData: u, errors: d };
      }
      function ye(e, t, n, r) {
        let i = s({}, t);
        for (let s of n) {
          let n = s.route.id;
          if (
            (t.hasOwnProperty(n) ? void 0 !== t[n] && (i[n] = t[n]) : void 0 !== e[n] && s.route.loader && (i[n] = e[n]),
            r && r.hasOwnProperty(n))
          )
            break;
        }
        return i;
      }
      function we(e) {
        return e ? (ke(e[1]) ? { actionData: {} } : { actionData: { [e[0]]: e[1].data } }) : {};
      }
      function be(e, t) {
        return (
          (t ? e.slice(0, e.findIndex((e) => e.route.id === t) + 1) : [...e])
            .reverse()
            .find((e) => !0 === e.route.hasErrorBoundary) || e[0]
        );
      }
      function Se(e) {
        let t = 1 === e.length ? e[0] : e.find((e) => e.index || !e.path || '/' === e.path) || { id: '__shim-error-route__' };
        return { matches: [{ params: {}, pathname: '', pathnameBase: '', route: t }], route: t };
      }
      function Ee(e, t) {
        let { pathname: n, routeId: r, method: i, type: s } = void 0 === t ? {} : t,
          a = 'Unknown Server Error',
          o = 'Unknown @remix-run/router error';
        return (
          400 === e
            ? ((a = 'Bad Request'),
              i && n && r
                ? (o =
                    'You made a ' +
                    i +
                    ' request to "' +
                    n +
                    '" but did not provide a `loader` for route "' +
                    r +
                    '", so there is no way to handle the request.')
                : 'defer-action' === s
                  ? (o = 'defer() is not supported in actions')
                  : 'invalid-body' === s && (o = 'Unable to encode submission body'))
            : 403 === e
              ? ((a = 'Forbidden'), (o = 'Route "' + r + '" does not match URL "' + n + '"'))
              : 404 === e
                ? ((a = 'Not Found'), (o = 'No route matches URL "' + n + '"'))
                : 405 === e &&
                  ((a = 'Method Not Allowed'),
                  i && n && r
                    ? (o =
                        'You made a ' +
                        i.toUpperCase() +
                        ' request to "' +
                        n +
                        '" but did not provide an `action` for route "' +
                        r +
                        '", so there is no way to handle the request.')
                    : i && (o = 'Invalid request method "' + i.toUpperCase() + '"')),
          new V(e || 500, a, new Error(o), !0)
        );
      }
      function Te(e) {
        for (let t = e.length - 1; t >= 0; t--) {
          let n = e[t];
          if (Ce(n)) return { result: n, idx: t };
        }
      }
      function _e(e) {
        return d(s({}, 'string' === typeof e ? h(e) : e, { hash: '' }));
      }
      function Ie(e) {
        return Ne(e.result) && K.has(e.result.status);
      }
      function xe(e) {
        return e.type === p.deferred;
      }
      function ke(e) {
        return e.type === p.error;
      }
      function Ce(e) {
        return (e && e.type) === p.redirect;
      }
      function Ne(e) {
        return (
          null != e &&
          'number' === typeof e.status &&
          'string' === typeof e.statusText &&
          'object' === typeof e.headers &&
          'undefined' !== typeof e.body
        );
      }
      function Pe(e) {
        return H.has(e.toLowerCase());
      }
      function De(e) {
        return q.has(e.toLowerCase());
      }
      async function Ae(e, t, n, r, i, s) {
        for (let a = 0; a < n.length; a++) {
          let l = n[a],
            c = t[a];
          if (!c) continue;
          let u = e.find((e) => e.route.id === c.route.id),
            d = null != u && !se(u, c) && void 0 !== (s && s[c.route.id]);
          if (xe(l) && (i || d)) {
            let e = r[a];
            o(e, 'Expected an AbortSignal for revalidating fetcher deferred result'),
              await Oe(l, e, i).then((e) => {
                e && (n[a] = e || n[a]);
              });
          }
        }
      }
      async function Oe(e, t, n) {
        if ((void 0 === n && (n = !1), !(await e.deferredData.resolveData(t)))) {
          if (n)
            try {
              return { type: p.data, data: e.deferredData.unwrappedData };
            } catch (Wy) {
              return { type: p.error, error: Wy };
            }
          return { type: p.data, data: e.deferredData.data };
        }
      }
      function Le(e) {
        return new URLSearchParams(e).getAll('index').some((e) => '' === e);
      }
      function Re(e, t) {
        let n = 'string' === typeof t ? h(t).search : t.search;
        if (e[e.length - 1].route.index && Le(n || '')) return e[e.length - 1];
        let r = O(e);
        return r[r.length - 1];
      }
      function Me(e) {
        let { formMethod: t, formAction: n, formEncType: r, text: i, formData: s, json: a } = e;
        if (t && n && r)
          return null != i
            ? { formMethod: t, formAction: n, formEncType: r, formData: void 0, json: void 0, text: i }
            : null != s
              ? { formMethod: t, formAction: n, formEncType: r, formData: s, json: void 0, text: void 0 }
              : void 0 !== a
                ? { formMethod: t, formAction: n, formEncType: r, formData: void 0, json: a, text: void 0 }
                : void 0;
      }
      function Fe(e, t) {
        if (t) {
          return {
            state: 'loading',
            location: e,
            formMethod: t.formMethod,
            formAction: t.formAction,
            formEncType: t.formEncType,
            formData: t.formData,
            json: t.json,
            text: t.text,
          };
        }
        return {
          state: 'loading',
          location: e,
          formMethod: void 0,
          formAction: void 0,
          formEncType: void 0,
          formData: void 0,
          json: void 0,
          text: void 0,
        };
      }
      function je(e, t) {
        if (e) {
          return {
            state: 'loading',
            formMethod: e.formMethod,
            formAction: e.formAction,
            formEncType: e.formEncType,
            formData: e.formData,
            json: e.json,
            text: e.text,
            data: t,
          };
        }
        return {
          state: 'loading',
          formMethod: void 0,
          formAction: void 0,
          formEncType: void 0,
          formData: void 0,
          json: void 0,
          text: void 0,
          data: t,
        };
      }
      function Ue(e) {
        return {
          state: 'idle',
          formMethod: void 0,
          formAction: void 0,
          formEncType: void 0,
          formData: void 0,
          json: void 0,
          text: void 0,
          data: e,
        };
      }
      function Ve() {
        return (
          (Ve = Object.assign
            ? Object.assign.bind()
            : function (e) {
                for (var t = 1; t < arguments.length; t++) {
                  var n = arguments[t];
                  for (var r in n) Object.prototype.hasOwnProperty.call(n, r) && (e[r] = n[r]);
                }
                return e;
              }),
          Ve.apply(this, arguments)
        );
      }
      const ze = t.createContext(null);
      const Be = t.createContext(null);
      const qe = t.createContext(null);
      const Ge = t.createContext(null);
      const He = t.createContext({ outlet: null, matches: [], isDataRoute: !1 });
      const Ke = t.createContext(null);
      function We() {
        return null != t.useContext(Ge);
      }
      function Qe() {
        return We() || o(!1), t.useContext(Ge).location;
      }
      function Ye(e) {
        t.useContext(qe).static || t.useLayoutEffect(e);
      }
      function Je() {
        let { isDataRoute: e } = t.useContext(He);
        return e
          ? (function () {
              let { router: e } = lt(at.UseNavigateStable),
                n = ut(ot.UseNavigateStable),
                r = t.useRef(!1);
              Ye(() => {
                r.current = !0;
              });
              let i = t.useCallback(
                function (t, i) {
                  void 0 === i && (i = {}),
                    r.current && ('number' === typeof t ? e.navigate(t) : e.navigate(t, Ve({ fromRouteId: n }, i)));
                },
                [e, n],
              );
              return i;
            })()
          : (function () {
              We() || o(!1);
              let e = t.useContext(ze),
                { basename: n, future: r, navigator: i } = t.useContext(qe),
                { matches: s } = t.useContext(He),
                { pathname: a } = Qe(),
                l = JSON.stringify(L(s, r.v7_relativeSplatPath)),
                c = t.useRef(!1);
              return (
                Ye(() => {
                  c.current = !0;
                }),
                t.useCallback(
                  function (t, r) {
                    if ((void 0 === r && (r = {}), !c.current)) return;
                    if ('number' === typeof t) return void i.go(t);
                    let s = R(t, JSON.parse(l), a, 'path' === r.relative);
                    null == e && '/' !== n && (s.pathname = '/' === s.pathname ? n : M([n, s.pathname])),
                      (r.replace ? i.replace : i.push)(s, r.state, r);
                  },
                  [n, i, l, a, e],
                )
              );
            })();
      }
      const Xe = t.createContext(null);
      function $e() {
        let { matches: e } = t.useContext(He),
          n = e[e.length - 1];
        return n ? n.params : {};
      }
      function Ze(e, n) {
        let { relative: r } = void 0 === n ? {} : n,
          { future: i } = t.useContext(qe),
          { matches: s } = t.useContext(He),
          { pathname: a } = Qe(),
          o = JSON.stringify(L(s, i.v7_relativeSplatPath));
        return t.useMemo(() => R(e, JSON.parse(o), a, 'path' === r), [e, o, a, r]);
      }
      function et(n, r, i, s) {
        We() || o(!1);
        let { navigator: a } = t.useContext(qe),
          { matches: l } = t.useContext(He),
          c = l[l.length - 1],
          u = c ? c.params : {},
          d = (c && c.pathname, c ? c.pathnameBase : '/');
        c && c.route;
        let f,
          p = Qe();
        if (r) {
          var m;
          let e = 'string' === typeof r ? h(r) : r;
          '/' === d || (null == (m = e.pathname) ? void 0 : m.startsWith(d)) || o(!1), (f = e);
        } else f = p;
        let g = f.pathname || '/',
          y = g;
        if ('/' !== d) {
          let e = d.replace(/^\//, '').split('/');
          y = '/' + g.replace(/^\//, '').split('/').slice(e.length).join('/');
        }
        let w = v(n, { pathname: y });
        let b = st(
          w &&
            w.map((e) =>
              Object.assign({}, e, {
                params: Object.assign({}, u, e.params),
                pathname: M([d, a.encodeLocation ? a.encodeLocation(e.pathname).pathname : e.pathname]),
                pathnameBase:
                  '/' === e.pathnameBase
                    ? d
                    : M([d, a.encodeLocation ? a.encodeLocation(e.pathnameBase).pathname : e.pathnameBase]),
              }),
            ),
          l,
          i,
          s,
        );
        return r && b
          ? t.createElement(
              Ge.Provider,
              {
                value: {
                  location: Ve({ pathname: '/', search: '', hash: '', state: null, key: 'default' }, f),
                  navigationType: e.Pop,
                },
              },
              b,
            )
          : b;
      }
      function tt() {
        let e = (function () {
            var e;
            let n = t.useContext(Ke),
              r = ct(ot.UseRouteError),
              i = ut(ot.UseRouteError);
            if (void 0 !== n) return n;
            return null == (e = r.errors) ? void 0 : e[i];
          })(),
          n = z(e) ? e.status + ' ' + e.statusText : e instanceof Error ? e.message : JSON.stringify(e),
          r = e instanceof Error ? e.stack : null,
          i = 'rgba(200,200,200, 0.5)',
          s = { padding: '0.5rem', backgroundColor: i };
        return t.createElement(
          t.Fragment,
          null,
          t.createElement('h2', null, 'Unexpected Application Error!'),
          t.createElement('h3', { style: { fontStyle: 'italic' } }, n),
          r ? t.createElement('pre', { style: s }, r) : null,
          null,
        );
      }
      const nt = t.createElement(tt, null);
      class rt extends t.Component {
        constructor(e) {
          super(e), (this.state = { location: e.location, revalidation: e.revalidation, error: e.error });
        }
        static getDerivedStateFromError(e) {
          return { error: e };
        }
        static getDerivedStateFromProps(e, t) {
          return t.location !== e.location || ('idle' !== t.revalidation && 'idle' === e.revalidation)
            ? { error: e.error, location: e.location, revalidation: e.revalidation }
            : {
                error: void 0 !== e.error ? e.error : t.error,
                location: t.location,
                revalidation: e.revalidation || t.revalidation,
              };
        }
        componentDidCatch(e, t) {
          console.error('React Router caught the following error during render', e, t);
        }
        render() {
          return void 0 !== this.state.error
            ? t.createElement(
                He.Provider,
                { value: this.props.routeContext },
                t.createElement(Ke.Provider, { value: this.state.error, children: this.props.component }),
              )
            : this.props.children;
        }
      }
      function it(e) {
        let { routeContext: n, match: r, children: i } = e,
          s = t.useContext(ze);
        return (
          s &&
            s.static &&
            s.staticContext &&
            (r.route.errorElement || r.route.ErrorBoundary) &&
            (s.staticContext._deepestRenderedBoundaryId = r.route.id),
          t.createElement(He.Provider, { value: n }, i)
        );
      }
      function st(e, n, r, i) {
        var s;
        if ((void 0 === n && (n = []), void 0 === r && (r = null), void 0 === i && (i = null), null == e)) {
          var a;
          if (null == (a = r) || !a.errors) return null;
          e = r.matches;
        }
        let l = e,
          c = null == (s = r) ? void 0 : s.errors;
        if (null != c) {
          let e = l.findIndex((e) => e.route.id && void 0 !== (null == c ? void 0 : c[e.route.id]));
          e >= 0 || o(!1), (l = l.slice(0, Math.min(l.length, e + 1)));
        }
        let u = !1,
          d = -1;
        if (r && i && i.v7_partialHydration)
          for (let t = 0; t < l.length; t++) {
            let e = l[t];
            if (((e.route.HydrateFallback || e.route.hydrateFallbackElement) && (d = t), e.route.id)) {
              let { loaderData: t, errors: n } = r,
                i = e.route.loader && void 0 === t[e.route.id] && (!n || void 0 === n[e.route.id]);
              if (e.route.lazy || i) {
                (u = !0), (l = d >= 0 ? l.slice(0, d + 1) : [l[0]]);
                break;
              }
            }
          }
        return l.reduceRight((e, i, s) => {
          let a,
            o = !1,
            h = null,
            f = null;
          var p;
          r &&
            ((a = c && i.route.id ? c[i.route.id] : void 0),
            (h = i.route.errorElement || nt),
            u &&
              (d < 0 && 0 === s
                ? ((p = 'route-fallback'), !1 || dt[p] || (dt[p] = !0), (o = !0), (f = null))
                : d === s && ((o = !0), (f = i.route.hydrateFallbackElement || null))));
          let m = n.concat(l.slice(0, s + 1)),
            g = () => {
              let n;
              return (
                (n = a
                  ? h
                  : o
                    ? f
                    : i.route.Component
                      ? t.createElement(i.route.Component, null)
                      : i.route.element
                        ? i.route.element
                        : e),
                t.createElement(it, { match: i, routeContext: { outlet: e, matches: m, isDataRoute: null != r }, children: n })
              );
            };
          return r && (i.route.ErrorBoundary || i.route.errorElement || 0 === s)
            ? t.createElement(rt, {
                location: r.location,
                revalidation: r.revalidation,
                component: h,
                error: a,
                children: g(),
                routeContext: { outlet: null, matches: m, isDataRoute: !0 },
              })
            : g();
        }, null);
      }
      var at = (function (e) {
          return (e.UseBlocker = 'useBlocker'), (e.UseRevalidator = 'useRevalidator'), (e.UseNavigateStable = 'useNavigate'), e;
        })(at || {}),
        ot = (function (e) {
          return (
            (e.UseBlocker = 'useBlocker'),
            (e.UseLoaderData = 'useLoaderData'),
            (e.UseActionData = 'useActionData'),
            (e.UseRouteError = 'useRouteError'),
            (e.UseNavigation = 'useNavigation'),
            (e.UseRouteLoaderData = 'useRouteLoaderData'),
            (e.UseMatches = 'useMatches'),
            (e.UseRevalidator = 'useRevalidator'),
            (e.UseNavigateStable = 'useNavigate'),
            (e.UseRouteId = 'useRouteId'),
            e
          );
        })(ot || {});
      function lt(e) {
        let n = t.useContext(ze);
        return n || o(!1), n;
      }
      function ct(e) {
        let n = t.useContext(Be);
        return n || o(!1), n;
      }
      function ut(e) {
        let n = (function (e) {
            let n = t.useContext(He);
            return n || o(!1), n;
          })(),
          r = n.matches[n.matches.length - 1];
        return r.route.id || o(!1), r.route.id;
      }
      const dt = {};
      r.startTransition;
      function ht(e) {
        let { to: n, replace: r, state: i, relative: s } = e;
        We() || o(!1);
        let { future: a, static: l } = t.useContext(qe),
          { matches: c } = t.useContext(He),
          { pathname: u } = Qe(),
          d = Je(),
          h = R(n, L(c, a.v7_relativeSplatPath), u, 'path' === s),
          f = JSON.stringify(h);
        return t.useEffect(() => d(JSON.parse(f), { replace: r, state: i, relative: s }), [d, f, s, r, i]), null;
      }
      function ft(e) {
        return (function (e) {
          let n = t.useContext(He).outlet;
          return n ? t.createElement(Xe.Provider, { value: e }, n) : n;
        })(e.context);
      }
      function pt(n) {
        let {
          basename: r = '/',
          children: i = null,
          location: s,
          navigationType: a = e.Pop,
          navigator: l,
          static: c = !1,
          future: u,
        } = n;
        We() && o(!1);
        let d = r.replace(/^\/*/, '/'),
          f = t.useMemo(
            () => ({ basename: d, navigator: l, static: c, future: Ve({ v7_relativeSplatPath: !1 }, u) }),
            [d, u, l, c],
          );
        'string' === typeof s && (s = h(s));
        let { pathname: p = '/', search: m = '', hash: g = '', state: v = null, key: y = 'default' } = s,
          w = t.useMemo(() => {
            let e = D(p, d);
            return null == e ? null : { location: { pathname: e, search: m, hash: g, state: v, key: y }, navigationType: a };
          }, [d, p, m, g, v, y, a]);
        return null == w
          ? null
          : t.createElement(qe.Provider, { value: f }, t.createElement(Ge.Provider, { children: i, value: w }));
      }
      new Promise(() => {});
      t.Component;
      function mt(e) {
        let n = { hasErrorBoundary: null != e.ErrorBoundary || null != e.errorElement };
        return (
          e.Component && Object.assign(n, { element: t.createElement(e.Component), Component: void 0 }),
          e.HydrateFallback &&
            Object.assign(n, { hydrateFallbackElement: t.createElement(e.HydrateFallback), HydrateFallback: void 0 }),
          e.ErrorBoundary && Object.assign(n, { errorElement: t.createElement(e.ErrorBoundary), ErrorBoundary: void 0 }),
          n
        );
      }
      var gt = n(950),
        vt = n.t(gt, 2);
      function yt() {
        return (
          (yt = Object.assign
            ? Object.assign.bind()
            : function (e) {
                for (var t = 1; t < arguments.length; t++) {
                  var n = arguments[t];
                  for (var r in n) Object.prototype.hasOwnProperty.call(n, r) && (e[r] = n[r]);
                }
                return e;
              }),
          yt.apply(this, arguments)
        );
      }
      function wt(e, t) {
        if (null == e) return {};
        var n,
          r,
          i = {},
          s = Object.keys(e);
        for (r = 0; r < s.length; r++) (n = s[r]), t.indexOf(n) >= 0 || (i[n] = e[n]);
        return i;
      }
      new Set(['application/x-www-form-urlencoded', 'multipart/form-data', 'text/plain']);
      const bt = [
          'onClick',
          'relative',
          'reloadDocument',
          'replace',
          'state',
          'target',
          'to',
          'preventScrollReset',
          'unstable_viewTransition',
        ],
        St = ['aria-current', 'caseSensitive', 'className', 'end', 'style', 'to', 'unstable_viewTransition', 'children'];
      try {
        window.__reactRouterVersion = '6';
      } catch (Wy) {}
      function Et() {
        var e;
        let t = null == (e = window) ? void 0 : e.__staticRouterHydrationData;
        return t && t.errors && (t = yt({}, t, { errors: Tt(t.errors) })), t;
      }
      function Tt(e) {
        if (!e) return null;
        let t = Object.entries(e),
          n = {};
        for (let [r, i] of t)
          if (i && 'RouteErrorResponse' === i.__type) n[r] = new V(i.status, i.statusText, i.data, !0 === i.internal);
          else if (i && 'Error' === i.__type) {
            if (i.__subType) {
              let e = window[i.__subType];
              if ('function' === typeof e)
                try {
                  let t = new e(i.message);
                  (t.stack = ''), (n[r] = t);
                } catch (Wy) {}
            }
            if (null == n[r]) {
              let e = new Error(i.message);
              (e.stack = ''), (n[r] = e);
            }
          } else n[r] = i;
        return n;
      }
      const _t = t.createContext({ isTransitioning: !1 });
      const It = t.createContext(new Map());
      const xt = r.startTransition,
        kt = vt.flushSync;
      r.useId;
      function Ct(e) {
        kt ? kt(e) : e();
      }
      class Nt {
        constructor() {
          (this.status = 'pending'),
            (this.promise = new Promise((e, t) => {
              (this.resolve = (t) => {
                'pending' === this.status && ((this.status = 'resolved'), e(t));
              }),
                (this.reject = (e) => {
                  'pending' === this.status && ((this.status = 'rejected'), t(e));
                });
            }));
        }
      }
      function Pt(e) {
        let { fallbackElement: n, router: r, future: i } = e,
          [s, a] = t.useState(r.state),
          [o, l] = t.useState(),
          [c, u] = t.useState({ isTransitioning: !1 }),
          [d, h] = t.useState(),
          [f, p] = t.useState(),
          [m, g] = t.useState(),
          v = t.useRef(new Map()),
          { v7_startTransition: y } = i || {},
          w = t.useCallback(
            (e) => {
              y
                ? (function (e) {
                    xt ? xt(e) : e();
                  })(e)
                : e();
            },
            [y],
          ),
          b = t.useCallback(
            (e, t) => {
              let { deletedFetchers: n, unstable_flushSync: i, unstable_viewTransitionOpts: s } = t;
              n.forEach((e) => v.current.delete(e)),
                e.fetchers.forEach((e, t) => {
                  void 0 !== e.data && v.current.set(t, e.data);
                });
              let o =
                null == r.window || null == r.window.document || 'function' !== typeof r.window.document.startViewTransition;
              if (s && !o) {
                if (i) {
                  Ct(() => {
                    f && (d && d.resolve(), f.skipTransition()),
                      u({ isTransitioning: !0, flushSync: !0, currentLocation: s.currentLocation, nextLocation: s.nextLocation });
                  });
                  let t = r.window.document.startViewTransition(() => {
                    Ct(() => a(e));
                  });
                  return (
                    t.finished.finally(() => {
                      Ct(() => {
                        h(void 0), p(void 0), l(void 0), u({ isTransitioning: !1 });
                      });
                    }),
                    void Ct(() => p(t))
                  );
                }
                f
                  ? (d && d.resolve(),
                    f.skipTransition(),
                    g({ state: e, currentLocation: s.currentLocation, nextLocation: s.nextLocation }))
                  : (l(e),
                    u({ isTransitioning: !0, flushSync: !1, currentLocation: s.currentLocation, nextLocation: s.nextLocation }));
              } else i ? Ct(() => a(e)) : w(() => a(e));
            },
            [r.window, f, d, v, w],
          );
        t.useLayoutEffect(() => r.subscribe(b), [r, b]),
          t.useEffect(() => {
            c.isTransitioning && !c.flushSync && h(new Nt());
          }, [c]),
          t.useEffect(() => {
            if (d && o && r.window) {
              let e = o,
                t = d.promise,
                n = r.window.document.startViewTransition(async () => {
                  w(() => a(e)), await t;
                });
              n.finished.finally(() => {
                h(void 0), p(void 0), l(void 0), u({ isTransitioning: !1 });
              }),
                p(n);
            }
          }, [w, o, d, r.window]),
          t.useEffect(() => {
            d && o && s.location.key === o.location.key && d.resolve();
          }, [d, f, s.location, o]),
          t.useEffect(() => {
            !c.isTransitioning &&
              m &&
              (l(m.state),
              u({ isTransitioning: !0, flushSync: !1, currentLocation: m.currentLocation, nextLocation: m.nextLocation }),
              g(void 0));
          }, [c.isTransitioning, m]),
          t.useEffect(() => {}, []);
        let S = t.useMemo(
            () => ({
              createHref: r.createHref,
              encodeLocation: r.encodeLocation,
              go: (e) => r.navigate(e),
              push: (e, t, n) => r.navigate(e, { state: t, preventScrollReset: null == n ? void 0 : n.preventScrollReset }),
              replace: (e, t, n) =>
                r.navigate(e, { replace: !0, state: t, preventScrollReset: null == n ? void 0 : n.preventScrollReset }),
            }),
            [r],
          ),
          E = r.basename || '/',
          T = t.useMemo(() => ({ router: r, navigator: S, static: !1, basename: E }), [r, S, E]);
        return t.createElement(
          t.Fragment,
          null,
          t.createElement(
            ze.Provider,
            { value: T },
            t.createElement(
              Be.Provider,
              { value: s },
              t.createElement(
                It.Provider,
                { value: v.current },
                t.createElement(
                  _t.Provider,
                  { value: c },
                  t.createElement(
                    pt,
                    {
                      basename: E,
                      location: s.location,
                      navigationType: s.historyAction,
                      navigator: S,
                      future: { v7_relativeSplatPath: r.future.v7_relativeSplatPath },
                    },
                    s.initialized || r.future.v7_partialHydration
                      ? t.createElement(Dt, { routes: r.routes, future: r.future, state: s })
                      : n,
                  ),
                ),
              ),
            ),
          ),
          null,
        );
      }
      function Dt(e) {
        let { routes: t, future: n, state: r } = e;
        return et(t, void 0, r, n);
      }
      const At =
          'undefined' !== typeof window &&
          'undefined' !== typeof window.document &&
          'undefined' !== typeof window.document.createElement,
        Ot = /^(?:[a-z][a-z0-9+.-]*:|\/\/)/i,
        Lt = t.forwardRef(function (e, n) {
          let r,
            {
              onClick: i,
              relative: s,
              reloadDocument: a,
              replace: l,
              state: c,
              target: u,
              to: h,
              preventScrollReset: f,
              unstable_viewTransition: p,
            } = e,
            m = wt(e, bt),
            { basename: g } = t.useContext(qe),
            v = !1;
          if ('string' === typeof h && Ot.test(h) && ((r = h), At))
            try {
              let e = new URL(window.location.href),
                t = h.startsWith('//') ? new URL(e.protocol + h) : new URL(h),
                n = D(t.pathname, g);
              t.origin === e.origin && null != n ? (h = n + t.search + t.hash) : (v = !0);
            } catch (Wy) {}
          let y = (function (e, n) {
              let { relative: r } = void 0 === n ? {} : n;
              We() || o(!1);
              let { basename: i, navigator: s } = t.useContext(qe),
                { hash: a, pathname: l, search: c } = Ze(e, { relative: r }),
                u = l;
              return '/' !== i && (u = '/' === l ? i : M([i, l])), s.createHref({ pathname: u, search: c, hash: a });
            })(h, { relative: s }),
            w = (function (e, n) {
              let {
                  target: r,
                  replace: i,
                  state: s,
                  preventScrollReset: a,
                  relative: o,
                  unstable_viewTransition: l,
                } = void 0 === n ? {} : n,
                c = Je(),
                u = Qe(),
                h = Ze(e, { relative: o });
              return t.useCallback(
                (t) => {
                  if (
                    (function (e, t) {
                      return (
                        0 === e.button &&
                        (!t || '_self' === t) &&
                        !(function (e) {
                          return !!(e.metaKey || e.altKey || e.ctrlKey || e.shiftKey);
                        })(e)
                      );
                    })(t, r)
                  ) {
                    t.preventDefault();
                    let n = void 0 !== i ? i : d(u) === d(h);
                    c(e, { replace: n, state: s, preventScrollReset: a, relative: o, unstable_viewTransition: l });
                  }
                },
                [u, c, h, i, s, r, e, a, o, l],
              );
            })(h, { replace: l, state: c, target: u, preventScrollReset: f, relative: s, unstable_viewTransition: p });
          return t.createElement(
            'a',
            yt({}, m, {
              href: r || y,
              onClick:
                v || a
                  ? i
                  : function (e) {
                      i && i(e), e.defaultPrevented || w(e);
                    },
              ref: n,
              target: u,
            }),
          );
        });
      const Rt = t.forwardRef(function (e, n) {
        let {
            'aria-current': r = 'page',
            caseSensitive: i = !1,
            className: s = '',
            end: a = !1,
            style: l,
            to: c,
            unstable_viewTransition: u,
            children: d,
          } = e,
          h = wt(e, St),
          f = Ze(c, { relative: h.relative }),
          p = Qe(),
          m = t.useContext(Be),
          { navigator: g, basename: v } = t.useContext(qe),
          y =
            null != m &&
            (function (e, n) {
              void 0 === n && (n = {});
              let r = t.useContext(_t);
              null == r && o(!1);
              let { basename: i } = jt(Mt.useViewTransitionState),
                s = Ze(e, { relative: n.relative });
              if (!r.isTransitioning) return !1;
              let a = D(r.currentLocation.pathname, i) || r.currentLocation.pathname,
                l = D(r.nextLocation.pathname, i) || r.nextLocation.pathname;
              return null != N(s.pathname, l) || null != N(s.pathname, a);
            })(f) &&
            !0 === u,
          w = g.encodeLocation ? g.encodeLocation(f).pathname : f.pathname,
          b = p.pathname,
          S = m && m.navigation && m.navigation.location ? m.navigation.location.pathname : null;
        i || ((b = b.toLowerCase()), (S = S ? S.toLowerCase() : null), (w = w.toLowerCase())), S && v && (S = D(S, v) || S);
        const E = '/' !== w && w.endsWith('/') ? w.length - 1 : w.length;
        let T,
          _ = b === w || (!a && b.startsWith(w) && '/' === b.charAt(E)),
          I = null != S && (S === w || (!a && S.startsWith(w) && '/' === S.charAt(w.length))),
          x = { isActive: _, isPending: I, isTransitioning: y },
          k = _ ? r : void 0;
        T =
          'function' === typeof s
            ? s(x)
            : [s, _ ? 'active' : null, I ? 'pending' : null, y ? 'transitioning' : null].filter(Boolean).join(' ');
        let C = 'function' === typeof l ? l(x) : l;
        return t.createElement(
          Lt,
          yt({}, h, { 'aria-current': k, className: T, ref: n, style: C, to: c, unstable_viewTransition: u }),
          'function' === typeof d ? d(x) : d,
        );
      });
      var Mt, Ft;
      function jt(e) {
        let n = t.useContext(ze);
        return n || o(!1), n;
      }
      (function (e) {
        (e.UseScrollRestoration = 'useScrollRestoration'),
          (e.UseSubmit = 'useSubmit'),
          (e.UseSubmitFetcher = 'useSubmitFetcher'),
          (e.UseFetcher = 'useFetcher'),
          (e.useViewTransitionState = 'useViewTransitionState');
      })(Mt || (Mt = {})),
        (function (e) {
          (e.UseFetcher = 'useFetcher'), (e.UseFetchers = 'useFetchers'), (e.UseScrollRestoration = 'useScrollRestoration');
        })(Ft || (Ft = {}));
      var Ut = { color: void 0, size: void 0, className: void 0, style: void 0, attr: void 0 },
        Vt = t.createContext && t.createContext(Ut),
        zt = ['attr', 'size', 'title'];
      function Bt(e, t) {
        if (null == e) return {};
        var n,
          r,
          i = (function (e, t) {
            if (null == e) return {};
            var n = {};
            for (var r in e)
              if (Object.prototype.hasOwnProperty.call(e, r)) {
                if (t.indexOf(r) >= 0) continue;
                n[r] = e[r];
              }
            return n;
          })(e, t);
        if (Object.getOwnPropertySymbols) {
          var s = Object.getOwnPropertySymbols(e);
          for (r = 0; r < s.length; r++)
            (n = s[r]), t.indexOf(n) >= 0 || (Object.prototype.propertyIsEnumerable.call(e, n) && (i[n] = e[n]));
        }
        return i;
      }
      function qt() {
        return (
          (qt = Object.assign
            ? Object.assign.bind()
            : function (e) {
                for (var t = 1; t < arguments.length; t++) {
                  var n = arguments[t];
                  for (var r in n) Object.prototype.hasOwnProperty.call(n, r) && (e[r] = n[r]);
                }
                return e;
              }),
          qt.apply(this, arguments)
        );
      }
      function Gt(e, t) {
        var n = Object.keys(e);
        if (Object.getOwnPropertySymbols) {
          var r = Object.getOwnPropertySymbols(e);
          t &&
            (r = r.filter(function (t) {
              return Object.getOwnPropertyDescriptor(e, t).enumerable;
            })),
            n.push.apply(n, r);
        }
        return n;
      }
      function Ht(e) {
        for (var t = 1; t < arguments.length; t++) {
          var n = null != arguments[t] ? arguments[t] : {};
          t % 2
            ? Gt(Object(n), !0).forEach(function (t) {
                Kt(e, t, n[t]);
              })
            : Object.getOwnPropertyDescriptors
              ? Object.defineProperties(e, Object.getOwnPropertyDescriptors(n))
              : Gt(Object(n)).forEach(function (t) {
                  Object.defineProperty(e, t, Object.getOwnPropertyDescriptor(n, t));
                });
        }
        return e;
      }
      function Kt(e, t, n) {
        return (
          (t = (function (e) {
            var t = (function (e, t) {
              if ('object' != typeof e || !e) return e;
              var n = e[Symbol.toPrimitive];
              if (void 0 !== n) {
                var r = n.call(e, t || 'default');
                if ('object' != typeof r) return r;
                throw new TypeError('@@toPrimitive must return a primitive value.');
              }
              return ('string' === t ? String : Number)(e);
            })(e, 'string');
            return 'symbol' == typeof t ? t : t + '';
          })(t)) in e
            ? Object.defineProperty(e, t, { value: n, enumerable: !0, configurable: !0, writable: !0 })
            : (e[t] = n),
          e
        );
      }
      function Wt(e) {
        return e && e.map((e, n) => t.createElement(e.tag, Ht({ key: n }, e.attr), Wt(e.child)));
      }
      function Qt(e) {
        return (n) => t.createElement(Yt, qt({ attr: Ht({}, e.attr) }, n), Wt(e.child));
      }
      function Yt(e) {
        var n = (n) => {
          var r,
            { attr: i, size: s, title: a } = e,
            o = Bt(e, zt),
            l = s || n.size || '1em';
          return (
            n.className && (r = n.className),
            e.className && (r = (r ? r + ' ' : '') + e.className),
            t.createElement(
              'svg',
              qt({ stroke: 'currentColor', fill: 'currentColor', strokeWidth: '0' }, n.attr, i, o, {
                className: r,
                style: Ht(Ht({ color: e.color || n.color }, n.style), e.style),
                height: l,
                width: l,
                xmlns: 'http://www.w3.org/2000/svg',
              }),
              a && t.createElement('title', null, a),
              e.children,
            )
          );
        };
        return void 0 !== Vt ? t.createElement(Vt.Consumer, null, (e) => n(e)) : n(Ut);
      }
      function Jt(e) {
        return Qt({
          tag: 'svg',
          attr: { viewBox: '0 0 512 512' },
          child: [
            {
              tag: 'path',
              attr: {
                d: 'M119.436 36c-16.126 0-29.2 17.237-29.2 38.5v363c0 21.263 13.074 38.5 29.2 38.5h275.298c16.126 0 29.198-17.237 29.198-38.5v-363c0-21.263-13.072-38.5-29.198-38.5H119.436zm57.214 16.174h.002c13.612-.318 26.502 9.855 27.073 28.043.976 31.09-47.738 52.945-52.31 70.015-4.998-18.649-51.414-37.573-52.45-70.015-.995-31.155 37.401-37.91 52.45-11.848 6.26-10.846 15.922-15.977 25.235-16.195zm66.17 112.83h7.963l63.121 160.834c2.536 6.498 7.727 9.748 15.573 9.748h5.468v8.916h-70.134v-8.916h5.587c7.291 0 12.442-.792 15.454-2.377 2.06-1.11 3.09-2.815 3.09-5.113 0-1.347-.278-2.774-.833-4.28l-14.62-37.324h-69.423l-8.2 21.397c-2.14 5.706-3.21 10.222-3.21 13.55 0 3.884 1.782 7.213 5.348 9.987 3.645 2.774 8.916 4.16 15.81 4.16h5.944v8.916h-63.715v-8.916c6.815 0 12.204-1.466 16.166-4.399 3.962-3.011 7.61-8.676 10.937-16.998l59.674-149.185zm-3.447 33.879l-31.502 78.336h62.17l-30.668-78.336zM360.73 361.77c4.572 17.07 53.289 38.923 52.312 70.013-.57 18.188-13.463 28.361-27.074 28.043h-.002c-9.313-.218-18.973-5.35-25.235-16.195-15.048 26.061-53.445 19.308-52.45-11.848 1.036-32.442 47.451-51.364 52.449-70.013z',
              },
              child: [],
            },
          ],
        })(e);
      }
      function Xt(e) {
        return Qt({
          tag: 'svg',
          attr: { viewBox: '0 0 512 512' },
          child: [
            {
              tag: 'path',
              attr: {
                d: 'M119.436 36c-16.126 0-29.2 17.237-29.2 38.5v363c0 21.263 13.074 38.5 29.2 38.5h275.298c16.126 0 29.198-17.237 29.198-38.5v-363c0-21.263-13.072-38.5-29.198-38.5zm26.369 10.951l11.002 32.856 34.648.312-27.848 20.617 10.41 33.05-28.212-20.114-28.215 20.113L128 100.736 100.152 80.12l34.649-.312zM363.979 161.84c7.127 9.459 12.739 20.689 16.832 32.04 3.8 10.544 6.197 21.211 6.668 31.02-.163 19.015-3.915 23.274-14.557 36.934l-6.703-11.48c-10.85-13.106-30.779-48.4-47.383-43.672-6.521 6.11-8.996 13.37-10.313 20.802 2.898 8.8 4.477 18.43 4.477 28.516 0 15.293-3.615 29.54-9.996 41.416 22.643 4.537 57.927 19.332 57.973 39.223-.27 3.783-1.835 7.68-4.362 10.42-10.743 12.528-36.958 4.125-45.2 10.072.796 6.947 4.112 14.118 4.355 20.174.136 4.36-1.768 10.58-6.508 13.996-5.67 4.087-12.968 4.551-18.52 3.045C279.94 392.226 272 379.649 256 377c-13.544 3.491-22.412 13.87-34.742 17.346-5.552 1.506-12.85 1.042-18.52-3.045-4.74-3.417-6.644-9.636-6.508-13.996-.058-7.142 4.107-13.794 4.356-20.174-15.741-7.788-33.816 1.97-45.201-10.072-2.527-2.74-4.093-6.637-4.362-10.42 6.146-27.341 35.374-34.684 57.973-39.223C202.615 285.54 199 271.293 199 256c0-11.489 2.047-22.385 5.764-32.135-2.357-7.923-3.441-15.988-9.438-22.441-8.758-.925-14.079 6.897-17.842 12.63-11.683 19.5-18.718 30.606-32.88 46.192-16.604-23.4-19.314-49.29-13.157-70.988 6.065-20.331 19.17-38.798 37.926-47.924 21.216-9.766 39.872-10.03 58.885.203 5.163-13.053 10.4-25.65 18.035-36.209 9.625-13.31 23.8-25.631 43.707-25.295 38.8.656 73.993 51.156 73.979 81.807zm-72.22-63.893c-35.759 2.409-44.771 44.746-55.189 71.29l-9.447-7.087c-18.428-12.31-31.076-13.732-49.875-4.63-12.924 6.288-23.701 20.62-28.553 36.882-3.38 11.329-3.765 23.225-.949 33.645 9.45-13.549 15.806-30.08 28.317-39.178 7.486-7.975 26.27-8.498 35.45 3.897 4.838 7.02 7.437 14.54 9.5 22.234h72.165c.592-1.944 1.067-3.762 2.017-6.033 2.956-7.064 7.765-16.266 18.395-19.504 18.09-3.862 32.494 7.106 43.498 18.514 4.517 4.717 8.492 9.696 12.098 14.517-.69-6.798-2.477-14.651-5.31-22.508-13.127-36.707-37.889-51.031-70.386-32.011 2.556-16.423 16.87-35.72 46.25-26.962-9.094-17.135-30.355-42.471-47.98-43.066zM220.644 233c-2.31 6.965-3.643 14.753-3.643 23 0 15.85 4.892 30.032 12.26 39.855C236.628 305.68 245.988 311 256 311c10.012 0 19.372-5.32 26.74-15.145C290.108 286.032 295 271.85 295 256c0-8.247-1.334-16.035-3.643-23zM232 280h48s-8 14-24 14-24-14-24-14zm-11.14 33.566c-13.86 3.34-50.369 8.9-51.842 21.42 9.621 1.947 20.446.838 28.998 2.235 5.993 1.018 12.82 3.323 17.285 9.517 3.375 4.683 3.577 10.103 3.037 14.21-.543 5.89-3.317 10.557-3.975 16.32 15.955-2.59 28.264-17.532 41.637-18.268 16-.702 29.313 17.402 41.637 18.268-.893-5.59-3.262-11.158-3.975-16.32-.54-4.107-.338-9.527 3.037-14.21 4.465-6.194 11.292-8.5 17.285-9.517 9.742-2.229 19.975.396 28.998-2.235-5.77-13.125-39.813-19.454-51.841-21.42C281.665 323.01 269.45 329 256 329c-13.452 0-25.665-5.991-35.14-15.434zm117.122 64.649l28.213 20.113 28.215-20.113L384 411.264l27.848 20.617-34.649.312-11.004 32.856-11.002-32.856-34.648-.312 27.848-20.617z',
              },
              child: [],
            },
          ],
        })(e);
      }
      function $t(e) {
        return Qt({
          tag: 'svg',
          attr: { viewBox: '0 0 512 512' },
          child: [
            {
              tag: 'path',
              attr: {
                d: 'M386.688 487.75l-119.236-55.423c-7.898-3.673-11.334-13.065-7.66-20.976l84.374-181.523c3.667-7.904 13.07-11.334 20.963-7.667l119.24 55.434c7.9 3.673 11.33 13.065 7.656 20.964l-84.37 181.524c-3.678 7.904-13.076 11.334-20.968 7.667zM98.95 467.945L19.79 284.09c-3.448-8.007.255-17.302 8.25-20.744l39.196-16.872 48.975 184.044c4.694 17.588 22.755 28.078 40.36 23.39l39.032-10.386-75.907 32.686c-8.007 3.443-17.296-.255-20.744-8.262zm33.89-41.86L81.362 232.638c-2.24-8.42 2.78-17.078 11.19-19.312l34.033-9.052-4.098 30.465c-2.422 18.036 10.224 34.652 28.285 37.087l79.828 10.758-32.497 109.467c-3.345 11.28-.37 22.948 6.866 31.18l-52.82 14.05c-8.42 2.24-17.07-2.77-19.31-11.196zm108.428-4.76l-16.02-4.76c-8.36-2.49-13.12-11.267-10.644-19.627l56.97-191.9c2.484-8.36 11.28-13.12 19.622-10.65l49.073 14.583.008-.005.12.044-.133-.034c-4.93 3.254-9.04 7.868-11.705 13.605l-84.38 181.53c-2.587 5.586-3.486 11.517-2.915 17.218zm-5.707-155.43l-82.486-11.117c-8.633-1.166-14.704-9.12-13.538-17.758l26.73-198.39c1.16-8.633 9.125-14.698 17.74-13.538l130.327 17.563c8.627 1.166 14.692 9.125 13.532 17.752L311.42 182.46l-15.33-4.552c-17.467-5.197-35.826 4.784-41.004 22.232l-19.525 65.755zm-5.19-31.46c4.67-3.055 7.474-7.438 8.42-13.145.936-5.633-.357-10.617-3.866-14.945-3.51-4.414-8.39-7.14-14.656-8.178-6.344-1.057-11.93-.073-16.75 2.956-4.826 3.03-7.692 7.316-8.615 12.87-.898 5.386.425 10.42 3.97 15.082 3.565 4.504 8.525 7.285 14.863 8.34 6.35 1.057 11.893.062 16.634-2.98zm25.978-81.243c4.693-2.726 8.888-5.434 12.598-8.117 3.703-2.684 6.915-5.586 9.635-8.725 2.72-3.13 4.967-6.573 6.733-10.307 1.76-3.74 3.048-8.032 3.85-12.865 1.262-7.62 1.02-14.358-.735-20.234-1.75-5.87-4.693-10.94-8.833-15.22-4.135-4.27-9.24-7.753-15.318-10.43-6.07-2.684-12.804-4.633-20.174-5.86-7.692-1.28-15.3-1.602-22.815-.977-7.516.614-14.63 2.247-21.346 4.88l-5.95 35.802c6.813-4.25 13.77-7.104 20.855-8.567 7.09-1.475 13.726-1.7 19.913-.668 21.467 4.092 19.44 24.898 8.76 34.03-5.652 4.473-11.334 8.802-15.942 11.345-10.48 5.914-27.69 23.125-22.542 45.145l31.284 5.202c-7.11-17.757 11.663-29.462 20.028-34.434z',
              },
              child: [],
            },
          ],
        })(e);
      }
      function Zt(e) {
        return Qt({
          tag: 'svg',
          attr: { viewBox: '0 0 512 512' },
          child: [{ tag: 'path', attr: { d: 'M32 96v64h448V96H32zm0 128v64h448v-64H32zm0 128v64h448v-64H32z' }, child: [] }],
        })(e);
      }
      function en(e) {
        return Qt({
          tag: 'svg',
          attr: { viewBox: '0 0 512 512' },
          child: [
            {
              tag: 'path',
              attr: {
                d: 'M150.156 82.406c-1.843.092-3.663.446-5.344 1.063L41.094 121.53c-4.483 1.645-8.493 5.357-10.5 9.69-2.007 4.33-2.238 9.798-.594 14.28l66.72 181.875c1.643 4.482 5.354 8.524 9.686 10.53 4.332 2.008 9.8 2.24 14.28.595l103.72-38.063c4.483-1.644 8.493-5.355 10.5-9.687l.03-.063c1.982-4.322 2.2-9.757.564-14.218L168.78 94.593c-1.635-4.46-5.318-8.484-9.624-10.5l-.062-.03c-2.166-1.005-4.623-1.556-7.094-1.658-.618-.025-1.23-.03-1.844 0zM189.22 96.03l63.843 174c3.41 9.3 2.975 19.61-1.188 28.595-4.163 8.986-11.734 15.965-21.03 19.375l-27.44 10.063 60 2.78c4.77.223 9.91-1.66 13.44-4.874 3.528-3.217 5.87-8.17 6.092-12.94l9-193.5c.222-4.768-1.628-9.938-4.843-13.468-3.216-3.53-8.168-5.87-12.938-6.093l-84.937-3.94zm121 33.25l-8.626 184.626c-.46 9.893-4.836 19.237-12.156 25.906-7.32 6.67-17.014 10.148-26.907 9.688l-26.06-1.22 69.374 23.095c4.53 1.507 10.012 1.107 14.28-1.03 4.27-2.14 7.838-6.283 9.345-10.814l61.155-183.81c1.507-4.532 1.107-10.013-1.03-14.282-2.14-4.27-6.283-7.87-10.814-9.375l-68.56-22.782zm-205.064 18.345c24.458 24.936 68.02 17.74 80.75 45.53 11.875 25.927-14.51 46.006-37.97 38.407l17 30.782-18.78 6.906-10.937-31.688c-10.39 22.624-43.053 23.746-54.157-.53-13.53-29.577 24.02-54.2 24.093-89.407zm301.438 39.22L347.22 365.437c-3.127 9.397-9.865 17.19-18.72 21.625l-.094.03c-8.834 4.396-19.07 5.116-28.437 2l-20.376-6.78 43.312 37.03c3.63 3.102 8.865 4.78 13.625 4.407 4.76-.374 9.618-2.84 12.72-6.47l125.875-147.31c3.102-3.63 4.78-8.835 4.406-13.595-.372-4.76-2.87-9.648-6.5-12.75l-66.436-56.78z',
              },
              child: [],
            },
          ],
        })(e);
      }
      function tn(e) {
        return Qt({
          tag: 'svg',
          attr: { viewBox: '0 0 24 24' },
          child: [{ tag: 'path', attr: { fill: 'none', strokeWidth: '2', d: 'M3,3 L21,21 M3,21 L21,3' }, child: [] }],
        })(e);
      }
      const nn = function (e) {
          const t = [];
          let n = 0;
          for (let r = 0; r < e.length; r++) {
            let i = e.charCodeAt(r);
            i < 128
              ? (t[n++] = i)
              : i < 2048
                ? ((t[n++] = (i >> 6) | 192), (t[n++] = (63 & i) | 128))
                : 55296 === (64512 & i) && r + 1 < e.length && 56320 === (64512 & e.charCodeAt(r + 1))
                  ? ((i = 65536 + ((1023 & i) << 10) + (1023 & e.charCodeAt(++r))),
                    (t[n++] = (i >> 18) | 240),
                    (t[n++] = ((i >> 12) & 63) | 128),
                    (t[n++] = ((i >> 6) & 63) | 128),
                    (t[n++] = (63 & i) | 128))
                  : ((t[n++] = (i >> 12) | 224), (t[n++] = ((i >> 6) & 63) | 128), (t[n++] = (63 & i) | 128));
          }
          return t;
        },
        rn = {
          byteToCharMap_: null,
          charToByteMap_: null,
          byteToCharMapWebSafe_: null,
          charToByteMapWebSafe_: null,
          ENCODED_VALS_BASE: 'ABCDEFGHIJKLMNOPQRSTUVWXYZabcdefghijklmnopqrstuvwxyz0123456789',
          get ENCODED_VALS() {
            return this.ENCODED_VALS_BASE + '+/=';
          },
          get ENCODED_VALS_WEBSAFE() {
            return this.ENCODED_VALS_BASE + '-_.';
          },
          HAS_NATIVE_SUPPORT: 'function' === typeof atob,
          encodeByteArray(e, t) {
            if (!Array.isArray(e)) throw Error('encodeByteArray takes an array as a parameter');
            this.init_();
            const n = t ? this.byteToCharMapWebSafe_ : this.byteToCharMap_,
              r = [];
            for (let i = 0; i < e.length; i += 3) {
              const t = e[i],
                s = i + 1 < e.length,
                a = s ? e[i + 1] : 0,
                o = i + 2 < e.length,
                l = o ? e[i + 2] : 0,
                c = t >> 2,
                u = ((3 & t) << 4) | (a >> 4);
              let d = ((15 & a) << 2) | (l >> 6),
                h = 63 & l;
              o || ((h = 64), s || (d = 64)), r.push(n[c], n[u], n[d], n[h]);
            }
            return r.join('');
          },
          encodeString(e, t) {
            return this.HAS_NATIVE_SUPPORT && !t ? btoa(e) : this.encodeByteArray(nn(e), t);
          },
          decodeString(e, t) {
            return this.HAS_NATIVE_SUPPORT && !t
              ? atob(e)
              : (function (e) {
                  const t = [];
                  let n = 0,
                    r = 0;
                  for (; n < e.length; ) {
                    const i = e[n++];
                    if (i < 128) t[r++] = String.fromCharCode(i);
                    else if (i > 191 && i < 224) {
                      const s = e[n++];
                      t[r++] = String.fromCharCode(((31 & i) << 6) | (63 & s));
                    } else if (i > 239 && i < 365) {
                      const s = (((7 & i) << 18) | ((63 & e[n++]) << 12) | ((63 & e[n++]) << 6) | (63 & e[n++])) - 65536;
                      (t[r++] = String.fromCharCode(55296 + (s >> 10))), (t[r++] = String.fromCharCode(56320 + (1023 & s)));
                    } else {
                      const s = e[n++],
                        a = e[n++];
                      t[r++] = String.fromCharCode(((15 & i) << 12) | ((63 & s) << 6) | (63 & a));
                    }
                  }
                  return t.join('');
                })(this.decodeStringToByteArray(e, t));
          },
          decodeStringToByteArray(e, t) {
            this.init_();
            const n = t ? this.charToByteMapWebSafe_ : this.charToByteMap_,
              r = [];
            for (let i = 0; i < e.length; ) {
              const t = n[e.charAt(i++)],
                s = i < e.length ? n[e.charAt(i)] : 0;
              ++i;
              const a = i < e.length ? n[e.charAt(i)] : 64;
              ++i;
              const o = i < e.length ? n[e.charAt(i)] : 64;
              if ((++i, null == t || null == s || null == a || null == o)) throw new sn();
              const l = (t << 2) | (s >> 4);
              if ((r.push(l), 64 !== a)) {
                const e = ((s << 4) & 240) | (a >> 2);
                if ((r.push(e), 64 !== o)) {
                  const e = ((a << 6) & 192) | o;
                  r.push(e);
                }
              }
            }
            return r;
          },
          init_() {
            if (!this.byteToCharMap_) {
              (this.byteToCharMap_ = {}),
                (this.charToByteMap_ = {}),
                (this.byteToCharMapWebSafe_ = {}),
                (this.charToByteMapWebSafe_ = {});
              for (let e = 0; e < this.ENCODED_VALS.length; e++)
                (this.byteToCharMap_[e] = this.ENCODED_VALS.charAt(e)),
                  (this.charToByteMap_[this.byteToCharMap_[e]] = e),
                  (this.byteToCharMapWebSafe_[e] = this.ENCODED_VALS_WEBSAFE.charAt(e)),
                  (this.charToByteMapWebSafe_[this.byteToCharMapWebSafe_[e]] = e),
                  e >= this.ENCODED_VALS_BASE.length &&
                    ((this.charToByteMap_[this.ENCODED_VALS_WEBSAFE.charAt(e)] = e),
                    (this.charToByteMapWebSafe_[this.ENCODED_VALS.charAt(e)] = e));
            }
          },
        };
      class sn extends Error {
        constructor() {
          super(...arguments), (this.name = 'DecodeBase64StringError');
        }
      }
      const an = function (e) {
          return (function (e) {
            const t = nn(e);
            return rn.encodeByteArray(t, !0);
          })(e).replace(/\./g, '');
        },
        on = function (e) {
          try {
            return rn.decodeString(e, !0);
          } catch (Wy) {
            console.error('base64Decode failed: ', Wy);
          }
          return null;
        };
      const ln = () =>
          (function () {
            if ('undefined' !== typeof self) return self;
            if ('undefined' !== typeof window) return window;
            if ('undefined' !== typeof n.g) return n.g;
            throw new Error('Unable to locate global object.');
          })().__FIREBASE_DEFAULTS__,
        cn = () => {
          try {
            return (
              ln() ||
              (() => {
                if ('undefined' === typeof process) return;
                const e = {
                  NODE_ENV: 'production',
                  PUBLIC_URL: '',
                  WDS_SOCKET_HOST: void 0,
                  WDS_SOCKET_PATH: void 0,
                  WDS_SOCKET_PORT: void 0,
                  FAST_REFRESH: !0,
                  REACT_APP_API_KEY: 'AIzaSyDvVTxJZ_lLTGhmhsK1bbqPp8XTIKWckL8',
                }.__FIREBASE_DEFAULTS__;
                return e ? JSON.parse(e) : void 0;
              })() ||
              (() => {
                if ('undefined' === typeof document) return;
                let e;
                try {
                  e = document.cookie.match(/__FIREBASE_DEFAULTS__=([^;]+)/);
                } catch (Wy) {
                  return;
                }
                const t = e && on(e[1]);
                return t && JSON.parse(t);
              })()
            );
          } catch (Wy) {
            return void console.info('Unable to get __FIREBASE_DEFAULTS__ due to: '.concat(Wy));
          }
        },
        un = (e) => {
          var t, n;
          return null === (n = null === (t = cn()) || void 0 === t ? void 0 : t.emulatorHosts) || void 0 === n ? void 0 : n[e];
        },
        dn = () => {
          var e;
          return null === (e = cn()) || void 0 === e ? void 0 : e.config;
        },
        hn = (e) => {
          var t;
          return null === (t = cn()) || void 0 === t ? void 0 : t['_'.concat(e)];
        };
      class fn {
        constructor() {
          (this.reject = () => {}),
            (this.resolve = () => {}),
            (this.promise = new Promise((e, t) => {
              (this.resolve = e), (this.reject = t);
            }));
        }
        wrapCallback(e) {
          return (t, n) => {
            t ? this.reject(t) : this.resolve(n),
              'function' === typeof e && (this.promise.catch(() => {}), 1 === e.length ? e(t) : e(t, n));
          };
        }
      }
      function pn() {
        return 'undefined' !== typeof navigator && 'string' === typeof navigator.userAgent ? navigator.userAgent : '';
      }
      function mn() {
        return (
          !(function () {
            var e;
            const t = null === (e = cn()) || void 0 === e ? void 0 : e.forceEnvironment;
            if ('node' === t) return !0;
            if ('browser' === t) return !1;
            try {
              return '[object process]' === Object.prototype.toString.call(n.g.process);
            } catch (Wy) {
              return !1;
            }
          })() &&
          !!navigator.userAgent &&
          navigator.userAgent.includes('Safari') &&
          !navigator.userAgent.includes('Chrome')
        );
      }
      function gn() {
        try {
          return 'object' === typeof indexedDB;
        } catch (Wy) {
          return !1;
        }
      }
      class vn extends Error {
        constructor(e, t, n) {
          super(t),
            (this.code = e),
            (this.customData = n),
            (this.name = 'FirebaseError'),
            Object.setPrototypeOf(this, vn.prototype),
            Error.captureStackTrace && Error.captureStackTrace(this, yn.prototype.create);
        }
      }
      class yn {
        constructor(e, t, n) {
          (this.service = e), (this.serviceName = t), (this.errors = n);
        }
        create(e) {
          const t = (arguments.length <= 1 ? void 0 : arguments[1]) || {},
            n = ''.concat(this.service, '/').concat(e),
            r = this.errors[e],
            i = r
              ? (function (e, t) {
                  return e.replace(wn, (e, n) => {
                    const r = t[n];
                    return null != r ? String(r) : '<'.concat(n, '?>');
                  });
                })(r, t)
              : 'Error',
            s = ''.concat(this.serviceName, ': ').concat(i, ' (').concat(n, ').');
          return new vn(n, s, t);
        }
      }
      const wn = /\{\$([^}]+)}/g;
      function bn(e, t) {
        if (e === t) return !0;
        const n = Object.keys(e),
          r = Object.keys(t);
        for (const i of n) {
          if (!r.includes(i)) return !1;
          const n = e[i],
            s = t[i];
          if (Sn(n) && Sn(s)) {
            if (!bn(n, s)) return !1;
          } else if (n !== s) return !1;
        }
        for (const i of r) if (!n.includes(i)) return !1;
        return !0;
      }
      function Sn(e) {
        return null !== e && 'object' === typeof e;
      }
      function En(e) {
        const t = [];
        for (const [n, r] of Object.entries(e))
          Array.isArray(r)
            ? r.forEach((e) => {
                t.push(encodeURIComponent(n) + '=' + encodeURIComponent(e));
              })
            : t.push(encodeURIComponent(n) + '=' + encodeURIComponent(r));
        return t.length ? '&' + t.join('&') : '';
      }
      function Tn(e) {
        const t = {};
        return (
          e
            .replace(/^\?/, '')
            .split('&')
            .forEach((e) => {
              if (e) {
                const [n, r] = e.split('=');
                t[decodeURIComponent(n)] = decodeURIComponent(r);
              }
            }),
          t
        );
      }
      function _n(e) {
        const t = e.indexOf('?');
        if (!t) return '';
        const n = e.indexOf('#', t);
        return e.substring(t, n > 0 ? n : void 0);
      }
      class In {
        constructor(e, t) {
          (this.observers = []),
            (this.unsubscribes = []),
            (this.observerCount = 0),
            (this.task = Promise.resolve()),
            (this.finalized = !1),
            (this.onNoObservers = t),
            this.task
              .then(() => {
                e(this);
              })
              .catch((e) => {
                this.error(e);
              });
        }
        next(e) {
          this.forEachObserver((t) => {
            t.next(e);
          });
        }
        error(e) {
          this.forEachObserver((t) => {
            t.error(e);
          }),
            this.close(e);
        }
        complete() {
          this.forEachObserver((e) => {
            e.complete();
          }),
            this.close();
        }
        subscribe(e, t, n) {
          let r;
          if (void 0 === e && void 0 === t && void 0 === n) throw new Error('Missing Observer.');
          (r = (function (e, t) {
            if ('object' !== typeof e || null === e) return !1;
            for (const n of t) if (n in e && 'function' === typeof e[n]) return !0;
            return !1;
          })(e, ['next', 'error', 'complete'])
            ? e
            : { next: e, error: t, complete: n }),
            void 0 === r.next && (r.next = xn),
            void 0 === r.error && (r.error = xn),
            void 0 === r.complete && (r.complete = xn);
          const i = this.unsubscribeOne.bind(this, this.observers.length);
          return (
            this.finalized &&
              this.task.then(() => {
                try {
                  this.finalError ? r.error(this.finalError) : r.complete();
                } catch (Wy) {}
              }),
            this.observers.push(r),
            i
          );
        }
        unsubscribeOne(e) {
          void 0 !== this.observers &&
            void 0 !== this.observers[e] &&
            (delete this.observers[e],
            (this.observerCount -= 1),
            0 === this.observerCount && void 0 !== this.onNoObservers && this.onNoObservers(this));
        }
        forEachObserver(e) {
          if (!this.finalized) for (let t = 0; t < this.observers.length; t++) this.sendOne(t, e);
        }
        sendOne(e, t) {
          this.task.then(() => {
            if (void 0 !== this.observers && void 0 !== this.observers[e])
              try {
                t(this.observers[e]);
              } catch (Wy) {
                'undefined' !== typeof console && console.error && console.error(Wy);
              }
          });
        }
        close(e) {
          this.finalized ||
            ((this.finalized = !0),
            void 0 !== e && (this.finalError = e),
            this.task.then(() => {
              (this.observers = void 0), (this.onNoObservers = void 0);
            }));
        }
      }
      function xn() {}
      function kn(e) {
        return e && e._delegate ? e._delegate : e;
      }
      class Cn {
        constructor(e, t, n) {
          (this.name = e),
            (this.instanceFactory = t),
            (this.type = n),
            (this.multipleInstances = !1),
            (this.serviceProps = {}),
            (this.instantiationMode = 'LAZY'),
            (this.onInstanceCreated = null);
        }
        setInstantiationMode(e) {
          return (this.instantiationMode = e), this;
        }
        setMultipleInstances(e) {
          return (this.multipleInstances = e), this;
        }
        setServiceProps(e) {
          return (this.serviceProps = e), this;
        }
        setInstanceCreatedCallback(e) {
          return (this.onInstanceCreated = e), this;
        }
      }
      const Nn = '[DEFAULT]';
      class Pn {
        constructor(e, t) {
          (this.name = e),
            (this.container = t),
            (this.component = null),
            (this.instances = new Map()),
            (this.instancesDeferred = new Map()),
            (this.instancesOptions = new Map()),
            (this.onInitCallbacks = new Map());
        }
        get(e) {
          const t = this.normalizeInstanceIdentifier(e);
          if (!this.instancesDeferred.has(t)) {
            const e = new fn();
            if ((this.instancesDeferred.set(t, e), this.isInitialized(t) || this.shouldAutoInitialize()))
              try {
                const n = this.getOrInitializeService({ instanceIdentifier: t });
                n && e.resolve(n);
              } catch (Wy) {}
          }
          return this.instancesDeferred.get(t).promise;
        }
        getImmediate(e) {
          var t;
          const n = this.normalizeInstanceIdentifier(null === e || void 0 === e ? void 0 : e.identifier),
            r = null !== (t = null === e || void 0 === e ? void 0 : e.optional) && void 0 !== t && t;
          if (!this.isInitialized(n) && !this.shouldAutoInitialize()) {
            if (r) return null;
            throw Error('Service '.concat(this.name, ' is not available'));
          }
          try {
            return this.getOrInitializeService({ instanceIdentifier: n });
          } catch (Wy) {
            if (r) return null;
            throw Wy;
          }
        }
        getComponent() {
          return this.component;
        }
        setComponent(e) {
          if (e.name !== this.name) throw Error('Mismatching Component '.concat(e.name, ' for Provider ').concat(this.name, '.'));
          if (this.component) throw Error('Component for '.concat(this.name, ' has already been provided'));
          if (((this.component = e), this.shouldAutoInitialize())) {
            if (
              (function (e) {
                return 'EAGER' === e.instantiationMode;
              })(e)
            )
              try {
                this.getOrInitializeService({ instanceIdentifier: Nn });
              } catch (Wy) {}
            for (const [e, t] of this.instancesDeferred.entries()) {
              const n = this.normalizeInstanceIdentifier(e);
              try {
                const e = this.getOrInitializeService({ instanceIdentifier: n });
                t.resolve(e);
              } catch (Wy) {}
            }
          }
        }
        clearInstance() {
          let e = arguments.length > 0 && void 0 !== arguments[0] ? arguments[0] : Nn;
          this.instancesDeferred.delete(e), this.instancesOptions.delete(e), this.instances.delete(e);
        }
        async delete() {
          const e = Array.from(this.instances.values());
          await Promise.all([
            ...e.filter((e) => 'INTERNAL' in e).map((e) => e.INTERNAL.delete()),
            ...e.filter((e) => '_delete' in e).map((e) => e._delete()),
          ]);
        }
        isComponentSet() {
          return null != this.component;
        }
        isInitialized() {
          let e = arguments.length > 0 && void 0 !== arguments[0] ? arguments[0] : Nn;
          return this.instances.has(e);
        }
        getOptions() {
          let e = arguments.length > 0 && void 0 !== arguments[0] ? arguments[0] : Nn;
          return this.instancesOptions.get(e) || {};
        }
        initialize() {
          let e = arguments.length > 0 && void 0 !== arguments[0] ? arguments[0] : {};
          const { options: t = {} } = e,
            n = this.normalizeInstanceIdentifier(e.instanceIdentifier);
          if (this.isInitialized(n)) throw Error(''.concat(this.name, '(').concat(n, ') has already been initialized'));
          if (!this.isComponentSet()) throw Error('Component '.concat(this.name, ' has not been registered yet'));
          const r = this.getOrInitializeService({ instanceIdentifier: n, options: t });
          for (const [i, s] of this.instancesDeferred.entries()) {
            n === this.normalizeInstanceIdentifier(i) && s.resolve(r);
          }
          return r;
        }
        onInit(e, t) {
          var n;
          const r = this.normalizeInstanceIdentifier(t),
            i = null !== (n = this.onInitCallbacks.get(r)) && void 0 !== n ? n : new Set();
          i.add(e), this.onInitCallbacks.set(r, i);
          const s = this.instances.get(r);
          return (
            s && e(s, r),
            () => {
              i.delete(e);
            }
          );
        }
        invokeOnInitCallbacks(e, t) {
          const n = this.onInitCallbacks.get(t);
          if (n)
            for (const i of n)
              try {
                i(e, t);
              } catch (r) {}
        }
        getOrInitializeService(e) {
          let { instanceIdentifier: t, options: n = {} } = e,
            r = this.instances.get(t);
          if (
            !r &&
            this.component &&
            ((r = this.component.instanceFactory(this.container, {
              instanceIdentifier: ((i = t), i === Nn ? void 0 : i),
              options: n,
            })),
            this.instances.set(t, r),
            this.instancesOptions.set(t, n),
            this.invokeOnInitCallbacks(r, t),
            this.component.onInstanceCreated)
          )
            try {
              this.component.onInstanceCreated(this.container, t, r);
            } catch (s) {}
          var i;
          return r || null;
        }
        normalizeInstanceIdentifier() {
          let e = arguments.length > 0 && void 0 !== arguments[0] ? arguments[0] : Nn;
          return this.component ? (this.component.multipleInstances ? e : Nn) : e;
        }
        shouldAutoInitialize() {
          return !!this.component && 'EXPLICIT' !== this.component.instantiationMode;
        }
      }
      class Dn {
        constructor(e) {
          (this.name = e), (this.providers = new Map());
        }
        addComponent(e) {
          const t = this.getProvider(e.name);
          if (t.isComponentSet())
            throw new Error('Component '.concat(e.name, ' has already been registered with ').concat(this.name));
          t.setComponent(e);
        }
        addOrOverwriteComponent(e) {
          this.getProvider(e.name).isComponentSet() && this.providers.delete(e.name), this.addComponent(e);
        }
        getProvider(e) {
          if (this.providers.has(e)) return this.providers.get(e);
          const t = new Pn(e, this);
          return this.providers.set(e, t), t;
        }
        getProviders() {
          return Array.from(this.providers.values());
        }
      }
      const An = [];
      var On;
      !(function (e) {
        (e[(e.DEBUG = 0)] = 'DEBUG'),
          (e[(e.VERBOSE = 1)] = 'VERBOSE'),
          (e[(e.INFO = 2)] = 'INFO'),
          (e[(e.WARN = 3)] = 'WARN'),
          (e[(e.ERROR = 4)] = 'ERROR'),
          (e[(e.SILENT = 5)] = 'SILENT');
      })(On || (On = {}));
      const Ln = { debug: On.DEBUG, verbose: On.VERBOSE, info: On.INFO, warn: On.WARN, error: On.ERROR, silent: On.SILENT },
        Rn = On.INFO,
        Mn = { [On.DEBUG]: 'log', [On.VERBOSE]: 'log', [On.INFO]: 'info', [On.WARN]: 'warn', [On.ERROR]: 'error' },
        Fn = function (e, t) {
          if (t < e.logLevel) return;
          const n = new Date().toISOString(),
            r = Mn[t];
          if (!r) throw new Error('Attempted to log a message with an invalid logType (value: '.concat(t, ')'));
          for (var i = arguments.length, s = new Array(i > 2 ? i - 2 : 0), a = 2; a < i; a++) s[a - 2] = arguments[a];
          console[r]('['.concat(n, ']  ').concat(e.name, ':'), ...s);
        };
      class jn {
        constructor(e) {
          (this.name = e), (this._logLevel = Rn), (this._logHandler = Fn), (this._userLogHandler = null), An.push(this);
        }
        get logLevel() {
          return this._logLevel;
        }
        set logLevel(e) {
          if (!(e in On)) throw new TypeError('Invalid value "'.concat(e, '" assigned to `logLevel`'));
          this._logLevel = e;
        }
        setLogLevel(e) {
          this._logLevel = 'string' === typeof e ? Ln[e] : e;
        }
        get logHandler() {
          return this._logHandler;
        }
        set logHandler(e) {
          if ('function' !== typeof e) throw new TypeError('Value assigned to `logHandler` must be a function');
          this._logHandler = e;
        }
        get userLogHandler() {
          return this._userLogHandler;
        }
        set userLogHandler(e) {
          this._userLogHandler = e;
        }
        debug() {
          for (var e = arguments.length, t = new Array(e), n = 0; n < e; n++) t[n] = arguments[n];
          this._userLogHandler && this._userLogHandler(this, On.DEBUG, ...t), this._logHandler(this, On.DEBUG, ...t);
        }
        log() {
          for (var e = arguments.length, t = new Array(e), n = 0; n < e; n++) t[n] = arguments[n];
          this._userLogHandler && this._userLogHandler(this, On.VERBOSE, ...t), this._logHandler(this, On.VERBOSE, ...t);
        }
        info() {
          for (var e = arguments.length, t = new Array(e), n = 0; n < e; n++) t[n] = arguments[n];
          this._userLogHandler && this._userLogHandler(this, On.INFO, ...t), this._logHandler(this, On.INFO, ...t);
        }
        warn() {
          for (var e = arguments.length, t = new Array(e), n = 0; n < e; n++) t[n] = arguments[n];
          this._userLogHandler && this._userLogHandler(this, On.WARN, ...t), this._logHandler(this, On.WARN, ...t);
        }
        error() {
          for (var e = arguments.length, t = new Array(e), n = 0; n < e; n++) t[n] = arguments[n];
          this._userLogHandler && this._userLogHandler(this, On.ERROR, ...t), this._logHandler(this, On.ERROR, ...t);
        }
      }
      const Un = (e, t) => t.some((t) => e instanceof t);
      let Vn, zn;
      const Bn = new WeakMap(),
        qn = new WeakMap(),
        Gn = new WeakMap(),
        Hn = new WeakMap(),
        Kn = new WeakMap();
      let Wn = {
        get(e, t, n) {
          if (e instanceof IDBTransaction) {
            if ('done' === t) return qn.get(e);
            if ('objectStoreNames' === t) return e.objectStoreNames || Gn.get(e);
            if ('store' === t) return n.objectStoreNames[1] ? void 0 : n.objectStore(n.objectStoreNames[0]);
          }
          return Jn(e[t]);
        },
        set: (e, t, n) => ((e[t] = n), !0),
        has: (e, t) => (e instanceof IDBTransaction && ('done' === t || 'store' === t)) || t in e,
      };
      function Qn(e) {
        return e !== IDBDatabase.prototype.transaction || 'objectStoreNames' in IDBTransaction.prototype
          ? (
              zn || (zn = [IDBCursor.prototype.advance, IDBCursor.prototype.continue, IDBCursor.prototype.continuePrimaryKey])
            ).includes(e)
            ? function () {
                for (var t = arguments.length, n = new Array(t), r = 0; r < t; r++) n[r] = arguments[r];
                return e.apply(Xn(this), n), Jn(Bn.get(this));
              }
            : function () {
                for (var t = arguments.length, n = new Array(t), r = 0; r < t; r++) n[r] = arguments[r];
                return Jn(e.apply(Xn(this), n));
              }
          : function (t) {
              for (var n = arguments.length, r = new Array(n > 1 ? n - 1 : 0), i = 1; i < n; i++) r[i - 1] = arguments[i];
              const s = e.call(Xn(this), t, ...r);
              return Gn.set(s, t.sort ? t.sort() : [t]), Jn(s);
            };
      }
      function Yn(e) {
        return 'function' === typeof e
          ? Qn(e)
          : (e instanceof IDBTransaction &&
              (function (e) {
                if (qn.has(e)) return;
                const t = new Promise((t, n) => {
                  const r = () => {
                      e.removeEventListener('complete', i), e.removeEventListener('error', s), e.removeEventListener('abort', s);
                    },
                    i = () => {
                      t(), r();
                    },
                    s = () => {
                      n(e.error || new DOMException('AbortError', 'AbortError')), r();
                    };
                  e.addEventListener('complete', i), e.addEventListener('error', s), e.addEventListener('abort', s);
                });
                qn.set(e, t);
              })(e),
            Un(e, Vn || (Vn = [IDBDatabase, IDBObjectStore, IDBIndex, IDBCursor, IDBTransaction])) ? new Proxy(e, Wn) : e);
      }
      function Jn(e) {
        if (e instanceof IDBRequest)
          return (function (e) {
            const t = new Promise((t, n) => {
              const r = () => {
                  e.removeEventListener('success', i), e.removeEventListener('error', s);
                },
                i = () => {
                  t(Jn(e.result)), r();
                },
                s = () => {
                  n(e.error), r();
                };
              e.addEventListener('success', i), e.addEventListener('error', s);
            });
            return (
              t
                .then((t) => {
                  t instanceof IDBCursor && Bn.set(t, e);
                })
                .catch(() => {}),
              Kn.set(t, e),
              t
            );
          })(e);
        if (Hn.has(e)) return Hn.get(e);
        const t = Yn(e);
        return t !== e && (Hn.set(e, t), Kn.set(t, e)), t;
      }
      const Xn = (e) => Kn.get(e);
      const $n = ['get', 'getKey', 'getAll', 'getAllKeys', 'count'],
        Zn = ['put', 'add', 'delete', 'clear'],
        er = new Map();
      function tr(e, t) {
        if (!(e instanceof IDBDatabase) || t in e || 'string' !== typeof t) return;
        if (er.get(t)) return er.get(t);
        const n = t.replace(/FromIndex$/, ''),
          r = t !== n,
          i = Zn.includes(n);
        if (!(n in (r ? IDBIndex : IDBObjectStore).prototype) || (!i && !$n.includes(n))) return;
        const s = async function (e) {
          const t = this.transaction(e, i ? 'readwrite' : 'readonly');
          let s = t.store;
          for (var a = arguments.length, o = new Array(a > 1 ? a - 1 : 0), l = 1; l < a; l++) o[l - 1] = arguments[l];
          return r && (s = s.index(o.shift())), (await Promise.all([s[n](...o), i && t.done]))[0];
        };
        return er.set(t, s), s;
      }
      Wn = ((e) => ({ ...e, get: (t, n, r) => tr(t, n) || e.get(t, n, r), has: (t, n) => !!tr(t, n) || e.has(t, n) }))(Wn);
      class nr {
        constructor(e) {
          this.container = e;
        }
        getPlatformInfoString() {
          return this.container
            .getProviders()
            .map((e) => {
              if (
                (function (e) {
                  const t = e.getComponent();
                  return 'VERSION' === (null === t || void 0 === t ? void 0 : t.type);
                })(e)
              ) {
                const t = e.getImmediate();
                return ''.concat(t.library, '/').concat(t.version);
              }
              return null;
            })
            .filter((e) => e)
            .join(' ');
        }
      }
      const rr = '@firebase/app',
        ir = '0.10.4',
        sr = new jn('@firebase/app'),
        ar = '@firebase/app-compat',
        or = '@firebase/analytics-compat',
        lr = '@firebase/analytics',
        cr = '@firebase/app-check-compat',
        ur = '@firebase/app-check',
        dr = '@firebase/auth',
        hr = '@firebase/auth-compat',
        fr = '@firebase/database',
        pr = '@firebase/database-compat',
        mr = '@firebase/functions',
        gr = '@firebase/functions-compat',
        vr = '@firebase/installations',
        yr = '@firebase/installations-compat',
        wr = '@firebase/messaging',
        br = '@firebase/messaging-compat',
        Sr = '@firebase/performance',
        Er = '@firebase/performance-compat',
        Tr = '@firebase/remote-config',
        _r = '@firebase/remote-config-compat',
        Ir = '@firebase/storage',
        xr = '@firebase/storage-compat',
        kr = '@firebase/firestore',
        Cr = '@firebase/vertexai-preview',
        Nr = '@firebase/firestore-compat',
        Pr = 'firebase',
        Dr = '[DEFAULT]',
        Ar = {
          [rr]: 'fire-core',
          [ar]: 'fire-core-compat',
          [lr]: 'fire-analytics',
          [or]: 'fire-analytics-compat',
          [ur]: 'fire-app-check',
          [cr]: 'fire-app-check-compat',
          [dr]: 'fire-auth',
          [hr]: 'fire-auth-compat',
          [fr]: 'fire-rtdb',
          [pr]: 'fire-rtdb-compat',
          [mr]: 'fire-fn',
          [gr]: 'fire-fn-compat',
          [vr]: 'fire-iid',
          [yr]: 'fire-iid-compat',
          [wr]: 'fire-fcm',
          [br]: 'fire-fcm-compat',
          [Sr]: 'fire-perf',
          [Er]: 'fire-perf-compat',
          [Tr]: 'fire-rc',
          [_r]: 'fire-rc-compat',
          [Ir]: 'fire-gcs',
          [xr]: 'fire-gcs-compat',
          [kr]: 'fire-fst',
          [Nr]: 'fire-fst-compat',
          [Cr]: 'fire-vertex',
          'fire-js': 'fire-js',
          [Pr]: 'fire-js-all',
        },
        Or = new Map(),
        Lr = new Map(),
        Rr = new Map();
      function Mr(e, t) {
        try {
          e.container.addComponent(t);
        } catch (Wy) {
          sr.debug('Component '.concat(t.name, ' failed to register with FirebaseApp ').concat(e.name), Wy);
        }
      }
      function Fr(e) {
        const t = e.name;
        if (Rr.has(t)) return sr.debug('There were multiple attempts to register component '.concat(t, '.')), !1;
        Rr.set(t, e);
        for (const n of Or.values()) Mr(n, e);
        for (const n of Lr.values()) Mr(n, e);
        return !0;
      }
      function jr(e, t) {
        const n = e.container.getProvider('heartbeat').getImmediate({ optional: !0 });
        return n && n.triggerHeartbeat(), e.container.getProvider(t);
      }
      function Ur(e) {
        return void 0 !== e.settings;
      }
      const Vr = new yn('app', 'Firebase', {
        'no-app': "No Firebase App '{$appName}' has been created - call initializeApp() first",
        'bad-app-name': "Illegal App name: '{$appName}'",
        'duplicate-app': "Firebase App named '{$appName}' already exists with different options or config",
        'app-deleted': "Firebase App named '{$appName}' already deleted",
        'server-app-deleted': 'Firebase Server App has been deleted',
        'no-options': 'Need to provide options, when not being deployed to hosting via source.',
        'invalid-app-argument': 'firebase.{$appName}() takes either no argument or a Firebase App instance.',
        'invalid-log-argument': 'First argument to `onLog` must be null or a function.',
        'idb-open': 'Error thrown when opening IndexedDB. Original error: {$originalErrorMessage}.',
        'idb-get': 'Error thrown when reading from IndexedDB. Original error: {$originalErrorMessage}.',
        'idb-set': 'Error thrown when writing to IndexedDB. Original error: {$originalErrorMessage}.',
        'idb-delete': 'Error thrown when deleting from IndexedDB. Original error: {$originalErrorMessage}.',
        'finalization-registry-not-supported':
          'FirebaseServerApp deleteOnDeref field defined but the JS runtime does not support FinalizationRegistry.',
        'invalid-server-app-environment': 'FirebaseServerApp is not for use in browser environments.',
      });
      class zr {
        constructor(e, t, n) {
          (this._isDeleted = !1),
            (this._options = Object.assign({}, e)),
            (this._config = Object.assign({}, t)),
            (this._name = t.name),
            (this._automaticDataCollectionEnabled = t.automaticDataCollectionEnabled),
            (this._container = n),
            this.container.addComponent(new Cn('app', () => this, 'PUBLIC'));
        }
        get automaticDataCollectionEnabled() {
          return this.checkDestroyed(), this._automaticDataCollectionEnabled;
        }
        set automaticDataCollectionEnabled(e) {
          this.checkDestroyed(), (this._automaticDataCollectionEnabled = e);
        }
        get name() {
          return this.checkDestroyed(), this._name;
        }
        get options() {
          return this.checkDestroyed(), this._options;
        }
        get config() {
          return this.checkDestroyed(), this._config;
        }
        get container() {
          return this._container;
        }
        get isDeleted() {
          return this._isDeleted;
        }
        set isDeleted(e) {
          this._isDeleted = e;
        }
        checkDestroyed() {
          if (this.isDeleted) throw Vr.create('app-deleted', { appName: this._name });
        }
      }
      const Br = '10.12.1';
      function qr(e) {
        let t = arguments.length > 1 && void 0 !== arguments[1] ? arguments[1] : {},
          n = e;
        if ('object' !== typeof t) {
          t = { name: t };
        }
        const r = Object.assign({ name: Dr, automaticDataCollectionEnabled: !1 }, t),
          i = r.name;
        if ('string' !== typeof i || !i) throw Vr.create('bad-app-name', { appName: String(i) });
        if ((n || (n = dn()), !n)) throw Vr.create('no-options');
        const s = Or.get(i);
        if (s) {
          if (bn(n, s.options) && bn(r, s.config)) return s;
          throw Vr.create('duplicate-app', { appName: i });
        }
        const a = new Dn(i);
        for (const l of Rr.values()) a.addComponent(l);
        const o = new zr(n, r, a);
        return Or.set(i, o), o;
      }
      function Gr() {
        let e = arguments.length > 0 && void 0 !== arguments[0] ? arguments[0] : Dr;
        const t = Or.get(e);
        if (!t && e === Dr && dn()) return qr();
        if (!t) throw Vr.create('no-app', { appName: e });
        return t;
      }
      function Hr(e, t, n) {
        var r;
        let i = null !== (r = Ar[e]) && void 0 !== r ? r : e;
        n && (i += '-'.concat(n));
        const s = i.match(/\s|\//),
          a = t.match(/\s|\//);
        if (s || a) {
          const e = ['Unable to register library "'.concat(i, '" with version "').concat(t, '":')];
          return (
            s && e.push('library name "'.concat(i, '" contains illegal characters (whitespace or "/")')),
            s && a && e.push('and'),
            a && e.push('version name "'.concat(t, '" contains illegal characters (whitespace or "/")')),
            void sr.warn(e.join(' '))
          );
        }
        Fr(new Cn(''.concat(i, '-version'), () => ({ library: i, version: t }), 'VERSION'));
      }
      const Kr = 'firebase-heartbeat-database',
        Wr = 1,
        Qr = 'firebase-heartbeat-store';
      let Yr = null;
      function Jr() {
        return (
          Yr ||
            (Yr = (function (e, t) {
              let {
                blocked: n,
                upgrade: r,
                blocking: i,
                terminated: s,
              } = arguments.length > 2 && void 0 !== arguments[2] ? arguments[2] : {};
              const a = indexedDB.open(e, t),
                o = Jn(a);
              return (
                r &&
                  a.addEventListener('upgradeneeded', (e) => {
                    r(Jn(a.result), e.oldVersion, e.newVersion, Jn(a.transaction), e);
                  }),
                n && a.addEventListener('blocked', (e) => n(e.oldVersion, e.newVersion, e)),
                o
                  .then((e) => {
                    s && e.addEventListener('close', () => s()),
                      i && e.addEventListener('versionchange', (e) => i(e.oldVersion, e.newVersion, e));
                  })
                  .catch(() => {}),
                o
              );
            })(Kr, Wr, {
              upgrade: (e, t) => {
                if (0 === t)
                  try {
                    e.createObjectStore(Qr);
                  } catch (Wy) {
                    console.warn(Wy);
                  }
              },
            }).catch((e) => {
              throw Vr.create('idb-open', { originalErrorMessage: e.message });
            })),
          Yr
        );
      }
      async function Xr(e, t) {
        try {
          const n = (await Jr()).transaction(Qr, 'readwrite'),
            r = n.objectStore(Qr);
          await r.put(t, $r(e)), await n.done;
        } catch (Wy) {
          if (Wy instanceof vn) sr.warn(Wy.message);
          else {
            const t = Vr.create('idb-set', { originalErrorMessage: null === Wy || void 0 === Wy ? void 0 : Wy.message });
            sr.warn(t.message);
          }
        }
      }
      function $r(e) {
        return ''.concat(e.name, '!').concat(e.options.appId);
      }
      class Zr {
        constructor(e) {
          (this.container = e), (this._heartbeatsCache = null);
          const t = this.container.getProvider('app').getImmediate();
          (this._storage = new ti(t)),
            (this._heartbeatsCachePromise = this._storage.read().then((e) => ((this._heartbeatsCache = e), e)));
        }
        async triggerHeartbeat() {
          var e, t;
          const n = this.container.getProvider('platform-logger').getImmediate().getPlatformInfoString(),
            r = ei();
          if (
            (null != (null === (e = this._heartbeatsCache) || void 0 === e ? void 0 : e.heartbeats) ||
              ((this._heartbeatsCache = await this._heartbeatsCachePromise),
              null != (null === (t = this._heartbeatsCache) || void 0 === t ? void 0 : t.heartbeats))) &&
            this._heartbeatsCache.lastSentHeartbeatDate !== r &&
            !this._heartbeatsCache.heartbeats.some((e) => e.date === r)
          )
            return (
              this._heartbeatsCache.heartbeats.push({ date: r, agent: n }),
              (this._heartbeatsCache.heartbeats = this._heartbeatsCache.heartbeats.filter((e) => {
                const t = new Date(e.date).valueOf();
                return Date.now() - t <= 2592e6;
              })),
              this._storage.overwrite(this._heartbeatsCache)
            );
        }
        async getHeartbeatsHeader() {
          var e;
          if (
            (null === this._heartbeatsCache && (await this._heartbeatsCachePromise),
            null == (null === (e = this._heartbeatsCache) || void 0 === e ? void 0 : e.heartbeats) ||
              0 === this._heartbeatsCache.heartbeats.length)
          )
            return '';
          const t = ei(),
            { heartbeatsToSend: n, unsentEntries: r } = (function (e) {
              let t = arguments.length > 1 && void 0 !== arguments[1] ? arguments[1] : 1024;
              const n = [];
              let r = e.slice();
              for (const i of e) {
                const e = n.find((e) => e.agent === i.agent);
                if (e) {
                  if ((e.dates.push(i.date), ni(n) > t)) {
                    e.dates.pop();
                    break;
                  }
                } else if ((n.push({ agent: i.agent, dates: [i.date] }), ni(n) > t)) {
                  n.pop();
                  break;
                }
                r = r.slice(1);
              }
              return { heartbeatsToSend: n, unsentEntries: r };
            })(this._heartbeatsCache.heartbeats),
            i = an(JSON.stringify({ version: 2, heartbeats: n }));
          return (
            (this._heartbeatsCache.lastSentHeartbeatDate = t),
            r.length > 0
              ? ((this._heartbeatsCache.heartbeats = r), await this._storage.overwrite(this._heartbeatsCache))
              : ((this._heartbeatsCache.heartbeats = []), this._storage.overwrite(this._heartbeatsCache)),
            i
          );
        }
      }
      function ei() {
        return new Date().toISOString().substring(0, 10);
      }
      class ti {
        constructor(e) {
          (this.app = e), (this._canUseIndexedDBPromise = this.runIndexedDBEnvironmentCheck());
        }
        async runIndexedDBEnvironmentCheck() {
          return (
            !!gn() &&
            new Promise((e, t) => {
              try {
                let n = !0;
                const r = 'validate-browser-context-for-indexeddb-analytics-module',
                  i = self.indexedDB.open(r);
                (i.onsuccess = () => {
                  i.result.close(), n || self.indexedDB.deleteDatabase(r), e(!0);
                }),
                  (i.onupgradeneeded = () => {
                    n = !1;
                  }),
                  (i.onerror = () => {
                    var e;
                    t((null === (e = i.error) || void 0 === e ? void 0 : e.message) || '');
                  });
              } catch (n) {
                t(n);
              }
            })
              .then(() => !0)
              .catch(() => !1)
          );
        }
        async read() {
          if (await this._canUseIndexedDBPromise) {
            const e = await (async function (e) {
              try {
                const t = (await Jr()).transaction(Qr),
                  n = await t.objectStore(Qr).get($r(e));
                return await t.done, n;
              } catch (Wy) {
                if (Wy instanceof vn) sr.warn(Wy.message);
                else {
                  const t = Vr.create('idb-get', { originalErrorMessage: null === Wy || void 0 === Wy ? void 0 : Wy.message });
                  sr.warn(t.message);
                }
              }
            })(this.app);
            return (null === e || void 0 === e ? void 0 : e.heartbeats) ? e : { heartbeats: [] };
          }
          return { heartbeats: [] };
        }
        async overwrite(e) {
          var t;
          if (await this._canUseIndexedDBPromise) {
            const n = await this.read();
            return Xr(this.app, {
              lastSentHeartbeatDate: null !== (t = e.lastSentHeartbeatDate) && void 0 !== t ? t : n.lastSentHeartbeatDate,
              heartbeats: e.heartbeats,
            });
          }
        }
        async add(e) {
          var t;
          if (await this._canUseIndexedDBPromise) {
            const n = await this.read();
            return Xr(this.app, {
              lastSentHeartbeatDate: null !== (t = e.lastSentHeartbeatDate) && void 0 !== t ? t : n.lastSentHeartbeatDate,
              heartbeats: [...n.heartbeats, ...e.heartbeats],
            });
          }
        }
      }
      function ni(e) {
        return an(JSON.stringify({ version: 2, heartbeats: e })).length;
      }
      var ri;
      (ri = ''),
        Fr(new Cn('platform-logger', (e) => new nr(e), 'PRIVATE')),
        Fr(new Cn('heartbeat', (e) => new Zr(e), 'PRIVATE')),
        Hr(rr, ir, ri),
        Hr(rr, ir, 'esm2017'),
        Hr('fire-js', '');
      function ii(e, t) {
        var n = {};
        for (var r in e) Object.prototype.hasOwnProperty.call(e, r) && t.indexOf(r) < 0 && (n[r] = e[r]);
        if (null != e && 'function' === typeof Object.getOwnPropertySymbols) {
          var i = 0;
          for (r = Object.getOwnPropertySymbols(e); i < r.length; i++)
            t.indexOf(r[i]) < 0 && Object.prototype.propertyIsEnumerable.call(e, r[i]) && (n[r[i]] = e[r[i]]);
        }
        return n;
      }
      Object.create;
      Object.create;
      'function' === typeof SuppressedError && SuppressedError;
      function si() {
        return {
          'dependent-sdk-initialized-before-auth':
            'Another Firebase SDK was initialized and is trying to use Auth before Auth is initialized. Please be sure to call `initializeAuth` or `getAuth` before starting any other Firebase SDK.',
        };
      }
      const ai = si,
        oi = new yn('auth', 'Firebase', {
          'dependent-sdk-initialized-before-auth':
            'Another Firebase SDK was initialized and is trying to use Auth before Auth is initialized. Please be sure to call `initializeAuth` or `getAuth` before starting any other Firebase SDK.',
        }),
        li = new jn('@firebase/auth');
      function ci(e) {
        if (li.logLevel <= On.ERROR) {
          for (var t = arguments.length, n = new Array(t > 1 ? t - 1 : 0), r = 1; r < t; r++) n[r - 1] = arguments[r];
          li.error('Auth ('.concat(Br, '): ').concat(e), ...n);
        }
      }
      function ui(e) {
        for (var t = arguments.length, n = new Array(t > 1 ? t - 1 : 0), r = 1; r < t; r++) n[r - 1] = arguments[r];
        throw pi(e, ...n);
      }
      function di(e) {
        for (var t = arguments.length, n = new Array(t > 1 ? t - 1 : 0), r = 1; r < t; r++) n[r - 1] = arguments[r];
        return pi(e, ...n);
      }
      function hi(e, t, n) {
        const r = Object.assign(Object.assign({}, ai()), { [t]: n });
        return new yn('auth', 'Firebase', r).create(t, { appName: e.name });
      }
      function fi(e) {
        return hi(
          e,
          'operation-not-supported-in-this-environment',
          'Operations that alter the current user are not supported in conjunction with FirebaseServerApp',
        );
      }
      function pi(e) {
        for (var t = arguments.length, n = new Array(t > 1 ? t - 1 : 0), r = 1; r < t; r++) n[r - 1] = arguments[r];
        if ('string' !== typeof e) {
          const t = n[0],
            r = [...n.slice(1)];
          return r[0] && (r[0].appName = e.name), e._errorFactory.create(t, ...r);
        }
        return oi.create(e, ...n);
      }
      function mi(e, t) {
        if (!e) {
          for (var n = arguments.length, r = new Array(n > 2 ? n - 2 : 0), i = 2; i < n; i++) r[i - 2] = arguments[i];
          throw pi(t, ...r);
        }
      }
      function gi(e) {
        const t = 'INTERNAL ASSERTION FAILED: ' + e;
        throw (ci(t), new Error(t));
      }
      function vi(e, t) {
        e || gi(t);
      }
      function yi() {
        var e;
        return ('undefined' !== typeof self && (null === (e = self.location) || void 0 === e ? void 0 : e.href)) || '';
      }
      function wi() {
        return 'http:' === bi() || 'https:' === bi();
      }
      function bi() {
        var e;
        return ('undefined' !== typeof self && (null === (e = self.location) || void 0 === e ? void 0 : e.protocol)) || null;
      }
      function Si() {
        return (
          !(
            'undefined' !== typeof navigator &&
            navigator &&
            'onLine' in navigator &&
            'boolean' === typeof navigator.onLine &&
            (wi() ||
              (function () {
                const e = 'object' === typeof chrome ? chrome.runtime : 'object' === typeof browser ? browser.runtime : void 0;
                return 'object' === typeof e && void 0 !== e.id;
              })() ||
              'connection' in navigator)
          ) || navigator.onLine
        );
      }
      class Ei {
        constructor(e, t) {
          (this.shortDelay = e),
            (this.longDelay = t),
            vi(t > e, 'Short delay should be less than long delay!'),
            (this.isMobile =
              ('undefined' !== typeof window &&
                !!(window.cordova || window.phonegap || window.PhoneGap) &&
                /ios|iphone|ipod|ipad|android|blackberry|iemobile/i.test(pn())) ||
              ('object' === typeof navigator && 'ReactNative' === navigator.product));
        }
        get() {
          return Si() ? (this.isMobile ? this.longDelay : this.shortDelay) : Math.min(5e3, this.shortDelay);
        }
      }
      function Ti(e, t) {
        vi(e.emulator, 'Emulator should always be set here');
        const { url: n } = e.emulator;
        return t ? ''.concat(n).concat(t.startsWith('/') ? t.slice(1) : t) : n;
      }
      class _i {
        static initialize(e, t, n) {
          (this.fetchImpl = e), t && (this.headersImpl = t), n && (this.responseImpl = n);
        }
        static fetch() {
          return this.fetchImpl
            ? this.fetchImpl
            : 'undefined' !== typeof self && 'fetch' in self
              ? self.fetch
              : 'undefined' !== typeof globalThis && globalThis.fetch
                ? globalThis.fetch
                : 'undefined' !== typeof fetch
                  ? fetch
                  : void gi(
                      'Could not find fetch implementation, make sure you call FetchProvider.initialize() with an appropriate polyfill',
                    );
        }
        static headers() {
          return this.headersImpl
            ? this.headersImpl
            : 'undefined' !== typeof self && 'Headers' in self
              ? self.Headers
              : 'undefined' !== typeof globalThis && globalThis.Headers
                ? globalThis.Headers
                : 'undefined' !== typeof Headers
                  ? Headers
                  : void gi(
                      'Could not find Headers implementation, make sure you call FetchProvider.initialize() with an appropriate polyfill',
                    );
        }
        static response() {
          return this.responseImpl
            ? this.responseImpl
            : 'undefined' !== typeof self && 'Response' in self
              ? self.Response
              : 'undefined' !== typeof globalThis && globalThis.Response
                ? globalThis.Response
                : 'undefined' !== typeof Response
                  ? Response
                  : void gi(
                      'Could not find Response implementation, make sure you call FetchProvider.initialize() with an appropriate polyfill',
                    );
        }
      }
      const Ii = {
          CREDENTIAL_MISMATCH: 'custom-token-mismatch',
          MISSING_CUSTOM_TOKEN: 'internal-error',
          INVALID_IDENTIFIER: 'invalid-email',
          MISSING_CONTINUE_URI: 'internal-error',
          INVALID_PASSWORD: 'wrong-password',
          MISSING_PASSWORD: 'missing-password',
          INVALID_LOGIN_CREDENTIALS: 'invalid-credential',
          EMAIL_EXISTS: 'email-already-in-use',
          PASSWORD_LOGIN_DISABLED: 'operation-not-allowed',
          INVALID_IDP_RESPONSE: 'invalid-credential',
          INVALID_PENDING_TOKEN: 'invalid-credential',
          FEDERATED_USER_ID_ALREADY_LINKED: 'credential-already-in-use',
          MISSING_REQ_TYPE: 'internal-error',
          EMAIL_NOT_FOUND: 'user-not-found',
          RESET_PASSWORD_EXCEED_LIMIT: 'too-many-requests',
          EXPIRED_OOB_CODE: 'expired-action-code',
          INVALID_OOB_CODE: 'invalid-action-code',
          MISSING_OOB_CODE: 'internal-error',
          CREDENTIAL_TOO_OLD_LOGIN_AGAIN: 'requires-recent-login',
          INVALID_ID_TOKEN: 'invalid-user-token',
          TOKEN_EXPIRED: 'user-token-expired',
          USER_NOT_FOUND: 'user-token-expired',
          TOO_MANY_ATTEMPTS_TRY_LATER: 'too-many-requests',
          PASSWORD_DOES_NOT_MEET_REQUIREMENTS: 'password-does-not-meet-requirements',
          INVALID_CODE: 'invalid-verification-code',
          INVALID_SESSION_INFO: 'invalid-verification-id',
          INVALID_TEMPORARY_PROOF: 'invalid-credential',
          MISSING_SESSION_INFO: 'missing-verification-id',
          SESSION_EXPIRED: 'code-expired',
          MISSING_ANDROID_PACKAGE_NAME: 'missing-android-pkg-name',
          UNAUTHORIZED_DOMAIN: 'unauthorized-continue-uri',
          INVALID_OAUTH_CLIENT_ID: 'invalid-oauth-client-id',
          ADMIN_ONLY_OPERATION: 'admin-restricted-operation',
          INVALID_MFA_PENDING_CREDENTIAL: 'invalid-multi-factor-session',
          MFA_ENROLLMENT_NOT_FOUND: 'multi-factor-info-not-found',
          MISSING_MFA_ENROLLMENT_ID: 'missing-multi-factor-info',
          MISSING_MFA_PENDING_CREDENTIAL: 'missing-multi-factor-session',
          SECOND_FACTOR_EXISTS: 'second-factor-already-in-use',
          SECOND_FACTOR_LIMIT_EXCEEDED: 'maximum-second-factor-count-exceeded',
          BLOCKING_FUNCTION_ERROR_RESPONSE: 'internal-error',
          RECAPTCHA_NOT_ENABLED: 'recaptcha-not-enabled',
          MISSING_RECAPTCHA_TOKEN: 'missing-recaptcha-token',
          INVALID_RECAPTCHA_TOKEN: 'invalid-recaptcha-token',
          INVALID_RECAPTCHA_ACTION: 'invalid-recaptcha-action',
          MISSING_CLIENT_TYPE: 'missing-client-type',
          MISSING_RECAPTCHA_VERSION: 'missing-recaptcha-version',
          INVALID_RECAPTCHA_VERSION: 'invalid-recaptcha-version',
          INVALID_REQ_TYPE: 'invalid-req-type',
        },
        xi = new Ei(3e4, 6e4);
      function ki(e, t) {
        return e.tenantId && !t.tenantId ? Object.assign(Object.assign({}, t), { tenantId: e.tenantId }) : t;
      }
      async function Ci(e, t, n, r) {
        return Ni(e, arguments.length > 4 && void 0 !== arguments[4] ? arguments[4] : {}, async () => {
          let i = {},
            s = {};
          r && ('GET' === t ? (s = r) : (i = { body: JSON.stringify(r) }));
          const a = En(Object.assign({ key: e.config.apiKey }, s)).slice(1),
            o = await e._getAdditionalHeaders();
          return (
            (o['Content-Type'] = 'application/json'),
            e.languageCode && (o['X-Firebase-Locale'] = e.languageCode),
            _i.fetch()(Di(e, e.config.apiHost, n, a), Object.assign({ method: t, headers: o, referrerPolicy: 'no-referrer' }, i))
          );
        });
      }
      async function Ni(e, t, n) {
        e._canInitEmulator = !1;
        const r = Object.assign(Object.assign({}, Ii), t);
        try {
          const t = new Oi(e),
            i = await Promise.race([n(), t.promise]);
          t.clearNetworkTimeout();
          const s = await i.json();
          if ('needConfirmation' in s) throw Li(e, 'account-exists-with-different-credential', s);
          if (i.ok && !('errorMessage' in s)) return s;
          {
            const t = i.ok ? s.errorMessage : s.error.message,
              [n, a] = t.split(' : ');
            if ('FEDERATED_USER_ID_ALREADY_LINKED' === n) throw Li(e, 'credential-already-in-use', s);
            if ('EMAIL_EXISTS' === n) throw Li(e, 'email-already-in-use', s);
            if ('USER_DISABLED' === n) throw Li(e, 'user-disabled', s);
            const o = r[n] || n.toLowerCase().replace(/[_\s]+/g, '-');
            if (a) throw hi(e, o, a);
            ui(e, o);
          }
        } catch (Wy) {
          if (Wy instanceof vn) throw Wy;
          ui(e, 'network-request-failed', { message: String(Wy) });
        }
      }
      async function Pi(e, t, n, r) {
        let i = arguments.length > 4 && void 0 !== arguments[4] ? arguments[4] : {};
        const s = await Ci(e, t, n, r, i);
        return 'mfaPendingCredential' in s && ui(e, 'multi-factor-auth-required', { _serverResponse: s }), s;
      }
      function Di(e, t, n, r) {
        const i = ''.concat(t).concat(n, '?').concat(r);
        return e.config.emulator ? Ti(e.config, i) : ''.concat(e.config.apiScheme, '://').concat(i);
      }
      function Ai(e) {
        switch (e) {
          case 'ENFORCE':
            return 'ENFORCE';
          case 'AUDIT':
            return 'AUDIT';
          case 'OFF':
            return 'OFF';
          default:
            return 'ENFORCEMENT_STATE_UNSPECIFIED';
        }
      }
      class Oi {
        constructor(e) {
          (this.auth = e),
            (this.timer = null),
            (this.promise = new Promise((e, t) => {
              this.timer = setTimeout(() => t(di(this.auth, 'network-request-failed')), xi.get());
            }));
        }
        clearNetworkTimeout() {
          clearTimeout(this.timer);
        }
      }
      function Li(e, t, n) {
        const r = { appName: e.name };
        n.email && (r.email = n.email), n.phoneNumber && (r.phoneNumber = n.phoneNumber);
        const i = di(e, t, r);
        return (i.customData._tokenResponse = n), i;
      }
      function Ri(e) {
        return void 0 !== e && void 0 !== e.enterprise;
      }
      class Mi {
        constructor(e) {
          if (((this.siteKey = ''), (this.recaptchaEnforcementState = []), void 0 === e.recaptchaKey))
            throw new Error('recaptchaKey undefined');
          (this.siteKey = e.recaptchaKey.split('/')[3]), (this.recaptchaEnforcementState = e.recaptchaEnforcementState);
        }
        getProviderEnforcementState(e) {
          if (!this.recaptchaEnforcementState || 0 === this.recaptchaEnforcementState.length) return null;
          for (const t of this.recaptchaEnforcementState) if (t.provider && t.provider === e) return Ai(t.enforcementState);
          return null;
        }
        isProviderEnabled(e) {
          return 'ENFORCE' === this.getProviderEnforcementState(e) || 'AUDIT' === this.getProviderEnforcementState(e);
        }
      }
      async function Fi(e, t) {
        return Ci(e, 'GET', '/v2/recaptchaConfig', ki(e, t));
      }
      async function ji(e, t) {
        return Ci(e, 'POST', '/v1/accounts:lookup', t);
      }
      function Ui(e) {
        if (e)
          try {
            const t = new Date(Number(e));
            if (!isNaN(t.getTime())) return t.toUTCString();
          } catch (Wy) {}
      }
      function Vi(e) {
        return 1e3 * Number(e);
      }
      function zi(e) {
        const [t, n, r] = e.split('.');
        if (void 0 === t || void 0 === n || void 0 === r) return ci('JWT malformed, contained fewer than 3 sections'), null;
        try {
          const e = on(n);
          return e ? JSON.parse(e) : (ci('Failed to decode base64 JWT payload'), null);
        } catch (Wy) {
          return ci('Caught error parsing JWT payload as JSON', null === Wy || void 0 === Wy ? void 0 : Wy.toString()), null;
        }
      }
      function Bi(e) {
        const t = zi(e);
        return (
          mi(t, 'internal-error'),
          mi('undefined' !== typeof t.exp, 'internal-error'),
          mi('undefined' !== typeof t.iat, 'internal-error'),
          Number(t.exp) - Number(t.iat)
        );
      }
      async function qi(e, t) {
        if (arguments.length > 2 && void 0 !== arguments[2] && arguments[2]) return t;
        try {
          return await t;
        } catch (Wy) {
          throw (
            (Wy instanceof vn &&
              (function (e) {
                let { code: t } = e;
                return t === 'auth/'.concat('user-disabled') || t === 'auth/'.concat('user-token-expired');
              })(Wy) &&
              e.auth.currentUser === e &&
              (await e.auth.signOut()),
            Wy)
          );
        }
      }
      class Gi {
        constructor(e) {
          (this.user = e), (this.isRunning = !1), (this.timerId = null), (this.errorBackoff = 3e4);
        }
        _start() {
          this.isRunning || ((this.isRunning = !0), this.schedule());
        }
        _stop() {
          this.isRunning && ((this.isRunning = !1), null !== this.timerId && clearTimeout(this.timerId));
        }
        getInterval(e) {
          var t;
          if (e) {
            const e = this.errorBackoff;
            return (this.errorBackoff = Math.min(2 * this.errorBackoff, 96e4)), e;
          }
          {
            this.errorBackoff = 3e4;
            const e = (null !== (t = this.user.stsTokenManager.expirationTime) && void 0 !== t ? t : 0) - Date.now() - 3e5;
            return Math.max(0, e);
          }
        }
        schedule() {
          let e = arguments.length > 0 && void 0 !== arguments[0] && arguments[0];
          if (!this.isRunning) return;
          const t = this.getInterval(e);
          this.timerId = setTimeout(async () => {
            await this.iteration();
          }, t);
        }
        async iteration() {
          try {
            await this.user.getIdToken(!0);
          } catch (Wy) {
            return void (
              (null === Wy || void 0 === Wy ? void 0 : Wy.code) === 'auth/'.concat('network-request-failed') && this.schedule(!0)
            );
          }
          this.schedule();
        }
      }
      class Hi {
        constructor(e, t) {
          (this.createdAt = e), (this.lastLoginAt = t), this._initializeTime();
        }
        _initializeTime() {
          (this.lastSignInTime = Ui(this.lastLoginAt)), (this.creationTime = Ui(this.createdAt));
        }
        _copy(e) {
          (this.createdAt = e.createdAt), (this.lastLoginAt = e.lastLoginAt), this._initializeTime();
        }
        toJSON() {
          return { createdAt: this.createdAt, lastLoginAt: this.lastLoginAt };
        }
      }
      async function Ki(e) {
        var t;
        const n = e.auth,
          r = await e.getIdToken(),
          i = await qi(e, ji(n, { idToken: r }));
        mi(null === i || void 0 === i ? void 0 : i.users.length, n, 'internal-error');
        const s = i.users[0];
        e._notifyReloadListener(s);
        const a = (null === (t = s.providerUserInfo) || void 0 === t ? void 0 : t.length) ? Wi(s.providerUserInfo) : [],
          o = ((l = e.providerData), (c = a), [...l.filter((e) => !c.some((t) => t.providerId === e.providerId)), ...c]);
        var l, c;
        const u = e.isAnonymous,
          d = !(e.email && s.passwordHash) && !(null === o || void 0 === o ? void 0 : o.length),
          h = !!u && d,
          f = {
            uid: s.localId,
            displayName: s.displayName || null,
            photoURL: s.photoUrl || null,
            email: s.email || null,
            emailVerified: s.emailVerified || !1,
            phoneNumber: s.phoneNumber || null,
            tenantId: s.tenantId || null,
            providerData: o,
            metadata: new Hi(s.createdAt, s.lastLoginAt),
            isAnonymous: h,
          };
        Object.assign(e, f);
      }
      function Wi(e) {
        return e.map((e) => {
          var { providerId: t } = e,
            n = ii(e, ['providerId']);
          return {
            providerId: t,
            uid: n.rawId || '',
            displayName: n.displayName || null,
            email: n.email || null,
            phoneNumber: n.phoneNumber || null,
            photoURL: n.photoUrl || null,
          };
        });
      }
      class Qi {
        constructor() {
          (this.refreshToken = null), (this.accessToken = null), (this.expirationTime = null);
        }
        get isExpired() {
          return !this.expirationTime || Date.now() > this.expirationTime - 3e4;
        }
        updateFromServerResponse(e) {
          mi(e.idToken, 'internal-error'),
            mi('undefined' !== typeof e.idToken, 'internal-error'),
            mi('undefined' !== typeof e.refreshToken, 'internal-error');
          const t = 'expiresIn' in e && 'undefined' !== typeof e.expiresIn ? Number(e.expiresIn) : Bi(e.idToken);
          this.updateTokensAndExpiration(e.idToken, e.refreshToken, t);
        }
        updateFromIdToken(e) {
          mi(0 !== e.length, 'internal-error');
          const t = Bi(e);
          this.updateTokensAndExpiration(e, null, t);
        }
        async getToken(e) {
          return (arguments.length > 1 && void 0 !== arguments[1] && arguments[1]) || !this.accessToken || this.isExpired
            ? (mi(this.refreshToken, e, 'user-token-expired'),
              this.refreshToken ? (await this.refresh(e, this.refreshToken), this.accessToken) : null)
            : this.accessToken;
        }
        clearRefreshToken() {
          this.refreshToken = null;
        }
        async refresh(e, t) {
          const {
            accessToken: n,
            refreshToken: r,
            expiresIn: i,
          } = await (async function (e, t) {
            const n = await Ni(e, {}, async () => {
              const n = En({ grant_type: 'refresh_token', refresh_token: t }).slice(1),
                { tokenApiHost: r, apiKey: i } = e.config,
                s = Di(e, r, '/v1/token', 'key='.concat(i)),
                a = await e._getAdditionalHeaders();
              return (
                (a['Content-Type'] = 'application/x-www-form-urlencoded'), _i.fetch()(s, { method: 'POST', headers: a, body: n })
              );
            });
            return { accessToken: n.access_token, expiresIn: n.expires_in, refreshToken: n.refresh_token };
          })(e, t);
          this.updateTokensAndExpiration(n, r, Number(i));
        }
        updateTokensAndExpiration(e, t, n) {
          (this.refreshToken = t || null), (this.accessToken = e || null), (this.expirationTime = Date.now() + 1e3 * n);
        }
        static fromJSON(e, t) {
          const { refreshToken: n, accessToken: r, expirationTime: i } = t,
            s = new Qi();
          return (
            n && (mi('string' === typeof n, 'internal-error', { appName: e }), (s.refreshToken = n)),
            r && (mi('string' === typeof r, 'internal-error', { appName: e }), (s.accessToken = r)),
            i && (mi('number' === typeof i, 'internal-error', { appName: e }), (s.expirationTime = i)),
            s
          );
        }
        toJSON() {
          return { refreshToken: this.refreshToken, accessToken: this.accessToken, expirationTime: this.expirationTime };
        }
        _assign(e) {
          (this.accessToken = e.accessToken), (this.refreshToken = e.refreshToken), (this.expirationTime = e.expirationTime);
        }
        _clone() {
          return Object.assign(new Qi(), this.toJSON());
        }
        _performRefresh() {
          return gi('not implemented');
        }
      }
      function Yi(e, t) {
        mi('string' === typeof e || 'undefined' === typeof e, 'internal-error', { appName: t });
      }
      class Ji {
        constructor(e) {
          var { uid: t, auth: n, stsTokenManager: r } = e,
            i = ii(e, ['uid', 'auth', 'stsTokenManager']);
          (this.providerId = 'firebase'),
            (this.proactiveRefresh = new Gi(this)),
            (this.reloadUserInfo = null),
            (this.reloadListener = null),
            (this.uid = t),
            (this.auth = n),
            (this.stsTokenManager = r),
            (this.accessToken = r.accessToken),
            (this.displayName = i.displayName || null),
            (this.email = i.email || null),
            (this.emailVerified = i.emailVerified || !1),
            (this.phoneNumber = i.phoneNumber || null),
            (this.photoURL = i.photoURL || null),
            (this.isAnonymous = i.isAnonymous || !1),
            (this.tenantId = i.tenantId || null),
            (this.providerData = i.providerData ? [...i.providerData] : []),
            (this.metadata = new Hi(i.createdAt || void 0, i.lastLoginAt || void 0));
        }
        async getIdToken(e) {
          const t = await qi(this, this.stsTokenManager.getToken(this.auth, e));
          return (
            mi(t, this.auth, 'internal-error'),
            this.accessToken !== t &&
              ((this.accessToken = t), await this.auth._persistUserIfCurrent(this), this.auth._notifyListenersIfCurrent(this)),
            t
          );
        }
        getIdTokenResult(e) {
          return (async function (e) {
            let t = arguments.length > 1 && void 0 !== arguments[1] && arguments[1];
            const n = kn(e),
              r = await n.getIdToken(t),
              i = zi(r);
            mi(i && i.exp && i.auth_time && i.iat, n.auth, 'internal-error');
            const s = 'object' === typeof i.firebase ? i.firebase : void 0,
              a = null === s || void 0 === s ? void 0 : s.sign_in_provider;
            return {
              claims: i,
              token: r,
              authTime: Ui(Vi(i.auth_time)),
              issuedAtTime: Ui(Vi(i.iat)),
              expirationTime: Ui(Vi(i.exp)),
              signInProvider: a || null,
              signInSecondFactor: (null === s || void 0 === s ? void 0 : s.sign_in_second_factor) || null,
            };
          })(this, e);
        }
        reload() {
          return (async function (e) {
            const t = kn(e);
            await Ki(t), await t.auth._persistUserIfCurrent(t), t.auth._notifyListenersIfCurrent(t);
          })(this);
        }
        _assign(e) {
          this !== e &&
            (mi(this.uid === e.uid, this.auth, 'internal-error'),
            (this.displayName = e.displayName),
            (this.photoURL = e.photoURL),
            (this.email = e.email),
            (this.emailVerified = e.emailVerified),
            (this.phoneNumber = e.phoneNumber),
            (this.isAnonymous = e.isAnonymous),
            (this.tenantId = e.tenantId),
            (this.providerData = e.providerData.map((e) => Object.assign({}, e))),
            this.metadata._copy(e.metadata),
            this.stsTokenManager._assign(e.stsTokenManager));
        }
        _clone(e) {
          const t = new Ji(Object.assign(Object.assign({}, this), { auth: e, stsTokenManager: this.stsTokenManager._clone() }));
          return t.metadata._copy(this.metadata), t;
        }
        _onReload(e) {
          mi(!this.reloadListener, this.auth, 'internal-error'),
            (this.reloadListener = e),
            this.reloadUserInfo && (this._notifyReloadListener(this.reloadUserInfo), (this.reloadUserInfo = null));
        }
        _notifyReloadListener(e) {
          this.reloadListener ? this.reloadListener(e) : (this.reloadUserInfo = e);
        }
        _startProactiveRefresh() {
          this.proactiveRefresh._start();
        }
        _stopProactiveRefresh() {
          this.proactiveRefresh._stop();
        }
        async _updateTokensIfNecessary(e) {
          let t = arguments.length > 1 && void 0 !== arguments[1] && arguments[1],
            n = !1;
          e.idToken &&
            e.idToken !== this.stsTokenManager.accessToken &&
            (this.stsTokenManager.updateFromServerResponse(e), (n = !0)),
            t && (await Ki(this)),
            await this.auth._persistUserIfCurrent(this),
            n && this.auth._notifyListenersIfCurrent(this);
        }
        async delete() {
          if (Ur(this.auth.app)) return Promise.reject(fi(this.auth));
          const e = await this.getIdToken();
          return (
            await qi(
              this,
              (async function (e, t) {
                return Ci(e, 'POST', '/v1/accounts:delete', t);
              })(this.auth, { idToken: e }),
            ),
            this.stsTokenManager.clearRefreshToken(),
            this.auth.signOut()
          );
        }
        toJSON() {
          return Object.assign(
            Object.assign(
              {
                uid: this.uid,
                email: this.email || void 0,
                emailVerified: this.emailVerified,
                displayName: this.displayName || void 0,
                isAnonymous: this.isAnonymous,
                photoURL: this.photoURL || void 0,
                phoneNumber: this.phoneNumber || void 0,
                tenantId: this.tenantId || void 0,
                providerData: this.providerData.map((e) => Object.assign({}, e)),
                stsTokenManager: this.stsTokenManager.toJSON(),
                _redirectEventId: this._redirectEventId,
              },
              this.metadata.toJSON(),
            ),
            { apiKey: this.auth.config.apiKey, appName: this.auth.name },
          );
        }
        get refreshToken() {
          return this.stsTokenManager.refreshToken || '';
        }
        static _fromJSON(e, t) {
          var n, r, i, s, a, o, l, c;
          const u = null !== (n = t.displayName) && void 0 !== n ? n : void 0,
            d = null !== (r = t.email) && void 0 !== r ? r : void 0,
            h = null !== (i = t.phoneNumber) && void 0 !== i ? i : void 0,
            f = null !== (s = t.photoURL) && void 0 !== s ? s : void 0,
            p = null !== (a = t.tenantId) && void 0 !== a ? a : void 0,
            m = null !== (o = t._redirectEventId) && void 0 !== o ? o : void 0,
            g = null !== (l = t.createdAt) && void 0 !== l ? l : void 0,
            v = null !== (c = t.lastLoginAt) && void 0 !== c ? c : void 0,
            { uid: y, emailVerified: w, isAnonymous: b, providerData: S, stsTokenManager: E } = t;
          mi(y && E, e, 'internal-error');
          const T = Qi.fromJSON(this.name, E);
          mi('string' === typeof y, e, 'internal-error'),
            Yi(u, e.name),
            Yi(d, e.name),
            mi('boolean' === typeof w, e, 'internal-error'),
            mi('boolean' === typeof b, e, 'internal-error'),
            Yi(h, e.name),
            Yi(f, e.name),
            Yi(p, e.name),
            Yi(m, e.name),
            Yi(g, e.name),
            Yi(v, e.name);
          const _ = new Ji({
            uid: y,
            auth: e,
            email: d,
            emailVerified: w,
            displayName: u,
            isAnonymous: b,
            photoURL: f,
            phoneNumber: h,
            tenantId: p,
            stsTokenManager: T,
            createdAt: g,
            lastLoginAt: v,
          });
          return S && Array.isArray(S) && (_.providerData = S.map((e) => Object.assign({}, e))), m && (_._redirectEventId = m), _;
        }
        static async _fromIdTokenResponse(e, t) {
          let n = arguments.length > 2 && void 0 !== arguments[2] && arguments[2];
          const r = new Qi();
          r.updateFromServerResponse(t);
          const i = new Ji({ uid: t.localId, auth: e, stsTokenManager: r, isAnonymous: n });
          return await Ki(i), i;
        }
        static async _fromGetAccountInfoResponse(e, t, n) {
          const r = t.users[0];
          mi(void 0 !== r.localId, 'internal-error');
          const i = void 0 !== r.providerUserInfo ? Wi(r.providerUserInfo) : [],
            s = !(r.email && r.passwordHash) && !(null === i || void 0 === i ? void 0 : i.length),
            a = new Qi();
          a.updateFromIdToken(n);
          const o = new Ji({ uid: r.localId, auth: e, stsTokenManager: a, isAnonymous: s }),
            l = {
              uid: r.localId,
              displayName: r.displayName || null,
              photoURL: r.photoUrl || null,
              email: r.email || null,
              emailVerified: r.emailVerified || !1,
              phoneNumber: r.phoneNumber || null,
              tenantId: r.tenantId || null,
              providerData: i,
              metadata: new Hi(r.createdAt, r.lastLoginAt),
              isAnonymous: !(r.email && r.passwordHash) && !(null === i || void 0 === i ? void 0 : i.length),
            };
          return Object.assign(o, l), o;
        }
      }
      const Xi = new Map();
      function $i(e) {
        vi(e instanceof Function, 'Expected a class definition');
        let t = Xi.get(e);
        return t ? (vi(t instanceof e, 'Instance stored in cache mismatched with class'), t) : ((t = new e()), Xi.set(e, t), t);
      }
      class Zi {
        constructor() {
          (this.type = 'NONE'), (this.storage = {});
        }
        async _isAvailable() {
          return !0;
        }
        async _set(e, t) {
          this.storage[e] = t;
        }
        async _get(e) {
          const t = this.storage[e];
          return void 0 === t ? null : t;
        }
        async _remove(e) {
          delete this.storage[e];
        }
        _addListener(e, t) {}
        _removeListener(e, t) {}
      }
      Zi.type = 'NONE';
      const es = Zi;
      function ts(e, t, n) {
        return 'firebase'.concat(':', e, ':').concat(t, ':').concat(n);
      }
      class ns {
        constructor(e, t, n) {
          (this.persistence = e), (this.auth = t), (this.userKey = n);
          const { config: r, name: i } = this.auth;
          (this.fullUserKey = ts(this.userKey, r.apiKey, i)),
            (this.fullPersistenceKey = ts('persistence', r.apiKey, i)),
            (this.boundEventHandler = t._onStorageEvent.bind(t)),
            this.persistence._addListener(this.fullUserKey, this.boundEventHandler);
        }
        setCurrentUser(e) {
          return this.persistence._set(this.fullUserKey, e.toJSON());
        }
        async getCurrentUser() {
          const e = await this.persistence._get(this.fullUserKey);
          return e ? Ji._fromJSON(this.auth, e) : null;
        }
        removeCurrentUser() {
          return this.persistence._remove(this.fullUserKey);
        }
        savePersistenceForRedirect() {
          return this.persistence._set(this.fullPersistenceKey, this.persistence.type);
        }
        async setPersistence(e) {
          if (this.persistence === e) return;
          const t = await this.getCurrentUser();
          return await this.removeCurrentUser(), (this.persistence = e), t ? this.setCurrentUser(t) : void 0;
        }
        delete() {
          this.persistence._removeListener(this.fullUserKey, this.boundEventHandler);
        }
        static async create(e, t) {
          let n = arguments.length > 2 && void 0 !== arguments[2] ? arguments[2] : 'authUser';
          if (!t.length) return new ns($i(es), e, n);
          const r = (
            await Promise.all(
              t.map(async (e) => {
                if (await e._isAvailable()) return e;
              }),
            )
          ).filter((e) => e);
          let i = r[0] || $i(es);
          const s = ts(n, e.config.apiKey, e.name);
          let a = null;
          for (const c of t)
            try {
              const t = await c._get(s);
              if (t) {
                const n = Ji._fromJSON(e, t);
                c !== i && (a = n), (i = c);
                break;
              }
            } catch (l) {}
          const o = r.filter((e) => e._shouldAllowMigration);
          return i._shouldAllowMigration && o.length
            ? ((i = o[0]),
              a && (await i._set(s, a.toJSON())),
              await Promise.all(
                t.map(async (e) => {
                  if (e !== i)
                    try {
                      await e._remove(s);
                    } catch (l) {}
                }),
              ),
              new ns(i, e, n))
            : new ns(i, e, n);
        }
      }
      function rs(e) {
        const t = e.toLowerCase();
        if (t.includes('opera/') || t.includes('opr/') || t.includes('opios/')) return 'Opera';
        if (os(t)) return 'IEMobile';
        if (t.includes('msie') || t.includes('trident/')) return 'IE';
        if (t.includes('edge/')) return 'Edge';
        if (is(t)) return 'Firefox';
        if (t.includes('silk/')) return 'Silk';
        if (cs(t)) return 'Blackberry';
        if (us(t)) return 'Webos';
        if (ss(t)) return 'Safari';
        if ((t.includes('chrome/') || as(t)) && !t.includes('edge/')) return 'Chrome';
        if (ls(t)) return 'Android';
        {
          const t = /([a-zA-Z\d\.]+)\/[a-zA-Z\d\.]*$/,
            n = e.match(t);
          if (2 === (null === n || void 0 === n ? void 0 : n.length)) return n[1];
        }
        return 'Other';
      }
      function is() {
        let e = arguments.length > 0 && void 0 !== arguments[0] ? arguments[0] : pn();
        return /firefox\//i.test(e);
      }
      function ss() {
        const e = (arguments.length > 0 && void 0 !== arguments[0] ? arguments[0] : pn()).toLowerCase();
        return e.includes('safari/') && !e.includes('chrome/') && !e.includes('crios/') && !e.includes('android');
      }
      function as() {
        let e = arguments.length > 0 && void 0 !== arguments[0] ? arguments[0] : pn();
        return /crios\//i.test(e);
      }
      function os() {
        let e = arguments.length > 0 && void 0 !== arguments[0] ? arguments[0] : pn();
        return /iemobile/i.test(e);
      }
      function ls() {
        let e = arguments.length > 0 && void 0 !== arguments[0] ? arguments[0] : pn();
        return /android/i.test(e);
      }
      function cs() {
        let e = arguments.length > 0 && void 0 !== arguments[0] ? arguments[0] : pn();
        return /blackberry/i.test(e);
      }
      function us() {
        let e = arguments.length > 0 && void 0 !== arguments[0] ? arguments[0] : pn();
        return /webos/i.test(e);
      }
      function ds() {
        let e = arguments.length > 0 && void 0 !== arguments[0] ? arguments[0] : pn();
        return /iphone|ipad|ipod/i.test(e) || (/macintosh/i.test(e) && /mobile/i.test(e));
      }
      function hs() {
        return (
          (function () {
            const e = pn();
            return e.indexOf('MSIE ') >= 0 || e.indexOf('Trident/') >= 0;
          })() && 10 === document.documentMode
        );
      }
      function fs() {
        let e = arguments.length > 0 && void 0 !== arguments[0] ? arguments[0] : pn();
        return ds(e) || ls(e) || us(e) || cs(e) || /windows phone/i.test(e) || os(e);
      }
      function ps(e) {
        let t,
          n = arguments.length > 1 && void 0 !== arguments[1] ? arguments[1] : [];
        switch (e) {
          case 'Browser':
            t = rs(pn());
            break;
          case 'Worker':
            t = ''.concat(rs(pn()), '-').concat(e);
            break;
          default:
            t = e;
        }
        const r = n.length ? n.join(',') : 'FirebaseCore-web';
        return ''.concat(t, '/', 'JsCore', '/').concat(Br, '/').concat(r);
      }
      class ms {
        constructor(e) {
          (this.auth = e), (this.queue = []);
        }
        pushCallback(e, t) {
          const n = (t) =>
            new Promise((n, r) => {
              try {
                n(e(t));
              } catch (Wy) {
                r(Wy);
              }
            });
          (n.onAbort = t), this.queue.push(n);
          const r = this.queue.length - 1;
          return () => {
            this.queue[r] = () => Promise.resolve();
          };
        }
        async runMiddleware(e) {
          if (this.auth.currentUser === e) return;
          const t = [];
          try {
            for (const n of this.queue) await n(e), n.onAbort && t.push(n.onAbort);
          } catch (Wy) {
            t.reverse();
            for (const r of t)
              try {
                r();
              } catch (n) {}
            throw this.auth._errorFactory.create('login-blocked', {
              originalMessage: null === Wy || void 0 === Wy ? void 0 : Wy.message,
            });
          }
        }
      }
      class gs {
        constructor(e) {
          var t, n, r, i;
          const s = e.customStrengthOptions;
          (this.customStrengthOptions = {}),
            (this.customStrengthOptions.minPasswordLength = null !== (t = s.minPasswordLength) && void 0 !== t ? t : 6),
            s.maxPasswordLength && (this.customStrengthOptions.maxPasswordLength = s.maxPasswordLength),
            void 0 !== s.containsLowercaseCharacter &&
              (this.customStrengthOptions.containsLowercaseLetter = s.containsLowercaseCharacter),
            void 0 !== s.containsUppercaseCharacter &&
              (this.customStrengthOptions.containsUppercaseLetter = s.containsUppercaseCharacter),
            void 0 !== s.containsNumericCharacter &&
              (this.customStrengthOptions.containsNumericCharacter = s.containsNumericCharacter),
            void 0 !== s.containsNonAlphanumericCharacter &&
              (this.customStrengthOptions.containsNonAlphanumericCharacter = s.containsNonAlphanumericCharacter),
            (this.enforcementState = e.enforcementState),
            'ENFORCEMENT_STATE_UNSPECIFIED' === this.enforcementState && (this.enforcementState = 'OFF'),
            (this.allowedNonAlphanumericCharacters =
              null !== (r = null === (n = e.allowedNonAlphanumericCharacters) || void 0 === n ? void 0 : n.join('')) &&
              void 0 !== r
                ? r
                : ''),
            (this.forceUpgradeOnSignin = null !== (i = e.forceUpgradeOnSignin) && void 0 !== i && i),
            (this.schemaVersion = e.schemaVersion);
        }
        validatePassword(e) {
          var t, n, r, i, s, a;
          const o = { isValid: !0, passwordPolicy: this };
          return (
            this.validatePasswordLengthOptions(e, o),
            this.validatePasswordCharacterOptions(e, o),
            o.isValid && (o.isValid = null === (t = o.meetsMinPasswordLength) || void 0 === t || t),
            o.isValid && (o.isValid = null === (n = o.meetsMaxPasswordLength) || void 0 === n || n),
            o.isValid && (o.isValid = null === (r = o.containsLowercaseLetter) || void 0 === r || r),
            o.isValid && (o.isValid = null === (i = o.containsUppercaseLetter) || void 0 === i || i),
            o.isValid && (o.isValid = null === (s = o.containsNumericCharacter) || void 0 === s || s),
            o.isValid && (o.isValid = null === (a = o.containsNonAlphanumericCharacter) || void 0 === a || a),
            o
          );
        }
        validatePasswordLengthOptions(e, t) {
          const n = this.customStrengthOptions.minPasswordLength,
            r = this.customStrengthOptions.maxPasswordLength;
          n && (t.meetsMinPasswordLength = e.length >= n), r && (t.meetsMaxPasswordLength = e.length <= r);
        }
        validatePasswordCharacterOptions(e, t) {
          let n;
          this.updatePasswordCharacterOptionsStatuses(t, !1, !1, !1, !1);
          for (let r = 0; r < e.length; r++)
            (n = e.charAt(r)),
              this.updatePasswordCharacterOptionsStatuses(
                t,
                n >= 'a' && n <= 'z',
                n >= 'A' && n <= 'Z',
                n >= '0' && n <= '9',
                this.allowedNonAlphanumericCharacters.includes(n),
              );
        }
        updatePasswordCharacterOptionsStatuses(e, t, n, r, i) {
          this.customStrengthOptions.containsLowercaseLetter && (e.containsLowercaseLetter || (e.containsLowercaseLetter = t)),
            this.customStrengthOptions.containsUppercaseLetter && (e.containsUppercaseLetter || (e.containsUppercaseLetter = n)),
            this.customStrengthOptions.containsNumericCharacter &&
              (e.containsNumericCharacter || (e.containsNumericCharacter = r)),
            this.customStrengthOptions.containsNonAlphanumericCharacter &&
              (e.containsNonAlphanumericCharacter || (e.containsNonAlphanumericCharacter = i));
        }
      }
      class vs {
        constructor(e, t, n, r) {
          (this.app = e),
            (this.heartbeatServiceProvider = t),
            (this.appCheckServiceProvider = n),
            (this.config = r),
            (this.currentUser = null),
            (this.emulatorConfig = null),
            (this.operations = Promise.resolve()),
            (this.authStateSubscription = new ws(this)),
            (this.idTokenSubscription = new ws(this)),
            (this.beforeStateQueue = new ms(this)),
            (this.redirectUser = null),
            (this.isProactiveRefreshEnabled = !1),
            (this.EXPECTED_PASSWORD_POLICY_SCHEMA_VERSION = 1),
            (this._canInitEmulator = !0),
            (this._isInitialized = !1),
            (this._deleted = !1),
            (this._initializationPromise = null),
            (this._popupRedirectResolver = null),
            (this._errorFactory = oi),
            (this._agentRecaptchaConfig = null),
            (this._tenantRecaptchaConfigs = {}),
            (this._projectPasswordPolicy = null),
            (this._tenantPasswordPolicies = {}),
            (this.lastNotifiedUid = void 0),
            (this.languageCode = null),
            (this.tenantId = null),
            (this.settings = { appVerificationDisabledForTesting: !1 }),
            (this.frameworks = []),
            (this.name = e.name),
            (this.clientVersion = r.sdkClientVersion);
        }
        _initializeWithPersistence(e, t) {
          return (
            t && (this._popupRedirectResolver = $i(t)),
            (this._initializationPromise = this.queue(async () => {
              var n, r;
              if (!this._deleted && ((this.persistenceManager = await ns.create(this, e)), !this._deleted)) {
                if (null === (n = this._popupRedirectResolver) || void 0 === n ? void 0 : n._shouldInitProactively)
                  try {
                    await this._popupRedirectResolver._initialize(this);
                  } catch (Wy) {}
                await this.initializeCurrentUser(t),
                  (this.lastNotifiedUid = (null === (r = this.currentUser) || void 0 === r ? void 0 : r.uid) || null),
                  this._deleted || (this._isInitialized = !0);
              }
            })),
            this._initializationPromise
          );
        }
        async _onStorageEvent() {
          if (this._deleted) return;
          const e = await this.assertedPersistence.getCurrentUser();
          return this.currentUser || e
            ? this.currentUser && e && this.currentUser.uid === e.uid
              ? (this._currentUser._assign(e), void (await this.currentUser.getIdToken()))
              : void (await this._updateCurrentUser(e, !0))
            : void 0;
        }
        async initializeCurrentUserFromIdToken(e) {
          try {
            const t = await ji(this, { idToken: e }),
              n = await Ji._fromGetAccountInfoResponse(this, t, e);
            await this.directlySetCurrentUser(n);
          } catch (t) {
            console.warn('FirebaseServerApp could not login user with provided authIdToken: ', t),
              await this.directlySetCurrentUser(null);
          }
        }
        async initializeCurrentUser(e) {
          var t;
          if (Ur(this.app)) {
            const e = this.app.settings.authIdToken;
            return e
              ? new Promise((t) => {
                  setTimeout(() => this.initializeCurrentUserFromIdToken(e).then(t, t));
                })
              : this.directlySetCurrentUser(null);
          }
          const n = await this.assertedPersistence.getCurrentUser();
          let r = n,
            i = !1;
          if (e && this.config.authDomain) {
            await this.getOrInitRedirectPersistenceManager();
            const n = null === (t = this.redirectUser) || void 0 === t ? void 0 : t._redirectEventId,
              s = null === r || void 0 === r ? void 0 : r._redirectEventId,
              a = await this.tryRedirectSignIn(e);
            (n && n !== s) || !(null === a || void 0 === a ? void 0 : a.user) || ((r = a.user), (i = !0));
          }
          if (!r) return this.directlySetCurrentUser(null);
          if (!r._redirectEventId) {
            if (i)
              try {
                await this.beforeStateQueue.runMiddleware(r);
              } catch (Wy) {
                (r = n), this._popupRedirectResolver._overrideRedirectResult(this, () => Promise.reject(Wy));
              }
            return r ? this.reloadAndSetCurrentUserOrClear(r) : this.directlySetCurrentUser(null);
          }
          return (
            mi(this._popupRedirectResolver, this, 'argument-error'),
            await this.getOrInitRedirectPersistenceManager(),
            this.redirectUser && this.redirectUser._redirectEventId === r._redirectEventId
              ? this.directlySetCurrentUser(r)
              : this.reloadAndSetCurrentUserOrClear(r)
          );
        }
        async tryRedirectSignIn(e) {
          let t = null;
          try {
            t = await this._popupRedirectResolver._completeRedirectFn(this, e, !0);
          } catch (Wy) {
            await this._setRedirectUser(null);
          }
          return t;
        }
        async reloadAndSetCurrentUserOrClear(e) {
          try {
            await Ki(e);
          } catch (Wy) {
            if ((null === Wy || void 0 === Wy ? void 0 : Wy.code) !== 'auth/'.concat('network-request-failed'))
              return this.directlySetCurrentUser(null);
          }
          return this.directlySetCurrentUser(e);
        }
        useDeviceLanguage() {
          this.languageCode = (function () {
            if ('undefined' === typeof navigator) return null;
            const e = navigator;
            return (e.languages && e.languages[0]) || e.language || null;
          })();
        }
        async _delete() {
          this._deleted = !0;
        }
        async updateCurrentUser(e) {
          if (Ur(this.app)) return Promise.reject(fi(this));
          const t = e ? kn(e) : null;
          return (
            t && mi(t.auth.config.apiKey === this.config.apiKey, this, 'invalid-user-token'),
            this._updateCurrentUser(t && t._clone(this))
          );
        }
        async _updateCurrentUser(e) {
          let t = arguments.length > 1 && void 0 !== arguments[1] && arguments[1];
          if (!this._deleted)
            return (
              e && mi(this.tenantId === e.tenantId, this, 'tenant-id-mismatch'),
              t || (await this.beforeStateQueue.runMiddleware(e)),
              this.queue(async () => {
                await this.directlySetCurrentUser(e), this.notifyAuthListeners();
              })
            );
        }
        async signOut() {
          return Ur(this.app)
            ? Promise.reject(fi(this))
            : (await this.beforeStateQueue.runMiddleware(null),
              (this.redirectPersistenceManager || this._popupRedirectResolver) && (await this._setRedirectUser(null)),
              this._updateCurrentUser(null, !0));
        }
        setPersistence(e) {
          return Ur(this.app)
            ? Promise.reject(fi(this))
            : this.queue(async () => {
                await this.assertedPersistence.setPersistence($i(e));
              });
        }
        _getRecaptchaConfig() {
          return null == this.tenantId ? this._agentRecaptchaConfig : this._tenantRecaptchaConfigs[this.tenantId];
        }
        async validatePassword(e) {
          this._getPasswordPolicyInternal() || (await this._updatePasswordPolicy());
          const t = this._getPasswordPolicyInternal();
          return t.schemaVersion !== this.EXPECTED_PASSWORD_POLICY_SCHEMA_VERSION
            ? Promise.reject(this._errorFactory.create('unsupported-password-policy-schema-version', {}))
            : t.validatePassword(e);
        }
        _getPasswordPolicyInternal() {
          return null === this.tenantId ? this._projectPasswordPolicy : this._tenantPasswordPolicies[this.tenantId];
        }
        async _updatePasswordPolicy() {
          const e = await (async function (e) {
              return Ci(
                e,
                'GET',
                '/v2/passwordPolicy',
                ki(e, arguments.length > 1 && void 0 !== arguments[1] ? arguments[1] : {}),
              );
            })(this),
            t = new gs(e);
          null === this.tenantId ? (this._projectPasswordPolicy = t) : (this._tenantPasswordPolicies[this.tenantId] = t);
        }
        _getPersistence() {
          return this.assertedPersistence.persistence.type;
        }
        _updateErrorMap(e) {
          this._errorFactory = new yn('auth', 'Firebase', e());
        }
        onAuthStateChanged(e, t, n) {
          return this.registerStateListener(this.authStateSubscription, e, t, n);
        }
        beforeAuthStateChanged(e, t) {
          return this.beforeStateQueue.pushCallback(e, t);
        }
        onIdTokenChanged(e, t, n) {
          return this.registerStateListener(this.idTokenSubscription, e, t, n);
        }
        authStateReady() {
          return new Promise((e, t) => {
            if (this.currentUser) e();
            else {
              const n = this.onAuthStateChanged(() => {
                n(), e();
              }, t);
            }
          });
        }
        async revokeAccessToken(e) {
          if (this.currentUser) {
            const t = {
              providerId: 'apple.com',
              tokenType: 'ACCESS_TOKEN',
              token: e,
              idToken: await this.currentUser.getIdToken(),
            };
            null != this.tenantId && (t.tenantId = this.tenantId),
              await (async function (e, t) {
                return Ci(e, 'POST', '/v2/accounts:revokeToken', ki(e, t));
              })(this, t);
          }
        }
        toJSON() {
          var e;
          return {
            apiKey: this.config.apiKey,
            authDomain: this.config.authDomain,
            appName: this.name,
            currentUser: null === (e = this._currentUser) || void 0 === e ? void 0 : e.toJSON(),
          };
        }
        async _setRedirectUser(e, t) {
          const n = await this.getOrInitRedirectPersistenceManager(t);
          return null === e ? n.removeCurrentUser() : n.setCurrentUser(e);
        }
        async getOrInitRedirectPersistenceManager(e) {
          if (!this.redirectPersistenceManager) {
            const t = (e && $i(e)) || this._popupRedirectResolver;
            mi(t, this, 'argument-error'),
              (this.redirectPersistenceManager = await ns.create(this, [$i(t._redirectPersistence)], 'redirectUser')),
              (this.redirectUser = await this.redirectPersistenceManager.getCurrentUser());
          }
          return this.redirectPersistenceManager;
        }
        async _redirectUserForId(e) {
          var t, n;
          return (
            this._isInitialized && (await this.queue(async () => {})),
            (null === (t = this._currentUser) || void 0 === t ? void 0 : t._redirectEventId) === e
              ? this._currentUser
              : (null === (n = this.redirectUser) || void 0 === n ? void 0 : n._redirectEventId) === e
                ? this.redirectUser
                : null
          );
        }
        async _persistUserIfCurrent(e) {
          if (e === this.currentUser) return this.queue(async () => this.directlySetCurrentUser(e));
        }
        _notifyListenersIfCurrent(e) {
          e === this.currentUser && this.notifyAuthListeners();
        }
        _key() {
          return ''.concat(this.config.authDomain, ':').concat(this.config.apiKey, ':').concat(this.name);
        }
        _startProactiveRefresh() {
          (this.isProactiveRefreshEnabled = !0), this.currentUser && this._currentUser._startProactiveRefresh();
        }
        _stopProactiveRefresh() {
          (this.isProactiveRefreshEnabled = !1), this.currentUser && this._currentUser._stopProactiveRefresh();
        }
        get _currentUser() {
          return this.currentUser;
        }
        notifyAuthListeners() {
          var e, t;
          if (!this._isInitialized) return;
          this.idTokenSubscription.next(this.currentUser);
          const n = null !== (t = null === (e = this.currentUser) || void 0 === e ? void 0 : e.uid) && void 0 !== t ? t : null;
          this.lastNotifiedUid !== n && ((this.lastNotifiedUid = n), this.authStateSubscription.next(this.currentUser));
        }
        registerStateListener(e, t, n, r) {
          if (this._deleted) return () => {};
          const i = 'function' === typeof t ? t : t.next.bind(t);
          let s = !1;
          const a = this._isInitialized ? Promise.resolve() : this._initializationPromise;
          if (
            (mi(a, this, 'internal-error'),
            a.then(() => {
              s || i(this.currentUser);
            }),
            'function' === typeof t)
          ) {
            const i = e.addObserver(t, n, r);
            return () => {
              (s = !0), i();
            };
          }
          {
            const n = e.addObserver(t);
            return () => {
              (s = !0), n();
            };
          }
        }
        async directlySetCurrentUser(e) {
          this.currentUser && this.currentUser !== e && this._currentUser._stopProactiveRefresh(),
            e && this.isProactiveRefreshEnabled && e._startProactiveRefresh(),
            (this.currentUser = e),
            e ? await this.assertedPersistence.setCurrentUser(e) : await this.assertedPersistence.removeCurrentUser();
        }
        queue(e) {
          return (this.operations = this.operations.then(e, e)), this.operations;
        }
        get assertedPersistence() {
          return mi(this.persistenceManager, this, 'internal-error'), this.persistenceManager;
        }
        _logFramework(e) {
          e &&
            !this.frameworks.includes(e) &&
            (this.frameworks.push(e),
            this.frameworks.sort(),
            (this.clientVersion = ps(this.config.clientPlatform, this._getFrameworks())));
        }
        _getFrameworks() {
          return this.frameworks;
        }
        async _getAdditionalHeaders() {
          var e;
          const t = { 'X-Client-Version': this.clientVersion };
          this.app.options.appId && (t['X-Firebase-gmpid'] = this.app.options.appId);
          const n = await (null === (e = this.heartbeatServiceProvider.getImmediate({ optional: !0 })) || void 0 === e
            ? void 0
            : e.getHeartbeatsHeader());
          n && (t['X-Firebase-Client'] = n);
          const r = await this._getAppCheckToken();
          return r && (t['X-Firebase-AppCheck'] = r), t;
        }
        async _getAppCheckToken() {
          var e;
          const t = await (null === (e = this.appCheckServiceProvider.getImmediate({ optional: !0 })) || void 0 === e
            ? void 0
            : e.getToken());
          return (
            (null === t || void 0 === t ? void 0 : t.error) &&
              (function (e) {
                if (li.logLevel <= On.WARN) {
                  for (var t = arguments.length, n = new Array(t > 1 ? t - 1 : 0), r = 1; r < t; r++) n[r - 1] = arguments[r];
                  li.warn('Auth ('.concat(Br, '): ').concat(e), ...n);
                }
              })('Error while retrieving App Check token: '.concat(t.error)),
            null === t || void 0 === t ? void 0 : t.token
          );
        }
      }
      function ys(e) {
        return kn(e);
      }
      class ws {
        constructor(e) {
          (this.auth = e),
            (this.observer = null),
            (this.addObserver = (function (e, t) {
              const n = new In(e, t);
              return n.subscribe.bind(n);
            })((e) => (this.observer = e)));
        }
        get next() {
          return mi(this.observer, this.auth, 'internal-error'), this.observer.next.bind(this.observer);
        }
      }
      let bs = {
        async loadJS() {
          throw new Error('Unable to load external scripts');
        },
        recaptchaV2Script: '',
        recaptchaEnterpriseScript: '',
        gapiScript: '',
      };
      function Ss(e) {
        return bs.loadJS(e);
      }
      function Es(e) {
        return '__'.concat(e).concat(Math.floor(1e6 * Math.random()));
      }
      class Ts {
        constructor(e) {
          (this.type = 'recaptcha-enterprise'), (this.auth = ys(e));
        }
        async verify() {
          let e = arguments.length > 0 && void 0 !== arguments[0] ? arguments[0] : 'verify',
            t = arguments.length > 1 && void 0 !== arguments[1] && arguments[1];
          function n(t, n, r) {
            const i = window.grecaptcha;
            Ri(i)
              ? i.enterprise.ready(() => {
                  i.enterprise
                    .execute(t, { action: e })
                    .then((e) => {
                      n(e);
                    })
                    .catch(() => {
                      n('NO_RECAPTCHA');
                    });
                })
              : r(Error('No reCAPTCHA enterprise script loaded.'));
          }
          return new Promise((e, r) => {
            (async function (e) {
              if (!t) {
                if (null == e.tenantId && null != e._agentRecaptchaConfig) return e._agentRecaptchaConfig.siteKey;
                if (null != e.tenantId && void 0 !== e._tenantRecaptchaConfigs[e.tenantId])
                  return e._tenantRecaptchaConfigs[e.tenantId].siteKey;
              }
              return new Promise(async (t, n) => {
                Fi(e, { clientType: 'CLIENT_TYPE_WEB', version: 'RECAPTCHA_ENTERPRISE' })
                  .then((r) => {
                    if (void 0 !== r.recaptchaKey) {
                      const n = new Mi(r);
                      return (
                        null == e.tenantId ? (e._agentRecaptchaConfig = n) : (e._tenantRecaptchaConfigs[e.tenantId] = n),
                        t(n.siteKey)
                      );
                    }
                    n(new Error('recaptcha Enterprise site key undefined'));
                  })
                  .catch((e) => {
                    n(e);
                  });
              });
            })(this.auth)
              .then((i) => {
                if (!t && Ri(window.grecaptcha)) n(i, e, r);
                else {
                  if ('undefined' === typeof window) return void r(new Error('RecaptchaVerifier is only supported in browser'));
                  let t = bs.recaptchaEnterpriseScript;
                  0 !== t.length && (t += i),
                    Ss(t)
                      .then(() => {
                        n(i, e, r);
                      })
                      .catch((e) => {
                        r(e);
                      });
                }
              })
              .catch((e) => {
                r(e);
              });
          });
        }
      }
      async function _s(e, t, n) {
        let r = arguments.length > 3 && void 0 !== arguments[3] && arguments[3];
        const i = new Ts(e);
        let s;
        try {
          s = await i.verify(n);
        } catch (o) {
          s = await i.verify(n, !0);
        }
        const a = Object.assign({}, t);
        return (
          r ? Object.assign(a, { captchaResp: s }) : Object.assign(a, { captchaResponse: s }),
          Object.assign(a, { clientType: 'CLIENT_TYPE_WEB' }),
          Object.assign(a, { recaptchaVersion: 'RECAPTCHA_ENTERPRISE' }),
          a
        );
      }
      async function Is(e, t, n, r) {
        var i;
        if (null === (i = e._getRecaptchaConfig()) || void 0 === i ? void 0 : i.isProviderEnabled('EMAIL_PASSWORD_PROVIDER')) {
          const i = await _s(e, t, n, 'getOobCode' === n);
          return r(e, i);
        }
        return r(e, t).catch(async (i) => {
          if (i.code === 'auth/'.concat('missing-recaptcha-token')) {
            console.log(
              ''.concat(
                n,
                ' is protected by reCAPTCHA Enterprise for this project. Automatically triggering the reCAPTCHA flow and restarting the flow.',
              ),
            );
            const i = await _s(e, t, n, 'getOobCode' === n);
            return r(e, i);
          }
          return Promise.reject(i);
        });
      }
      function xs(e, t, n) {
        const r = ys(e);
        mi(r._canInitEmulator, r, 'emulator-config-failed'), mi(/^https?:\/\//.test(t), r, 'invalid-emulator-scheme');
        const i = !!(null === n || void 0 === n ? void 0 : n.disableWarnings),
          s = ks(t),
          { host: a, port: o } = (function (e) {
            const t = ks(e),
              n = /(\/\/)?([^?#/]+)/.exec(e.substr(t.length));
            if (!n) return { host: '', port: null };
            const r = n[2].split('@').pop() || '',
              i = /^(\[[^\]]+\])(:|$)/.exec(r);
            if (i) {
              const e = i[1];
              return { host: e, port: Cs(r.substr(e.length + 1)) };
            }
            {
              const [e, t] = r.split(':');
              return { host: e, port: Cs(t) };
            }
          })(t),
          l = null === o ? '' : ':'.concat(o);
        (r.config.emulator = { url: ''.concat(s, '//').concat(a).concat(l, '/') }),
          (r.settings.appVerificationDisabledForTesting = !0),
          (r.emulatorConfig = Object.freeze({
            host: a,
            port: o,
            protocol: s.replace(':', ''),
            options: Object.freeze({ disableWarnings: i }),
          })),
          i ||
            (function () {
              function e() {
                const e = document.createElement('p'),
                  t = e.style;
                (e.innerText = 'Running in emulator mode. Do not use with production credentials.'),
                  (t.position = 'fixed'),
                  (t.width = '100%'),
                  (t.backgroundColor = '#ffffff'),
                  (t.border = '.1em solid #000000'),
                  (t.color = '#b50000'),
                  (t.bottom = '0px'),
                  (t.left = '0px'),
                  (t.margin = '0px'),
                  (t.zIndex = '10000'),
                  (t.textAlign = 'center'),
                  e.classList.add('firebase-emulator-warning'),
                  document.body.appendChild(e);
              }
              'undefined' !== typeof console &&
                'function' === typeof console.info &&
                console.info(
                  'WARNING: You are using the Auth Emulator, which is intended for local testing only.  Do not use with production credentials.',
                );
              'undefined' !== typeof window &&
                'undefined' !== typeof document &&
                ('loading' === document.readyState ? window.addEventListener('DOMContentLoaded', e) : e());
            })();
      }
      function ks(e) {
        const t = e.indexOf(':');
        return t < 0 ? '' : e.substr(0, t + 1);
      }
      function Cs(e) {
        if (!e) return null;
        const t = Number(e);
        return isNaN(t) ? null : t;
      }
      class Ns {
        constructor(e, t) {
          (this.providerId = e), (this.signInMethod = t);
        }
        toJSON() {
          return gi('not implemented');
        }
        _getIdTokenResponse(e) {
          return gi('not implemented');
        }
        _linkToIdToken(e, t) {
          return gi('not implemented');
        }
        _getReauthenticationResolver(e) {
          return gi('not implemented');
        }
      }
      async function Ps(e, t) {
        return Ci(e, 'POST', '/v1/accounts:signUp', t);
      }
      async function Ds(e, t) {
        return Pi(e, 'POST', '/v1/accounts:signInWithPassword', ki(e, t));
      }
      class As extends Ns {
        constructor(e, t, n) {
          let r = arguments.length > 3 && void 0 !== arguments[3] ? arguments[3] : null;
          super('password', n), (this._email = e), (this._password = t), (this._tenantId = r);
        }
        static _fromEmailAndPassword(e, t) {
          return new As(e, t, 'password');
        }
        static _fromEmailAndCode(e, t) {
          return new As(e, t, 'emailLink', arguments.length > 2 && void 0 !== arguments[2] ? arguments[2] : null);
        }
        toJSON() {
          return { email: this._email, password: this._password, signInMethod: this.signInMethod, tenantId: this._tenantId };
        }
        static fromJSON(e) {
          const t = 'string' === typeof e ? JSON.parse(e) : e;
          if ((null === t || void 0 === t ? void 0 : t.email) && (null === t || void 0 === t ? void 0 : t.password)) {
            if ('password' === t.signInMethod) return this._fromEmailAndPassword(t.email, t.password);
            if ('emailLink' === t.signInMethod) return this._fromEmailAndCode(t.email, t.password, t.tenantId);
          }
          return null;
        }
        async _getIdTokenResponse(e) {
          switch (this.signInMethod) {
            case 'password':
              return Is(
                e,
                { returnSecureToken: !0, email: this._email, password: this._password, clientType: 'CLIENT_TYPE_WEB' },
                'signInWithPassword',
                Ds,
              );
            case 'emailLink':
              return (async function (e, t) {
                return Pi(e, 'POST', '/v1/accounts:signInWithEmailLink', ki(e, t));
              })(e, { email: this._email, oobCode: this._password });
            default:
              ui(e, 'internal-error');
          }
        }
        async _linkToIdToken(e, t) {
          switch (this.signInMethod) {
            case 'password':
              return Is(
                e,
                {
                  idToken: t,
                  returnSecureToken: !0,
                  email: this._email,
                  password: this._password,
                  clientType: 'CLIENT_TYPE_WEB',
                },
                'signUpPassword',
                Ps,
              );
            case 'emailLink':
              return (async function (e, t) {
                return Pi(e, 'POST', '/v1/accounts:signInWithEmailLink', ki(e, t));
              })(e, { idToken: t, email: this._email, oobCode: this._password });
            default:
              ui(e, 'internal-error');
          }
        }
        _getReauthenticationResolver(e) {
          return this._getIdTokenResponse(e);
        }
      }
      async function Os(e, t) {
        return Pi(e, 'POST', '/v1/accounts:signInWithIdp', ki(e, t));
      }
      class Ls extends Ns {
        constructor() {
          super(...arguments), (this.pendingToken = null);
        }
        static _fromParams(e) {
          const t = new Ls(e.providerId, e.signInMethod);
          return (
            e.idToken || e.accessToken
              ? (e.idToken && (t.idToken = e.idToken),
                e.accessToken && (t.accessToken = e.accessToken),
                e.nonce && !e.pendingToken && (t.nonce = e.nonce),
                e.pendingToken && (t.pendingToken = e.pendingToken))
              : e.oauthToken && e.oauthTokenSecret
                ? ((t.accessToken = e.oauthToken), (t.secret = e.oauthTokenSecret))
                : ui('argument-error'),
            t
          );
        }
        toJSON() {
          return {
            idToken: this.idToken,
            accessToken: this.accessToken,
            secret: this.secret,
            nonce: this.nonce,
            pendingToken: this.pendingToken,
            providerId: this.providerId,
            signInMethod: this.signInMethod,
          };
        }
        static fromJSON(e) {
          const t = 'string' === typeof e ? JSON.parse(e) : e,
            { providerId: n, signInMethod: r } = t,
            i = ii(t, ['providerId', 'signInMethod']);
          if (!n || !r) return null;
          const s = new Ls(n, r);
          return (
            (s.idToken = i.idToken || void 0),
            (s.accessToken = i.accessToken || void 0),
            (s.secret = i.secret),
            (s.nonce = i.nonce),
            (s.pendingToken = i.pendingToken || null),
            s
          );
        }
        _getIdTokenResponse(e) {
          return Os(e, this.buildRequest());
        }
        _linkToIdToken(e, t) {
          const n = this.buildRequest();
          return (n.idToken = t), Os(e, n);
        }
        _getReauthenticationResolver(e) {
          const t = this.buildRequest();
          return (t.autoCreate = !1), Os(e, t);
        }
        buildRequest() {
          const e = { requestUri: 'http://localhost', returnSecureToken: !0 };
          if (this.pendingToken) e.pendingToken = this.pendingToken;
          else {
            const t = {};
            this.idToken && (t.id_token = this.idToken),
              this.accessToken && (t.access_token = this.accessToken),
              this.secret && (t.oauth_token_secret = this.secret),
              (t.providerId = this.providerId),
              this.nonce && !this.pendingToken && (t.nonce = this.nonce),
              (e.postBody = En(t));
          }
          return e;
        }
      }
      const Rs = { USER_NOT_FOUND: 'user-not-found' };
      class Ms extends Ns {
        constructor(e) {
          super('phone', 'phone'), (this.params = e);
        }
        static _fromVerification(e, t) {
          return new Ms({ verificationId: e, verificationCode: t });
        }
        static _fromTokenResponse(e, t) {
          return new Ms({ phoneNumber: e, temporaryProof: t });
        }
        _getIdTokenResponse(e) {
          return (async function (e, t) {
            return Pi(e, 'POST', '/v1/accounts:signInWithPhoneNumber', ki(e, t));
          })(e, this._makeVerificationRequest());
        }
        _linkToIdToken(e, t) {
          return (async function (e, t) {
            const n = await Pi(e, 'POST', '/v1/accounts:signInWithPhoneNumber', ki(e, t));
            if (n.temporaryProof) throw Li(e, 'account-exists-with-different-credential', n);
            return n;
          })(e, Object.assign({ idToken: t }, this._makeVerificationRequest()));
        }
        _getReauthenticationResolver(e) {
          return (async function (e, t) {
            return Pi(
              e,
              'POST',
              '/v1/accounts:signInWithPhoneNumber',
              ki(e, Object.assign(Object.assign({}, t), { operation: 'REAUTH' })),
              Rs,
            );
          })(e, this._makeVerificationRequest());
        }
        _makeVerificationRequest() {
          const { temporaryProof: e, phoneNumber: t, verificationId: n, verificationCode: r } = this.params;
          return e && t ? { temporaryProof: e, phoneNumber: t } : { sessionInfo: n, code: r };
        }
        toJSON() {
          const e = { providerId: this.providerId };
          return (
            this.params.phoneNumber && (e.phoneNumber = this.params.phoneNumber),
            this.params.temporaryProof && (e.temporaryProof = this.params.temporaryProof),
            this.params.verificationCode && (e.verificationCode = this.params.verificationCode),
            this.params.verificationId && (e.verificationId = this.params.verificationId),
            e
          );
        }
        static fromJSON(e) {
          'string' === typeof e && (e = JSON.parse(e));
          const { verificationId: t, verificationCode: n, phoneNumber: r, temporaryProof: i } = e;
          return n || t || r || i ? new Ms({ verificationId: t, verificationCode: n, phoneNumber: r, temporaryProof: i }) : null;
        }
      }
      class Fs {
        constructor(e) {
          var t, n, r, i, s, a;
          const o = Tn(_n(e)),
            l = null !== (t = o.apiKey) && void 0 !== t ? t : null,
            c = null !== (n = o.oobCode) && void 0 !== n ? n : null,
            u = (function (e) {
              switch (e) {
                case 'recoverEmail':
                  return 'RECOVER_EMAIL';
                case 'resetPassword':
                  return 'PASSWORD_RESET';
                case 'signIn':
                  return 'EMAIL_SIGNIN';
                case 'verifyEmail':
                  return 'VERIFY_EMAIL';
                case 'verifyAndChangeEmail':
                  return 'VERIFY_AND_CHANGE_EMAIL';
                case 'revertSecondFactorAddition':
                  return 'REVERT_SECOND_FACTOR_ADDITION';
                default:
                  return null;
              }
            })(null !== (r = o.mode) && void 0 !== r ? r : null);
          mi(l && c && u, 'argument-error'),
            (this.apiKey = l),
            (this.operation = u),
            (this.code = c),
            (this.continueUrl = null !== (i = o.continueUrl) && void 0 !== i ? i : null),
            (this.languageCode = null !== (s = o.languageCode) && void 0 !== s ? s : null),
            (this.tenantId = null !== (a = o.tenantId) && void 0 !== a ? a : null);
        }
        static parseLink(e) {
          const t = (function (e) {
            const t = Tn(_n(e)).link,
              n = t ? Tn(_n(t)).deep_link_id : null,
              r = Tn(_n(e)).deep_link_id;
            return (r ? Tn(_n(r)).link : null) || r || n || t || e;
          })(e);
          try {
            return new Fs(t);
          } catch (n) {
            return null;
          }
        }
      }
      class js {
        constructor() {
          this.providerId = js.PROVIDER_ID;
        }
        static credential(e, t) {
          return As._fromEmailAndPassword(e, t);
        }
        static credentialWithLink(e, t) {
          const n = Fs.parseLink(t);
          return mi(n, 'argument-error'), As._fromEmailAndCode(e, n.code, n.tenantId);
        }
      }
      (js.PROVIDER_ID = 'password'),
        (js.EMAIL_PASSWORD_SIGN_IN_METHOD = 'password'),
        (js.EMAIL_LINK_SIGN_IN_METHOD = 'emailLink');
      class Us {
        constructor(e) {
          (this.providerId = e), (this.defaultLanguageCode = null), (this.customParameters = {});
        }
        setDefaultLanguage(e) {
          this.defaultLanguageCode = e;
        }
        setCustomParameters(e) {
          return (this.customParameters = e), this;
        }
        getCustomParameters() {
          return this.customParameters;
        }
      }
      class Vs extends Us {
        constructor() {
          super(...arguments), (this.scopes = []);
        }
        addScope(e) {
          return this.scopes.includes(e) || this.scopes.push(e), this;
        }
        getScopes() {
          return [...this.scopes];
        }
      }
      class zs extends Vs {
        constructor() {
          super('facebook.com');
        }
        static credential(e) {
          return Ls._fromParams({ providerId: zs.PROVIDER_ID, signInMethod: zs.FACEBOOK_SIGN_IN_METHOD, accessToken: e });
        }
        static credentialFromResult(e) {
          return zs.credentialFromTaggedObject(e);
        }
        static credentialFromError(e) {
          return zs.credentialFromTaggedObject(e.customData || {});
        }
        static credentialFromTaggedObject(e) {
          let { _tokenResponse: t } = e;
          if (!t || !('oauthAccessToken' in t)) return null;
          if (!t.oauthAccessToken) return null;
          try {
            return zs.credential(t.oauthAccessToken);
          } catch (n) {
            return null;
          }
        }
      }
      (zs.FACEBOOK_SIGN_IN_METHOD = 'facebook.com'), (zs.PROVIDER_ID = 'facebook.com');
      class Bs extends Vs {
        constructor() {
          super('google.com'), this.addScope('profile');
        }
        static credential(e, t) {
          return Ls._fromParams({
            providerId: Bs.PROVIDER_ID,
            signInMethod: Bs.GOOGLE_SIGN_IN_METHOD,
            idToken: e,
            accessToken: t,
          });
        }
        static credentialFromResult(e) {
          return Bs.credentialFromTaggedObject(e);
        }
        static credentialFromError(e) {
          return Bs.credentialFromTaggedObject(e.customData || {});
        }
        static credentialFromTaggedObject(e) {
          let { _tokenResponse: t } = e;
          if (!t) return null;
          const { oauthIdToken: n, oauthAccessToken: r } = t;
          if (!n && !r) return null;
          try {
            return Bs.credential(n, r);
          } catch (i) {
            return null;
          }
        }
      }
      (Bs.GOOGLE_SIGN_IN_METHOD = 'google.com'), (Bs.PROVIDER_ID = 'google.com');
      class qs extends Vs {
        constructor() {
          super('github.com');
        }
        static credential(e) {
          return Ls._fromParams({ providerId: qs.PROVIDER_ID, signInMethod: qs.GITHUB_SIGN_IN_METHOD, accessToken: e });
        }
        static credentialFromResult(e) {
          return qs.credentialFromTaggedObject(e);
        }
        static credentialFromError(e) {
          return qs.credentialFromTaggedObject(e.customData || {});
        }
        static credentialFromTaggedObject(e) {
          let { _tokenResponse: t } = e;
          if (!t || !('oauthAccessToken' in t)) return null;
          if (!t.oauthAccessToken) return null;
          try {
            return qs.credential(t.oauthAccessToken);
          } catch (n) {
            return null;
          }
        }
      }
      (qs.GITHUB_SIGN_IN_METHOD = 'github.com'), (qs.PROVIDER_ID = 'github.com');
      class Gs extends Vs {
        constructor() {
          super('twitter.com');
        }
        static credential(e, t) {
          return Ls._fromParams({
            providerId: Gs.PROVIDER_ID,
            signInMethod: Gs.TWITTER_SIGN_IN_METHOD,
            oauthToken: e,
            oauthTokenSecret: t,
          });
        }
        static credentialFromResult(e) {
          return Gs.credentialFromTaggedObject(e);
        }
        static credentialFromError(e) {
          return Gs.credentialFromTaggedObject(e.customData || {});
        }
        static credentialFromTaggedObject(e) {
          let { _tokenResponse: t } = e;
          if (!t) return null;
          const { oauthAccessToken: n, oauthTokenSecret: r } = t;
          if (!n || !r) return null;
          try {
            return Gs.credential(n, r);
          } catch (i) {
            return null;
          }
        }
      }
      async function Hs(e, t) {
        return Pi(e, 'POST', '/v1/accounts:signUp', ki(e, t));
      }
      (Gs.TWITTER_SIGN_IN_METHOD = 'twitter.com'), (Gs.PROVIDER_ID = 'twitter.com');
      class Ks {
        constructor(e) {
          (this.user = e.user),
            (this.providerId = e.providerId),
            (this._tokenResponse = e._tokenResponse),
            (this.operationType = e.operationType);
        }
        static async _fromIdTokenResponse(e, t, n) {
          let r = arguments.length > 3 && void 0 !== arguments[3] && arguments[3];
          const i = await Ji._fromIdTokenResponse(e, n, r),
            s = Ws(n);
          return new Ks({ user: i, providerId: s, _tokenResponse: n, operationType: t });
        }
        static async _forOperation(e, t, n) {
          await e._updateTokensIfNecessary(n, !0);
          const r = Ws(n);
          return new Ks({ user: e, providerId: r, _tokenResponse: n, operationType: t });
        }
      }
      function Ws(e) {
        return e.providerId ? e.providerId : 'phoneNumber' in e ? 'phone' : null;
      }
      class Qs extends vn {
        constructor(e, t, n, r) {
          var i;
          super(t.code, t.message),
            (this.operationType = n),
            (this.user = r),
            Object.setPrototypeOf(this, Qs.prototype),
            (this.customData = {
              appName: e.name,
              tenantId: null !== (i = e.tenantId) && void 0 !== i ? i : void 0,
              _serverResponse: t.customData._serverResponse,
              operationType: n,
            });
        }
        static _fromErrorAndOperation(e, t, n, r) {
          return new Qs(e, t, n, r);
        }
      }
      function Ys(e, t, n, r) {
        return ('reauthenticate' === t ? n._getReauthenticationResolver(e) : n._getIdTokenResponse(e)).catch((n) => {
          if (n.code === 'auth/'.concat('multi-factor-auth-required')) throw Qs._fromErrorAndOperation(e, n, t, r);
          throw n;
        });
      }
      async function Js(e, t) {
        let n = arguments.length > 2 && void 0 !== arguments[2] && arguments[2];
        const r = await qi(e, t._linkToIdToken(e.auth, await e.getIdToken()), n);
        return Ks._forOperation(e, 'link', r);
      }
      async function Xs(e, t) {
        let n = arguments.length > 2 && void 0 !== arguments[2] && arguments[2];
        const { auth: r } = e;
        if (Ur(r.app)) return Promise.reject(fi(r));
        const i = 'reauthenticate';
        try {
          const s = await qi(e, Ys(r, i, t, e), n);
          mi(s.idToken, r, 'internal-error');
          const a = zi(s.idToken);
          mi(a, r, 'internal-error');
          const { sub: o } = a;
          return mi(e.uid === o, r, 'user-mismatch'), Ks._forOperation(e, i, s);
        } catch (Wy) {
          throw (
            ((null === Wy || void 0 === Wy ? void 0 : Wy.code) === 'auth/'.concat('user-not-found') && ui(r, 'user-mismatch'), Wy)
          );
        }
      }
      async function $s(e, t) {
        let n = arguments.length > 2 && void 0 !== arguments[2] && arguments[2];
        if (Ur(e.app)) return Promise.reject(fi(e));
        const r = 'signIn',
          i = await Ys(e, r, t),
          s = await Ks._fromIdTokenResponse(e, r, i);
        return n || (await e._updateCurrentUser(s.user)), s;
      }
      new WeakMap();
      const Zs = '__sak';
      class ea {
        constructor(e, t) {
          (this.storageRetriever = e), (this.type = t);
        }
        _isAvailable() {
          try {
            return this.storage
              ? (this.storage.setItem(Zs, '1'), this.storage.removeItem(Zs), Promise.resolve(!0))
              : Promise.resolve(!1);
          } catch (e) {
            return Promise.resolve(!1);
          }
        }
        _set(e, t) {
          return this.storage.setItem(e, JSON.stringify(t)), Promise.resolve();
        }
        _get(e) {
          const t = this.storage.getItem(e);
          return Promise.resolve(t ? JSON.parse(t) : null);
        }
        _remove(e) {
          return this.storage.removeItem(e), Promise.resolve();
        }
        get storage() {
          return this.storageRetriever();
        }
      }
      class ta extends ea {
        constructor() {
          super(() => window.localStorage, 'LOCAL'),
            (this.boundEventHandler = (e, t) => this.onStorageEvent(e, t)),
            (this.listeners = {}),
            (this.localCache = {}),
            (this.pollTimer = null),
            (this.safariLocalStorageNotSynced =
              (function () {
                const e = pn();
                return ss(e) || ds(e);
              })() &&
              (function () {
                try {
                  return !(!window || window === window.top);
                } catch (Wy) {
                  return !1;
                }
              })()),
            (this.fallbackToPolling = fs()),
            (this._shouldAllowMigration = !0);
        }
        forAllChangedKeys(e) {
          for (const t of Object.keys(this.listeners)) {
            const n = this.storage.getItem(t),
              r = this.localCache[t];
            n !== r && e(t, r, n);
          }
        }
        onStorageEvent(e) {
          let t = arguments.length > 1 && void 0 !== arguments[1] && arguments[1];
          if (!e.key)
            return void this.forAllChangedKeys((e, t, n) => {
              this.notifyListeners(e, n);
            });
          const n = e.key;
          if ((t ? this.detachListener() : this.stopPolling(), this.safariLocalStorageNotSynced)) {
            const r = this.storage.getItem(n);
            if (e.newValue !== r) null !== e.newValue ? this.storage.setItem(n, e.newValue) : this.storage.removeItem(n);
            else if (this.localCache[n] === e.newValue && !t) return;
          }
          const r = () => {
              const e = this.storage.getItem(n);
              (t || this.localCache[n] !== e) && this.notifyListeners(n, e);
            },
            i = this.storage.getItem(n);
          hs() && i !== e.newValue && e.newValue !== e.oldValue ? setTimeout(r, 10) : r();
        }
        notifyListeners(e, t) {
          this.localCache[e] = t;
          const n = this.listeners[e];
          if (n) for (const r of Array.from(n)) r(t ? JSON.parse(t) : t);
        }
        startPolling() {
          this.stopPolling(),
            (this.pollTimer = setInterval(() => {
              this.forAllChangedKeys((e, t, n) => {
                this.onStorageEvent(new StorageEvent('storage', { key: e, oldValue: t, newValue: n }), !0);
              });
            }, 1e3));
        }
        stopPolling() {
          this.pollTimer && (clearInterval(this.pollTimer), (this.pollTimer = null));
        }
        attachListener() {
          window.addEventListener('storage', this.boundEventHandler);
        }
        detachListener() {
          window.removeEventListener('storage', this.boundEventHandler);
        }
        _addListener(e, t) {
          0 === Object.keys(this.listeners).length && (this.fallbackToPolling ? this.startPolling() : this.attachListener()),
            this.listeners[e] || ((this.listeners[e] = new Set()), (this.localCache[e] = this.storage.getItem(e))),
            this.listeners[e].add(t);
        }
        _removeListener(e, t) {
          this.listeners[e] && (this.listeners[e].delete(t), 0 === this.listeners[e].size && delete this.listeners[e]),
            0 === Object.keys(this.listeners).length && (this.detachListener(), this.stopPolling());
        }
        async _set(e, t) {
          await super._set(e, t), (this.localCache[e] = JSON.stringify(t));
        }
        async _get(e) {
          const t = await super._get(e);
          return (this.localCache[e] = JSON.stringify(t)), t;
        }
        async _remove(e) {
          await super._remove(e), delete this.localCache[e];
        }
      }
      ta.type = 'LOCAL';
      const na = ta;
      class ra extends ea {
        constructor() {
          super(() => window.sessionStorage, 'SESSION');
        }
        _addListener(e, t) {}
        _removeListener(e, t) {}
      }
      ra.type = 'SESSION';
      const ia = ra;
      class sa {
        constructor(e) {
          (this.eventTarget = e), (this.handlersMap = {}), (this.boundEventHandler = this.handleEvent.bind(this));
        }
        static _getInstance(e) {
          const t = this.receivers.find((t) => t.isListeningto(e));
          if (t) return t;
          const n = new sa(e);
          return this.receivers.push(n), n;
        }
        isListeningto(e) {
          return this.eventTarget === e;
        }
        async handleEvent(e) {
          const t = e,
            { eventId: n, eventType: r, data: i } = t.data,
            s = this.handlersMap[r];
          if (!(null === s || void 0 === s ? void 0 : s.size)) return;
          t.ports[0].postMessage({ status: 'ack', eventId: n, eventType: r });
          const a = Array.from(s).map(async (e) => e(t.origin, i)),
            o = await (function (e) {
              return Promise.all(
                e.map(async (e) => {
                  try {
                    return { fulfilled: !0, value: await e };
                  } catch (t) {
                    return { fulfilled: !1, reason: t };
                  }
                }),
              );
            })(a);
          t.ports[0].postMessage({ status: 'done', eventId: n, eventType: r, response: o });
        }
        _subscribe(e, t) {
          0 === Object.keys(this.handlersMap).length && this.eventTarget.addEventListener('message', this.boundEventHandler),
            this.handlersMap[e] || (this.handlersMap[e] = new Set()),
            this.handlersMap[e].add(t);
        }
        _unsubscribe(e, t) {
          this.handlersMap[e] && t && this.handlersMap[e].delete(t),
            (t && 0 !== this.handlersMap[e].size) || delete this.handlersMap[e],
            0 === Object.keys(this.handlersMap).length && this.eventTarget.removeEventListener('message', this.boundEventHandler);
        }
      }
      function aa() {
        let e = arguments.length > 0 && void 0 !== arguments[0] ? arguments[0] : '',
          t = arguments.length > 1 && void 0 !== arguments[1] ? arguments[1] : 10,
          n = '';
        for (let r = 0; r < t; r++) n += Math.floor(10 * Math.random());
        return e + n;
      }
      sa.receivers = [];
      class oa {
        constructor(e) {
          (this.target = e), (this.handlers = new Set());
        }
        removeMessageHandler(e) {
          e.messageChannel &&
            (e.messageChannel.port1.removeEventListener('message', e.onMessage), e.messageChannel.port1.close()),
            this.handlers.delete(e);
        }
        async _send(e, t) {
          let n = arguments.length > 2 && void 0 !== arguments[2] ? arguments[2] : 50;
          const r = 'undefined' !== typeof MessageChannel ? new MessageChannel() : null;
          if (!r) throw new Error('connection_unavailable');
          let i, s;
          return new Promise((a, o) => {
            const l = aa('', 20);
            r.port1.start();
            const c = setTimeout(() => {
              o(new Error('unsupported_event'));
            }, n);
            (s = {
              messageChannel: r,
              onMessage(e) {
                const t = e;
                if (t.data.eventId === l)
                  switch (t.data.status) {
                    case 'ack':
                      clearTimeout(c),
                        (i = setTimeout(() => {
                          o(new Error('timeout'));
                        }, 3e3));
                      break;
                    case 'done':
                      clearTimeout(i), a(t.data.response);
                      break;
                    default:
                      clearTimeout(c), clearTimeout(i), o(new Error('invalid_response'));
                  }
              },
            }),
              this.handlers.add(s),
              r.port1.addEventListener('message', s.onMessage),
              this.target.postMessage({ eventType: e, eventId: l, data: t }, [r.port2]);
          }).finally(() => {
            s && this.removeMessageHandler(s);
          });
        }
      }
      function la() {
        return window;
      }
      function ca() {
        return 'undefined' !== typeof la().WorkerGlobalScope && 'function' === typeof la().importScripts;
      }
      const ua = 'firebaseLocalStorageDb',
        da = 'firebaseLocalStorage',
        ha = 'fbase_key';
      class fa {
        constructor(e) {
          this.request = e;
        }
        toPromise() {
          return new Promise((e, t) => {
            this.request.addEventListener('success', () => {
              e(this.request.result);
            }),
              this.request.addEventListener('error', () => {
                t(this.request.error);
              });
          });
        }
      }
      function pa(e, t) {
        return e.transaction([da], t ? 'readwrite' : 'readonly').objectStore(da);
      }
      function ma() {
        const e = indexedDB.open(ua, 1);
        return new Promise((t, n) => {
          e.addEventListener('error', () => {
            n(e.error);
          }),
            e.addEventListener('upgradeneeded', () => {
              const t = e.result;
              try {
                t.createObjectStore(da, { keyPath: ha });
              } catch (Wy) {
                n(Wy);
              }
            }),
            e.addEventListener('success', async () => {
              const n = e.result;
              n.objectStoreNames.contains(da)
                ? t(n)
                : (n.close(),
                  await (function () {
                    const e = indexedDB.deleteDatabase(ua);
                    return new fa(e).toPromise();
                  })(),
                  t(await ma()));
            });
        });
      }
      async function ga(e, t, n) {
        const r = pa(e, !0).put({ [ha]: t, value: n });
        return new fa(r).toPromise();
      }
      function va(e, t) {
        const n = pa(e, !0).delete(t);
        return new fa(n).toPromise();
      }
      class ya {
        constructor() {
          (this.type = 'LOCAL'),
            (this._shouldAllowMigration = !0),
            (this.listeners = {}),
            (this.localCache = {}),
            (this.pollTimer = null),
            (this.pendingWrites = 0),
            (this.receiver = null),
            (this.sender = null),
            (this.serviceWorkerReceiverAvailable = !1),
            (this.activeServiceWorker = null),
            (this._workerInitializationPromise = this.initializeServiceWorkerMessaging().then(
              () => {},
              () => {},
            ));
        }
        async _openDb() {
          return this.db || (this.db = await ma()), this.db;
        }
        async _withRetries(e) {
          let t = 0;
          for (;;)
            try {
              const t = await this._openDb();
              return await e(t);
            } catch (Wy) {
              if (t++ > 3) throw Wy;
              this.db && (this.db.close(), (this.db = void 0));
            }
        }
        async initializeServiceWorkerMessaging() {
          return ca() ? this.initializeReceiver() : this.initializeSender();
        }
        async initializeReceiver() {
          (this.receiver = sa._getInstance(ca() ? self : null)),
            this.receiver._subscribe('keyChanged', async (e, t) => ({ keyProcessed: (await this._poll()).includes(t.key) })),
            this.receiver._subscribe('ping', async (e, t) => ['keyChanged']);
        }
        async initializeSender() {
          var e, t;
          if (
            ((this.activeServiceWorker = await (async function () {
              if (!(null === navigator || void 0 === navigator ? void 0 : navigator.serviceWorker)) return null;
              try {
                return (await navigator.serviceWorker.ready).active;
              } catch (e) {
                return null;
              }
            })()),
            !this.activeServiceWorker)
          )
            return;
          this.sender = new oa(this.activeServiceWorker);
          const n = await this.sender._send('ping', {}, 800);
          n &&
            (null === (e = n[0]) || void 0 === e ? void 0 : e.fulfilled) &&
            (null === (t = n[0]) || void 0 === t ? void 0 : t.value.includes('keyChanged')) &&
            (this.serviceWorkerReceiverAvailable = !0);
        }
        async notifyServiceWorker(e) {
          if (
            this.sender &&
            this.activeServiceWorker &&
            (function () {
              var e;
              return (
                (null === (e = null === navigator || void 0 === navigator ? void 0 : navigator.serviceWorker) || void 0 === e
                  ? void 0
                  : e.controller) || null
              );
            })() === this.activeServiceWorker
          )
            try {
              await this.sender._send('keyChanged', { key: e }, this.serviceWorkerReceiverAvailable ? 800 : 50);
            } catch (t) {}
        }
        async _isAvailable() {
          try {
            if (!indexedDB) return !1;
            const e = await ma();
            return await ga(e, Zs, '1'), await va(e, Zs), !0;
          } catch (e) {}
          return !1;
        }
        async _withPendingWrite(e) {
          this.pendingWrites++;
          try {
            await e();
          } finally {
            this.pendingWrites--;
          }
        }
        async _set(e, t) {
          return this._withPendingWrite(
            async () => (await this._withRetries((n) => ga(n, e, t)), (this.localCache[e] = t), this.notifyServiceWorker(e)),
          );
        }
        async _get(e) {
          const t = await this._withRetries((t) =>
            (async function (e, t) {
              const n = pa(e, !1).get(t),
                r = await new fa(n).toPromise();
              return void 0 === r ? null : r.value;
            })(t, e),
          );
          return (this.localCache[e] = t), t;
        }
        async _remove(e) {
          return this._withPendingWrite(
            async () => (await this._withRetries((t) => va(t, e)), delete this.localCache[e], this.notifyServiceWorker(e)),
          );
        }
        async _poll() {
          const e = await this._withRetries((e) => {
            const t = pa(e, !1).getAll();
            return new fa(t).toPromise();
          });
          if (!e) return [];
          if (0 !== this.pendingWrites) return [];
          const t = [],
            n = new Set();
          if (0 !== e.length)
            for (const { fbase_key: r, value: i } of e)
              n.add(r), JSON.stringify(this.localCache[r]) !== JSON.stringify(i) && (this.notifyListeners(r, i), t.push(r));
          for (const r of Object.keys(this.localCache))
            this.localCache[r] && !n.has(r) && (this.notifyListeners(r, null), t.push(r));
          return t;
        }
        notifyListeners(e, t) {
          this.localCache[e] = t;
          const n = this.listeners[e];
          if (n) for (const r of Array.from(n)) r(t);
        }
        startPolling() {
          this.stopPolling(), (this.pollTimer = setInterval(async () => this._poll(), 800));
        }
        stopPolling() {
          this.pollTimer && (clearInterval(this.pollTimer), (this.pollTimer = null));
        }
        _addListener(e, t) {
          0 === Object.keys(this.listeners).length && this.startPolling(),
            this.listeners[e] || ((this.listeners[e] = new Set()), this._get(e)),
            this.listeners[e].add(t);
        }
        _removeListener(e, t) {
          this.listeners[e] && (this.listeners[e].delete(t), 0 === this.listeners[e].size && delete this.listeners[e]),
            0 === Object.keys(this.listeners).length && this.stopPolling();
        }
      }
      ya.type = 'LOCAL';
      const wa = ya;
      Es('rcb'), new Ei(3e4, 6e4);
      const ba = 'recaptcha';
      async function Sa(e, t, n) {
        var r;
        const i = await n.verify();
        try {
          let s;
          if (
            (mi('string' === typeof i, e, 'argument-error'),
            mi(n.type === ba, e, 'argument-error'),
            (s = 'string' === typeof t ? { phoneNumber: t } : t),
            'session' in s)
          ) {
            const t = s.session;
            if ('phoneNumber' in s) {
              mi('enroll' === t.type, e, 'internal-error');
              const n = await (function (e, t) {
                return Ci(e, 'POST', '/v2/accounts/mfaEnrollment:start', ki(e, t));
              })(e, { idToken: t.credential, phoneEnrollmentInfo: { phoneNumber: s.phoneNumber, recaptchaToken: i } });
              return n.phoneSessionInfo.sessionInfo;
            }
            {
              mi('signin' === t.type, e, 'internal-error');
              const n = (null === (r = s.multiFactorHint) || void 0 === r ? void 0 : r.uid) || s.multiFactorUid;
              mi(n, e, 'missing-multi-factor-info');
              const a = await (function (e, t) {
                return Ci(e, 'POST', '/v2/accounts/mfaSignIn:start', ki(e, t));
              })(e, { mfaPendingCredential: t.credential, mfaEnrollmentId: n, phoneSignInInfo: { recaptchaToken: i } });
              return a.phoneResponseInfo.sessionInfo;
            }
          }
          {
            const { sessionInfo: t } = await (async function (e, t) {
              return Ci(e, 'POST', '/v1/accounts:sendVerificationCode', ki(e, t));
            })(e, { phoneNumber: s.phoneNumber, recaptchaToken: i });
            return t;
          }
        } finally {
          n._reset();
        }
      }
      class Ea {
        constructor(e) {
          (this.providerId = Ea.PROVIDER_ID), (this.auth = ys(e));
        }
        verifyPhoneNumber(e, t) {
          return Sa(this.auth, e, kn(t));
        }
        static credential(e, t) {
          return Ms._fromVerification(e, t);
        }
        static credentialFromResult(e) {
          const t = e;
          return Ea.credentialFromTaggedObject(t);
        }
        static credentialFromError(e) {
          return Ea.credentialFromTaggedObject(e.customData || {});
        }
        static credentialFromTaggedObject(e) {
          let { _tokenResponse: t } = e;
          if (!t) return null;
          const { phoneNumber: n, temporaryProof: r } = t;
          return n && r ? Ms._fromTokenResponse(n, r) : null;
        }
      }
      function Ta(e, t) {
        return t ? $i(t) : (mi(e._popupRedirectResolver, e, 'argument-error'), e._popupRedirectResolver);
      }
      (Ea.PROVIDER_ID = 'phone'), (Ea.PHONE_SIGN_IN_METHOD = 'phone');
      class _a extends Ns {
        constructor(e) {
          super('custom', 'custom'), (this.params = e);
        }
        _getIdTokenResponse(e) {
          return Os(e, this._buildIdpRequest());
        }
        _linkToIdToken(e, t) {
          return Os(e, this._buildIdpRequest(t));
        }
        _getReauthenticationResolver(e) {
          return Os(e, this._buildIdpRequest());
        }
        _buildIdpRequest(e) {
          const t = {
            requestUri: this.params.requestUri,
            sessionId: this.params.sessionId,
            postBody: this.params.postBody,
            tenantId: this.params.tenantId,
            pendingToken: this.params.pendingToken,
            returnSecureToken: !0,
            returnIdpCredential: !0,
          };
          return e && (t.idToken = e), t;
        }
      }
      function Ia(e) {
        return $s(e.auth, new _a(e), e.bypassAuthState);
      }
      function xa(e) {
        const { auth: t, user: n } = e;
        return mi(n, t, 'internal-error'), Xs(n, new _a(e), e.bypassAuthState);
      }
      async function ka(e) {
        const { auth: t, user: n } = e;
        return mi(n, t, 'internal-error'), Js(n, new _a(e), e.bypassAuthState);
      }
      class Ca {
        constructor(e, t, n, r) {
          let i = arguments.length > 4 && void 0 !== arguments[4] && arguments[4];
          (this.auth = e),
            (this.resolver = n),
            (this.user = r),
            (this.bypassAuthState = i),
            (this.pendingPromise = null),
            (this.eventManager = null),
            (this.filter = Array.isArray(t) ? t : [t]);
        }
        execute() {
          return new Promise(async (e, t) => {
            this.pendingPromise = { resolve: e, reject: t };
            try {
              (this.eventManager = await this.resolver._initialize(this.auth)),
                await this.onExecution(),
                this.eventManager.registerConsumer(this);
            } catch (Wy) {
              this.reject(Wy);
            }
          });
        }
        async onAuthEvent(e) {
          const { urlResponse: t, sessionId: n, postBody: r, tenantId: i, error: s, type: a } = e;
          if (s) return void this.reject(s);
          const o = {
            auth: this.auth,
            requestUri: t,
            sessionId: n,
            tenantId: i || void 0,
            postBody: r || void 0,
            user: this.user,
            bypassAuthState: this.bypassAuthState,
          };
          try {
            this.resolve(await this.getIdpTask(a)(o));
          } catch (Wy) {
            this.reject(Wy);
          }
        }
        onError(e) {
          this.reject(e);
        }
        getIdpTask(e) {
          switch (e) {
            case 'signInViaPopup':
            case 'signInViaRedirect':
              return Ia;
            case 'linkViaPopup':
            case 'linkViaRedirect':
              return ka;
            case 'reauthViaPopup':
            case 'reauthViaRedirect':
              return xa;
            default:
              ui(this.auth, 'internal-error');
          }
        }
        resolve(e) {
          vi(this.pendingPromise, 'Pending promise was never set'), this.pendingPromise.resolve(e), this.unregisterAndCleanUp();
        }
        reject(e) {
          vi(this.pendingPromise, 'Pending promise was never set'), this.pendingPromise.reject(e), this.unregisterAndCleanUp();
        }
        unregisterAndCleanUp() {
          this.eventManager && this.eventManager.unregisterConsumer(this), (this.pendingPromise = null), this.cleanUp();
        }
      }
      const Na = new Ei(2e3, 1e4);
      class Pa extends Ca {
        constructor(e, t, n, r, i) {
          super(e, t, r, i),
            (this.provider = n),
            (this.authWindow = null),
            (this.pollId = null),
            Pa.currentPopupAction && Pa.currentPopupAction.cancel(),
            (Pa.currentPopupAction = this);
        }
        async executeNotNull() {
          const e = await this.execute();
          return mi(e, this.auth, 'internal-error'), e;
        }
        async onExecution() {
          vi(1 === this.filter.length, 'Popup operations only handle one event');
          const e = aa();
          (this.authWindow = await this.resolver._openPopup(this.auth, this.provider, this.filter[0], e)),
            (this.authWindow.associatedEvent = e),
            this.resolver._originValidation(this.auth).catch((e) => {
              this.reject(e);
            }),
            this.resolver._isIframeWebStorageSupported(this.auth, (e) => {
              e || this.reject(di(this.auth, 'web-storage-unsupported'));
            }),
            this.pollUserCancellation();
        }
        get eventId() {
          var e;
          return (null === (e = this.authWindow) || void 0 === e ? void 0 : e.associatedEvent) || null;
        }
        cancel() {
          this.reject(di(this.auth, 'cancelled-popup-request'));
        }
        cleanUp() {
          this.authWindow && this.authWindow.close(),
            this.pollId && window.clearTimeout(this.pollId),
            (this.authWindow = null),
            (this.pollId = null),
            (Pa.currentPopupAction = null);
        }
        pollUserCancellation() {
          const e = () => {
            var t, n;
            (
              null === (n = null === (t = this.authWindow) || void 0 === t ? void 0 : t.window) || void 0 === n
                ? void 0
                : n.closed
            )
              ? (this.pollId = window.setTimeout(() => {
                  (this.pollId = null), this.reject(di(this.auth, 'popup-closed-by-user'));
                }, 8e3))
              : (this.pollId = window.setTimeout(e, Na.get()));
          };
          e();
        }
      }
      Pa.currentPopupAction = null;
      const Da = 'pendingRedirect',
        Aa = new Map();
      class Oa extends Ca {
        constructor(e, t) {
          super(
            e,
            ['signInViaRedirect', 'linkViaRedirect', 'reauthViaRedirect', 'unknown'],
            t,
            void 0,
            arguments.length > 2 && void 0 !== arguments[2] && arguments[2],
          ),
            (this.eventId = null);
        }
        async execute() {
          let e = Aa.get(this.auth._key());
          if (!e) {
            try {
              const t = await (async function (e, t) {
                  const n = Ma(t),
                    r = Ra(e);
                  if (!(await r._isAvailable())) return !1;
                  const i = 'true' === (await r._get(n));
                  return await r._remove(n), i;
                })(this.resolver, this.auth),
                n = t ? await super.execute() : null;
              e = () => Promise.resolve(n);
            } catch (Wy) {
              e = () => Promise.reject(Wy);
            }
            Aa.set(this.auth._key(), e);
          }
          return this.bypassAuthState || Aa.set(this.auth._key(), () => Promise.resolve(null)), e();
        }
        async onAuthEvent(e) {
          if ('signInViaRedirect' === e.type) return super.onAuthEvent(e);
          if ('unknown' !== e.type) {
            if (e.eventId) {
              const t = await this.auth._redirectUserForId(e.eventId);
              if (t) return (this.user = t), super.onAuthEvent(e);
              this.resolve(null);
            }
          } else this.resolve(null);
        }
        async onExecution() {}
        cleanUp() {}
      }
      function La(e, t) {
        Aa.set(e._key(), t);
      }
      function Ra(e) {
        return $i(e._redirectPersistence);
      }
      function Ma(e) {
        return ts(Da, e.config.apiKey, e.name);
      }
      async function Fa(e, t) {
        let n = arguments.length > 2 && void 0 !== arguments[2] && arguments[2];
        if (Ur(e.app)) return Promise.reject(fi(e));
        const r = ys(e),
          i = Ta(r, t),
          s = new Oa(r, i, n),
          a = await s.execute();
        return (
          a && !n && (delete a.user._redirectEventId, await r._persistUserIfCurrent(a.user), await r._setRedirectUser(null, t)), a
        );
      }
      class ja {
        constructor(e) {
          (this.auth = e),
            (this.cachedEventUids = new Set()),
            (this.consumers = new Set()),
            (this.queuedRedirectEvent = null),
            (this.hasHandledPotentialRedirect = !1),
            (this.lastProcessedEventTime = Date.now());
        }
        registerConsumer(e) {
          this.consumers.add(e),
            this.queuedRedirectEvent &&
              this.isEventForConsumer(this.queuedRedirectEvent, e) &&
              (this.sendToConsumer(this.queuedRedirectEvent, e),
              this.saveEventToCache(this.queuedRedirectEvent),
              (this.queuedRedirectEvent = null));
        }
        unregisterConsumer(e) {
          this.consumers.delete(e);
        }
        onEvent(e) {
          if (this.hasEventBeenHandled(e)) return !1;
          let t = !1;
          return (
            this.consumers.forEach((n) => {
              this.isEventForConsumer(e, n) && ((t = !0), this.sendToConsumer(e, n), this.saveEventToCache(e));
            }),
            this.hasHandledPotentialRedirect ||
              !(function (e) {
                switch (e.type) {
                  case 'signInViaRedirect':
                  case 'linkViaRedirect':
                  case 'reauthViaRedirect':
                    return !0;
                  case 'unknown':
                    return Va(e);
                  default:
                    return !1;
                }
              })(e) ||
              ((this.hasHandledPotentialRedirect = !0), t || ((this.queuedRedirectEvent = e), (t = !0))),
            t
          );
        }
        sendToConsumer(e, t) {
          var n;
          if (e.error && !Va(e)) {
            const r = (null === (n = e.error.code) || void 0 === n ? void 0 : n.split('auth/')[1]) || 'internal-error';
            t.onError(di(this.auth, r));
          } else t.onAuthEvent(e);
        }
        isEventForConsumer(e, t) {
          const n = null === t.eventId || (!!e.eventId && e.eventId === t.eventId);
          return t.filter.includes(e.type) && n;
        }
        hasEventBeenHandled(e) {
          return Date.now() - this.lastProcessedEventTime >= 6e5 && this.cachedEventUids.clear(), this.cachedEventUids.has(Ua(e));
        }
        saveEventToCache(e) {
          this.cachedEventUids.add(Ua(e)), (this.lastProcessedEventTime = Date.now());
        }
      }
      function Ua(e) {
        return [e.type, e.eventId, e.sessionId, e.tenantId].filter((e) => e).join('-');
      }
      function Va(e) {
        let { type: t, error: n } = e;
        return 'unknown' === t && (null === n || void 0 === n ? void 0 : n.code) === 'auth/'.concat('no-auth-event');
      }
      const za = /^\d{1,3}\.\d{1,3}\.\d{1,3}\.\d{1,3}$/,
        Ba = /^https?/;
      async function qa(e) {
        if (e.config.emulator) return;
        const { authorizedDomains: t } = await (async function (e) {
          return Ci(e, 'GET', '/v1/projects', arguments.length > 1 && void 0 !== arguments[1] ? arguments[1] : {});
        })(e);
        for (const r of t)
          try {
            if (Ga(r)) return;
          } catch (n) {}
        ui(e, 'unauthorized-domain');
      }
      function Ga(e) {
        const t = yi(),
          { protocol: n, hostname: r } = new URL(t);
        if (e.startsWith('chrome-extension://')) {
          const i = new URL(e);
          return '' === i.hostname && '' === r
            ? 'chrome-extension:' === n && e.replace('chrome-extension://', '') === t.replace('chrome-extension://', '')
            : 'chrome-extension:' === n && i.hostname === r;
        }
        if (!Ba.test(n)) return !1;
        if (za.test(e)) return r === e;
        const i = e.replace(/\./g, '\\.');
        return new RegExp('^(.+\\.' + i + '|' + i + ')$', 'i').test(r);
      }
      const Ha = new Ei(3e4, 6e4);
      function Ka() {
        const e = la().___jsl;
        if (null === e || void 0 === e ? void 0 : e.H)
          for (const t of Object.keys(e.H))
            if (((e.H[t].r = e.H[t].r || []), (e.H[t].L = e.H[t].L || []), (e.H[t].r = [...e.H[t].L]), e.CP))
              for (let n = 0; n < e.CP.length; n++) e.CP[n] = null;
      }
      function Wa(e) {
        return new Promise((t, n) => {
          var r, i, s;
          function a() {
            Ka(),
              gapi.load('gapi.iframes', {
                callback: () => {
                  t(gapi.iframes.getContext());
                },
                ontimeout: () => {
                  Ka(), n(di(e, 'network-request-failed'));
                },
                timeout: Ha.get(),
              });
          }
          if (null === (i = null === (r = la().gapi) || void 0 === r ? void 0 : r.iframes) || void 0 === i ? void 0 : i.Iframe)
            t(gapi.iframes.getContext());
          else {
            if (!(null === (s = la().gapi) || void 0 === s ? void 0 : s.load)) {
              const t = Es('iframefcb');
              return (
                (la()[t] = () => {
                  gapi.load ? a() : n(di(e, 'network-request-failed'));
                }),
                Ss(''.concat(bs.gapiScript, '?onload=').concat(t)).catch((e) => n(e))
              );
            }
            a();
          }
        }).catch((e) => {
          throw ((Qa = null), e);
        });
      }
      let Qa = null;
      const Ya = new Ei(5e3, 15e3),
        Ja = '__/auth/iframe',
        Xa = 'emulator/auth/iframe',
        $a = {
          style: { position: 'absolute', top: '-100px', width: '1px', height: '1px' },
          'aria-hidden': 'true',
          tabindex: '-1',
        },
        Za = new Map([
          ['identitytoolkit.googleapis.com', 'p'],
          ['staging-identitytoolkit.sandbox.googleapis.com', 's'],
          ['test-identitytoolkit.sandbox.googleapis.com', 't'],
        ]);
      function eo(e) {
        const t = e.config;
        mi(t.authDomain, e, 'auth-domain-config-required');
        const n = t.emulator ? Ti(t, Xa) : 'https://'.concat(e.config.authDomain, '/').concat(Ja),
          r = { apiKey: t.apiKey, appName: e.name, v: Br },
          i = Za.get(e.config.apiHost);
        i && (r.eid = i);
        const s = e._getFrameworks();
        return s.length && (r.fw = s.join(',')), ''.concat(n, '?').concat(En(r).slice(1));
      }
      async function to(e) {
        const t = await (function (e) {
            return (Qa = Qa || Wa(e)), Qa;
          })(e),
          n = la().gapi;
        return (
          mi(n, e, 'internal-error'),
          t.open(
            {
              where: document.body,
              url: eo(e),
              messageHandlersFilter: n.iframes.CROSS_ORIGIN_IFRAMES_FILTER,
              attributes: $a,
              dontclear: !0,
            },
            (t) =>
              new Promise(async (n, r) => {
                await t.restyle({ setHideOnLeave: !1 });
                const i = di(e, 'network-request-failed'),
                  s = la().setTimeout(() => {
                    r(i);
                  }, Ya.get());
                function a() {
                  la().clearTimeout(s), n(t);
                }
                t.ping(a).then(a, () => {
                  r(i);
                });
              }),
          )
        );
      }
      const no = { location: 'yes', resizable: 'yes', statusbar: 'yes', toolbar: 'no' };
      class ro {
        constructor(e) {
          (this.window = e), (this.associatedEvent = null);
        }
        close() {
          if (this.window)
            try {
              this.window.close();
            } catch (Wy) {}
        }
      }
      function io(e, t, n) {
        let r = arguments.length > 3 && void 0 !== arguments[3] ? arguments[3] : 500,
          i = arguments.length > 4 && void 0 !== arguments[4] ? arguments[4] : 600;
        const s = Math.max((window.screen.availHeight - i) / 2, 0).toString(),
          a = Math.max((window.screen.availWidth - r) / 2, 0).toString();
        let o = '';
        const l = Object.assign(Object.assign({}, no), { width: r.toString(), height: i.toString(), top: s, left: a }),
          c = pn().toLowerCase();
        n && (o = as(c) ? '_blank' : n), is(c) && ((t = t || 'http://localhost'), (l.scrollbars = 'yes'));
        const u = Object.entries(l).reduce((e, t) => {
          let [n, r] = t;
          return ''.concat(e).concat(n, '=').concat(r, ',');
        }, '');
        if (
          (function () {
            var e;
            return (
              ds(arguments.length > 0 && void 0 !== arguments[0] ? arguments[0] : pn()) &&
              !!(null === (e = window.navigator) || void 0 === e ? void 0 : e.standalone)
            );
          })(c) &&
          '_self' !== o
        )
          return (
            (function (e, t) {
              const n = document.createElement('a');
              (n.href = e), (n.target = t);
              const r = document.createEvent('MouseEvent');
              r.initMouseEvent('click', !0, !0, window, 1, 0, 0, 0, 0, !1, !1, !1, !1, 1, null), n.dispatchEvent(r);
            })(t || '', o),
            new ro(null)
          );
        const d = window.open(t || '', o, u);
        mi(d, e, 'popup-blocked');
        try {
          d.focus();
        } catch (Wy) {}
        return new ro(d);
      }
      const so = '__/auth/handler',
        ao = 'emulator/auth/handler',
        oo = encodeURIComponent('fac');
      async function lo(e, t, n, r, i, s) {
        mi(e.config.authDomain, e, 'auth-domain-config-required'), mi(e.config.apiKey, e, 'invalid-api-key');
        const a = { apiKey: e.config.apiKey, appName: e.name, authType: n, redirectUrl: r, v: Br, eventId: i };
        if (t instanceof Us) {
          t.setDefaultLanguage(e.languageCode),
            (a.providerId = t.providerId || ''),
            (function (e) {
              for (const t in e) if (Object.prototype.hasOwnProperty.call(e, t)) return !1;
              return !0;
            })(t.getCustomParameters()) || (a.customParameters = JSON.stringify(t.getCustomParameters()));
          for (const [e, t] of Object.entries(s || {})) a[e] = t;
        }
        if (t instanceof Vs) {
          const e = t.getScopes().filter((e) => '' !== e);
          e.length > 0 && (a.scopes = e.join(','));
        }
        e.tenantId && (a.tid = e.tenantId);
        const o = a;
        for (const u of Object.keys(o)) void 0 === o[u] && delete o[u];
        const l = await e._getAppCheckToken(),
          c = l ? '#'.concat(oo, '=').concat(encodeURIComponent(l)) : '';
        return ''
          .concat(
            (function (e) {
              let { config: t } = e;
              if (!t.emulator) return 'https://'.concat(t.authDomain, '/').concat(so);
              return Ti(t, ao);
            })(e),
            '?',
          )
          .concat(En(o).slice(1))
          .concat(c);
      }
      const co = 'webStorageSupport';
      const uo = class {
        constructor() {
          (this.eventManagers = {}),
            (this.iframes = {}),
            (this.originValidationPromises = {}),
            (this._redirectPersistence = ia),
            (this._completeRedirectFn = Fa),
            (this._overrideRedirectResult = La);
        }
        async _openPopup(e, t, n, r) {
          var i;
          vi(
            null === (i = this.eventManagers[e._key()]) || void 0 === i ? void 0 : i.manager,
            '_initialize() not called before _openPopup()',
          );
          return io(e, await lo(e, t, n, yi(), r), aa());
        }
        async _openRedirect(e, t, n, r) {
          await this._originValidation(e);
          return (
            (function (e) {
              la().location.href = e;
            })(await lo(e, t, n, yi(), r)),
            new Promise(() => {})
          );
        }
        _initialize(e) {
          const t = e._key();
          if (this.eventManagers[t]) {
            const { manager: e, promise: n } = this.eventManagers[t];
            return e ? Promise.resolve(e) : (vi(n, 'If manager is not set, promise should be'), n);
          }
          const n = this.initAndGetManager(e);
          return (
            (this.eventManagers[t] = { promise: n }),
            n.catch(() => {
              delete this.eventManagers[t];
            }),
            n
          );
        }
        async initAndGetManager(e) {
          const t = await to(e),
            n = new ja(e);
          return (
            t.register(
              'authEvent',
              (t) => {
                mi(null === t || void 0 === t ? void 0 : t.authEvent, e, 'invalid-auth-event');
                return { status: n.onEvent(t.authEvent) ? 'ACK' : 'ERROR' };
              },
              gapi.iframes.CROSS_ORIGIN_IFRAMES_FILTER,
            ),
            (this.eventManagers[e._key()] = { manager: n }),
            (this.iframes[e._key()] = t),
            n
          );
        }
        _isIframeWebStorageSupported(e, t) {
          this.iframes[e._key()].send(
            co,
            { type: co },
            (n) => {
              var r;
              const i = null === (r = null === n || void 0 === n ? void 0 : n[0]) || void 0 === r ? void 0 : r[co];
              void 0 !== i && t(!!i), ui(e, 'internal-error');
            },
            gapi.iframes.CROSS_ORIGIN_IFRAMES_FILTER,
          );
        }
        _originValidation(e) {
          const t = e._key();
          return this.originValidationPromises[t] || (this.originValidationPromises[t] = qa(e)), this.originValidationPromises[t];
        }
        get _shouldInitProactively() {
          return fs() || ss() || ds();
        }
      };
      var ho = '@firebase/auth',
        fo = '1.7.3';
      class po {
        constructor(e) {
          (this.auth = e), (this.internalListeners = new Map());
        }
        getUid() {
          var e;
          return this.assertAuthConfigured(), (null === (e = this.auth.currentUser) || void 0 === e ? void 0 : e.uid) || null;
        }
        async getToken(e) {
          if ((this.assertAuthConfigured(), await this.auth._initializationPromise, !this.auth.currentUser)) return null;
          return { accessToken: await this.auth.currentUser.getIdToken(e) };
        }
        addAuthTokenListener(e) {
          if ((this.assertAuthConfigured(), this.internalListeners.has(e))) return;
          const t = this.auth.onIdTokenChanged((t) => {
            e((null === t || void 0 === t ? void 0 : t.stsTokenManager.accessToken) || null);
          });
          this.internalListeners.set(e, t), this.updateProactiveRefresh();
        }
        removeAuthTokenListener(e) {
          this.assertAuthConfigured();
          const t = this.internalListeners.get(e);
          t && (this.internalListeners.delete(e), t(), this.updateProactiveRefresh());
        }
        assertAuthConfigured() {
          mi(this.auth._initializationPromise, 'dependent-sdk-initialized-before-auth');
        }
        updateProactiveRefresh() {
          this.internalListeners.size > 0 ? this.auth._startProactiveRefresh() : this.auth._stopProactiveRefresh();
        }
      }
      const mo = hn('authIdTokenMaxAge') || 300;
      let go = null;
      var vo, yo;
      (vo = {
        loadJS: (e) =>
          new Promise((t, n) => {
            const r = document.createElement('script');
            r.setAttribute('src', e),
              (r.onload = t),
              (r.onerror = (e) => {
                const t = di('internal-error');
                (t.customData = e), n(t);
              }),
              (r.type = 'text/javascript'),
              (r.charset = 'UTF-8'),
              (function () {
                var e, t;
                return null !== (t = null === (e = document.getElementsByTagName('head')) || void 0 === e ? void 0 : e[0]) &&
                  void 0 !== t
                  ? t
                  : document;
              })().appendChild(r);
          }),
        gapiScript: 'https://apis.google.com/js/api.js',
        recaptchaV2Script: 'https://www.google.com/recaptcha/api.js',
        recaptchaEnterpriseScript: 'https://www.google.com/recaptcha/enterprise.js?render=',
      }),
        (bs = vo),
        (yo = 'Browser'),
        Fr(
          new Cn(
            'auth',
            (e, t) => {
              let { options: n } = t;
              const r = e.getProvider('app').getImmediate(),
                i = e.getProvider('heartbeat'),
                s = e.getProvider('app-check-internal'),
                { apiKey: a, authDomain: o } = r.options;
              mi(a && !a.includes(':'), 'invalid-api-key', { appName: r.name });
              const l = {
                  apiKey: a,
                  authDomain: o,
                  clientPlatform: yo,
                  apiHost: 'identitytoolkit.googleapis.com',
                  tokenApiHost: 'securetoken.googleapis.com',
                  apiScheme: 'https',
                  sdkClientVersion: ps(yo),
                },
                c = new vs(r, i, s, l);
              return (
                (function (e, t) {
                  const n = (null === t || void 0 === t ? void 0 : t.persistence) || [],
                    r = (Array.isArray(n) ? n : [n]).map($i);
                  (null === t || void 0 === t ? void 0 : t.errorMap) && e._updateErrorMap(t.errorMap),
                    e._initializeWithPersistence(r, null === t || void 0 === t ? void 0 : t.popupRedirectResolver);
                })(c, n),
                c
              );
            },
            'PUBLIC',
          )
            .setInstantiationMode('EXPLICIT')
            .setInstanceCreatedCallback((e, t, n) => {
              e.getProvider('auth-internal').initialize();
            }),
        ),
        Fr(
          new Cn(
            'auth-internal',
            (e) => ((e) => new po(e))(ys(e.getProvider('auth').getImmediate())),
            'PRIVATE',
          ).setInstantiationMode('EXPLICIT'),
        ),
        Hr(
          ho,
          fo,
          (function (e) {
            switch (e) {
              case 'Node':
                return 'node';
              case 'ReactNative':
                return 'rn';
              case 'Worker':
                return 'webworker';
              case 'Cordova':
                return 'cordova';
              case 'WebExtension':
                return 'web-extension';
              default:
                return;
            }
          })(yo),
        ),
        Hr(ho, fo, 'esm2017');
      Hr('firebase', '10.12.1', 'app');
      var wo,
        bo,
        So =
          'undefined' !== typeof globalThis
            ? globalThis
            : 'undefined' !== typeof window
              ? window
              : 'undefined' !== typeof global
                ? global
                : 'undefined' !== typeof self
                  ? self
                  : {},
        Eo = {};
      (function () {
        var e;
        function t() {
          (this.blockSize = -1),
            (this.blockSize = 64),
            (this.g = Array(4)),
            (this.B = Array(this.blockSize)),
            (this.o = this.h = 0),
            this.s();
        }
        function n(e, t, n) {
          n || (n = 0);
          var r = Array(16);
          if ('string' === typeof t)
            for (var i = 0; 16 > i; ++i)
              r[i] = t.charCodeAt(n++) | (t.charCodeAt(n++) << 8) | (t.charCodeAt(n++) << 16) | (t.charCodeAt(n++) << 24);
          else for (i = 0; 16 > i; ++i) r[i] = t[n++] | (t[n++] << 8) | (t[n++] << 16) | (t[n++] << 24);
          (t = e.g[0]), (n = e.g[1]), (i = e.g[2]);
          var s = e.g[3],
            a = (t + (s ^ (n & (i ^ s))) + r[0] + 3614090360) & 4294967295;
          (a =
            ((n =
              (i =
                (s =
                  (t =
                    (n =
                      (i =
                        (s =
                          (t =
                            (n =
                              (i =
                                (s =
                                  (t =
                                    (n =
                                      (i =
                                        (s =
                                          (t =
                                            (n =
                                              (i =
                                                (s =
                                                  (t =
                                                    (n =
                                                      (i =
                                                        (s =
                                                          (t =
                                                            (n =
                                                              (i =
                                                                (s =
                                                                  (t =
                                                                    (n =
                                                                      (i =
                                                                        (s =
                                                                          (t =
                                                                            (n =
                                                                              (i =
                                                                                (s =
                                                                                  (t =
                                                                                    (n =
                                                                                      (i =
                                                                                        (s =
                                                                                          (t =
                                                                                            (n =
                                                                                              (i =
                                                                                                (s =
                                                                                                  (t =
                                                                                                    (n =
                                                                                                      (i =
                                                                                                        (s =
                                                                                                          (t =
                                                                                                            (n =
                                                                                                              (i =
                                                                                                                (s =
                                                                                                                  (t =
                                                                                                                    (n =
                                                                                                                      (i =
                                                                                                                        (s =
                                                                                                                          (t =
                                                                                                                            (n =
                                                                                                                              (i =
                                                                                                                                (s =
                                                                                                                                  (t =
                                                                                                                                    n +
                                                                                                                                    (((a <<
                                                                                                                                      7) &
                                                                                                                                      4294967295) |
                                                                                                                                      (a >>>
                                                                                                                                        25))) +
                                                                                                                                  ((((a =
                                                                                                                                    (s +
                                                                                                                                      (i ^
                                                                                                                                        (t &
                                                                                                                                          (n ^
                                                                                                                                            i))) +
                                                                                                                                      r[1] +
                                                                                                                                      3905402710) &
                                                                                                                                    4294967295) <<
                                                                                                                                    12) &
                                                                                                                                    4294967295) |
                                                                                                                                    (a >>>
                                                                                                                                      20))) +
                                                                                                                                ((((a =
                                                                                                                                  (i +
                                                                                                                                    (n ^
                                                                                                                                      (s &
                                                                                                                                        (t ^
                                                                                                                                          n))) +
                                                                                                                                    r[2] +
                                                                                                                                    606105819) &
                                                                                                                                  4294967295) <<
                                                                                                                                  17) &
                                                                                                                                  4294967295) |
                                                                                                                                  (a >>>
                                                                                                                                    15))) +
                                                                                                                              ((((a =
                                                                                                                                (n +
                                                                                                                                  (t ^
                                                                                                                                    (i &
                                                                                                                                      (s ^
                                                                                                                                        t))) +
                                                                                                                                  r[3] +
                                                                                                                                  3250441966) &
                                                                                                                                4294967295) <<
                                                                                                                                22) &
                                                                                                                                4294967295) |
                                                                                                                                (a >>>
                                                                                                                                  10))) +
                                                                                                                            ((((a =
                                                                                                                              (t +
                                                                                                                                (s ^
                                                                                                                                  (n &
                                                                                                                                    (i ^
                                                                                                                                      s))) +
                                                                                                                                r[4] +
                                                                                                                                4118548399) &
                                                                                                                              4294967295) <<
                                                                                                                              7) &
                                                                                                                              4294967295) |
                                                                                                                              (a >>>
                                                                                                                                25))) +
                                                                                                                          ((((a =
                                                                                                                            (s +
                                                                                                                              (i ^
                                                                                                                                (t &
                                                                                                                                  (n ^
                                                                                                                                    i))) +
                                                                                                                              r[5] +
                                                                                                                              1200080426) &
                                                                                                                            4294967295) <<
                                                                                                                            12) &
                                                                                                                            4294967295) |
                                                                                                                            (a >>>
                                                                                                                              20))) +
                                                                                                                        ((((a =
                                                                                                                          (i +
                                                                                                                            (n ^
                                                                                                                              (s &
                                                                                                                                (t ^
                                                                                                                                  n))) +
                                                                                                                            r[6] +
                                                                                                                            2821735955) &
                                                                                                                          4294967295) <<
                                                                                                                          17) &
                                                                                                                          4294967295) |
                                                                                                                          (a >>>
                                                                                                                            15))) +
                                                                                                                      ((((a =
                                                                                                                        (n +
                                                                                                                          (t ^
                                                                                                                            (i &
                                                                                                                              (s ^
                                                                                                                                t))) +
                                                                                                                          r[7] +
                                                                                                                          4249261313) &
                                                                                                                        4294967295) <<
                                                                                                                        22) &
                                                                                                                        4294967295) |
                                                                                                                        (a >>>
                                                                                                                          10))) +
                                                                                                                    ((((a =
                                                                                                                      (t +
                                                                                                                        (s ^
                                                                                                                          (n &
                                                                                                                            (i ^
                                                                                                                              s))) +
                                                                                                                        r[8] +
                                                                                                                        1770035416) &
                                                                                                                      4294967295) <<
                                                                                                                      7) &
                                                                                                                      4294967295) |
                                                                                                                      (a >>>
                                                                                                                        25))) +
                                                                                                                  ((((a =
                                                                                                                    (s +
                                                                                                                      (i ^
                                                                                                                        (t &
                                                                                                                          (n ^
                                                                                                                            i))) +
                                                                                                                      r[9] +
                                                                                                                      2336552879) &
                                                                                                                    4294967295) <<
                                                                                                                    12) &
                                                                                                                    4294967295) |
                                                                                                                    (a >>> 20))) +
                                                                                                                ((((a =
                                                                                                                  (i +
                                                                                                                    (n ^
                                                                                                                      (s &
                                                                                                                        (t ^
                                                                                                                          n))) +
                                                                                                                    r[10] +
                                                                                                                    4294925233) &
                                                                                                                  4294967295) <<
                                                                                                                  17) &
                                                                                                                  4294967295) |
                                                                                                                  (a >>> 15))) +
                                                                                                              ((((a =
                                                                                                                (n +
                                                                                                                  (t ^
                                                                                                                    (i &
                                                                                                                      (s ^ t))) +
                                                                                                                  r[11] +
                                                                                                                  2304563134) &
                                                                                                                4294967295) <<
                                                                                                                22) &
                                                                                                                4294967295) |
                                                                                                                (a >>> 10))) +
                                                                                                            ((((a =
                                                                                                              (t +
                                                                                                                (s ^
                                                                                                                  (n & (i ^ s))) +
                                                                                                                r[12] +
                                                                                                                1804603682) &
                                                                                                              4294967295) <<
                                                                                                              7) &
                                                                                                              4294967295) |
                                                                                                              (a >>> 25))) +
                                                                                                          ((((a =
                                                                                                            (s +
                                                                                                              (i ^
                                                                                                                (t & (n ^ i))) +
                                                                                                              r[13] +
                                                                                                              4254626195) &
                                                                                                            4294967295) <<
                                                                                                            12) &
                                                                                                            4294967295) |
                                                                                                            (a >>> 20))) +
                                                                                                        ((((a =
                                                                                                          (i +
                                                                                                            (n ^ (s & (t ^ n))) +
                                                                                                            r[14] +
                                                                                                            2792965006) &
                                                                                                          4294967295) <<
                                                                                                          17) &
                                                                                                          4294967295) |
                                                                                                          (a >>> 15))) +
                                                                                                      ((((a =
                                                                                                        (n +
                                                                                                          (t ^ (i & (s ^ t))) +
                                                                                                          r[15] +
                                                                                                          1236535329) &
                                                                                                        4294967295) <<
                                                                                                        22) &
                                                                                                        4294967295) |
                                                                                                        (a >>> 10))) +
                                                                                                    ((((a =
                                                                                                      (t +
                                                                                                        (i ^ (s & (n ^ i))) +
                                                                                                        r[1] +
                                                                                                        4129170786) &
                                                                                                      4294967295) <<
                                                                                                      5) &
                                                                                                      4294967295) |
                                                                                                      (a >>> 27))) +
                                                                                                  ((((a =
                                                                                                    (s +
                                                                                                      (n ^ (i & (t ^ n))) +
                                                                                                      r[6] +
                                                                                                      3225465664) &
                                                                                                    4294967295) <<
                                                                                                    9) &
                                                                                                    4294967295) |
                                                                                                    (a >>> 23))) +
                                                                                                ((((a =
                                                                                                  (i +
                                                                                                    (t ^ (n & (s ^ t))) +
                                                                                                    r[11] +
                                                                                                    643717713) &
                                                                                                  4294967295) <<
                                                                                                  14) &
                                                                                                  4294967295) |
                                                                                                  (a >>> 18))) +
                                                                                              ((((a =
                                                                                                (n +
                                                                                                  (s ^ (t & (i ^ s))) +
                                                                                                  r[0] +
                                                                                                  3921069994) &
                                                                                                4294967295) <<
                                                                                                20) &
                                                                                                4294967295) |
                                                                                                (a >>> 12))) +
                                                                                            ((((a =
                                                                                              (t +
                                                                                                (i ^ (s & (n ^ i))) +
                                                                                                r[5] +
                                                                                                3593408605) &
                                                                                              4294967295) <<
                                                                                              5) &
                                                                                              4294967295) |
                                                                                              (a >>> 27))) +
                                                                                          ((((a =
                                                                                            (s +
                                                                                              (n ^ (i & (t ^ n))) +
                                                                                              r[10] +
                                                                                              38016083) &
                                                                                            4294967295) <<
                                                                                            9) &
                                                                                            4294967295) |
                                                                                            (a >>> 23))) +
                                                                                        ((((a =
                                                                                          (i +
                                                                                            (t ^ (n & (s ^ t))) +
                                                                                            r[15] +
                                                                                            3634488961) &
                                                                                          4294967295) <<
                                                                                          14) &
                                                                                          4294967295) |
                                                                                          (a >>> 18))) +
                                                                                      ((((a =
                                                                                        (n +
                                                                                          (s ^ (t & (i ^ s))) +
                                                                                          r[4] +
                                                                                          3889429448) &
                                                                                        4294967295) <<
                                                                                        20) &
                                                                                        4294967295) |
                                                                                        (a >>> 12))) +
                                                                                    ((((a =
                                                                                      (t +
                                                                                        (i ^ (s & (n ^ i))) +
                                                                                        r[9] +
                                                                                        568446438) &
                                                                                      4294967295) <<
                                                                                      5) &
                                                                                      4294967295) |
                                                                                      (a >>> 27))) +
                                                                                  ((((a =
                                                                                    (s +
                                                                                      (n ^ (i & (t ^ n))) +
                                                                                      r[14] +
                                                                                      3275163606) &
                                                                                    4294967295) <<
                                                                                    9) &
                                                                                    4294967295) |
                                                                                    (a >>> 23))) +
                                                                                ((((a =
                                                                                  (i + (t ^ (n & (s ^ t))) + r[3] + 4107603335) &
                                                                                  4294967295) <<
                                                                                  14) &
                                                                                  4294967295) |
                                                                                  (a >>> 18))) +
                                                                              ((((a =
                                                                                (n + (s ^ (t & (i ^ s))) + r[8] + 1163531501) &
                                                                                4294967295) <<
                                                                                20) &
                                                                                4294967295) |
                                                                                (a >>> 12))) +
                                                                            ((((a =
                                                                              (t + (i ^ (s & (n ^ i))) + r[13] + 2850285829) &
                                                                              4294967295) <<
                                                                              5) &
                                                                              4294967295) |
                                                                              (a >>> 27))) +
                                                                          ((((a =
                                                                            (s + (n ^ (i & (t ^ n))) + r[2] + 4243563512) &
                                                                            4294967295) <<
                                                                            9) &
                                                                            4294967295) |
                                                                            (a >>> 23))) +
                                                                        ((((a =
                                                                          (i + (t ^ (n & (s ^ t))) + r[7] + 1735328473) &
                                                                          4294967295) <<
                                                                          14) &
                                                                          4294967295) |
                                                                          (a >>> 18))) +
                                                                      ((((a =
                                                                        (n + (s ^ (t & (i ^ s))) + r[12] + 2368359562) &
                                                                        4294967295) <<
                                                                        20) &
                                                                        4294967295) |
                                                                        (a >>> 12))) +
                                                                    ((((a = (t + (n ^ i ^ s) + r[5] + 4294588738) & 4294967295) <<
                                                                      4) &
                                                                      4294967295) |
                                                                      (a >>> 28))) +
                                                                  ((((a = (s + (t ^ n ^ i) + r[8] + 2272392833) & 4294967295) <<
                                                                    11) &
                                                                    4294967295) |
                                                                    (a >>> 21))) +
                                                                ((((a = (i + (s ^ t ^ n) + r[11] + 1839030562) & 4294967295) <<
                                                                  16) &
                                                                  4294967295) |
                                                                  (a >>> 16))) +
                                                              ((((a = (n + (i ^ s ^ t) + r[14] + 4259657740) & 4294967295) <<
                                                                23) &
                                                                4294967295) |
                                                                (a >>> 9))) +
                                                            ((((a = (t + (n ^ i ^ s) + r[1] + 2763975236) & 4294967295) << 4) &
                                                              4294967295) |
                                                              (a >>> 28))) +
                                                          ((((a = (s + (t ^ n ^ i) + r[4] + 1272893353) & 4294967295) << 11) &
                                                            4294967295) |
                                                            (a >>> 21))) +
                                                        ((((a = (i + (s ^ t ^ n) + r[7] + 4139469664) & 4294967295) << 16) &
                                                          4294967295) |
                                                          (a >>> 16))) +
                                                      ((((a = (n + (i ^ s ^ t) + r[10] + 3200236656) & 4294967295) << 23) &
                                                        4294967295) |
                                                        (a >>> 9))) +
                                                    ((((a = (t + (n ^ i ^ s) + r[13] + 681279174) & 4294967295) << 4) &
                                                      4294967295) |
                                                      (a >>> 28))) +
                                                  ((((a = (s + (t ^ n ^ i) + r[0] + 3936430074) & 4294967295) << 11) &
                                                    4294967295) |
                                                    (a >>> 21))) +
                                                ((((a = (i + (s ^ t ^ n) + r[3] + 3572445317) & 4294967295) << 16) & 4294967295) |
                                                  (a >>> 16))) +
                                              ((((a = (n + (i ^ s ^ t) + r[6] + 76029189) & 4294967295) << 23) & 4294967295) |
                                                (a >>> 9))) +
                                            ((((a = (t + (n ^ i ^ s) + r[9] + 3654602809) & 4294967295) << 4) & 4294967295) |
                                              (a >>> 28))) +
                                          ((((a = (s + (t ^ n ^ i) + r[12] + 3873151461) & 4294967295) << 11) & 4294967295) |
                                            (a >>> 21))) +
                                        ((((a = (i + (s ^ t ^ n) + r[15] + 530742520) & 4294967295) << 16) & 4294967295) |
                                          (a >>> 16))) +
                                      ((((a = (n + (i ^ s ^ t) + r[2] + 3299628645) & 4294967295) << 23) & 4294967295) |
                                        (a >>> 9))) +
                                    ((((a = (t + (i ^ (n | ~s)) + r[0] + 4096336452) & 4294967295) << 6) & 4294967295) |
                                      (a >>> 26))) +
                                  ((((a = (s + (n ^ (t | ~i)) + r[7] + 1126891415) & 4294967295) << 10) & 4294967295) |
                                    (a >>> 22))) +
                                ((((a = (i + (t ^ (s | ~n)) + r[14] + 2878612391) & 4294967295) << 15) & 4294967295) |
                                  (a >>> 17))) +
                              ((((a = (n + (s ^ (i | ~t)) + r[5] + 4237533241) & 4294967295) << 21) & 4294967295) | (a >>> 11))) +
                            ((((a = (t + (i ^ (n | ~s)) + r[12] + 1700485571) & 4294967295) << 6) & 4294967295) | (a >>> 26))) +
                          ((((a = (s + (n ^ (t | ~i)) + r[3] + 2399980690) & 4294967295) << 10) & 4294967295) | (a >>> 22))) +
                        ((((a = (i + (t ^ (s | ~n)) + r[10] + 4293915773) & 4294967295) << 15) & 4294967295) | (a >>> 17))) +
                      ((((a = (n + (s ^ (i | ~t)) + r[1] + 2240044497) & 4294967295) << 21) & 4294967295) | (a >>> 11))) +
                    ((((a = (t + (i ^ (n | ~s)) + r[8] + 1873313359) & 4294967295) << 6) & 4294967295) | (a >>> 26))) +
                  ((((a = (s + (n ^ (t | ~i)) + r[15] + 4264355552) & 4294967295) << 10) & 4294967295) | (a >>> 22))) +
                ((((a = (i + (t ^ (s | ~n)) + r[6] + 2734768916) & 4294967295) << 15) & 4294967295) | (a >>> 17))) +
              ((((a = (n + (s ^ (i | ~t)) + r[13] + 1309151649) & 4294967295) << 21) & 4294967295) | (a >>> 11))) +
              ((s =
                (t = n + ((((a = (t + (i ^ (n | ~s)) + r[4] + 4149444226) & 4294967295) << 6) & 4294967295) | (a >>> 26))) +
                ((((a = (s + (n ^ (t | ~i)) + r[11] + 3174756917) & 4294967295) << 10) & 4294967295) | (a >>> 22))) ^
                ((i = s + ((((a = (i + (t ^ (s | ~n)) + r[2] + 718787259) & 4294967295) << 15) & 4294967295) | (a >>> 17))) |
                  ~t)) +
              r[9] +
              3951481745) &
            4294967295),
            (e.g[0] = (e.g[0] + t) & 4294967295),
            (e.g[1] = (e.g[1] + (i + (((a << 21) & 4294967295) | (a >>> 11)))) & 4294967295),
            (e.g[2] = (e.g[2] + i) & 4294967295),
            (e.g[3] = (e.g[3] + s) & 4294967295);
        }
        function r(e, t) {
          this.h = t;
          for (var n = [], r = !0, i = e.length - 1; 0 <= i; i--) {
            var s = 0 | e[i];
            (r && s == t) || ((n[i] = s), (r = !1));
          }
          this.g = n;
        }
        !(function (e, t) {
          function n() {}
          (n.prototype = t.prototype),
            (e.D = t.prototype),
            (e.prototype = new n()),
            (e.prototype.constructor = e),
            (e.C = function (e, n, r) {
              for (var i = Array(arguments.length - 2), s = 2; s < arguments.length; s++) i[s - 2] = arguments[s];
              return t.prototype[n].apply(e, i);
            });
        })(t, function () {
          this.blockSize = -1;
        }),
          (t.prototype.s = function () {
            (this.g[0] = 1732584193),
              (this.g[1] = 4023233417),
              (this.g[2] = 2562383102),
              (this.g[3] = 271733878),
              (this.o = this.h = 0);
          }),
          (t.prototype.u = function (e, t) {
            void 0 === t && (t = e.length);
            for (var r = t - this.blockSize, i = this.B, s = this.h, a = 0; a < t; ) {
              if (0 == s) for (; a <= r; ) n(this, e, a), (a += this.blockSize);
              if ('string' === typeof e) {
                for (; a < t; )
                  if (((i[s++] = e.charCodeAt(a++)), s == this.blockSize)) {
                    n(this, i), (s = 0);
                    break;
                  }
              } else
                for (; a < t; )
                  if (((i[s++] = e[a++]), s == this.blockSize)) {
                    n(this, i), (s = 0);
                    break;
                  }
            }
            (this.h = s), (this.o += t);
          }),
          (t.prototype.v = function () {
            var e = Array((56 > this.h ? this.blockSize : 2 * this.blockSize) - this.h);
            e[0] = 128;
            for (var t = 1; t < e.length - 8; ++t) e[t] = 0;
            var n = 8 * this.o;
            for (t = e.length - 8; t < e.length; ++t) (e[t] = 255 & n), (n /= 256);
            for (this.u(e), e = Array(16), t = n = 0; 4 > t; ++t)
              for (var r = 0; 32 > r; r += 8) e[n++] = (this.g[t] >>> r) & 255;
            return e;
          });
        var i = {};
        function s(e) {
          return -128 <= e && 128 > e
            ? (function (e, t) {
                var n = i;
                return Object.prototype.hasOwnProperty.call(n, e) ? n[e] : (n[e] = t(e));
              })(e, function (e) {
                return new r([0 | e], 0 > e ? -1 : 0);
              })
            : new r([0 | e], 0 > e ? -1 : 0);
        }
        function a(e) {
          if (isNaN(e) || !isFinite(e)) return o;
          if (0 > e) return h(a(-e));
          for (var t = [], n = 1, i = 0; e >= n; i++) (t[i] = (e / n) | 0), (n *= 4294967296);
          return new r(t, 0);
        }
        var o = s(0),
          l = s(1),
          c = s(16777216);
        function u(e) {
          if (0 != e.h) return !1;
          for (var t = 0; t < e.g.length; t++) if (0 != e.g[t]) return !1;
          return !0;
        }
        function d(e) {
          return -1 == e.h;
        }
        function h(e) {
          for (var t = e.g.length, n = [], i = 0; i < t; i++) n[i] = ~e.g[i];
          return new r(n, ~e.h).add(l);
        }
        function f(e, t) {
          return e.add(h(t));
        }
        function p(e, t) {
          for (; (65535 & e[t]) != e[t]; ) (e[t + 1] += e[t] >>> 16), (e[t] &= 65535), t++;
        }
        function m(e, t) {
          (this.g = e), (this.h = t);
        }
        function g(e, t) {
          if (u(t)) throw Error('division by zero');
          if (u(e)) return new m(o, o);
          if (d(e)) return (t = g(h(e), t)), new m(h(t.g), h(t.h));
          if (d(t)) return (t = g(e, h(t))), new m(h(t.g), t.h);
          if (30 < e.g.length) {
            if (d(e) || d(t)) throw Error('slowDivide_ only works with positive integers.');
            for (var n = l, r = t; 0 >= r.l(e); ) (n = v(n)), (r = v(r));
            var i = y(n, 1),
              s = y(r, 1);
            for (r = y(r, 2), n = y(n, 2); !u(r); ) {
              var c = s.add(r);
              0 >= c.l(e) && ((i = i.add(n)), (s = c)), (r = y(r, 1)), (n = y(n, 1));
            }
            return (t = f(e, i.j(t))), new m(i, t);
          }
          for (i = o; 0 <= e.l(t); ) {
            for (
              n = Math.max(1, Math.floor(e.m() / t.m())),
                r = 48 >= (r = Math.ceil(Math.log(n) / Math.LN2)) ? 1 : Math.pow(2, r - 48),
                c = (s = a(n)).j(t);
              d(c) || 0 < c.l(e);

            )
              c = (s = a((n -= r))).j(t);
            u(s) && (s = l), (i = i.add(s)), (e = f(e, c));
          }
          return new m(i, e);
        }
        function v(e) {
          for (var t = e.g.length + 1, n = [], i = 0; i < t; i++) n[i] = (e.i(i) << 1) | (e.i(i - 1) >>> 31);
          return new r(n, e.h);
        }
        function y(e, t) {
          var n = t >> 5;
          t %= 32;
          for (var i = e.g.length - n, s = [], a = 0; a < i; a++)
            s[a] = 0 < t ? (e.i(a + n) >>> t) | (e.i(a + n + 1) << (32 - t)) : e.i(a + n);
          return new r(s, e.h);
        }
        ((e = r.prototype).m = function () {
          if (d(this)) return -h(this).m();
          for (var e = 0, t = 1, n = 0; n < this.g.length; n++) {
            var r = this.i(n);
            (e += (0 <= r ? r : 4294967296 + r) * t), (t *= 4294967296);
          }
          return e;
        }),
          (e.toString = function (e) {
            if (2 > (e = e || 10) || 36 < e) throw Error('radix out of range: ' + e);
            if (u(this)) return '0';
            if (d(this)) return '-' + h(this).toString(e);
            for (var t = a(Math.pow(e, 6)), n = this, r = ''; ; ) {
              var i = g(n, t).g,
                s = ((0 < (n = f(n, i.j(t))).g.length ? n.g[0] : n.h) >>> 0).toString(e);
              if (u((n = i))) return s + r;
              for (; 6 > s.length; ) s = '0' + s;
              r = s + r;
            }
          }),
          (e.i = function (e) {
            return 0 > e ? 0 : e < this.g.length ? this.g[e] : this.h;
          }),
          (e.l = function (e) {
            return d((e = f(this, e))) ? -1 : u(e) ? 0 : 1;
          }),
          (e.abs = function () {
            return d(this) ? h(this) : this;
          }),
          (e.add = function (e) {
            for (var t = Math.max(this.g.length, e.g.length), n = [], i = 0, s = 0; s <= t; s++) {
              var a = i + (65535 & this.i(s)) + (65535 & e.i(s)),
                o = (a >>> 16) + (this.i(s) >>> 16) + (e.i(s) >>> 16);
              (i = o >>> 16), (a &= 65535), (o &= 65535), (n[s] = (o << 16) | a);
            }
            return new r(n, -2147483648 & n[n.length - 1] ? -1 : 0);
          }),
          (e.j = function (e) {
            if (u(this) || u(e)) return o;
            if (d(this)) return d(e) ? h(this).j(h(e)) : h(h(this).j(e));
            if (d(e)) return h(this.j(h(e)));
            if (0 > this.l(c) && 0 > e.l(c)) return a(this.m() * e.m());
            for (var t = this.g.length + e.g.length, n = [], i = 0; i < 2 * t; i++) n[i] = 0;
            for (i = 0; i < this.g.length; i++)
              for (var s = 0; s < e.g.length; s++) {
                var l = this.i(i) >>> 16,
                  f = 65535 & this.i(i),
                  m = e.i(s) >>> 16,
                  g = 65535 & e.i(s);
                (n[2 * i + 2 * s] += f * g),
                  p(n, 2 * i + 2 * s),
                  (n[2 * i + 2 * s + 1] += l * g),
                  p(n, 2 * i + 2 * s + 1),
                  (n[2 * i + 2 * s + 1] += f * m),
                  p(n, 2 * i + 2 * s + 1),
                  (n[2 * i + 2 * s + 2] += l * m),
                  p(n, 2 * i + 2 * s + 2);
              }
            for (i = 0; i < t; i++) n[i] = (n[2 * i + 1] << 16) | n[2 * i];
            for (i = t; i < 2 * t; i++) n[i] = 0;
            return new r(n, 0);
          }),
          (e.A = function (e) {
            return g(this, e).h;
          }),
          (e.and = function (e) {
            for (var t = Math.max(this.g.length, e.g.length), n = [], i = 0; i < t; i++) n[i] = this.i(i) & e.i(i);
            return new r(n, this.h & e.h);
          }),
          (e.or = function (e) {
            for (var t = Math.max(this.g.length, e.g.length), n = [], i = 0; i < t; i++) n[i] = this.i(i) | e.i(i);
            return new r(n, this.h | e.h);
          }),
          (e.xor = function (e) {
            for (var t = Math.max(this.g.length, e.g.length), n = [], i = 0; i < t; i++) n[i] = this.i(i) ^ e.i(i);
            return new r(n, this.h ^ e.h);
          }),
          (t.prototype.digest = t.prototype.v),
          (t.prototype.reset = t.prototype.s),
          (t.prototype.update = t.prototype.u),
          (bo = Eo.Md5 = t),
          (r.prototype.add = r.prototype.add),
          (r.prototype.multiply = r.prototype.j),
          (r.prototype.modulo = r.prototype.A),
          (r.prototype.compare = r.prototype.l),
          (r.prototype.toNumber = r.prototype.m),
          (r.prototype.toString = r.prototype.toString),
          (r.prototype.getBits = r.prototype.i),
          (r.fromNumber = a),
          (r.fromString = function e(t, n) {
            if (0 == t.length) throw Error('number format error: empty string');
            if (2 > (n = n || 10) || 36 < n) throw Error('radix out of range: ' + n);
            if ('-' == t.charAt(0)) return h(e(t.substring(1), n));
            if (0 <= t.indexOf('-')) throw Error('number format error: interior "-" character');
            for (var r = a(Math.pow(n, 8)), i = o, s = 0; s < t.length; s += 8) {
              var l = Math.min(8, t.length - s),
                c = parseInt(t.substring(s, s + l), n);
              8 > l ? ((l = a(Math.pow(n, l))), (i = i.j(l).add(a(c)))) : (i = (i = i.j(r)).add(a(c)));
            }
            return i;
          }),
          (wo = Eo.Integer = r);
      }).apply('undefined' !== typeof So ? So : 'undefined' !== typeof self ? self : 'undefined' !== typeof window ? window : {});
      var To,
        _o,
        Io,
        xo,
        ko,
        Co,
        No,
        Po,
        Do,
        Ao =
          'undefined' !== typeof globalThis
            ? globalThis
            : 'undefined' !== typeof window
              ? window
              : 'undefined' !== typeof global
                ? global
                : 'undefined' !== typeof self
                  ? self
                  : {},
        Oo = {};
      (function () {
        var e,
          t =
            'function' == typeof Object.defineProperties
              ? Object.defineProperty
              : function (e, t, n) {
                  return e == Array.prototype || e == Object.prototype || (e[t] = n.value), e;
                };
        var n = (function (e) {
          e = [
            'object' == typeof globalThis && globalThis,
            e,
            'object' == typeof window && window,
            'object' == typeof self && self,
            'object' == typeof Ao && Ao,
          ];
          for (var t = 0; t < e.length; ++t) {
            var n = e[t];
            if (n && n.Math == Math) return n;
          }
          throw Error('Cannot find global object');
        })(this);
        !(function (e, r) {
          if (r)
            e: {
              var i = n;
              e = e.split('.');
              for (var s = 0; s < e.length - 1; s++) {
                var a = e[s];
                if (!(a in i)) break e;
                i = i[a];
              }
              (r = r((s = i[(e = e[e.length - 1])]))) != s && null != r && t(i, e, { configurable: !0, writable: !0, value: r });
            }
        })('Array.prototype.values', function (e) {
          return (
            e ||
            function () {
              return (function (e, t) {
                e instanceof String && (e += '');
                var n = 0,
                  r = !1,
                  i = {
                    next: function () {
                      if (!r && n < e.length) {
                        var i = n++;
                        return { value: t(i, e[i]), done: !1 };
                      }
                      return (r = !0), { done: !0, value: void 0 };
                    },
                  };
                return (
                  (i[Symbol.iterator] = function () {
                    return i;
                  }),
                  i
                );
              })(this, function (e, t) {
                return t;
              });
            }
          );
        });
        var r = r || {},
          i = this || self;
        function s(e) {
          var t = typeof e;
          return (
            'array' == (t = 'object' != t ? t : e ? (Array.isArray(e) ? 'array' : t) : 'null') ||
            ('object' == t && 'number' == typeof e.length)
          );
        }
        function a(e) {
          var t = typeof e;
          return ('object' == t && null != e) || 'function' == t;
        }
        function o(e, t, n) {
          return e.call.apply(e.bind, arguments);
        }
        function l(e, t, n) {
          if (!e) throw Error();
          if (2 < arguments.length) {
            var r = Array.prototype.slice.call(arguments, 2);
            return function () {
              var n = Array.prototype.slice.call(arguments);
              return Array.prototype.unshift.apply(n, r), e.apply(t, n);
            };
          }
          return function () {
            return e.apply(t, arguments);
          };
        }
        function c(e, t, n) {
          return (c = Function.prototype.bind && -1 != Function.prototype.bind.toString().indexOf('native code') ? o : l).apply(
            null,
            arguments,
          );
        }
        function u(e, t) {
          var n = Array.prototype.slice.call(arguments, 1);
          return function () {
            var t = n.slice();
            return t.push.apply(t, arguments), e.apply(this, t);
          };
        }
        function d(e, t) {
          function n() {}
          (n.prototype = t.prototype),
            (e.aa = t.prototype),
            (e.prototype = new n()),
            (e.prototype.constructor = e),
            (e.Qb = function (e, n, r) {
              for (var i = Array(arguments.length - 2), s = 2; s < arguments.length; s++) i[s - 2] = arguments[s];
              return t.prototype[n].apply(e, i);
            });
        }
        function h(e) {
          const t = e.length;
          if (0 < t) {
            const n = Array(t);
            for (let r = 0; r < t; r++) n[r] = e[r];
            return n;
          }
          return [];
        }
        function f(e, t) {
          for (let n = 1; n < arguments.length; n++) {
            const t = arguments[n];
            if (s(t)) {
              const n = e.length || 0,
                r = t.length || 0;
              e.length = n + r;
              for (let i = 0; i < r; i++) e[n + i] = t[i];
            } else e.push(t);
          }
        }
        function p(e) {
          return /^[\s\xa0]*$/.test(e);
        }
        function m() {
          var e = i.navigator;
          return e && (e = e.userAgent) ? e : '';
        }
        function g(e) {
          return g[' '](e), e;
        }
        g[' '] = function () {};
        var v =
          -1 != m().indexOf('Gecko') &&
          !(-1 != m().toLowerCase().indexOf('webkit') && -1 == m().indexOf('Edge')) &&
          !(-1 != m().indexOf('Trident') || -1 != m().indexOf('MSIE')) &&
          -1 == m().indexOf('Edge');
        function y(e, t, n) {
          for (const r in e) t.call(n, e[r], r, e);
        }
        function w(e) {
          const t = {};
          for (const n in e) t[n] = e[n];
          return t;
        }
        const b = 'constructor hasOwnProperty isPrototypeOf propertyIsEnumerable toLocaleString toString valueOf'.split(' ');
        function S(e, t) {
          let n, r;
          for (let i = 1; i < arguments.length; i++) {
            for (n in ((r = arguments[i]), r)) e[n] = r[n];
            for (let t = 0; t < b.length; t++) (n = b[t]), Object.prototype.hasOwnProperty.call(r, n) && (e[n] = r[n]);
          }
        }
        function E(e) {
          var t = 1;
          e = e.split(':');
          const n = [];
          for (; 0 < t && e.length; ) n.push(e.shift()), t--;
          return e.length && n.push(e.join(':')), n;
        }
        function T(e) {
          i.setTimeout(() => {
            throw e;
          }, 0);
        }
        function _() {
          var e = N;
          let t = null;
          return e.g && ((t = e.g), (e.g = e.g.next), e.g || (e.h = null), (t.next = null)), t;
        }
        var I = new (class {
          constructor(e, t) {
            (this.i = e), (this.j = t), (this.h = 0), (this.g = null);
          }
          get() {
            let e;
            return 0 < this.h ? (this.h--, (e = this.g), (this.g = e.next), (e.next = null)) : (e = this.i()), e;
          }
        })(
          () => new x(),
          (e) => e.reset(),
        );
        class x {
          constructor() {
            this.next = this.g = this.h = null;
          }
          set(e, t) {
            (this.h = e), (this.g = t), (this.next = null);
          }
          reset() {
            this.next = this.g = this.h = null;
          }
        }
        let k,
          C = !1,
          N = new (class {
            constructor() {
              this.h = this.g = null;
            }
            add(e, t) {
              const n = I.get();
              n.set(e, t), this.h ? (this.h.next = n) : (this.g = n), (this.h = n);
            }
          })(),
          P = () => {
            const e = i.Promise.resolve(void 0);
            k = () => {
              e.then(D);
            };
          };
        var D = () => {
          for (var e; (e = _()); ) {
            try {
              e.h.call(e.g);
            } catch (n) {
              T(n);
            }
            var t = I;
            t.j(e), 100 > t.h && (t.h++, (e.next = t.g), (t.g = e));
          }
          C = !1;
        };
        function A() {
          (this.s = this.s), (this.C = this.C);
        }
        function O(e, t) {
          (this.type = e), (this.g = this.target = t), (this.defaultPrevented = !1);
        }
        (A.prototype.s = !1),
          (A.prototype.ma = function () {
            this.s || ((this.s = !0), this.N());
          }),
          (A.prototype.N = function () {
            if (this.C) for (; this.C.length; ) this.C.shift()();
          }),
          (O.prototype.h = function () {
            this.defaultPrevented = !0;
          });
        var L = (function () {
          if (!i.addEventListener || !Object.defineProperty) return !1;
          var e = !1,
            t = Object.defineProperty({}, 'passive', {
              get: function () {
                e = !0;
              },
            });
          try {
            const e = () => {};
            i.addEventListener('test', e, t), i.removeEventListener('test', e, t);
          } catch (n) {}
          return e;
        })();
        function R(e, t) {
          if (
            (O.call(this, e ? e.type : ''),
            (this.relatedTarget = this.g = this.target = null),
            (this.button = this.screenY = this.screenX = this.clientY = this.clientX = 0),
            (this.key = ''),
            (this.metaKey = this.shiftKey = this.altKey = this.ctrlKey = !1),
            (this.state = null),
            (this.pointerId = 0),
            (this.pointerType = ''),
            (this.i = null),
            e)
          ) {
            var n = (this.type = e.type),
              r = e.changedTouches && e.changedTouches.length ? e.changedTouches[0] : null;
            if (((this.target = e.target || e.srcElement), (this.g = t), (t = e.relatedTarget))) {
              if (v) {
                e: {
                  try {
                    g(t.nodeName);
                    var i = !0;
                    break e;
                  } catch (s) {}
                  i = !1;
                }
                i || (t = null);
              }
            } else 'mouseover' == n ? (t = e.fromElement) : 'mouseout' == n && (t = e.toElement);
            (this.relatedTarget = t),
              r
                ? ((this.clientX = void 0 !== r.clientX ? r.clientX : r.pageX),
                  (this.clientY = void 0 !== r.clientY ? r.clientY : r.pageY),
                  (this.screenX = r.screenX || 0),
                  (this.screenY = r.screenY || 0))
                : ((this.clientX = void 0 !== e.clientX ? e.clientX : e.pageX),
                  (this.clientY = void 0 !== e.clientY ? e.clientY : e.pageY),
                  (this.screenX = e.screenX || 0),
                  (this.screenY = e.screenY || 0)),
              (this.button = e.button),
              (this.key = e.key || ''),
              (this.ctrlKey = e.ctrlKey),
              (this.altKey = e.altKey),
              (this.shiftKey = e.shiftKey),
              (this.metaKey = e.metaKey),
              (this.pointerId = e.pointerId || 0),
              (this.pointerType = 'string' === typeof e.pointerType ? e.pointerType : M[e.pointerType] || ''),
              (this.state = e.state),
              (this.i = e),
              e.defaultPrevented && R.aa.h.call(this);
          }
        }
        d(R, O);
        var M = { 2: 'touch', 3: 'pen', 4: 'mouse' };
        R.prototype.h = function () {
          R.aa.h.call(this);
          var e = this.i;
          e.preventDefault ? e.preventDefault() : (e.returnValue = !1);
        };
        var F = 'closure_listenable_' + ((1e6 * Math.random()) | 0),
          j = 0;
        function U(e, t, n, r, i) {
          (this.listener = e),
            (this.proxy = null),
            (this.src = t),
            (this.type = n),
            (this.capture = !!r),
            (this.ha = i),
            (this.key = ++j),
            (this.da = this.fa = !1);
        }
        function V(e) {
          (e.da = !0), (e.listener = null), (e.proxy = null), (e.src = null), (e.ha = null);
        }
        function z(e) {
          (this.src = e), (this.g = {}), (this.h = 0);
        }
        function B(e, t) {
          var n = t.type;
          if (n in e.g) {
            var r,
              i = e.g[n],
              s = Array.prototype.indexOf.call(i, t, void 0);
            (r = 0 <= s) && Array.prototype.splice.call(i, s, 1), r && (V(t), 0 == e.g[n].length && (delete e.g[n], e.h--));
          }
        }
        function q(e, t, n, r) {
          for (var i = 0; i < e.length; ++i) {
            var s = e[i];
            if (!s.da && s.listener == t && s.capture == !!n && s.ha == r) return i;
          }
          return -1;
        }
        z.prototype.add = function (e, t, n, r, i) {
          var s = e.toString();
          (e = this.g[s]) || ((e = this.g[s] = []), this.h++);
          var a = q(e, t, r, i);
          return -1 < a ? ((t = e[a]), n || (t.fa = !1)) : (((t = new U(t, this.src, s, !!r, i)).fa = n), e.push(t)), t;
        };
        var G = 'closure_lm_' + ((1e6 * Math.random()) | 0),
          H = {};
        function K(e, t, n, r, i) {
          if (r && r.once) return Q(e, t, n, r, i);
          if (Array.isArray(t)) {
            for (var s = 0; s < t.length; s++) K(e, t[s], n, r, i);
            return null;
          }
          return (n = te(n)), e && e[F] ? e.K(t, n, a(r) ? !!r.capture : !!r, i) : W(e, t, n, !1, r, i);
        }
        function W(e, t, n, r, i, s) {
          if (!t) throw Error('Invalid event type');
          var o = a(i) ? !!i.capture : !!i,
            l = Z(e);
          if ((l || (e[G] = l = new z(e)), (n = l.add(t, n, r, o, s)).proxy)) return n;
          if (
            ((r = (function () {
              function e(n) {
                return t.call(e.src, e.listener, n);
              }
              const t = $;
              return e;
            })()),
            (n.proxy = r),
            (r.src = e),
            (r.listener = n),
            e.addEventListener)
          )
            L || (i = o), void 0 === i && (i = !1), e.addEventListener(t.toString(), r, i);
          else if (e.attachEvent) e.attachEvent(X(t.toString()), r);
          else {
            if (!e.addListener || !e.removeListener) throw Error('addEventListener and attachEvent are unavailable.');
            e.addListener(r);
          }
          return n;
        }
        function Q(e, t, n, r, i) {
          if (Array.isArray(t)) {
            for (var s = 0; s < t.length; s++) Q(e, t[s], n, r, i);
            return null;
          }
          return (n = te(n)), e && e[F] ? e.L(t, n, a(r) ? !!r.capture : !!r, i) : W(e, t, n, !0, r, i);
        }
        function Y(e, t, n, r, i) {
          if (Array.isArray(t)) for (var s = 0; s < t.length; s++) Y(e, t[s], n, r, i);
          else
            (r = a(r) ? !!r.capture : !!r),
              (n = te(n)),
              e && e[F]
                ? ((e = e.i),
                  (t = String(t).toString()) in e.g &&
                    -1 < (n = q((s = e.g[t]), n, r, i)) &&
                    (V(s[n]), Array.prototype.splice.call(s, n, 1), 0 == s.length && (delete e.g[t], e.h--)))
                : e &&
                  (e = Z(e)) &&
                  ((t = e.g[t.toString()]), (e = -1), t && (e = q(t, n, r, i)), (n = -1 < e ? t[e] : null) && J(n));
        }
        function J(e) {
          if ('number' !== typeof e && e && !e.da) {
            var t = e.src;
            if (t && t[F]) B(t.i, e);
            else {
              var n = e.type,
                r = e.proxy;
              t.removeEventListener
                ? t.removeEventListener(n, r, e.capture)
                : t.detachEvent
                  ? t.detachEvent(X(n), r)
                  : t.addListener && t.removeListener && t.removeListener(r),
                (n = Z(t)) ? (B(n, e), 0 == n.h && ((n.src = null), (t[G] = null))) : V(e);
            }
          }
        }
        function X(e) {
          return e in H ? H[e] : (H[e] = 'on' + e);
        }
        function $(e, t) {
          if (e.da) e = !0;
          else {
            t = new R(t, this);
            var n = e.listener,
              r = e.ha || e.src;
            e.fa && J(e), (e = n.call(r, t));
          }
          return e;
        }
        function Z(e) {
          return (e = e[G]) instanceof z ? e : null;
        }
        var ee = '__closure_events_fn_' + ((1e9 * Math.random()) >>> 0);
        function te(e) {
          return 'function' === typeof e
            ? e
            : (e[ee] ||
                (e[ee] = function (t) {
                  return e.handleEvent(t);
                }),
              e[ee]);
        }
        function ne() {
          A.call(this), (this.i = new z(this)), (this.M = this), (this.F = null);
        }
        function re(e, t) {
          var n,
            r = e.F;
          if (r) for (n = []; r; r = r.F) n.push(r);
          if (((e = e.M), (r = t.type || t), 'string' === typeof t)) t = new O(t, e);
          else if (t instanceof O) t.target = t.target || e;
          else {
            var i = t;
            S((t = new O(r, e)), i);
          }
          if (((i = !0), n))
            for (var s = n.length - 1; 0 <= s; s--) {
              var a = (t.g = n[s]);
              i = ie(a, r, !0, t) && i;
            }
          if (((i = ie((a = t.g = e), r, !0, t) && i), (i = ie(a, r, !1, t) && i), n))
            for (s = 0; s < n.length; s++) i = ie((a = t.g = n[s]), r, !1, t) && i;
        }
        function ie(e, t, n, r) {
          if (!(t = e.i.g[String(t)])) return !0;
          t = t.concat();
          for (var i = !0, s = 0; s < t.length; ++s) {
            var a = t[s];
            if (a && !a.da && a.capture == n) {
              var o = a.listener,
                l = a.ha || a.src;
              a.fa && B(e.i, a), (i = !1 !== o.call(l, r) && i);
            }
          }
          return i && !r.defaultPrevented;
        }
        function se(e, t, n) {
          if ('function' === typeof e) n && (e = c(e, n));
          else {
            if (!e || 'function' != typeof e.handleEvent) throw Error('Invalid listener argument');
            e = c(e.handleEvent, e);
          }
          return 2147483647 < Number(t) ? -1 : i.setTimeout(e, t || 0);
        }
        function ae(e) {
          e.g = se(() => {
            (e.g = null), e.i && ((e.i = !1), ae(e));
          }, e.l);
          const t = e.h;
          (e.h = null), e.m.apply(null, t);
        }
        d(ne, A),
          (ne.prototype[F] = !0),
          (ne.prototype.removeEventListener = function (e, t, n, r) {
            Y(this, e, t, n, r);
          }),
          (ne.prototype.N = function () {
            if ((ne.aa.N.call(this), this.i)) {
              var e,
                t = this.i;
              for (e in t.g) {
                for (var n = t.g[e], r = 0; r < n.length; r++) V(n[r]);
                delete t.g[e], t.h--;
              }
            }
            this.F = null;
          }),
          (ne.prototype.K = function (e, t, n, r) {
            return this.i.add(String(e), t, !1, n, r);
          }),
          (ne.prototype.L = function (e, t, n, r) {
            return this.i.add(String(e), t, !0, n, r);
          });
        class oe extends A {
          constructor(e, t) {
            super(), (this.m = e), (this.l = t), (this.h = null), (this.i = !1), (this.g = null);
          }
          j(e) {
            (this.h = arguments), this.g ? (this.i = !0) : ae(this);
          }
          N() {
            super.N(), this.g && (i.clearTimeout(this.g), (this.g = null), (this.i = !1), (this.h = null));
          }
        }
        function le(e) {
          A.call(this), (this.h = e), (this.g = {});
        }
        d(le, A);
        var ce = [];
        function ue(e) {
          y(
            e.g,
            function (e, t) {
              this.g.hasOwnProperty(t) && J(e);
            },
            e,
          ),
            (e.g = {});
        }
        (le.prototype.N = function () {
          le.aa.N.call(this), ue(this);
        }),
          (le.prototype.handleEvent = function () {
            throw Error('EventHandler.handleEvent not implemented');
          });
        var de = i.JSON.stringify,
          he = i.JSON.parse,
          fe = class {
            stringify(e) {
              return i.JSON.stringify(e, void 0);
            }
            parse(e) {
              return i.JSON.parse(e, void 0);
            }
          };
        function pe() {}
        function me(e) {
          return e.h || (e.h = e.i());
        }
        function ge() {}
        pe.prototype.h = null;
        var ve = { OPEN: 'a', kb: 'b', Ja: 'c', wb: 'd' };
        function ye() {
          O.call(this, 'd');
        }
        function we() {
          O.call(this, 'c');
        }
        d(ye, O), d(we, O);
        var be = {},
          Se = null;
        function Ee() {
          return (Se = Se || new ne());
        }
        function Te(e) {
          O.call(this, be.La, e);
        }
        function _e(e) {
          const t = Ee();
          re(t, new Te(t));
        }
        function Ie(e, t) {
          O.call(this, be.STAT_EVENT, e), (this.stat = t);
        }
        function xe(e) {
          const t = Ee();
          re(t, new Ie(t, e));
        }
        function ke(e, t) {
          O.call(this, be.Ma, e), (this.size = t);
        }
        function Ce(e, t) {
          if ('function' !== typeof e) throw Error('Fn must not be null and must be a function');
          return i.setTimeout(function () {
            e();
          }, t);
        }
        function Ne() {
          this.g = !0;
        }
        function Pe(e, t, n, r) {
          e.info(function () {
            return (
              'XMLHTTP TEXT (' +
              t +
              '): ' +
              (function (e, t) {
                if (!e.g) return t;
                if (!t) return null;
                try {
                  var n = JSON.parse(t);
                  if (n)
                    for (e = 0; e < n.length; e++)
                      if (Array.isArray(n[e])) {
                        var r = n[e];
                        if (!(2 > r.length)) {
                          var i = r[1];
                          if (Array.isArray(i) && !(1 > i.length)) {
                            var s = i[0];
                            if ('noop' != s && 'stop' != s && 'close' != s) for (var a = 1; a < i.length; a++) i[a] = '';
                          }
                        }
                      }
                  return de(n);
                } catch (o) {
                  return t;
                }
              })(e, n) +
              (r ? ' ' + r : '')
            );
          });
        }
        (be.La = 'serverreachability'),
          d(Te, O),
          (be.STAT_EVENT = 'statevent'),
          d(Ie, O),
          (be.Ma = 'timingevent'),
          d(ke, O),
          (Ne.prototype.xa = function () {
            this.g = !1;
          }),
          (Ne.prototype.info = function () {});
        var De,
          Ae = { NO_ERROR: 0, gb: 1, tb: 2, sb: 3, nb: 4, rb: 5, ub: 6, Ia: 7, TIMEOUT: 8, xb: 9 },
          Oe = {
            lb: 'complete',
            Hb: 'success',
            Ja: 'error',
            Ia: 'abort',
            zb: 'ready',
            Ab: 'readystatechange',
            TIMEOUT: 'timeout',
            vb: 'incrementaldata',
            yb: 'progress',
            ob: 'downloadprogress',
            Pb: 'uploadprogress',
          };
        function Le() {}
        function Re(e, t, n, r) {
          (this.j = e),
            (this.i = t),
            (this.l = n),
            (this.R = r || 1),
            (this.U = new le(this)),
            (this.I = 45e3),
            (this.H = null),
            (this.o = !1),
            (this.m = this.A = this.v = this.L = this.F = this.S = this.B = null),
            (this.D = []),
            (this.g = null),
            (this.C = 0),
            (this.s = this.u = null),
            (this.X = -1),
            (this.J = !1),
            (this.O = 0),
            (this.M = null),
            (this.W = this.K = this.T = this.P = !1),
            (this.h = new Me());
        }
        function Me() {
          (this.i = null), (this.g = ''), (this.h = !1);
        }
        d(Le, pe),
          (Le.prototype.g = function () {
            return new XMLHttpRequest();
          }),
          (Le.prototype.i = function () {
            return {};
          }),
          (De = new Le());
        var Fe = {},
          je = {};
        function Ue(e, t, n) {
          (e.L = 1), (e.v = dt(at(t))), (e.m = n), (e.P = !0), Ve(e, null);
        }
        function Ve(e, t) {
          (e.F = Date.now()), qe(e), (e.A = at(e.v));
          var n = e.A,
            r = e.R;
          Array.isArray(r) || (r = [String(r)]),
            It(n.i, 't', r),
            (e.C = 0),
            (n = e.j.J),
            (e.h = new Me()),
            (e.g = fn(e.j, n ? t : null, !e.m)),
            0 < e.O && (e.M = new oe(c(e.Y, e, e.g), e.O)),
            (t = e.U),
            (n = e.g),
            (r = e.ca);
          var i = 'readystatechange';
          Array.isArray(i) || (i && (ce[0] = i.toString()), (i = ce));
          for (var s = 0; s < i.length; s++) {
            var a = K(n, i[s], r || t.handleEvent, !1, t.h || t);
            if (!a) break;
            t.g[a.key] = a;
          }
          (t = e.H ? w(e.H) : {}),
            e.m
              ? (e.u || (e.u = 'POST'), (t['Content-Type'] = 'application/x-www-form-urlencoded'), e.g.ea(e.A, e.u, e.m, t))
              : ((e.u = 'GET'), e.g.ea(e.A, e.u, null, t)),
            _e(),
            (function (e, t, n, r, i, s) {
              e.info(function () {
                if (e.g)
                  if (s)
                    for (var a = '', o = s.split('&'), l = 0; l < o.length; l++) {
                      var c = o[l].split('=');
                      if (1 < c.length) {
                        var u = c[0];
                        c = c[1];
                        var d = u.split('_');
                        a = 2 <= d.length && 'type' == d[1] ? a + (u + '=') + c + '&' : a + (u + '=redacted&');
                      }
                    }
                  else a = null;
                else a = s;
                return 'XMLHTTP REQ (' + r + ') [attempt ' + i + ']: ' + t + '\n' + n + '\n' + a;
              });
            })(e.i, e.u, e.A, e.l, e.R, e.m);
        }
        function ze(e) {
          return !!e.g && 'GET' == e.u && 2 != e.L && e.j.Ca;
        }
        function Be(e, t) {
          var n = e.C,
            r = t.indexOf('\n', n);
          return -1 == r
            ? je
            : ((n = Number(t.substring(n, r))),
              isNaN(n) ? Fe : (r += 1) + n > t.length ? je : ((t = t.slice(r, r + n)), (e.C = r + n), t));
        }
        function qe(e) {
          (e.S = Date.now() + e.I), Ge(e, e.I);
        }
        function Ge(e, t) {
          if (null != e.B) throw Error('WatchDog timer not null');
          e.B = Ce(c(e.ba, e), t);
        }
        function He(e) {
          e.B && (i.clearTimeout(e.B), (e.B = null));
        }
        function Ke(e) {
          0 == e.j.G || e.J || ln(e.j, e);
        }
        function We(e) {
          He(e);
          var t = e.M;
          t && 'function' == typeof t.ma && t.ma(), (e.M = null), ue(e.U), e.g && ((t = e.g), (e.g = null), t.abort(), t.ma());
        }
        function Qe(e, t) {
          try {
            var n = e.j;
            if (0 != n.G && (n.g == e || Ze(n.h, e)))
              if (!e.K && Ze(n.h, e) && 3 == n.G) {
                try {
                  var r = n.Da.g.parse(t);
                } catch (u) {
                  r = null;
                }
                if (Array.isArray(r) && 3 == r.length) {
                  var i = r;
                  if (0 == i[0]) {
                    e: if (!n.u) {
                      if (n.g) {
                        if (!(n.g.F + 3e3 < e.F)) break e;
                        on(n), Jt(n);
                      }
                      rn(n), xe(18);
                    }
                  } else (n.za = i[1]), 0 < n.za - n.T && 37500 > i[2] && n.F && 0 == n.v && !n.C && (n.C = Ce(c(n.Za, n), 6e3));
                  if (1 >= $e(n.h) && n.ca) {
                    try {
                      n.ca();
                    } catch (u) {}
                    n.ca = void 0;
                  }
                } else un(n, 11);
              } else if (((e.K || n.g == e) && on(n), !p(t)))
                for (i = n.Da.g.parse(t), t = 0; t < i.length; t++) {
                  let c = i[t];
                  if (((n.T = c[0]), (c = c[1]), 2 == n.G))
                    if ('c' == c[0]) {
                      (n.K = c[1]), (n.ia = c[2]);
                      const t = c[3];
                      null != t && ((n.la = t), n.j.info('VER=' + n.la));
                      const i = c[4];
                      null != i && ((n.Aa = i), n.j.info('SVER=' + n.Aa));
                      const u = c[5];
                      null != u &&
                        'number' === typeof u &&
                        0 < u &&
                        ((r = 1.5 * u), (n.L = r), n.j.info('backChannelRequestTimeoutMs_=' + r)),
                        (r = n);
                      const d = e.g;
                      if (d) {
                        const e = d.g ? d.g.getResponseHeader('X-Client-Wire-Protocol') : null;
                        if (e) {
                          var s = r.h;
                          s.g ||
                            (-1 == e.indexOf('spdy') && -1 == e.indexOf('quic') && -1 == e.indexOf('h2')) ||
                            ((s.j = s.l), (s.g = new Set()), s.h && (et(s, s.h), (s.h = null)));
                        }
                        if (r.D) {
                          const e = d.g ? d.g.getResponseHeader('X-HTTP-Session-Id') : null;
                          e && ((r.ya = e), ut(r.I, r.D, e));
                        }
                      }
                      (n.G = 3), n.l && n.l.ua(), n.ba && ((n.R = Date.now() - e.F), n.j.info('Handshake RTT: ' + n.R + 'ms'));
                      var a = e;
                      if ((((r = n).qa = hn(r, r.J ? r.ia : null, r.W)), a.K)) {
                        tt(r.h, a);
                        var o = a,
                          l = r.L;
                        l && (o.I = l), o.B && (He(o), qe(o)), (r.g = a);
                      } else nn(r);
                      0 < n.i.length && $t(n);
                    } else ('stop' != c[0] && 'close' != c[0]) || un(n, 7);
                  else
                    3 == n.G &&
                      ('stop' == c[0] || 'close' == c[0]
                        ? 'stop' == c[0]
                          ? un(n, 7)
                          : Yt(n)
                        : 'noop' != c[0] && n.l && n.l.ta(c),
                      (n.v = 0));
                }
            _e();
          } catch (u) {}
        }
        (Re.prototype.ca = function (e) {
          e = e.target;
          const t = this.M;
          t && 3 == Ht(e) ? t.j() : this.Y(e);
        }),
          (Re.prototype.Y = function (e) {
            try {
              if (e == this.g)
                e: {
                  const h = Ht(this.g);
                  var t = this.g.Ba();
                  this.g.Z();
                  if (!(3 > h) && (3 != h || (this.g && (this.h.h || this.g.oa() || Kt(this.g))))) {
                    this.J || 4 != h || 7 == t || _e(), He(this);
                    var n = this.g.Z();
                    this.X = n;
                    t: if (ze(this)) {
                      var r = Kt(this.g);
                      e = '';
                      var s = r.length,
                        a = 4 == Ht(this.g);
                      if (!this.h.i) {
                        if ('undefined' === typeof TextDecoder) {
                          We(this), Ke(this);
                          var o = '';
                          break t;
                        }
                        this.h.i = new i.TextDecoder();
                      }
                      for (t = 0; t < s; t++) (this.h.h = !0), (e += this.h.i.decode(r[t], { stream: !(a && t == s - 1) }));
                      (r.length = 0), (this.h.g += e), (this.C = 0), (o = this.h.g);
                    } else o = this.g.oa();
                    if (
                      ((this.o = 200 == n),
                      (function (e, t, n, r, i, s, a) {
                        e.info(function () {
                          return 'XMLHTTP RESP (' + r + ') [ attempt ' + i + ']: ' + t + '\n' + n + '\n' + s + ' ' + a;
                        });
                      })(this.i, this.u, this.A, this.l, this.R, h, n),
                      this.o)
                    ) {
                      if (this.T && !this.K) {
                        t: {
                          if (this.g) {
                            var l,
                              c = this.g;
                            if ((l = c.g ? c.g.getResponseHeader('X-HTTP-Initial-Response') : null) && !p(l)) {
                              var u = l;
                              break t;
                            }
                          }
                          u = null;
                        }
                        if (!(n = u)) {
                          (this.o = !1), (this.s = 3), xe(12), We(this), Ke(this);
                          break e;
                        }
                        Pe(this.i, this.l, n, 'Initial handshake response via X-HTTP-Initial-Response'),
                          (this.K = !0),
                          Qe(this, n);
                      }
                      if (this.P) {
                        let e;
                        for (n = !0; !this.J && this.C < o.length; ) {
                          if (((e = Be(this, o)), e == je)) {
                            4 == h && ((this.s = 4), xe(14), (n = !1)), Pe(this.i, this.l, null, '[Incomplete Response]');
                            break;
                          }
                          if (e == Fe) {
                            (this.s = 4), xe(15), Pe(this.i, this.l, o, '[Invalid Chunk]'), (n = !1);
                            break;
                          }
                          Pe(this.i, this.l, e, null), Qe(this, e);
                        }
                        if (
                          (ze(this) && 0 != this.C && ((this.h.g = this.h.g.slice(this.C)), (this.C = 0)),
                          4 != h || 0 != o.length || this.h.h || ((this.s = 1), xe(16), (n = !1)),
                          (this.o = this.o && n),
                          n)
                        ) {
                          if (0 < o.length && !this.W) {
                            this.W = !0;
                            var d = this.j;
                            d.g == this &&
                              d.ba &&
                              !d.M &&
                              (d.j.info('Great, no buffering proxy detected. Bytes received: ' + o.length),
                              sn(d),
                              (d.M = !0),
                              xe(11));
                          }
                        } else Pe(this.i, this.l, o, '[Invalid Chunked Response]'), We(this), Ke(this);
                      } else Pe(this.i, this.l, o, null), Qe(this, o);
                      4 == h && We(this), this.o && !this.J && (4 == h ? ln(this.j, this) : ((this.o = !1), qe(this)));
                    } else
                      (function (e) {
                        const t = {};
                        e = ((e.g && 2 <= Ht(e) && e.g.getAllResponseHeaders()) || '').split('\r\n');
                        for (let r = 0; r < e.length; r++) {
                          if (p(e[r])) continue;
                          var n = E(e[r]);
                          const i = n[0];
                          if ('string' !== typeof (n = n[1])) continue;
                          n = n.trim();
                          const s = t[i] || [];
                          (t[i] = s), s.push(n);
                        }
                        !(function (e, t) {
                          for (const n in e) t.call(void 0, e[n], n, e);
                        })(t, function (e) {
                          return e.join(', ');
                        });
                      })(this.g),
                        400 == n && 0 < o.indexOf('Unknown SID') ? ((this.s = 3), xe(12)) : ((this.s = 0), xe(13)),
                        We(this),
                        Ke(this);
                  }
                }
            } catch (h) {}
          }),
          (Re.prototype.cancel = function () {
            (this.J = !0), We(this);
          }),
          (Re.prototype.ba = function () {
            this.B = null;
            const e = Date.now();
            0 <= e - this.S
              ? ((function (e, t) {
                  e.info(function () {
                    return 'TIMEOUT: ' + t;
                  });
                })(this.i, this.A),
                2 != this.L && (_e(), xe(17)),
                We(this),
                (this.s = 2),
                Ke(this))
              : Ge(this, this.S - e);
          });
        var Ye = class {
          constructor(e, t) {
            (this.g = e), (this.map = t);
          }
        };
        function Je(e) {
          (this.l = e || 10),
            i.PerformanceNavigationTiming
              ? (e =
                  0 < (e = i.performance.getEntriesByType('navigation')).length &&
                  ('hq' == e[0].nextHopProtocol || 'h2' == e[0].nextHopProtocol))
              : (e = !!(i.chrome && i.chrome.loadTimes && i.chrome.loadTimes() && i.chrome.loadTimes().wasFetchedViaSpdy)),
            (this.j = e ? this.l : 1),
            (this.g = null),
            1 < this.j && (this.g = new Set()),
            (this.h = null),
            (this.i = []);
        }
        function Xe(e) {
          return !!e.h || (!!e.g && e.g.size >= e.j);
        }
        function $e(e) {
          return e.h ? 1 : e.g ? e.g.size : 0;
        }
        function Ze(e, t) {
          return e.h ? e.h == t : !!e.g && e.g.has(t);
        }
        function et(e, t) {
          e.g ? e.g.add(t) : (e.h = t);
        }
        function tt(e, t) {
          e.h && e.h == t ? (e.h = null) : e.g && e.g.has(t) && e.g.delete(t);
        }
        function nt(e) {
          if (null != e.h) return e.i.concat(e.h.D);
          if (null != e.g && 0 !== e.g.size) {
            let t = e.i;
            for (const n of e.g.values()) t = t.concat(n.D);
            return t;
          }
          return h(e.i);
        }
        function rt(e, t) {
          if (e.forEach && 'function' == typeof e.forEach) e.forEach(t, void 0);
          else if (s(e) || 'string' === typeof e) Array.prototype.forEach.call(e, t, void 0);
          else
            for (
              var n = (function (e) {
                  if (e.na && 'function' == typeof e.na) return e.na();
                  if (!e.V || 'function' != typeof e.V) {
                    if ('undefined' !== typeof Map && e instanceof Map) return Array.from(e.keys());
                    if (!('undefined' !== typeof Set && e instanceof Set)) {
                      if (s(e) || 'string' === typeof e) {
                        var t = [];
                        e = e.length;
                        for (var n = 0; n < e; n++) t.push(n);
                        return t;
                      }
                      (t = []), (n = 0);
                      for (const r in e) t[n++] = r;
                      return t;
                    }
                  }
                })(e),
                r = (function (e) {
                  if (e.V && 'function' == typeof e.V) return e.V();
                  if (('undefined' !== typeof Map && e instanceof Map) || ('undefined' !== typeof Set && e instanceof Set))
                    return Array.from(e.values());
                  if ('string' === typeof e) return e.split('');
                  if (s(e)) {
                    for (var t = [], n = e.length, r = 0; r < n; r++) t.push(e[r]);
                    return t;
                  }
                  for (r in ((t = []), (n = 0), e)) t[n++] = e[r];
                  return t;
                })(e),
                i = r.length,
                a = 0;
              a < i;
              a++
            )
              t.call(void 0, r[a], n && n[a], e);
        }
        Je.prototype.cancel = function () {
          if (((this.i = nt(this)), this.h)) this.h.cancel(), (this.h = null);
          else if (this.g && 0 !== this.g.size) {
            for (const e of this.g.values()) e.cancel();
            this.g.clear();
          }
        };
        var it = RegExp(
          '^(?:([^:/?#.]+):)?(?://(?:([^\\\\/?#]*)@)?([^\\\\/?#]*?)(?::([0-9]+))?(?=[\\\\/?#]|$))?([^?#]+)?(?:\\?([^#]*))?(?:#([\\s\\S]*))?$',
        );
        function st(e) {
          if (((this.g = this.o = this.j = ''), (this.s = null), (this.m = this.l = ''), (this.h = !1), e instanceof st)) {
            (this.h = e.h), ot(this, e.j), (this.o = e.o), (this.g = e.g), lt(this, e.s), (this.l = e.l);
            var t = e.i,
              n = new St();
            (n.i = t.i), t.g && ((n.g = new Map(t.g)), (n.h = t.h)), ct(this, n), (this.m = e.m);
          } else
            e && (t = String(e).match(it))
              ? ((this.h = !1),
                ot(this, t[1] || '', !0),
                (this.o = ht(t[2] || '')),
                (this.g = ht(t[3] || '', !0)),
                lt(this, t[4]),
                (this.l = ht(t[5] || '', !0)),
                ct(this, t[6] || '', !0),
                (this.m = ht(t[7] || '')))
              : ((this.h = !1), (this.i = new St(null, this.h)));
        }
        function at(e) {
          return new st(e);
        }
        function ot(e, t, n) {
          (e.j = n ? ht(t, !0) : t), e.j && (e.j = e.j.replace(/:$/, ''));
        }
        function lt(e, t) {
          if (t) {
            if (((t = Number(t)), isNaN(t) || 0 > t)) throw Error('Bad port number ' + t);
            e.s = t;
          } else e.s = null;
        }
        function ct(e, t, n) {
          t instanceof St
            ? ((e.i = t),
              (function (e, t) {
                t &&
                  !e.j &&
                  (Et(e),
                  (e.i = null),
                  e.g.forEach(function (e, t) {
                    var n = t.toLowerCase();
                    t != n && (Tt(this, t), It(this, n, e));
                  }, e)),
                  (e.j = t);
              })(e.i, e.h))
            : (n || (t = ft(t, wt)), (e.i = new St(t, e.h)));
        }
        function ut(e, t, n) {
          e.i.set(t, n);
        }
        function dt(e) {
          return (
            ut(
              e,
              'zx',
              Math.floor(2147483648 * Math.random()).toString(36) +
                Math.abs(Math.floor(2147483648 * Math.random()) ^ Date.now()).toString(36),
            ),
            e
          );
        }
        function ht(e, t) {
          return e ? (t ? decodeURI(e.replace(/%25/g, '%2525')) : decodeURIComponent(e)) : '';
        }
        function ft(e, t, n) {
          return 'string' === typeof e
            ? ((e = encodeURI(e).replace(t, pt)), n && (e = e.replace(/%25([0-9a-fA-F]{2})/g, '%$1')), e)
            : null;
        }
        function pt(e) {
          return '%' + (((e = e.charCodeAt(0)) >> 4) & 15).toString(16) + (15 & e).toString(16);
        }
        st.prototype.toString = function () {
          var e = [],
            t = this.j;
          t && e.push(ft(t, gt, !0), ':');
          var n = this.g;
          return (
            (n || 'file' == t) &&
              (e.push('//'),
              (t = this.o) && e.push(ft(t, gt, !0), '@'),
              e.push(encodeURIComponent(String(n)).replace(/%25([0-9a-fA-F]{2})/g, '%$1')),
              null != (n = this.s) && e.push(':', String(n))),
            (n = this.l) && (this.g && '/' != n.charAt(0) && e.push('/'), e.push(ft(n, '/' == n.charAt(0) ? yt : vt, !0))),
            (n = this.i.toString()) && e.push('?', n),
            (n = this.m) && e.push('#', ft(n, bt)),
            e.join('')
          );
        };
        var mt,
          gt = /[#\/\?@]/g,
          vt = /[#\?:]/g,
          yt = /[#\?]/g,
          wt = /[#\?@]/g,
          bt = /#/g;
        function St(e, t) {
          (this.h = this.g = null), (this.i = e || null), (this.j = !!t);
        }
        function Et(e) {
          e.g ||
            ((e.g = new Map()),
            (e.h = 0),
            e.i &&
              (function (e, t) {
                if (e) {
                  e = e.split('&');
                  for (var n = 0; n < e.length; n++) {
                    var r = e[n].indexOf('='),
                      i = null;
                    if (0 <= r) {
                      var s = e[n].substring(0, r);
                      i = e[n].substring(r + 1);
                    } else s = e[n];
                    t(s, i ? decodeURIComponent(i.replace(/\+/g, ' ')) : '');
                  }
                }
              })(e.i, function (t, n) {
                e.add(decodeURIComponent(t.replace(/\+/g, ' ')), n);
              }));
        }
        function Tt(e, t) {
          Et(e), (t = xt(e, t)), e.g.has(t) && ((e.i = null), (e.h -= e.g.get(t).length), e.g.delete(t));
        }
        function _t(e, t) {
          return Et(e), (t = xt(e, t)), e.g.has(t);
        }
        function It(e, t, n) {
          Tt(e, t), 0 < n.length && ((e.i = null), e.g.set(xt(e, t), h(n)), (e.h += n.length));
        }
        function xt(e, t) {
          return (t = String(t)), e.j && (t = t.toLowerCase()), t;
        }
        function kt(e, t, n, r, i) {
          try {
            i && ((i.onload = null), (i.onerror = null), (i.onabort = null), (i.ontimeout = null)), r(n);
          } catch (s) {}
        }
        function Ct() {
          this.g = new fe();
        }
        function Nt(e, t, n) {
          const r = n || '';
          try {
            rt(e, function (e, n) {
              let i = e;
              a(e) && (i = de(e)), t.push(r + n + '=' + encodeURIComponent(i));
            });
          } catch (Wy) {
            throw (t.push(r + 'type=' + encodeURIComponent('_badmap')), Wy);
          }
        }
        function Pt(e) {
          (this.l = e.Ub || null), (this.j = e.eb || !1);
        }
        function Dt(e, t) {
          ne.call(this),
            (this.D = e),
            (this.o = t),
            (this.m = void 0),
            (this.status = this.readyState = 0),
            (this.responseType = this.responseText = this.response = this.statusText = ''),
            (this.onreadystatechange = null),
            (this.u = new Headers()),
            (this.h = null),
            (this.B = 'GET'),
            (this.A = ''),
            (this.g = !1),
            (this.v = this.j = this.l = null);
        }
        function At(e) {
          e.j.read().then(e.Pa.bind(e)).catch(e.ga.bind(e));
        }
        function Ot(e) {
          (e.readyState = 4), (e.l = null), (e.j = null), (e.v = null), Lt(e);
        }
        function Lt(e) {
          e.onreadystatechange && e.onreadystatechange.call(e);
        }
        function Rt(e) {
          let t = '';
          return (
            y(e, function (e, n) {
              (t += n), (t += ':'), (t += e), (t += '\r\n');
            }),
            t
          );
        }
        function Mt(e, t, n) {
          e: {
            for (r in n) {
              var r = !1;
              break e;
            }
            r = !0;
          }
          r || ((n = Rt(n)), 'string' === typeof e ? null != n && encodeURIComponent(String(n)) : ut(e, t, n));
        }
        function Ft(e) {
          ne.call(this),
            (this.headers = new Map()),
            (this.o = e || null),
            (this.h = !1),
            (this.v = this.g = null),
            (this.D = ''),
            (this.m = 0),
            (this.l = ''),
            (this.j = this.B = this.u = this.A = !1),
            (this.I = null),
            (this.H = ''),
            (this.J = !1);
        }
        ((e = St.prototype).add = function (e, t) {
          Et(this), (this.i = null), (e = xt(this, e));
          var n = this.g.get(e);
          return n || this.g.set(e, (n = [])), n.push(t), (this.h += 1), this;
        }),
          (e.forEach = function (e, t) {
            Et(this),
              this.g.forEach(function (n, r) {
                n.forEach(function (n) {
                  e.call(t, n, r, this);
                }, this);
              }, this);
          }),
          (e.na = function () {
            Et(this);
            const e = Array.from(this.g.values()),
              t = Array.from(this.g.keys()),
              n = [];
            for (let r = 0; r < t.length; r++) {
              const i = e[r];
              for (let e = 0; e < i.length; e++) n.push(t[r]);
            }
            return n;
          }),
          (e.V = function (e) {
            Et(this);
            let t = [];
            if ('string' === typeof e) _t(this, e) && (t = t.concat(this.g.get(xt(this, e))));
            else {
              e = Array.from(this.g.values());
              for (let n = 0; n < e.length; n++) t = t.concat(e[n]);
            }
            return t;
          }),
          (e.set = function (e, t) {
            return (
              Et(this),
              (this.i = null),
              _t(this, (e = xt(this, e))) && (this.h -= this.g.get(e).length),
              this.g.set(e, [t]),
              (this.h += 1),
              this
            );
          }),
          (e.get = function (e, t) {
            return e && 0 < (e = this.V(e)).length ? String(e[0]) : t;
          }),
          (e.toString = function () {
            if (this.i) return this.i;
            if (!this.g) return '';
            const e = [],
              t = Array.from(this.g.keys());
            for (var n = 0; n < t.length; n++) {
              var r = t[n];
              const s = encodeURIComponent(String(r)),
                a = this.V(r);
              for (r = 0; r < a.length; r++) {
                var i = s;
                '' !== a[r] && (i += '=' + encodeURIComponent(String(a[r]))), e.push(i);
              }
            }
            return (this.i = e.join('&'));
          }),
          d(Pt, pe),
          (Pt.prototype.g = function () {
            return new Dt(this.l, this.j);
          }),
          (Pt.prototype.i =
            ((mt = {}),
            function () {
              return mt;
            })),
          d(Dt, ne),
          ((e = Dt.prototype).open = function (e, t) {
            if (0 != this.readyState) throw (this.abort(), Error('Error reopening a connection'));
            (this.B = e), (this.A = t), (this.readyState = 1), Lt(this);
          }),
          (e.send = function (e) {
            if (1 != this.readyState) throw (this.abort(), Error('need to call open() first. '));
            this.g = !0;
            const t = { headers: this.u, method: this.B, credentials: this.m, cache: void 0 };
            e && (t.body = e), (this.D || i).fetch(new Request(this.A, t)).then(this.Sa.bind(this), this.ga.bind(this));
          }),
          (e.abort = function () {
            (this.response = this.responseText = ''),
              (this.u = new Headers()),
              (this.status = 0),
              this.j && this.j.cancel('Request was aborted.').catch(() => {}),
              1 <= this.readyState && this.g && 4 != this.readyState && ((this.g = !1), Ot(this)),
              (this.readyState = 0);
          }),
          (e.Sa = function (e) {
            if (
              this.g &&
              ((this.l = e),
              this.h ||
                ((this.status = this.l.status),
                (this.statusText = this.l.statusText),
                (this.h = e.headers),
                (this.readyState = 2),
                Lt(this)),
              this.g && ((this.readyState = 3), Lt(this), this.g))
            )
              if ('arraybuffer' === this.responseType) e.arrayBuffer().then(this.Qa.bind(this), this.ga.bind(this));
              else if ('undefined' !== typeof i.ReadableStream && 'body' in e) {
                if (((this.j = e.body.getReader()), this.o)) {
                  if (this.responseType) throw Error('responseType must be empty for "streamBinaryChunks" mode responses.');
                  this.response = [];
                } else (this.response = this.responseText = ''), (this.v = new TextDecoder());
                At(this);
              } else e.text().then(this.Ra.bind(this), this.ga.bind(this));
          }),
          (e.Pa = function (e) {
            if (this.g) {
              if (this.o && e.value) this.response.push(e.value);
              else if (!this.o) {
                var t = e.value ? e.value : new Uint8Array(0);
                (t = this.v.decode(t, { stream: !e.done })) && (this.response = this.responseText += t);
              }
              e.done ? Ot(this) : Lt(this), 3 == this.readyState && At(this);
            }
          }),
          (e.Ra = function (e) {
            this.g && ((this.response = this.responseText = e), Ot(this));
          }),
          (e.Qa = function (e) {
            this.g && ((this.response = e), Ot(this));
          }),
          (e.ga = function () {
            this.g && Ot(this);
          }),
          (e.setRequestHeader = function (e, t) {
            this.u.append(e, t);
          }),
          (e.getResponseHeader = function (e) {
            return (this.h && this.h.get(e.toLowerCase())) || '';
          }),
          (e.getAllResponseHeaders = function () {
            if (!this.h) return '';
            const e = [],
              t = this.h.entries();
            for (var n = t.next(); !n.done; ) (n = n.value), e.push(n[0] + ': ' + n[1]), (n = t.next());
            return e.join('\r\n');
          }),
          Object.defineProperty(Dt.prototype, 'withCredentials', {
            get: function () {
              return 'include' === this.m;
            },
            set: function (e) {
              this.m = e ? 'include' : 'same-origin';
            },
          }),
          d(Ft, ne);
        var jt = /^https?$/i,
          Ut = ['POST', 'PUT'];
        function Vt(e, t) {
          (e.h = !1), e.g && ((e.j = !0), e.g.abort(), (e.j = !1)), (e.l = t), (e.m = 5), zt(e), qt(e);
        }
        function zt(e) {
          e.A || ((e.A = !0), re(e, 'complete'), re(e, 'error'));
        }
        function Bt(e) {
          if (e.h && 'undefined' != typeof r && (!e.v[1] || 4 != Ht(e) || 2 != e.Z()))
            if (e.u && 4 == Ht(e)) se(e.Ea, 0, e);
            else if ((re(e, 'readystatechange'), 4 == Ht(e))) {
              e.h = !1;
              try {
                const r = e.Z();
                e: switch (r) {
                  case 200:
                  case 201:
                  case 202:
                  case 204:
                  case 206:
                  case 304:
                  case 1223:
                    var t = !0;
                    break e;
                  default:
                    t = !1;
                }
                var n;
                if (!(n = t)) {
                  var s;
                  if ((s = 0 === r)) {
                    var a = String(e.D).match(it)[1] || null;
                    !a && i.self && i.self.location && (a = i.self.location.protocol.slice(0, -1)),
                      (s = !jt.test(a ? a.toLowerCase() : ''));
                  }
                  n = s;
                }
                if (n) re(e, 'complete'), re(e, 'success');
                else {
                  e.m = 6;
                  try {
                    var o = 2 < Ht(e) ? e.g.statusText : '';
                  } catch (l) {
                    o = '';
                  }
                  (e.l = o + ' [' + e.Z() + ']'), zt(e);
                }
              } finally {
                qt(e);
              }
            }
        }
        function qt(e, t) {
          if (e.g) {
            Gt(e);
            const n = e.g,
              r = e.v[0] ? () => {} : null;
            (e.g = null), (e.v = null), t || re(e, 'ready');
            try {
              n.onreadystatechange = r;
            } catch (Wy) {}
          }
        }
        function Gt(e) {
          e.I && (i.clearTimeout(e.I), (e.I = null));
        }
        function Ht(e) {
          return e.g ? e.g.readyState : 0;
        }
        function Kt(e) {
          try {
            if (!e.g) return null;
            if ('response' in e.g) return e.g.response;
            switch (e.H) {
              case '':
              case 'text':
                return e.g.responseText;
              case 'arraybuffer':
                if ('mozResponseArrayBuffer' in e.g) return e.g.mozResponseArrayBuffer;
            }
            return null;
          } catch (Mo) {
            return null;
          }
        }
        function Wt(e, t, n) {
          return (n && n.internalChannelParams && n.internalChannelParams[e]) || t;
        }
        function Qt(e) {
          (this.Aa = 0),
            (this.i = []),
            (this.j = new Ne()),
            (this.ia = this.qa = this.I = this.W = this.g = this.ya = this.D = this.H = this.m = this.S = this.o = null),
            (this.Ya = this.U = 0),
            (this.Va = Wt('failFast', !1, e)),
            (this.F = this.C = this.u = this.s = this.l = null),
            (this.X = !0),
            (this.za = this.T = -1),
            (this.Y = this.v = this.B = 0),
            (this.Ta = Wt('baseRetryDelayMs', 5e3, e)),
            (this.cb = Wt('retryDelaySeedMs', 1e4, e)),
            (this.Wa = Wt('forwardChannelMaxRetries', 2, e)),
            (this.wa = Wt('forwardChannelRequestTimeoutMs', 2e4, e)),
            (this.pa = (e && e.xmlHttpFactory) || void 0),
            (this.Xa = (e && e.Tb) || void 0),
            (this.Ca = (e && e.useFetchStreams) || !1),
            (this.L = void 0),
            (this.J = (e && e.supportsCrossDomainXhr) || !1),
            (this.K = ''),
            (this.h = new Je(e && e.concurrentRequestLimit)),
            (this.Da = new Ct()),
            (this.P = (e && e.fastHandshake) || !1),
            (this.O = (e && e.encodeInitMessageHeaders) || !1),
            this.P && this.O && (this.O = !1),
            (this.Ua = (e && e.Rb) || !1),
            e && e.xa && this.j.xa(),
            e && e.forceLongPolling && (this.X = !1),
            (this.ba = (!this.P && this.X && e && e.detectBufferingProxy) || !1),
            (this.ja = void 0),
            e && e.longPollingTimeout && 0 < e.longPollingTimeout && (this.ja = e.longPollingTimeout),
            (this.ca = void 0),
            (this.R = 0),
            (this.M = !1),
            (this.ka = this.A = null);
        }
        function Yt(e) {
          if ((Xt(e), 3 == e.G)) {
            var t = e.U++,
              n = at(e.I);
            if (
              (ut(n, 'SID', e.K),
              ut(n, 'RID', t),
              ut(n, 'TYPE', 'terminate'),
              en(e, n),
              ((t = new Re(e, e.j, t)).L = 2),
              (t.v = dt(at(n))),
              (n = !1),
              i.navigator && i.navigator.sendBeacon)
            )
              try {
                n = i.navigator.sendBeacon(t.v.toString(), '');
              } catch (r) {}
            !n && i.Image && ((new Image().src = t.v), (n = !0)),
              n || ((t.g = fn(t.j, null)), t.g.ea(t.v)),
              (t.F = Date.now()),
              qe(t);
          }
          dn(e);
        }
        function Jt(e) {
          e.g && (sn(e), e.g.cancel(), (e.g = null));
        }
        function Xt(e) {
          Jt(e),
            e.u && (i.clearTimeout(e.u), (e.u = null)),
            on(e),
            e.h.cancel(),
            e.s && ('number' === typeof e.s && i.clearTimeout(e.s), (e.s = null));
        }
        function $t(e) {
          if (!Xe(e.h) && !e.s) {
            e.s = !0;
            var t = e.Ga;
            k || P(), C || (k(), (C = !0)), N.add(t, e), (e.B = 0);
          }
        }
        function Zt(e, t) {
          var n;
          n = t ? t.l : e.U++;
          const r = at(e.I);
          ut(r, 'SID', e.K),
            ut(r, 'RID', n),
            ut(r, 'AID', e.T),
            en(e, r),
            e.m && e.o && Mt(r, e.m, e.o),
            (n = new Re(e, e.j, n, e.B + 1)),
            null === e.m && (n.H = e.o),
            t && (e.i = t.D.concat(e.i)),
            (t = tn(e, n, 1e3)),
            (n.I = Math.round(0.5 * e.wa) + Math.round(0.5 * e.wa * Math.random())),
            et(e.h, n),
            Ue(n, r, t);
        }
        function en(e, t) {
          e.H &&
            y(e.H, function (e, n) {
              ut(t, n, e);
            }),
            e.l &&
              rt({}, function (e, n) {
                ut(t, n, e);
              });
        }
        function tn(e, t, n) {
          n = Math.min(e.i.length, n);
          var r = e.l ? c(e.l.Na, e.l, e) : null;
          e: {
            var i = e.i;
            let t = -1;
            for (;;) {
              const e = ['count=' + n];
              -1 == t ? (0 < n ? ((t = i[0].g), e.push('ofs=' + t)) : (t = 0)) : e.push('ofs=' + t);
              let a = !0;
              for (let o = 0; o < n; o++) {
                let n = i[o].g;
                const l = i[o].map;
                if (((n -= t), 0 > n)) (t = Math.max(0, i[o].g - 100)), (a = !1);
                else
                  try {
                    Nt(l, e, 'req' + n + '_');
                  } catch (s) {
                    r && r(l);
                  }
              }
              if (a) {
                r = e.join('&');
                break e;
              }
            }
          }
          return (e = e.i.splice(0, n)), (t.D = e), r;
        }
        function nn(e) {
          if (!e.g && !e.u) {
            e.Y = 1;
            var t = e.Fa;
            k || P(), C || (k(), (C = !0)), N.add(t, e), (e.v = 0);
          }
        }
        function rn(e) {
          return !(e.g || e.u || 3 <= e.v) && (e.Y++, (e.u = Ce(c(e.Fa, e), cn(e, e.v))), e.v++, !0);
        }
        function sn(e) {
          null != e.A && (i.clearTimeout(e.A), (e.A = null));
        }
        function an(e) {
          (e.g = new Re(e, e.j, 'rpc', e.Y)), null === e.m && (e.g.H = e.o), (e.g.O = 0);
          var t = at(e.qa);
          ut(t, 'RID', 'rpc'),
            ut(t, 'SID', e.K),
            ut(t, 'AID', e.T),
            ut(t, 'CI', e.F ? '0' : '1'),
            !e.F && e.ja && ut(t, 'TO', e.ja),
            ut(t, 'TYPE', 'xmlhttp'),
            en(e, t),
            e.m && e.o && Mt(t, e.m, e.o),
            e.L && (e.g.I = e.L);
          var n = e.g;
          (e = e.ia), (n.L = 1), (n.v = dt(at(t))), (n.m = null), (n.P = !0), Ve(n, e);
        }
        function on(e) {
          null != e.C && (i.clearTimeout(e.C), (e.C = null));
        }
        function ln(e, t) {
          var n = null;
          if (e.g == t) {
            on(e), sn(e), (e.g = null);
            var r = 2;
          } else {
            if (!Ze(e.h, t)) return;
            (n = t.D), tt(e.h, t), (r = 1);
          }
          if (0 != e.G)
            if (t.o)
              if (1 == r) {
                (n = t.m ? t.m.length : 0), (t = Date.now() - t.F);
                var i = e.B;
                re((r = Ee()), new ke(r, n)), $t(e);
              } else nn(e);
            else if (
              3 == (i = t.s) ||
              (0 == i && 0 < t.X) ||
              !(
                (1 == r &&
                  (function (e, t) {
                    return (
                      !($e(e.h) >= e.h.j - (e.s ? 1 : 0)) &&
                      (e.s
                        ? ((e.i = t.D.concat(e.i)), !0)
                        : !(1 == e.G || 2 == e.G || e.B >= (e.Va ? 0 : e.Wa)) &&
                          ((e.s = Ce(c(e.Ga, e, t), cn(e, e.B))), e.B++, !0))
                    );
                  })(e, t)) ||
                (2 == r && rn(e))
              )
            )
              switch ((n && 0 < n.length && ((t = e.h), (t.i = t.i.concat(n))), i)) {
                case 1:
                  un(e, 5);
                  break;
                case 4:
                  un(e, 10);
                  break;
                case 3:
                  un(e, 6);
                  break;
                default:
                  un(e, 2);
              }
        }
        function cn(e, t) {
          let n = e.Ta + Math.floor(Math.random() * e.cb);
          return e.isActive() || (n *= 2), n * t;
        }
        function un(e, t) {
          if ((e.j.info('Error code ' + t), 2 == t)) {
            var n = c(e.fb, e),
              r = e.Xa;
            const t = !r;
            (r = new st(r || '//www.google.com/images/cleardot.gif')),
              (i.location && 'http' == i.location.protocol) || ot(r, 'https'),
              dt(r),
              t
                ? (function (e, t) {
                    const n = new Ne();
                    if (i.Image) {
                      const r = new Image();
                      (r.onload = u(kt, n, 'TestLoadImage: loaded', !0, t, r)),
                        (r.onerror = u(kt, n, 'TestLoadImage: error', !1, t, r)),
                        (r.onabort = u(kt, n, 'TestLoadImage: abort', !1, t, r)),
                        (r.ontimeout = u(kt, n, 'TestLoadImage: timeout', !1, t, r)),
                        i.setTimeout(function () {
                          r.ontimeout && r.ontimeout();
                        }, 1e4),
                        (r.src = e);
                    } else t(!1);
                  })(r.toString(), n)
                : (function (e, t) {
                    new Ne();
                    const n = new AbortController(),
                      r = setTimeout(() => {
                        n.abort(), kt(0, 0, !1, t);
                      }, 1e4);
                    fetch(e, { signal: n.signal })
                      .then((e) => {
                        clearTimeout(r), e.ok ? kt(0, 0, !0, t) : kt(0, 0, !1, t);
                      })
                      .catch(() => {
                        clearTimeout(r), kt(0, 0, !1, t);
                      });
                  })(r.toString(), n);
          } else xe(2);
          (e.G = 0), e.l && e.l.sa(t), dn(e), Xt(e);
        }
        function dn(e) {
          if (((e.G = 0), (e.ka = []), e.l)) {
            const t = nt(e.h);
            (0 == t.length && 0 == e.i.length) || (f(e.ka, t), f(e.ka, e.i), (e.h.i.length = 0), h(e.i), (e.i.length = 0)),
              e.l.ra();
          }
        }
        function hn(e, t, n) {
          var r = n instanceof st ? at(n) : new st(n);
          if ('' != r.g) t && (r.g = t + '.' + r.g), lt(r, r.s);
          else {
            var s = i.location;
            (r = s.protocol), (t = t ? t + '.' + s.hostname : s.hostname), (s = +s.port);
            var a = new st(null);
            r && ot(a, r), t && (a.g = t), s && lt(a, s), n && (a.l = n), (r = a);
          }
          return (n = e.D), (t = e.ya), n && t && ut(r, n, t), ut(r, 'VER', e.la), en(e, r), r;
        }
        function fn(e, t, n) {
          if (t && !e.J) throw Error("Can't create secondary domain capable XhrIo object.");
          return (t = e.Ca && !e.pa ? new Ft(new Pt({ eb: n })) : new Ft(e.pa)).Ha(e.J), t;
        }
        function pn() {}
        function mn() {}
        function gn(e, t) {
          ne.call(this),
            (this.g = new Qt(t)),
            (this.l = e),
            (this.h = (t && t.messageUrlParams) || null),
            (e = (t && t.messageHeaders) || null),
            t &&
              t.clientProtocolHeaderRequired &&
              (e ? (e['X-Client-Protocol'] = 'webchannel') : (e = { 'X-Client-Protocol': 'webchannel' })),
            (this.g.o = e),
            (e = (t && t.initMessageHeaders) || null),
            t &&
              t.messageContentType &&
              (e
                ? (e['X-WebChannel-Content-Type'] = t.messageContentType)
                : (e = { 'X-WebChannel-Content-Type': t.messageContentType })),
            t && t.va && (e ? (e['X-WebChannel-Client-Profile'] = t.va) : (e = { 'X-WebChannel-Client-Profile': t.va })),
            (this.g.S = e),
            (e = t && t.Sb) && !p(e) && (this.g.m = e),
            (this.v = (t && t.supportsCrossDomainXhr) || !1),
            (this.u = (t && t.sendRawJson) || !1),
            (t = t && t.httpSessionIdParam) &&
              !p(t) &&
              ((this.g.D = t), null !== (e = this.h) && t in e && t in (e = this.h) && delete e[t]),
            (this.j = new wn(this));
        }
        function vn(e) {
          ye.call(this),
            e.__headers__ &&
              ((this.headers = e.__headers__), (this.statusCode = e.__status__), delete e.__headers__, delete e.__status__);
          var t = e.__sm__;
          if (t) {
            e: {
              for (const n in t) {
                e = n;
                break e;
              }
              e = void 0;
            }
            (this.i = e) && ((e = this.i), (t = null !== t && e in t ? t[e] : void 0)), (this.data = t);
          } else this.data = e;
        }
        function yn() {
          we.call(this), (this.status = 1);
        }
        function wn(e) {
          this.g = e;
        }
        ((e = Ft.prototype).Ha = function (e) {
          this.J = e;
        }),
          (e.ea = function (e, t, n, r) {
            if (this.g) throw Error('[goog.net.XhrIo] Object is active with another request=' + this.D + '; newUri=' + e);
            (t = t ? t.toUpperCase() : 'GET'),
              (this.D = e),
              (this.l = ''),
              (this.m = 0),
              (this.A = !1),
              (this.h = !0),
              (this.g = this.o ? this.o.g() : De.g()),
              (this.v = this.o ? me(this.o) : me(De)),
              (this.g.onreadystatechange = c(this.Ea, this));
            try {
              (this.B = !0), this.g.open(t, String(e), !0), (this.B = !1);
            } catch (a) {
              return void Vt(this, a);
            }
            if (((e = n || ''), (n = new Map(this.headers)), r))
              if (Object.getPrototypeOf(r) === Object.prototype) for (var s in r) n.set(s, r[s]);
              else {
                if ('function' !== typeof r.keys || 'function' !== typeof r.get)
                  throw Error('Unknown input type for opt_headers: ' + String(r));
                for (const e of r.keys()) n.set(e, r.get(e));
              }
            (r = Array.from(n.keys()).find((e) => 'content-type' == e.toLowerCase())),
              (s = i.FormData && e instanceof i.FormData),
              !(0 <= Array.prototype.indexOf.call(Ut, t, void 0)) ||
                r ||
                s ||
                n.set('Content-Type', 'application/x-www-form-urlencoded;charset=utf-8');
            for (const [i, o] of n) this.g.setRequestHeader(i, o);
            this.H && (this.g.responseType = this.H),
              'withCredentials' in this.g && this.g.withCredentials !== this.J && (this.g.withCredentials = this.J);
            try {
              Gt(this), (this.u = !0), this.g.send(e), (this.u = !1);
            } catch (a) {
              Vt(this, a);
            }
          }),
          (e.abort = function (e) {
            this.g &&
              this.h &&
              ((this.h = !1),
              (this.j = !0),
              this.g.abort(),
              (this.j = !1),
              (this.m = e || 7),
              re(this, 'complete'),
              re(this, 'abort'),
              qt(this));
          }),
          (e.N = function () {
            this.g && (this.h && ((this.h = !1), (this.j = !0), this.g.abort(), (this.j = !1)), qt(this, !0)), Ft.aa.N.call(this);
          }),
          (e.Ea = function () {
            this.s || (this.B || this.u || this.j ? Bt(this) : this.bb());
          }),
          (e.bb = function () {
            Bt(this);
          }),
          (e.isActive = function () {
            return !!this.g;
          }),
          (e.Z = function () {
            try {
              return 2 < Ht(this) ? this.g.status : -1;
            } catch (mt) {
              return -1;
            }
          }),
          (e.oa = function () {
            try {
              return this.g ? this.g.responseText : '';
            } catch (mt) {
              return '';
            }
          }),
          (e.Oa = function (e) {
            if (this.g) {
              var t = this.g.responseText;
              return e && 0 == t.indexOf(e) && (t = t.substring(e.length)), he(t);
            }
          }),
          (e.Ba = function () {
            return this.m;
          }),
          (e.Ka = function () {
            return 'string' === typeof this.l ? this.l : String(this.l);
          }),
          ((e = Qt.prototype).la = 8),
          (e.G = 1),
          (e.connect = function (e, t, n, r) {
            xe(0),
              (this.W = e),
              (this.H = t || {}),
              n && void 0 !== r && ((this.H.OSID = n), (this.H.OAID = r)),
              (this.F = this.X),
              (this.I = hn(this, null, this.W)),
              $t(this);
          }),
          (e.Ga = function (e) {
            if (this.s)
              if (((this.s = null), 1 == this.G)) {
                if (!e) {
                  (this.U = Math.floor(1e5 * Math.random())), (e = this.U++);
                  const i = new Re(this, this.j, e);
                  let s = this.o;
                  if (
                    (this.S && (s ? ((s = w(s)), S(s, this.S)) : (s = this.S)),
                    null !== this.m || this.O || ((i.H = s), (s = null)),
                    this.P)
                  )
                    e: {
                      for (var t = 0, n = 0; n < this.i.length; n++) {
                        var r = this.i[n];
                        if (void 0 === (r = '__data__' in r.map && 'string' === typeof (r = r.map.__data__) ? r.length : void 0))
                          break;
                        if (4096 < (t += r)) {
                          t = n;
                          break e;
                        }
                        if (4096 === t || n === this.i.length - 1) {
                          t = n + 1;
                          break e;
                        }
                      }
                      t = 1e3;
                    }
                  else t = 1e3;
                  (t = tn(this, i, t)),
                    ut((n = at(this.I)), 'RID', e),
                    ut(n, 'CVER', 22),
                    this.D && ut(n, 'X-HTTP-Session-Id', this.D),
                    en(this, n),
                    s && (this.O ? (t = 'headers=' + encodeURIComponent(String(Rt(s))) + '&' + t) : this.m && Mt(n, this.m, s)),
                    et(this.h, i),
                    this.Ua && ut(n, 'TYPE', 'init'),
                    this.P ? (ut(n, '$req', t), ut(n, 'SID', 'null'), (i.T = !0), Ue(i, n, null)) : Ue(i, n, t),
                    (this.G = 2);
                }
              } else 3 == this.G && (e ? Zt(this, e) : 0 == this.i.length || Xe(this.h) || Zt(this));
          }),
          (e.Fa = function () {
            if (((this.u = null), an(this), this.ba && !(this.M || null == this.g || 0 >= this.R))) {
              var e = 2 * this.R;
              this.j.info('BP detection timer enabled: ' + e), (this.A = Ce(c(this.ab, this), e));
            }
          }),
          (e.ab = function () {
            this.A &&
              ((this.A = null),
              this.j.info('BP detection timeout reached.'),
              this.j.info('Buffering proxy detected and switch to long-polling!'),
              (this.F = !1),
              (this.M = !0),
              xe(10),
              Jt(this),
              an(this));
          }),
          (e.Za = function () {
            null != this.C && ((this.C = null), Jt(this), rn(this), xe(19));
          }),
          (e.fb = function (e) {
            e ? (this.j.info('Successfully pinged google.com'), xe(2)) : (this.j.info('Failed to ping google.com'), xe(1));
          }),
          (e.isActive = function () {
            return !!this.l && this.l.isActive(this);
          }),
          ((e = pn.prototype).ua = function () {}),
          (e.ta = function () {}),
          (e.sa = function () {}),
          (e.ra = function () {}),
          (e.isActive = function () {
            return !0;
          }),
          (e.Na = function () {}),
          (mn.prototype.g = function (e, t) {
            return new gn(e, t);
          }),
          d(gn, ne),
          (gn.prototype.m = function () {
            (this.g.l = this.j), this.v && (this.g.J = !0), this.g.connect(this.l, this.h || void 0);
          }),
          (gn.prototype.close = function () {
            Yt(this.g);
          }),
          (gn.prototype.o = function (e) {
            var t = this.g;
            if ('string' === typeof e) {
              var n = {};
              (n.__data__ = e), (e = n);
            } else this.u && (((n = {}).__data__ = de(e)), (e = n));
            t.i.push(new Ye(t.Ya++, e)), 3 == t.G && $t(t);
          }),
          (gn.prototype.N = function () {
            (this.g.l = null), delete this.j, Yt(this.g), delete this.g, gn.aa.N.call(this);
          }),
          d(vn, ye),
          d(yn, we),
          d(wn, pn),
          (wn.prototype.ua = function () {
            re(this.g, 'a');
          }),
          (wn.prototype.ta = function (e) {
            re(this.g, new vn(e));
          }),
          (wn.prototype.sa = function (e) {
            re(this.g, new yn());
          }),
          (wn.prototype.ra = function () {
            re(this.g, 'b');
          }),
          (mn.prototype.createWebChannel = mn.prototype.g),
          (gn.prototype.send = gn.prototype.o),
          (gn.prototype.open = gn.prototype.m),
          (gn.prototype.close = gn.prototype.close),
          (Do = Oo.createWebChannelTransport =
            function () {
              return new mn();
            }),
          (Po = Oo.getStatEventTarget =
            function () {
              return Ee();
            }),
          (No = Oo.Event = be),
          (Co = Oo.Stat =
            {
              mb: 0,
              pb: 1,
              qb: 2,
              Jb: 3,
              Ob: 4,
              Lb: 5,
              Mb: 6,
              Kb: 7,
              Ib: 8,
              Nb: 9,
              PROXY: 10,
              NOPROXY: 11,
              Gb: 12,
              Cb: 13,
              Db: 14,
              Bb: 15,
              Eb: 16,
              Fb: 17,
              ib: 18,
              hb: 19,
              jb: 20,
            }),
          (Ae.NO_ERROR = 0),
          (Ae.TIMEOUT = 8),
          (Ae.HTTP_ERROR = 6),
          (ko = Oo.ErrorCode = Ae),
          (Oe.COMPLETE = 'complete'),
          (xo = Oo.EventType = Oe),
          (ge.EventType = ve),
          (ve.OPEN = 'a'),
          (ve.CLOSE = 'b'),
          (ve.ERROR = 'c'),
          (ve.MESSAGE = 'd'),
          (ne.prototype.listen = ne.prototype.K),
          (Io = Oo.WebChannel = ge),
          (_o = Oo.FetchXmlHttpFactory = Pt),
          (Ft.prototype.listenOnce = Ft.prototype.L),
          (Ft.prototype.getLastError = Ft.prototype.Ka),
          (Ft.prototype.getLastErrorCode = Ft.prototype.Ba),
          (Ft.prototype.getStatus = Ft.prototype.Z),
          (Ft.prototype.getResponseJson = Ft.prototype.Oa),
          (Ft.prototype.getResponseText = Ft.prototype.oa),
          (Ft.prototype.send = Ft.prototype.ea),
          (Ft.prototype.setWithCredentials = Ft.prototype.Ha),
          (To = Oo.XhrIo = Ft);
      }).apply('undefined' !== typeof Ao ? Ao : 'undefined' !== typeof self ? self : 'undefined' !== typeof window ? window : {});
      const Lo = '@firebase/firestore';
      class Ro {
        constructor(e) {
          this.uid = e;
        }
        isAuthenticated() {
          return null != this.uid;
        }
        toKey() {
          return this.isAuthenticated() ? 'uid:' + this.uid : 'anonymous-user';
        }
        isEqual(e) {
          return e.uid === this.uid;
        }
      }
      (Ro.UNAUTHENTICATED = new Ro(null)),
        (Ro.GOOGLE_CREDENTIALS = new Ro('google-credentials-uid')),
        (Ro.FIRST_PARTY = new Ro('first-party-uid')),
        (Ro.MOCK_USER = new Ro('mock-user'));
      let Mo = '10.12.1';
      const Fo = new jn('@firebase/firestore');
      function jo() {
        return Fo.logLevel;
      }
      function Uo(e) {
        if (Fo.logLevel <= On.DEBUG) {
          for (var t = arguments.length, n = new Array(t > 1 ? t - 1 : 0), r = 1; r < t; r++) n[r - 1] = arguments[r];
          const i = n.map(Bo);
          Fo.debug('Firestore ('.concat(Mo, '): ').concat(e), ...i);
        }
      }
      function Vo(e) {
        if (Fo.logLevel <= On.ERROR) {
          for (var t = arguments.length, n = new Array(t > 1 ? t - 1 : 0), r = 1; r < t; r++) n[r - 1] = arguments[r];
          const i = n.map(Bo);
          Fo.error('Firestore ('.concat(Mo, '): ').concat(e), ...i);
        }
      }
      function zo(e) {
        if (Fo.logLevel <= On.WARN) {
          for (var t = arguments.length, n = new Array(t > 1 ? t - 1 : 0), r = 1; r < t; r++) n[r - 1] = arguments[r];
          const i = n.map(Bo);
          Fo.warn('Firestore ('.concat(Mo, '): ').concat(e), ...i);
        }
      }
      function Bo(e) {
        if ('string' == typeof e) return e;
        try {
          return (function (e) {
            return JSON.stringify(e);
          })(e);
        } catch (t) {
          return e;
        }
      }
      function qo() {
        let e = arguments.length > 0 && void 0 !== arguments[0] ? arguments[0] : 'Unexpected state';
        const t = 'FIRESTORE ('.concat(Mo, ') INTERNAL ASSERTION FAILED: ') + e;
        throw (Vo(t), new Error(t));
      }
      function Go(e, t) {
        e || qo();
      }
      function Ho(e, t) {
        return e;
      }
      const Ko = {
        OK: 'ok',
        CANCELLED: 'cancelled',
        UNKNOWN: 'unknown',
        INVALID_ARGUMENT: 'invalid-argument',
        DEADLINE_EXCEEDED: 'deadline-exceeded',
        NOT_FOUND: 'not-found',
        ALREADY_EXISTS: 'already-exists',
        PERMISSION_DENIED: 'permission-denied',
        UNAUTHENTICATED: 'unauthenticated',
        RESOURCE_EXHAUSTED: 'resource-exhausted',
        FAILED_PRECONDITION: 'failed-precondition',
        ABORTED: 'aborted',
        OUT_OF_RANGE: 'out-of-range',
        UNIMPLEMENTED: 'unimplemented',
        INTERNAL: 'internal',
        UNAVAILABLE: 'unavailable',
        DATA_LOSS: 'data-loss',
      };
      class Wo extends vn {
        constructor(e, t) {
          super(e, t),
            (this.code = e),
            (this.message = t),
            (this.toString = () => ''.concat(this.name, ': [code=').concat(this.code, ']: ').concat(this.message));
        }
      }
      class Qo {
        constructor() {
          this.promise = new Promise((e, t) => {
            (this.resolve = e), (this.reject = t);
          });
        }
      }
      class Yo {
        constructor(e, t) {
          (this.user = t),
            (this.type = 'OAuth'),
            (this.headers = new Map()),
            this.headers.set('Authorization', 'Bearer '.concat(e));
        }
      }
      class Jo {
        getToken() {
          return Promise.resolve(null);
        }
        invalidateToken() {}
        start(e, t) {
          e.enqueueRetryable(() => t(Ro.UNAUTHENTICATED));
        }
        shutdown() {}
      }
      class Xo {
        constructor(e) {
          (this.token = e), (this.changeListener = null);
        }
        getToken() {
          return Promise.resolve(this.token);
        }
        invalidateToken() {}
        start(e, t) {
          (this.changeListener = t), e.enqueueRetryable(() => t(this.token.user));
        }
        shutdown() {
          this.changeListener = null;
        }
      }
      class $o {
        constructor(e) {
          (this.t = e), (this.currentUser = Ro.UNAUTHENTICATED), (this.i = 0), (this.forceRefresh = !1), (this.auth = null);
        }
        start(e, t) {
          let n = this.i;
          const r = (e) => (this.i !== n ? ((n = this.i), t(e)) : Promise.resolve());
          let i = new Qo();
          this.o = () => {
            this.i++, (this.currentUser = this.u()), i.resolve(), (i = new Qo()), e.enqueueRetryable(() => r(this.currentUser));
          };
          const s = () => {
              const t = i;
              e.enqueueRetryable(async () => {
                await t.promise, await r(this.currentUser);
              });
            },
            a = (e) => {
              Uo('FirebaseAuthCredentialsProvider', 'Auth detected'),
                (this.auth = e),
                this.auth.addAuthTokenListener(this.o),
                s();
            };
          this.t.onInit((e) => a(e)),
            setTimeout(() => {
              if (!this.auth) {
                const e = this.t.getImmediate({ optional: !0 });
                e ? a(e) : (Uo('FirebaseAuthCredentialsProvider', 'Auth not yet detected'), i.resolve(), (i = new Qo()));
              }
            }, 0),
            s();
        }
        getToken() {
          const e = this.i,
            t = this.forceRefresh;
          return (
            (this.forceRefresh = !1),
            this.auth
              ? this.auth
                  .getToken(t)
                  .then((t) =>
                    this.i !== e
                      ? (Uo('FirebaseAuthCredentialsProvider', 'getToken aborted due to token change.'), this.getToken())
                      : t
                        ? (Go('string' == typeof t.accessToken), new Yo(t.accessToken, this.currentUser))
                        : null,
                  )
              : Promise.resolve(null)
          );
        }
        invalidateToken() {
          this.forceRefresh = !0;
        }
        shutdown() {
          this.auth && this.auth.removeAuthTokenListener(this.o);
        }
        u() {
          const e = this.auth && this.auth.getUid();
          return Go(null === e || 'string' == typeof e), new Ro(e);
        }
      }
      class Zo {
        constructor(e, t, n) {
          (this.l = e),
            (this.h = t),
            (this.P = n),
            (this.type = 'FirstParty'),
            (this.user = Ro.FIRST_PARTY),
            (this.I = new Map());
        }
        T() {
          return this.P ? this.P() : null;
        }
        get headers() {
          this.I.set('X-Goog-AuthUser', this.l);
          const e = this.T();
          return e && this.I.set('Authorization', e), this.h && this.I.set('X-Goog-Iam-Authorization-Token', this.h), this.I;
        }
      }
      class el {
        constructor(e, t, n) {
          (this.l = e), (this.h = t), (this.P = n);
        }
        getToken() {
          return Promise.resolve(new Zo(this.l, this.h, this.P));
        }
        start(e, t) {
          e.enqueueRetryable(() => t(Ro.FIRST_PARTY));
        }
        shutdown() {}
        invalidateToken() {}
      }
      class tl {
        constructor(e) {
          (this.value = e),
            (this.type = 'AppCheck'),
            (this.headers = new Map()),
            e && e.length > 0 && this.headers.set('x-firebase-appcheck', this.value);
        }
      }
      class nl {
        constructor(e) {
          (this.A = e), (this.forceRefresh = !1), (this.appCheck = null), (this.R = null);
        }
        start(e, t) {
          const n = (e) => {
            null != e.error &&
              Uo(
                'FirebaseAppCheckTokenProvider',
                'Error getting App Check token; using placeholder token instead. Error: '.concat(e.error.message),
              );
            const n = e.token !== this.R;
            return (
              (this.R = e.token),
              Uo('FirebaseAppCheckTokenProvider', 'Received '.concat(n ? 'new' : 'existing', ' token.')),
              n ? t(e.token) : Promise.resolve()
            );
          };
          this.o = (t) => {
            e.enqueueRetryable(() => n(t));
          };
          const r = (e) => {
            Uo('FirebaseAppCheckTokenProvider', 'AppCheck detected'), (this.appCheck = e), this.appCheck.addTokenListener(this.o);
          };
          this.A.onInit((e) => r(e)),
            setTimeout(() => {
              if (!this.appCheck) {
                const e = this.A.getImmediate({ optional: !0 });
                e ? r(e) : Uo('FirebaseAppCheckTokenProvider', 'AppCheck not yet detected');
              }
            }, 0);
        }
        getToken() {
          const e = this.forceRefresh;
          return (
            (this.forceRefresh = !1),
            this.appCheck
              ? this.appCheck
                  .getToken(e)
                  .then((e) => (e ? (Go('string' == typeof e.token), (this.R = e.token), new tl(e.token)) : null))
              : Promise.resolve(null)
          );
        }
        invalidateToken() {
          this.forceRefresh = !0;
        }
        shutdown() {
          this.appCheck && this.appCheck.removeTokenListener(this.o);
        }
      }
      function rl(e) {
        const t = 'undefined' != typeof self && (self.crypto || self.msCrypto),
          n = new Uint8Array(e);
        if (t && 'function' == typeof t.getRandomValues) t.getRandomValues(n);
        else for (let r = 0; r < e; r++) n[r] = Math.floor(256 * Math.random());
        return n;
      }
      class il {
        static newId() {
          const e = 'ABCDEFGHIJKLMNOPQRSTUVWXYZabcdefghijklmnopqrstuvwxyz0123456789',
            t = 62 * Math.floor(256 / 62);
          let n = '';
          for (; n.length < 20; ) {
            const r = rl(40);
            for (let i = 0; i < r.length; ++i) n.length < 20 && r[i] < t && (n += e.charAt(r[i] % 62));
          }
          return n;
        }
      }
      function sl(e, t) {
        return e < t ? -1 : e > t ? 1 : 0;
      }
      function al(e, t, n) {
        return e.length === t.length && e.every((e, r) => n(e, t[r]));
      }
      function ol(e) {
        return e + '\0';
      }
      class ll {
        constructor(e, t) {
          if (((this.seconds = e), (this.nanoseconds = t), t < 0))
            throw new Wo(Ko.INVALID_ARGUMENT, 'Timestamp nanoseconds out of range: ' + t);
          if (t >= 1e9) throw new Wo(Ko.INVALID_ARGUMENT, 'Timestamp nanoseconds out of range: ' + t);
          if (e < -62135596800) throw new Wo(Ko.INVALID_ARGUMENT, 'Timestamp seconds out of range: ' + e);
          if (e >= 253402300800) throw new Wo(Ko.INVALID_ARGUMENT, 'Timestamp seconds out of range: ' + e);
        }
        static now() {
          return ll.fromMillis(Date.now());
        }
        static fromDate(e) {
          return ll.fromMillis(e.getTime());
        }
        static fromMillis(e) {
          const t = Math.floor(e / 1e3),
            n = Math.floor(1e6 * (e - 1e3 * t));
          return new ll(t, n);
        }
        toDate() {
          return new Date(this.toMillis());
        }
        toMillis() {
          return 1e3 * this.seconds + this.nanoseconds / 1e6;
        }
        _compareTo(e) {
          return this.seconds === e.seconds ? sl(this.nanoseconds, e.nanoseconds) : sl(this.seconds, e.seconds);
        }
        isEqual(e) {
          return e.seconds === this.seconds && e.nanoseconds === this.nanoseconds;
        }
        toString() {
          return 'Timestamp(seconds=' + this.seconds + ', nanoseconds=' + this.nanoseconds + ')';
        }
        toJSON() {
          return { seconds: this.seconds, nanoseconds: this.nanoseconds };
        }
        valueOf() {
          const e = this.seconds - -62135596800;
          return String(e).padStart(12, '0') + '.' + String(this.nanoseconds).padStart(9, '0');
        }
      }
      class cl {
        constructor(e) {
          this.timestamp = e;
        }
        static fromTimestamp(e) {
          return new cl(e);
        }
        static min() {
          return new cl(new ll(0, 0));
        }
        static max() {
          return new cl(new ll(253402300799, 999999999));
        }
        compareTo(e) {
          return this.timestamp._compareTo(e.timestamp);
        }
        isEqual(e) {
          return this.timestamp.isEqual(e.timestamp);
        }
        toMicroseconds() {
          return 1e6 * this.timestamp.seconds + this.timestamp.nanoseconds / 1e3;
        }
        toString() {
          return 'SnapshotVersion(' + this.timestamp.toString() + ')';
        }
        toTimestamp() {
          return this.timestamp;
        }
      }
      class ul {
        constructor(e, t, n) {
          void 0 === t ? (t = 0) : t > e.length && qo(),
            void 0 === n ? (n = e.length - t) : n > e.length - t && qo(),
            (this.segments = e),
            (this.offset = t),
            (this.len = n);
        }
        get length() {
          return this.len;
        }
        isEqual(e) {
          return 0 === ul.comparator(this, e);
        }
        child(e) {
          const t = this.segments.slice(this.offset, this.limit());
          return (
            e instanceof ul
              ? e.forEach((e) => {
                  t.push(e);
                })
              : t.push(e),
            this.construct(t)
          );
        }
        limit() {
          return this.offset + this.length;
        }
        popFirst(e) {
          return (e = void 0 === e ? 1 : e), this.construct(this.segments, this.offset + e, this.length - e);
        }
        popLast() {
          return this.construct(this.segments, this.offset, this.length - 1);
        }
        firstSegment() {
          return this.segments[this.offset];
        }
        lastSegment() {
          return this.get(this.length - 1);
        }
        get(e) {
          return this.segments[this.offset + e];
        }
        isEmpty() {
          return 0 === this.length;
        }
        isPrefixOf(e) {
          if (e.length < this.length) return !1;
          for (let t = 0; t < this.length; t++) if (this.get(t) !== e.get(t)) return !1;
          return !0;
        }
        isImmediateParentOf(e) {
          if (this.length + 1 !== e.length) return !1;
          for (let t = 0; t < this.length; t++) if (this.get(t) !== e.get(t)) return !1;
          return !0;
        }
        forEach(e) {
          for (let t = this.offset, n = this.limit(); t < n; t++) e(this.segments[t]);
        }
        toArray() {
          return this.segments.slice(this.offset, this.limit());
        }
        static comparator(e, t) {
          const n = Math.min(e.length, t.length);
          for (let r = 0; r < n; r++) {
            const n = e.get(r),
              i = t.get(r);
            if (n < i) return -1;
            if (n > i) return 1;
          }
          return e.length < t.length ? -1 : e.length > t.length ? 1 : 0;
        }
      }
      class dl extends ul {
        construct(e, t, n) {
          return new dl(e, t, n);
        }
        canonicalString() {
          return this.toArray().join('/');
        }
        toString() {
          return this.canonicalString();
        }
        toUriEncodedString() {
          return this.toArray().map(encodeURIComponent).join('/');
        }
        static fromString() {
          const e = [];
          for (var t = arguments.length, n = new Array(t), r = 0; r < t; r++) n[r] = arguments[r];
          for (const i of n) {
            if (i.indexOf('//') >= 0)
              throw new Wo(Ko.INVALID_ARGUMENT, 'Invalid segment ('.concat(i, '). Paths must not contain // in them.'));
            e.push(...i.split('/').filter((e) => e.length > 0));
          }
          return new dl(e);
        }
        static emptyPath() {
          return new dl([]);
        }
      }
      const hl = /^[_a-zA-Z][_a-zA-Z0-9]*$/;
      class fl extends ul {
        construct(e, t, n) {
          return new fl(e, t, n);
        }
        static isValidIdentifier(e) {
          return hl.test(e);
        }
        canonicalString() {
          return this.toArray()
            .map((e) => ((e = e.replace(/\\/g, '\\\\').replace(/`/g, '\\`')), fl.isValidIdentifier(e) || (e = '`' + e + '`'), e))
            .join('.');
        }
        toString() {
          return this.canonicalString();
        }
        isKeyField() {
          return 1 === this.length && '__name__' === this.get(0);
        }
        static keyField() {
          return new fl(['__name__']);
        }
        static fromServerFormat(e) {
          const t = [];
          let n = '',
            r = 0;
          const i = () => {
            if (0 === n.length)
              throw new Wo(
                Ko.INVALID_ARGUMENT,
                'Invalid field path ('.concat(e, "). Paths must not be empty, begin with '.', end with '.', or contain '..'"),
              );
            t.push(n), (n = '');
          };
          let s = !1;
          for (; r < e.length; ) {
            const t = e[r];
            if ('\\' === t) {
              if (r + 1 === e.length) throw new Wo(Ko.INVALID_ARGUMENT, 'Path has trailing escape character: ' + e);
              const t = e[r + 1];
              if ('\\' !== t && '.' !== t && '`' !== t)
                throw new Wo(Ko.INVALID_ARGUMENT, 'Path has invalid escape sequence: ' + e);
              (n += t), (r += 2);
            } else '`' === t ? ((s = !s), r++) : '.' !== t || s ? ((n += t), r++) : (i(), r++);
          }
          if ((i(), s)) throw new Wo(Ko.INVALID_ARGUMENT, 'Unterminated ` in path: ' + e);
          return new fl(t);
        }
        static emptyPath() {
          return new fl([]);
        }
      }
      class pl {
        constructor(e) {
          this.path = e;
        }
        static fromPath(e) {
          return new pl(dl.fromString(e));
        }
        static fromName(e) {
          return new pl(dl.fromString(e).popFirst(5));
        }
        static empty() {
          return new pl(dl.emptyPath());
        }
        get collectionGroup() {
          return this.path.popLast().lastSegment();
        }
        hasCollectionId(e) {
          return this.path.length >= 2 && this.path.get(this.path.length - 2) === e;
        }
        getCollectionGroup() {
          return this.path.get(this.path.length - 2);
        }
        getCollectionPath() {
          return this.path.popLast();
        }
        isEqual(e) {
          return null !== e && 0 === dl.comparator(this.path, e.path);
        }
        toString() {
          return this.path.toString();
        }
        static comparator(e, t) {
          return dl.comparator(e.path, t.path);
        }
        static isDocumentKey(e) {
          return e.length % 2 == 0;
        }
        static fromSegments(e) {
          return new pl(new dl(e.slice()));
        }
      }
      class ml {
        constructor(e, t, n, r) {
          (this.indexId = e), (this.collectionGroup = t), (this.fields = n), (this.indexState = r);
        }
      }
      function gl(e) {
        return e.fields.find((e) => 2 === e.kind);
      }
      function vl(e) {
        return e.fields.filter((e) => 2 !== e.kind);
      }
      ml.UNKNOWN_ID = -1;
      class yl {
        constructor(e, t) {
          (this.fieldPath = e), (this.kind = t);
        }
      }
      class wl {
        constructor(e, t) {
          (this.sequenceNumber = e), (this.offset = t);
        }
        static empty() {
          return new wl(0, El.min());
        }
      }
      function bl(e, t) {
        const n = e.toTimestamp().seconds,
          r = e.toTimestamp().nanoseconds + 1,
          i = cl.fromTimestamp(1e9 === r ? new ll(n + 1, 0) : new ll(n, r));
        return new El(i, pl.empty(), t);
      }
      function Sl(e) {
        return new El(e.readTime, e.key, -1);
      }
      class El {
        constructor(e, t, n) {
          (this.readTime = e), (this.documentKey = t), (this.largestBatchId = n);
        }
        static min() {
          return new El(cl.min(), pl.empty(), -1);
        }
        static max() {
          return new El(cl.max(), pl.empty(), -1);
        }
      }
      function Tl(e, t) {
        let n = e.readTime.compareTo(t.readTime);
        return 0 !== n
          ? n
          : ((n = pl.comparator(e.documentKey, t.documentKey)), 0 !== n ? n : sl(e.largestBatchId, t.largestBatchId));
      }
      const _l =
        'The current tab is not in the required state to perform this operation. It might be necessary to refresh the browser tab.';
      class Il {
        constructor() {
          this.onCommittedListeners = [];
        }
        addOnCommittedListener(e) {
          this.onCommittedListeners.push(e);
        }
        raiseOnCommittedEvent() {
          this.onCommittedListeners.forEach((e) => e());
        }
      }
      async function xl(e) {
        if (e.code !== Ko.FAILED_PRECONDITION || e.message !== _l) throw e;
        Uo('LocalStore', 'Unexpectedly lost primary lease');
      }
      class kl {
        constructor(e) {
          (this.nextCallback = null),
            (this.catchCallback = null),
            (this.result = void 0),
            (this.error = void 0),
            (this.isDone = !1),
            (this.callbackAttached = !1),
            e(
              (e) => {
                (this.isDone = !0), (this.result = e), this.nextCallback && this.nextCallback(e);
              },
              (e) => {
                (this.isDone = !0), (this.error = e), this.catchCallback && this.catchCallback(e);
              },
            );
        }
        catch(e) {
          return this.next(void 0, e);
        }
        next(e, t) {
          return (
            this.callbackAttached && qo(),
            (this.callbackAttached = !0),
            this.isDone
              ? this.error
                ? this.wrapFailure(t, this.error)
                : this.wrapSuccess(e, this.result)
              : new kl((n, r) => {
                  (this.nextCallback = (t) => {
                    this.wrapSuccess(e, t).next(n, r);
                  }),
                    (this.catchCallback = (e) => {
                      this.wrapFailure(t, e).next(n, r);
                    });
                })
          );
        }
        toPromise() {
          return new Promise((e, t) => {
            this.next(e, t);
          });
        }
        wrapUserFunction(e) {
          try {
            const t = e();
            return t instanceof kl ? t : kl.resolve(t);
          } catch (e) {
            return kl.reject(e);
          }
        }
        wrapSuccess(e, t) {
          return e ? this.wrapUserFunction(() => e(t)) : kl.resolve(t);
        }
        wrapFailure(e, t) {
          return e ? this.wrapUserFunction(() => e(t)) : kl.reject(t);
        }
        static resolve(e) {
          return new kl((t, n) => {
            t(e);
          });
        }
        static reject(e) {
          return new kl((t, n) => {
            n(e);
          });
        }
        static waitFor(e) {
          return new kl((t, n) => {
            let r = 0,
              i = 0,
              s = !1;
            e.forEach((e) => {
              ++r,
                e.next(
                  () => {
                    ++i, s && i === r && t();
                  },
                  (e) => n(e),
                );
            }),
              (s = !0),
              i === r && t();
          });
        }
        static or(e) {
          let t = kl.resolve(!1);
          for (const n of e) t = t.next((e) => (e ? kl.resolve(e) : n()));
          return t;
        }
        static forEach(e, t) {
          const n = [];
          return (
            e.forEach((e, r) => {
              n.push(t.call(this, e, r));
            }),
            this.waitFor(n)
          );
        }
        static mapArray(e, t) {
          return new kl((n, r) => {
            const i = e.length,
              s = new Array(i);
            let a = 0;
            for (let o = 0; o < i; o++) {
              const l = o;
              t(e[l]).next(
                (e) => {
                  (s[l] = e), ++a, a === i && n(s);
                },
                (e) => r(e),
              );
            }
          });
        }
        static doWhile(e, t) {
          return new kl((n, r) => {
            const i = () => {
              !0 === e()
                ? t().next(() => {
                    i();
                  }, r)
                : n();
            };
            i();
          });
        }
      }
      class Cl {
        constructor(e, t) {
          (this.action = e),
            (this.transaction = t),
            (this.aborted = !1),
            (this.V = new Qo()),
            (this.transaction.oncomplete = () => {
              this.V.resolve();
            }),
            (this.transaction.onabort = () => {
              t.error ? this.V.reject(new Al(e, t.error)) : this.V.resolve();
            }),
            (this.transaction.onerror = (t) => {
              const n = Fl(t.target.error);
              this.V.reject(new Al(e, n));
            });
        }
        static open(e, t, n, r) {
          try {
            return new Cl(t, e.transaction(r, n));
          } catch (e) {
            throw new Al(t, e);
          }
        }
        get m() {
          return this.V.promise;
        }
        abort(e) {
          e && this.V.reject(e),
            this.aborted ||
              (Uo('SimpleDb', 'Aborting transaction:', e ? e.message : 'Client-initiated abort'),
              (this.aborted = !0),
              this.transaction.abort());
        }
        g() {
          const e = this.transaction;
          this.aborted || 'function' != typeof e.commit || e.commit();
        }
        store(e) {
          const t = this.transaction.objectStore(e);
          return new Ll(t);
        }
      }
      class Nl {
        constructor(e, t, n) {
          (this.name = e),
            (this.version = t),
            (this.p = n),
            12.2 === Nl.S(pn()) &&
              Vo(
                'Firestore persistence suffers from a bug in iOS 12.2 Safari that may cause your app to stop working. See https://stackoverflow.com/q/56496296/110915 for details and a potential workaround.',
              );
        }
        static delete(e) {
          return Uo('SimpleDb', 'Removing database:', e), Rl(window.indexedDB.deleteDatabase(e)).toPromise();
        }
        static D() {
          if (!gn()) return !1;
          if (Nl.C()) return !0;
          const e = pn(),
            t = Nl.S(e),
            n = 0 < t && t < 10,
            r = Pl(e),
            i = 0 < r && r < 4.5;
          return !(e.indexOf('MSIE ') > 0 || e.indexOf('Trident/') > 0 || e.indexOf('Edge/') > 0 || n || i);
        }
        static C() {
          var e;
          return 'undefined' != typeof process && 'YES' === (null === (e = process.__PRIVATE_env) || void 0 === e ? void 0 : e.v);
        }
        static F(e, t) {
          return e.store(t);
        }
        static S(e) {
          const t = e.match(/i(?:phone|pad|pod) os ([\d_]+)/i),
            n = t ? t[1].split('_').slice(0, 2).join('.') : '-1';
          return Number(n);
        }
        async M(e) {
          return (
            this.db ||
              (Uo('SimpleDb', 'Opening database:', this.name),
              (this.db = await new Promise((t, n) => {
                const r = indexedDB.open(this.name, this.version);
                (r.onsuccess = (e) => {
                  const n = e.target.result;
                  t(n);
                }),
                  (r.onblocked = () => {
                    n(
                      new Al(
                        e,
                        'Cannot upgrade IndexedDB schema while another tab is open. Close all tabs that access Firestore and reload this page to proceed.',
                      ),
                    );
                  }),
                  (r.onerror = (t) => {
                    const r = t.target.error;
                    'VersionError' === r.name
                      ? n(
                          new Wo(
                            Ko.FAILED_PRECONDITION,
                            'A newer version of the Firestore SDK was previously used and so the persisted data is not compatible with the version of the SDK you are now using. The SDK will operate with persistence disabled. If you need persistence, please re-upgrade to a newer version of the SDK or else clear the persisted IndexedDB data for your app to start fresh.',
                          ),
                        )
                      : 'InvalidStateError' === r.name
                        ? n(
                            new Wo(
                              Ko.FAILED_PRECONDITION,
                              'Unable to open an IndexedDB connection. This could be due to running in a private browsing session on a browser whose private browsing sessions do not support IndexedDB: ' +
                                r,
                            ),
                          )
                        : n(new Al(e, r));
                  }),
                  (r.onupgradeneeded = (e) => {
                    Uo('SimpleDb', 'Database "' + this.name + '" requires upgrade from version:', e.oldVersion);
                    const t = e.target.result;
                    this.p.O(t, r.transaction, e.oldVersion, this.version).next(() => {
                      Uo('SimpleDb', 'Database upgrade to version ' + this.version + ' complete');
                    });
                  });
              }))),
            this.N && (this.db.onversionchange = (e) => this.N(e)),
            this.db
          );
        }
        L(e) {
          (this.N = e), this.db && (this.db.onversionchange = (t) => e(t));
        }
        async runTransaction(e, t, n, r) {
          const i = 'readonly' === t;
          let s = 0;
          for (;;) {
            ++s;
            try {
              this.db = await this.M(e);
              const t = Cl.open(this.db, e, i ? 'readonly' : 'readwrite', n),
                s = r(t)
                  .next((e) => (t.g(), e))
                  .catch((e) => (t.abort(e), kl.reject(e)))
                  .toPromise();
              return s.catch(() => {}), await t.m, s;
            } catch (e) {
              const t = e,
                n = 'FirebaseError' !== t.name && s < 3;
              if ((Uo('SimpleDb', 'Transaction failed with error:', t.message, 'Retrying:', n), this.close(), !n))
                return Promise.reject(t);
            }
          }
        }
        close() {
          this.db && this.db.close(), (this.db = void 0);
        }
      }
      function Pl(e) {
        const t = e.match(/Android ([\d.]+)/i),
          n = t ? t[1].split('.').slice(0, 2).join('.') : '-1';
        return Number(n);
      }
      class Dl {
        constructor(e) {
          (this.B = e), (this.k = !1), (this.q = null);
        }
        get isDone() {
          return this.k;
        }
        get K() {
          return this.q;
        }
        set cursor(e) {
          this.B = e;
        }
        done() {
          this.k = !0;
        }
        $(e) {
          this.q = e;
        }
        delete() {
          return Rl(this.B.delete());
        }
      }
      class Al extends Wo {
        constructor(e, t) {
          super(Ko.UNAVAILABLE, "IndexedDB transaction '".concat(e, "' failed: ").concat(t)),
            (this.name = 'IndexedDbTransactionError');
        }
      }
      function Ol(e) {
        return 'IndexedDbTransactionError' === e.name;
      }
      class Ll {
        constructor(e) {
          this.store = e;
        }
        put(e, t) {
          let n;
          return (
            void 0 !== t
              ? (Uo('SimpleDb', 'PUT', this.store.name, e, t), (n = this.store.put(t, e)))
              : (Uo('SimpleDb', 'PUT', this.store.name, '<auto-key>', e), (n = this.store.put(e))),
            Rl(n)
          );
        }
        add(e) {
          return Uo('SimpleDb', 'ADD', this.store.name, e, e), Rl(this.store.add(e));
        }
        get(e) {
          return Rl(this.store.get(e)).next((t) => (void 0 === t && (t = null), Uo('SimpleDb', 'GET', this.store.name, e, t), t));
        }
        delete(e) {
          return Uo('SimpleDb', 'DELETE', this.store.name, e), Rl(this.store.delete(e));
        }
        count() {
          return Uo('SimpleDb', 'COUNT', this.store.name), Rl(this.store.count());
        }
        U(e, t) {
          const n = this.options(e, t),
            r = n.index ? this.store.index(n.index) : this.store;
          if ('function' == typeof r.getAll) {
            const e = r.getAll(n.range);
            return new kl((t, n) => {
              (e.onerror = (e) => {
                n(e.target.error);
              }),
                (e.onsuccess = (e) => {
                  t(e.target.result);
                });
            });
          }
          {
            const e = this.cursor(n),
              t = [];
            return this.W(e, (e, n) => {
              t.push(n);
            }).next(() => t);
          }
        }
        G(e, t) {
          const n = this.store.getAll(e, null === t ? void 0 : t);
          return new kl((e, t) => {
            (n.onerror = (e) => {
              t(e.target.error);
            }),
              (n.onsuccess = (t) => {
                e(t.target.result);
              });
          });
        }
        j(e, t) {
          Uo('SimpleDb', 'DELETE ALL', this.store.name);
          const n = this.options(e, t);
          n.H = !1;
          const r = this.cursor(n);
          return this.W(r, (e, t, n) => n.delete());
        }
        J(e, t) {
          let n;
          t ? (n = e) : ((n = {}), (t = e));
          const r = this.cursor(n);
          return this.W(r, t);
        }
        Y(e) {
          const t = this.cursor({});
          return new kl((n, r) => {
            (t.onerror = (e) => {
              const t = Fl(e.target.error);
              r(t);
            }),
              (t.onsuccess = (t) => {
                const r = t.target.result;
                r
                  ? e(r.primaryKey, r.value).next((e) => {
                      e ? r.continue() : n();
                    })
                  : n();
              });
          });
        }
        W(e, t) {
          const n = [];
          return new kl((r, i) => {
            (e.onerror = (e) => {
              i(e.target.error);
            }),
              (e.onsuccess = (e) => {
                const i = e.target.result;
                if (!i) return void r();
                const s = new Dl(i),
                  a = t(i.primaryKey, i.value, s);
                if (a instanceof kl) {
                  const e = a.catch((e) => (s.done(), kl.reject(e)));
                  n.push(e);
                }
                s.isDone ? r() : null === s.K ? i.continue() : i.continue(s.K);
              });
          }).next(() => kl.waitFor(n));
        }
        options(e, t) {
          let n;
          return void 0 !== e && ('string' == typeof e ? (n = e) : (t = e)), { index: n, range: t };
        }
        cursor(e) {
          let t = 'next';
          if ((e.reverse && (t = 'prev'), e.index)) {
            const n = this.store.index(e.index);
            return e.H ? n.openKeyCursor(e.range, t) : n.openCursor(e.range, t);
          }
          return this.store.openCursor(e.range, t);
        }
      }
      function Rl(e) {
        return new kl((t, n) => {
          (e.onsuccess = (e) => {
            const n = e.target.result;
            t(n);
          }),
            (e.onerror = (e) => {
              const t = Fl(e.target.error);
              n(t);
            });
        });
      }
      let Ml = !1;
      function Fl(e) {
        const t = Nl.S(pn());
        if (t >= 12.2 && t < 13) {
          const t = 'An internal error was encountered in the Indexed Database server';
          if (e.message.indexOf(t) >= 0) {
            const e = new Wo(
              'internal',
              "IOS_INDEXEDDB_BUG1: IndexedDb has thrown '".concat(
                t,
                "'. This is likely due to an unavoidable bug in iOS. See https://stackoverflow.com/q/56496296/110915 for details and a potential workaround.",
              ),
            );
            return (
              Ml ||
                ((Ml = !0),
                setTimeout(() => {
                  throw e;
                }, 0)),
              e
            );
          }
        }
        return e;
      }
      class jl {
        constructor(e, t) {
          (this.asyncQueue = e), (this.Z = t), (this.task = null);
        }
        start() {
          this.X(15e3);
        }
        stop() {
          this.task && (this.task.cancel(), (this.task = null));
        }
        get started() {
          return null !== this.task;
        }
        X(e) {
          Uo('IndexBackfiller', 'Scheduled in '.concat(e, 'ms')),
            (this.task = this.asyncQueue.enqueueAfterDelay('index_backfill', e, async () => {
              this.task = null;
              try {
                Uo('IndexBackfiller', 'Documents written: '.concat(await this.Z.ee()));
              } catch (e) {
                Ol(e) ? Uo('IndexBackfiller', 'Ignoring IndexedDB error during index backfill: ', e) : await xl(e);
              }
              await this.X(6e4);
            }));
        }
      }
      class Ul {
        constructor(e, t) {
          (this.localStore = e), (this.persistence = t);
        }
        async ee() {
          let e = arguments.length > 0 && void 0 !== arguments[0] ? arguments[0] : 50;
          return this.persistence.runTransaction('Backfill Indexes', 'readwrite-primary', (t) => this.te(t, e));
        }
        te(e, t) {
          const n = new Set();
          let r = t,
            i = !0;
          return kl
            .doWhile(
              () => !0 === i && r > 0,
              () =>
                this.localStore.indexManager.getNextCollectionGroupToUpdate(e).next((t) => {
                  if (null !== t && !n.has(t))
                    return (
                      Uo('IndexBackfiller', 'Processing collection: '.concat(t)),
                      this.ne(e, t, r).next((e) => {
                        (r -= e), n.add(t);
                      })
                    );
                  i = !1;
                }),
            )
            .next(() => t - r);
        }
        ne(e, t, n) {
          return this.localStore.indexManager.getMinOffsetFromCollectionGroup(e, t).next((r) =>
            this.localStore.localDocuments.getNextDocuments(e, t, r, n).next((n) => {
              const i = n.changes;
              return this.localStore.indexManager
                .updateIndexEntries(e, i)
                .next(() => this.re(r, n))
                .next(
                  (n) => (
                    Uo('IndexBackfiller', 'Updating offset: '.concat(n)),
                    this.localStore.indexManager.updateCollectionGroup(e, t, n)
                  ),
                )
                .next(() => i.size);
            }),
          );
        }
        re(e, t) {
          let n = e;
          return (
            t.changes.forEach((e, t) => {
              const r = Sl(t);
              Tl(r, n) > 0 && (n = r);
            }),
            new El(n.readTime, n.documentKey, Math.max(t.batchId, e.largestBatchId))
          );
        }
      }
      class Vl {
        constructor(e, t) {
          (this.previousValue = e),
            t && ((t.sequenceNumberHandler = (e) => this.ie(e)), (this.se = (e) => t.writeSequenceNumber(e)));
        }
        ie(e) {
          return (this.previousValue = Math.max(e, this.previousValue)), this.previousValue;
        }
        next() {
          const e = ++this.previousValue;
          return this.se && this.se(e), e;
        }
      }
      function zl(e) {
        return null == e;
      }
      function Bl(e) {
        return 0 === e && 1 / e == -1 / 0;
      }
      function ql(e) {
        return (
          'number' == typeof e && Number.isInteger(e) && !Bl(e) && e <= Number.MAX_SAFE_INTEGER && e >= Number.MIN_SAFE_INTEGER
        );
      }
      function Gl(e) {
        let t = '';
        for (let n = 0; n < e.length; n++) t.length > 0 && (t = Kl(t)), (t = Hl(e.get(n), t));
        return Kl(t);
      }
      function Hl(e, t) {
        let n = t;
        const r = e.length;
        for (let i = 0; i < r; i++) {
          const t = e.charAt(i);
          switch (t) {
            case '\0':
              n += '\x01\x10';
              break;
            case '\x01':
              n += '\x01\x11';
              break;
            default:
              n += t;
          }
        }
        return n;
      }
      function Kl(e) {
        return e + '\x01\x01';
      }
      function Wl(e) {
        const t = e.length;
        if ((Go(t >= 2), 2 === t)) return Go('\x01' === e.charAt(0) && '\x01' === e.charAt(1)), dl.emptyPath();
        const n = t - 2,
          r = [];
        let i = '';
        for (let s = 0; s < t; ) {
          const t = e.indexOf('\x01', s);
          switch (((t < 0 || t > n) && qo(), e.charAt(t + 1))) {
            case '\x01':
              const n = e.substring(s, t);
              let a;
              0 === i.length ? (a = n) : ((i += n), (a = i), (i = '')), r.push(a);
              break;
            case '\x10':
              (i += e.substring(s, t)), (i += '\0');
              break;
            case '\x11':
              i += e.substring(s, t + 1);
              break;
            default:
              qo();
          }
          s = t + 2;
        }
        return new dl(r);
      }
      Vl.oe = -1;
      const Ql = ['userId', 'batchId'];
      function Yl(e, t) {
        return [e, Gl(t)];
      }
      function Jl(e, t, n) {
        return [e, Gl(t), n];
      }
      const Xl = {},
        $l = ['prefixPath', 'collectionGroup', 'readTime', 'documentId'],
        Zl = ['prefixPath', 'collectionGroup', 'documentId'],
        ec = ['collectionGroup', 'readTime', 'prefixPath', 'documentId'],
        tc = ['canonicalId', 'targetId'],
        nc = ['targetId', 'path'],
        rc = ['path', 'targetId'],
        ic = ['collectionId', 'parent'],
        sc = ['indexId', 'uid'],
        ac = ['uid', 'sequenceNumber'],
        oc = ['indexId', 'uid', 'arrayValue', 'directionalValue', 'orderedDocumentKey', 'documentKey'],
        lc = ['indexId', 'uid', 'orderedDocumentKey'],
        cc = ['userId', 'collectionPath', 'documentId'],
        uc = ['userId', 'collectionPath', 'largestBatchId'],
        dc = ['userId', 'collectionGroup', 'largestBatchId'],
        hc = [
          'mutationQueues',
          'mutations',
          'documentMutations',
          'remoteDocuments',
          'targets',
          'owner',
          'targetGlobal',
          'targetDocuments',
          'clientMetadata',
          'remoteDocumentGlobal',
          'collectionParents',
          'bundles',
          'namedQueries',
        ],
        fc = [...hc, 'documentOverlays'],
        pc = [
          'mutationQueues',
          'mutations',
          'documentMutations',
          'remoteDocumentsV14',
          'targets',
          'owner',
          'targetGlobal',
          'targetDocuments',
          'clientMetadata',
          'remoteDocumentGlobal',
          'collectionParents',
          'bundles',
          'namedQueries',
          'documentOverlays',
        ],
        mc = pc,
        gc = [...mc, 'indexConfiguration', 'indexState', 'indexEntries'],
        vc = gc;
      class yc extends Il {
        constructor(e, t) {
          super(), (this._e = e), (this.currentSequenceNumber = t);
        }
      }
      function wc(e, t) {
        const n = Ho(e);
        return Nl.F(n._e, t);
      }
      function bc(e) {
        let t = 0;
        for (const n in e) Object.prototype.hasOwnProperty.call(e, n) && t++;
        return t;
      }
      function Sc(e, t) {
        for (const n in e) Object.prototype.hasOwnProperty.call(e, n) && t(n, e[n]);
      }
      function Ec(e) {
        for (const t in e) if (Object.prototype.hasOwnProperty.call(e, t)) return !1;
        return !0;
      }
      class Tc {
        constructor(e, t) {
          (this.comparator = e), (this.root = t || Ic.EMPTY);
        }
        insert(e, t) {
          return new Tc(this.comparator, this.root.insert(e, t, this.comparator).copy(null, null, Ic.BLACK, null, null));
        }
        remove(e) {
          return new Tc(this.comparator, this.root.remove(e, this.comparator).copy(null, null, Ic.BLACK, null, null));
        }
        get(e) {
          let t = this.root;
          for (; !t.isEmpty(); ) {
            const n = this.comparator(e, t.key);
            if (0 === n) return t.value;
            n < 0 ? (t = t.left) : n > 0 && (t = t.right);
          }
          return null;
        }
        indexOf(e) {
          let t = 0,
            n = this.root;
          for (; !n.isEmpty(); ) {
            const r = this.comparator(e, n.key);
            if (0 === r) return t + n.left.size;
            r < 0 ? (n = n.left) : ((t += n.left.size + 1), (n = n.right));
          }
          return -1;
        }
        isEmpty() {
          return this.root.isEmpty();
        }
        get size() {
          return this.root.size;
        }
        minKey() {
          return this.root.minKey();
        }
        maxKey() {
          return this.root.maxKey();
        }
        inorderTraversal(e) {
          return this.root.inorderTraversal(e);
        }
        forEach(e) {
          this.inorderTraversal((t, n) => (e(t, n), !1));
        }
        toString() {
          const e = [];
          return this.inorderTraversal((t, n) => (e.push(''.concat(t, ':').concat(n)), !1)), '{'.concat(e.join(', '), '}');
        }
        reverseTraversal(e) {
          return this.root.reverseTraversal(e);
        }
        getIterator() {
          return new _c(this.root, null, this.comparator, !1);
        }
        getIteratorFrom(e) {
          return new _c(this.root, e, this.comparator, !1);
        }
        getReverseIterator() {
          return new _c(this.root, null, this.comparator, !0);
        }
        getReverseIteratorFrom(e) {
          return new _c(this.root, e, this.comparator, !0);
        }
      }
      class _c {
        constructor(e, t, n, r) {
          (this.isReverse = r), (this.nodeStack = []);
          let i = 1;
          for (; !e.isEmpty(); )
            if (((i = t ? n(e.key, t) : 1), t && r && (i *= -1), i < 0)) e = this.isReverse ? e.left : e.right;
            else {
              if (0 === i) {
                this.nodeStack.push(e);
                break;
              }
              this.nodeStack.push(e), (e = this.isReverse ? e.right : e.left);
            }
        }
        getNext() {
          let e = this.nodeStack.pop();
          const t = { key: e.key, value: e.value };
          if (this.isReverse) for (e = e.left; !e.isEmpty(); ) this.nodeStack.push(e), (e = e.right);
          else for (e = e.right; !e.isEmpty(); ) this.nodeStack.push(e), (e = e.left);
          return t;
        }
        hasNext() {
          return this.nodeStack.length > 0;
        }
        peek() {
          if (0 === this.nodeStack.length) return null;
          const e = this.nodeStack[this.nodeStack.length - 1];
          return { key: e.key, value: e.value };
        }
      }
      class Ic {
        constructor(e, t, n, r, i) {
          (this.key = e),
            (this.value = t),
            (this.color = null != n ? n : Ic.RED),
            (this.left = null != r ? r : Ic.EMPTY),
            (this.right = null != i ? i : Ic.EMPTY),
            (this.size = this.left.size + 1 + this.right.size);
        }
        copy(e, t, n, r, i) {
          return new Ic(
            null != e ? e : this.key,
            null != t ? t : this.value,
            null != n ? n : this.color,
            null != r ? r : this.left,
            null != i ? i : this.right,
          );
        }
        isEmpty() {
          return !1;
        }
        inorderTraversal(e) {
          return this.left.inorderTraversal(e) || e(this.key, this.value) || this.right.inorderTraversal(e);
        }
        reverseTraversal(e) {
          return this.right.reverseTraversal(e) || e(this.key, this.value) || this.left.reverseTraversal(e);
        }
        min() {
          return this.left.isEmpty() ? this : this.left.min();
        }
        minKey() {
          return this.min().key;
        }
        maxKey() {
          return this.right.isEmpty() ? this.key : this.right.maxKey();
        }
        insert(e, t, n) {
          let r = this;
          const i = n(e, r.key);
          return (
            (r =
              i < 0
                ? r.copy(null, null, null, r.left.insert(e, t, n), null)
                : 0 === i
                  ? r.copy(null, t, null, null, null)
                  : r.copy(null, null, null, null, r.right.insert(e, t, n))),
            r.fixUp()
          );
        }
        removeMin() {
          if (this.left.isEmpty()) return Ic.EMPTY;
          let e = this;
          return (
            e.left.isRed() || e.left.left.isRed() || (e = e.moveRedLeft()),
            (e = e.copy(null, null, null, e.left.removeMin(), null)),
            e.fixUp()
          );
        }
        remove(e, t) {
          let n,
            r = this;
          if (t(e, r.key) < 0)
            r.left.isEmpty() || r.left.isRed() || r.left.left.isRed() || (r = r.moveRedLeft()),
              (r = r.copy(null, null, null, r.left.remove(e, t), null));
          else {
            if (
              (r.left.isRed() && (r = r.rotateRight()),
              r.right.isEmpty() || r.right.isRed() || r.right.left.isRed() || (r = r.moveRedRight()),
              0 === t(e, r.key))
            ) {
              if (r.right.isEmpty()) return Ic.EMPTY;
              (n = r.right.min()), (r = r.copy(n.key, n.value, null, null, r.right.removeMin()));
            }
            r = r.copy(null, null, null, null, r.right.remove(e, t));
          }
          return r.fixUp();
        }
        isRed() {
          return this.color;
        }
        fixUp() {
          let e = this;
          return (
            e.right.isRed() && !e.left.isRed() && (e = e.rotateLeft()),
            e.left.isRed() && e.left.left.isRed() && (e = e.rotateRight()),
            e.left.isRed() && e.right.isRed() && (e = e.colorFlip()),
            e
          );
        }
        moveRedLeft() {
          let e = this.colorFlip();
          return (
            e.right.left.isRed() &&
              ((e = e.copy(null, null, null, null, e.right.rotateRight())), (e = e.rotateLeft()), (e = e.colorFlip())),
            e
          );
        }
        moveRedRight() {
          let e = this.colorFlip();
          return e.left.left.isRed() && ((e = e.rotateRight()), (e = e.colorFlip())), e;
        }
        rotateLeft() {
          const e = this.copy(null, null, Ic.RED, null, this.right.left);
          return this.right.copy(null, null, this.color, e, null);
        }
        rotateRight() {
          const e = this.copy(null, null, Ic.RED, this.left.right, null);
          return this.left.copy(null, null, this.color, null, e);
        }
        colorFlip() {
          const e = this.left.copy(null, null, !this.left.color, null, null),
            t = this.right.copy(null, null, !this.right.color, null, null);
          return this.copy(null, null, !this.color, e, t);
        }
        checkMaxDepth() {
          const e = this.check();
          return Math.pow(2, e) <= this.size + 1;
        }
        check() {
          if (this.isRed() && this.left.isRed()) throw qo();
          if (this.right.isRed()) throw qo();
          const e = this.left.check();
          if (e !== this.right.check()) throw qo();
          return e + (this.isRed() ? 0 : 1);
        }
      }
      (Ic.EMPTY = null),
        (Ic.RED = !0),
        (Ic.BLACK = !1),
        (Ic.EMPTY = new (class {
          constructor() {
            this.size = 0;
          }
          get key() {
            throw qo();
          }
          get value() {
            throw qo();
          }
          get color() {
            throw qo();
          }
          get left() {
            throw qo();
          }
          get right() {
            throw qo();
          }
          copy(e, t, n, r, i) {
            return this;
          }
          insert(e, t, n) {
            return new Ic(e, t);
          }
          remove(e, t) {
            return this;
          }
          isEmpty() {
            return !0;
          }
          inorderTraversal(e) {
            return !1;
          }
          reverseTraversal(e) {
            return !1;
          }
          minKey() {
            return null;
          }
          maxKey() {
            return null;
          }
          isRed() {
            return !1;
          }
          checkMaxDepth() {
            return !0;
          }
          check() {
            return 0;
          }
        })());
      class xc {
        constructor(e) {
          (this.comparator = e), (this.data = new Tc(this.comparator));
        }
        has(e) {
          return null !== this.data.get(e);
        }
        first() {
          return this.data.minKey();
        }
        last() {
          return this.data.maxKey();
        }
        get size() {
          return this.data.size;
        }
        indexOf(e) {
          return this.data.indexOf(e);
        }
        forEach(e) {
          this.data.inorderTraversal((t, n) => (e(t), !1));
        }
        forEachInRange(e, t) {
          const n = this.data.getIteratorFrom(e[0]);
          for (; n.hasNext(); ) {
            const r = n.getNext();
            if (this.comparator(r.key, e[1]) >= 0) return;
            t(r.key);
          }
        }
        forEachWhile(e, t) {
          let n;
          for (n = void 0 !== t ? this.data.getIteratorFrom(t) : this.data.getIterator(); n.hasNext(); )
            if (!e(n.getNext().key)) return;
        }
        firstAfterOrEqual(e) {
          const t = this.data.getIteratorFrom(e);
          return t.hasNext() ? t.getNext().key : null;
        }
        getIterator() {
          return new kc(this.data.getIterator());
        }
        getIteratorFrom(e) {
          return new kc(this.data.getIteratorFrom(e));
        }
        add(e) {
          return this.copy(this.data.remove(e).insert(e, !0));
        }
        delete(e) {
          return this.has(e) ? this.copy(this.data.remove(e)) : this;
        }
        isEmpty() {
          return this.data.isEmpty();
        }
        unionWith(e) {
          let t = this;
          return (
            t.size < e.size && ((t = e), (e = this)),
            e.forEach((e) => {
              t = t.add(e);
            }),
            t
          );
        }
        isEqual(e) {
          if (!(e instanceof xc)) return !1;
          if (this.size !== e.size) return !1;
          const t = this.data.getIterator(),
            n = e.data.getIterator();
          for (; t.hasNext(); ) {
            const e = t.getNext().key,
              r = n.getNext().key;
            if (0 !== this.comparator(e, r)) return !1;
          }
          return !0;
        }
        toArray() {
          const e = [];
          return (
            this.forEach((t) => {
              e.push(t);
            }),
            e
          );
        }
        toString() {
          const e = [];
          return this.forEach((t) => e.push(t)), 'SortedSet(' + e.toString() + ')';
        }
        copy(e) {
          const t = new xc(this.comparator);
          return (t.data = e), t;
        }
      }
      class kc {
        constructor(e) {
          this.iter = e;
        }
        getNext() {
          return this.iter.getNext().key;
        }
        hasNext() {
          return this.iter.hasNext();
        }
      }
      function Cc(e) {
        return e.hasNext() ? e.getNext() : void 0;
      }
      class Nc {
        constructor(e) {
          (this.fields = e), e.sort(fl.comparator);
        }
        static empty() {
          return new Nc([]);
        }
        unionWith(e) {
          let t = new xc(fl.comparator);
          for (const n of this.fields) t = t.add(n);
          for (const n of e) t = t.add(n);
          return new Nc(t.toArray());
        }
        covers(e) {
          for (const t of this.fields) if (t.isPrefixOf(e)) return !0;
          return !1;
        }
        isEqual(e) {
          return al(this.fields, e.fields, (e, t) => e.isEqual(t));
        }
      }
      class Pc extends Error {
        constructor() {
          super(...arguments), (this.name = 'Base64DecodeError');
        }
      }
      class Dc {
        constructor(e) {
          this.binaryString = e;
        }
        static fromBase64String(e) {
          const t = (function (e) {
            try {
              return atob(e);
            } catch (e) {
              throw 'undefined' != typeof DOMException && e instanceof DOMException ? new Pc('Invalid base64 string: ' + e) : e;
            }
          })(e);
          return new Dc(t);
        }
        static fromUint8Array(e) {
          const t = (function (e) {
            let t = '';
            for (let n = 0; n < e.length; ++n) t += String.fromCharCode(e[n]);
            return t;
          })(e);
          return new Dc(t);
        }
        [Symbol.iterator]() {
          let e = 0;
          return {
            next: () =>
              e < this.binaryString.length ? { value: this.binaryString.charCodeAt(e++), done: !1 } : { value: void 0, done: !0 },
          };
        }
        toBase64() {
          return (e = this.binaryString), btoa(e);
          var e;
        }
        toUint8Array() {
          return (function (e) {
            const t = new Uint8Array(e.length);
            for (let n = 0; n < e.length; n++) t[n] = e.charCodeAt(n);
            return t;
          })(this.binaryString);
        }
        approximateByteSize() {
          return 2 * this.binaryString.length;
        }
        compareTo(e) {
          return sl(this.binaryString, e.binaryString);
        }
        isEqual(e) {
          return this.binaryString === e.binaryString;
        }
      }
      Dc.EMPTY_BYTE_STRING = new Dc('');
      const Ac = new RegExp(/^\d{4}-\d\d-\d\dT\d\d:\d\d:\d\d(?:\.(\d+))?Z$/);
      function Oc(e) {
        if ((Go(!!e), 'string' == typeof e)) {
          let t = 0;
          const n = Ac.exec(e);
          if ((Go(!!n), n[1])) {
            let e = n[1];
            (e = (e + '000000000').substr(0, 9)), (t = Number(e));
          }
          const r = new Date(e);
          return { seconds: Math.floor(r.getTime() / 1e3), nanos: t };
        }
        return { seconds: Lc(e.seconds), nanos: Lc(e.nanos) };
      }
      function Lc(e) {
        return 'number' == typeof e ? e : 'string' == typeof e ? Number(e) : 0;
      }
      function Rc(e) {
        return 'string' == typeof e ? Dc.fromBase64String(e) : Dc.fromUint8Array(e);
      }
      function Mc(e) {
        var t, n;
        return (
          'server_timestamp' ===
          (null === (n = ((null === (t = null == e ? void 0 : e.mapValue) || void 0 === t ? void 0 : t.fields) || {}).__type__) ||
          void 0 === n
            ? void 0
            : n.stringValue)
        );
      }
      function Fc(e) {
        const t = e.mapValue.fields.__previous_value__;
        return Mc(t) ? Fc(t) : t;
      }
      function jc(e) {
        const t = Oc(e.mapValue.fields.__local_write_time__.timestampValue);
        return new ll(t.seconds, t.nanos);
      }
      class Uc {
        constructor(e, t, n, r, i, s, a, o, l) {
          (this.databaseId = e),
            (this.appId = t),
            (this.persistenceKey = n),
            (this.host = r),
            (this.ssl = i),
            (this.forceLongPolling = s),
            (this.autoDetectLongPolling = a),
            (this.longPollingOptions = o),
            (this.useFetchStreams = l);
        }
      }
      class Vc {
        constructor(e, t) {
          (this.projectId = e), (this.database = t || '(default)');
        }
        static empty() {
          return new Vc('', '');
        }
        get isDefaultDatabase() {
          return '(default)' === this.database;
        }
        isEqual(e) {
          return e instanceof Vc && e.projectId === this.projectId && e.database === this.database;
        }
      }
      const zc = { mapValue: { fields: { __type__: { stringValue: '__max__' } } } },
        Bc = { nullValue: 'NULL_VALUE' };
      function qc(e) {
        return 'nullValue' in e
          ? 0
          : 'booleanValue' in e
            ? 1
            : 'integerValue' in e || 'doubleValue' in e
              ? 2
              : 'timestampValue' in e
                ? 3
                : 'stringValue' in e
                  ? 5
                  : 'bytesValue' in e
                    ? 6
                    : 'referenceValue' in e
                      ? 7
                      : 'geoPointValue' in e
                        ? 8
                        : 'arrayValue' in e
                          ? 9
                          : 'mapValue' in e
                            ? Mc(e)
                              ? 4
                              : ru(e)
                                ? 9007199254740991
                                : 10
                            : qo();
      }
      function Gc(e, t) {
        if (e === t) return !0;
        const n = qc(e);
        if (n !== qc(t)) return !1;
        switch (n) {
          case 0:
          case 9007199254740991:
            return !0;
          case 1:
            return e.booleanValue === t.booleanValue;
          case 4:
            return jc(e).isEqual(jc(t));
          case 3:
            return (function (e, t) {
              if (
                'string' == typeof e.timestampValue &&
                'string' == typeof t.timestampValue &&
                e.timestampValue.length === t.timestampValue.length
              )
                return e.timestampValue === t.timestampValue;
              const n = Oc(e.timestampValue),
                r = Oc(t.timestampValue);
              return n.seconds === r.seconds && n.nanos === r.nanos;
            })(e, t);
          case 5:
            return e.stringValue === t.stringValue;
          case 6:
            return (function (e, t) {
              return Rc(e.bytesValue).isEqual(Rc(t.bytesValue));
            })(e, t);
          case 7:
            return e.referenceValue === t.referenceValue;
          case 8:
            return (function (e, t) {
              return (
                Lc(e.geoPointValue.latitude) === Lc(t.geoPointValue.latitude) &&
                Lc(e.geoPointValue.longitude) === Lc(t.geoPointValue.longitude)
              );
            })(e, t);
          case 2:
            return (function (e, t) {
              if ('integerValue' in e && 'integerValue' in t) return Lc(e.integerValue) === Lc(t.integerValue);
              if ('doubleValue' in e && 'doubleValue' in t) {
                const n = Lc(e.doubleValue),
                  r = Lc(t.doubleValue);
                return n === r ? Bl(n) === Bl(r) : isNaN(n) && isNaN(r);
              }
              return !1;
            })(e, t);
          case 9:
            return al(e.arrayValue.values || [], t.arrayValue.values || [], Gc);
          case 10:
            return (function (e, t) {
              const n = e.mapValue.fields || {},
                r = t.mapValue.fields || {};
              if (bc(n) !== bc(r)) return !1;
              for (const i in n) if (n.hasOwnProperty(i) && (void 0 === r[i] || !Gc(n[i], r[i]))) return !1;
              return !0;
            })(e, t);
          default:
            return qo();
        }
      }
      function Hc(e, t) {
        return void 0 !== (e.values || []).find((e) => Gc(e, t));
      }
      function Kc(e, t) {
        if (e === t) return 0;
        const n = qc(e),
          r = qc(t);
        if (n !== r) return sl(n, r);
        switch (n) {
          case 0:
          case 9007199254740991:
            return 0;
          case 1:
            return sl(e.booleanValue, t.booleanValue);
          case 2:
            return (function (e, t) {
              const n = Lc(e.integerValue || e.doubleValue),
                r = Lc(t.integerValue || t.doubleValue);
              return n < r ? -1 : n > r ? 1 : n === r ? 0 : isNaN(n) ? (isNaN(r) ? 0 : -1) : 1;
            })(e, t);
          case 3:
            return Wc(e.timestampValue, t.timestampValue);
          case 4:
            return Wc(jc(e), jc(t));
          case 5:
            return sl(e.stringValue, t.stringValue);
          case 6:
            return (function (e, t) {
              const n = Rc(e),
                r = Rc(t);
              return n.compareTo(r);
            })(e.bytesValue, t.bytesValue);
          case 7:
            return (function (e, t) {
              const n = e.split('/'),
                r = t.split('/');
              for (let i = 0; i < n.length && i < r.length; i++) {
                const e = sl(n[i], r[i]);
                if (0 !== e) return e;
              }
              return sl(n.length, r.length);
            })(e.referenceValue, t.referenceValue);
          case 8:
            return (function (e, t) {
              const n = sl(Lc(e.latitude), Lc(t.latitude));
              return 0 !== n ? n : sl(Lc(e.longitude), Lc(t.longitude));
            })(e.geoPointValue, t.geoPointValue);
          case 9:
            return (function (e, t) {
              const n = e.values || [],
                r = t.values || [];
              for (let i = 0; i < n.length && i < r.length; ++i) {
                const e = Kc(n[i], r[i]);
                if (e) return e;
              }
              return sl(n.length, r.length);
            })(e.arrayValue, t.arrayValue);
          case 10:
            return (function (e, t) {
              if (e === zc.mapValue && t === zc.mapValue) return 0;
              if (e === zc.mapValue) return 1;
              if (t === zc.mapValue) return -1;
              const n = e.fields || {},
                r = Object.keys(n),
                i = t.fields || {},
                s = Object.keys(i);
              r.sort(), s.sort();
              for (let a = 0; a < r.length && a < s.length; ++a) {
                const e = sl(r[a], s[a]);
                if (0 !== e) return e;
                const t = Kc(n[r[a]], i[s[a]]);
                if (0 !== t) return t;
              }
              return sl(r.length, s.length);
            })(e.mapValue, t.mapValue);
          default:
            throw qo();
        }
      }
      function Wc(e, t) {
        if ('string' == typeof e && 'string' == typeof t && e.length === t.length) return sl(e, t);
        const n = Oc(e),
          r = Oc(t),
          i = sl(n.seconds, r.seconds);
        return 0 !== i ? i : sl(n.nanos, r.nanos);
      }
      function Qc(e) {
        return Yc(e);
      }
      function Yc(e) {
        return 'nullValue' in e
          ? 'null'
          : 'booleanValue' in e
            ? '' + e.booleanValue
            : 'integerValue' in e
              ? '' + e.integerValue
              : 'doubleValue' in e
                ? '' + e.doubleValue
                : 'timestampValue' in e
                  ? (function (e) {
                      const t = Oc(e);
                      return 'time('.concat(t.seconds, ',').concat(t.nanos, ')');
                    })(e.timestampValue)
                  : 'stringValue' in e
                    ? e.stringValue
                    : 'bytesValue' in e
                      ? (function (e) {
                          return Rc(e).toBase64();
                        })(e.bytesValue)
                      : 'referenceValue' in e
                        ? (function (e) {
                            return pl.fromName(e).toString();
                          })(e.referenceValue)
                        : 'geoPointValue' in e
                          ? (function (e) {
                              return 'geo('.concat(e.latitude, ',').concat(e.longitude, ')');
                            })(e.geoPointValue)
                          : 'arrayValue' in e
                            ? (function (e) {
                                let t = '[',
                                  n = !0;
                                for (const r of e.values || []) n ? (n = !1) : (t += ','), (t += Yc(r));
                                return t + ']';
                              })(e.arrayValue)
                            : 'mapValue' in e
                              ? (function (e) {
                                  const t = Object.keys(e.fields || {}).sort();
                                  let n = '{',
                                    r = !0;
                                  for (const i of t) r ? (r = !1) : (n += ','), (n += ''.concat(i, ':').concat(Yc(e.fields[i])));
                                  return n + '}';
                                })(e.mapValue)
                              : qo();
      }
      function Jc(e, t) {
        return {
          referenceValue: 'projects/'
            .concat(e.projectId, '/databases/')
            .concat(e.database, '/documents/')
            .concat(t.path.canonicalString()),
        };
      }
      function Xc(e) {
        return !!e && 'integerValue' in e;
      }
      function $c(e) {
        return !!e && 'arrayValue' in e;
      }
      function Zc(e) {
        return !!e && 'nullValue' in e;
      }
      function eu(e) {
        return !!e && 'doubleValue' in e && isNaN(Number(e.doubleValue));
      }
      function tu(e) {
        return !!e && 'mapValue' in e;
      }
      function nu(e) {
        if (e.geoPointValue) return { geoPointValue: Object.assign({}, e.geoPointValue) };
        if (e.timestampValue && 'object' == typeof e.timestampValue)
          return { timestampValue: Object.assign({}, e.timestampValue) };
        if (e.mapValue) {
          const t = { mapValue: { fields: {} } };
          return Sc(e.mapValue.fields, (e, n) => (t.mapValue.fields[e] = nu(n))), t;
        }
        if (e.arrayValue) {
          const t = { arrayValue: { values: [] } };
          for (let n = 0; n < (e.arrayValue.values || []).length; ++n) t.arrayValue.values[n] = nu(e.arrayValue.values[n]);
          return t;
        }
        return Object.assign({}, e);
      }
      function ru(e) {
        return '__max__' === (((e.mapValue || {}).fields || {}).__type__ || {}).stringValue;
      }
      function iu(e) {
        return 'nullValue' in e
          ? Bc
          : 'booleanValue' in e
            ? { booleanValue: !1 }
            : 'integerValue' in e || 'doubleValue' in e
              ? { doubleValue: NaN }
              : 'timestampValue' in e
                ? { timestampValue: { seconds: Number.MIN_SAFE_INTEGER } }
                : 'stringValue' in e
                  ? { stringValue: '' }
                  : 'bytesValue' in e
                    ? { bytesValue: '' }
                    : 'referenceValue' in e
                      ? Jc(Vc.empty(), pl.empty())
                      : 'geoPointValue' in e
                        ? { geoPointValue: { latitude: -90, longitude: -180 } }
                        : 'arrayValue' in e
                          ? { arrayValue: {} }
                          : 'mapValue' in e
                            ? { mapValue: {} }
                            : qo();
      }
      function su(e) {
        return 'nullValue' in e
          ? { booleanValue: !1 }
          : 'booleanValue' in e
            ? { doubleValue: NaN }
            : 'integerValue' in e || 'doubleValue' in e
              ? { timestampValue: { seconds: Number.MIN_SAFE_INTEGER } }
              : 'timestampValue' in e
                ? { stringValue: '' }
                : 'stringValue' in e
                  ? { bytesValue: '' }
                  : 'bytesValue' in e
                    ? Jc(Vc.empty(), pl.empty())
                    : 'referenceValue' in e
                      ? { geoPointValue: { latitude: -90, longitude: -180 } }
                      : 'geoPointValue' in e
                        ? { arrayValue: {} }
                        : 'arrayValue' in e
                          ? { mapValue: {} }
                          : 'mapValue' in e
                            ? zc
                            : qo();
      }
      function au(e, t) {
        const n = Kc(e.value, t.value);
        return 0 !== n ? n : e.inclusive && !t.inclusive ? -1 : !e.inclusive && t.inclusive ? 1 : 0;
      }
      function ou(e, t) {
        const n = Kc(e.value, t.value);
        return 0 !== n ? n : e.inclusive && !t.inclusive ? 1 : !e.inclusive && t.inclusive ? -1 : 0;
      }
      class lu {
        constructor(e) {
          this.value = e;
        }
        static empty() {
          return new lu({ mapValue: {} });
        }
        field(e) {
          if (e.isEmpty()) return this.value;
          {
            let t = this.value;
            for (let n = 0; n < e.length - 1; ++n) if (((t = (t.mapValue.fields || {})[e.get(n)]), !tu(t))) return null;
            return (t = (t.mapValue.fields || {})[e.lastSegment()]), t || null;
          }
        }
        set(e, t) {
          this.getFieldsMap(e.popLast())[e.lastSegment()] = nu(t);
        }
        setAll(e) {
          let t = fl.emptyPath(),
            n = {},
            r = [];
          e.forEach((e, i) => {
            if (!t.isImmediateParentOf(i)) {
              const e = this.getFieldsMap(t);
              this.applyChanges(e, n, r), (n = {}), (r = []), (t = i.popLast());
            }
            e ? (n[i.lastSegment()] = nu(e)) : r.push(i.lastSegment());
          });
          const i = this.getFieldsMap(t);
          this.applyChanges(i, n, r);
        }
        delete(e) {
          const t = this.field(e.popLast());
          tu(t) && t.mapValue.fields && delete t.mapValue.fields[e.lastSegment()];
        }
        isEqual(e) {
          return Gc(this.value, e.value);
        }
        getFieldsMap(e) {
          let t = this.value;
          t.mapValue.fields || (t.mapValue = { fields: {} });
          for (let n = 0; n < e.length; ++n) {
            let r = t.mapValue.fields[e.get(n)];
            (tu(r) && r.mapValue.fields) || ((r = { mapValue: { fields: {} } }), (t.mapValue.fields[e.get(n)] = r)), (t = r);
          }
          return t.mapValue.fields;
        }
        applyChanges(e, t, n) {
          Sc(t, (t, n) => (e[t] = n));
          for (const r of n) delete e[r];
        }
        clone() {
          return new lu(nu(this.value));
        }
      }
      function cu(e) {
        const t = [];
        return (
          Sc(e.fields, (e, n) => {
            const r = new fl([e]);
            if (tu(n)) {
              const e = cu(n.mapValue).fields;
              if (0 === e.length) t.push(r);
              else for (const n of e) t.push(r.child(n));
            } else t.push(r);
          }),
          new Nc(t)
        );
      }
      class uu {
        constructor(e, t, n, r, i, s, a) {
          (this.key = e),
            (this.documentType = t),
            (this.version = n),
            (this.readTime = r),
            (this.createTime = i),
            (this.data = s),
            (this.documentState = a);
        }
        static newInvalidDocument(e) {
          return new uu(e, 0, cl.min(), cl.min(), cl.min(), lu.empty(), 0);
        }
        static newFoundDocument(e, t, n, r) {
          return new uu(e, 1, t, cl.min(), n, r, 0);
        }
        static newNoDocument(e, t) {
          return new uu(e, 2, t, cl.min(), cl.min(), lu.empty(), 0);
        }
        static newUnknownDocument(e, t) {
          return new uu(e, 3, t, cl.min(), cl.min(), lu.empty(), 2);
        }
        convertToFoundDocument(e, t) {
          return (
            !this.createTime.isEqual(cl.min()) || (2 !== this.documentType && 0 !== this.documentType) || (this.createTime = e),
            (this.version = e),
            (this.documentType = 1),
            (this.data = t),
            (this.documentState = 0),
            this
          );
        }
        convertToNoDocument(e) {
          return (this.version = e), (this.documentType = 2), (this.data = lu.empty()), (this.documentState = 0), this;
        }
        convertToUnknownDocument(e) {
          return (this.version = e), (this.documentType = 3), (this.data = lu.empty()), (this.documentState = 2), this;
        }
        setHasCommittedMutations() {
          return (this.documentState = 2), this;
        }
        setHasLocalMutations() {
          return (this.documentState = 1), (this.version = cl.min()), this;
        }
        setReadTime(e) {
          return (this.readTime = e), this;
        }
        get hasLocalMutations() {
          return 1 === this.documentState;
        }
        get hasCommittedMutations() {
          return 2 === this.documentState;
        }
        get hasPendingWrites() {
          return this.hasLocalMutations || this.hasCommittedMutations;
        }
        isValidDocument() {
          return 0 !== this.documentType;
        }
        isFoundDocument() {
          return 1 === this.documentType;
        }
        isNoDocument() {
          return 2 === this.documentType;
        }
        isUnknownDocument() {
          return 3 === this.documentType;
        }
        isEqual(e) {
          return (
            e instanceof uu &&
            this.key.isEqual(e.key) &&
            this.version.isEqual(e.version) &&
            this.documentType === e.documentType &&
            this.documentState === e.documentState &&
            this.data.isEqual(e.data)
          );
        }
        mutableCopy() {
          return new uu(
            this.key,
            this.documentType,
            this.version,
            this.readTime,
            this.createTime,
            this.data.clone(),
            this.documentState,
          );
        }
        toString() {
          return 'Document('
            .concat(this.key, ', ')
            .concat(this.version, ', ')
            .concat(JSON.stringify(this.data.value), ', {createTime: ')
            .concat(this.createTime, '}), {documentType: ')
            .concat(this.documentType, '}), {documentState: ')
            .concat(this.documentState, '})');
        }
      }
      class du {
        constructor(e, t) {
          (this.position = e), (this.inclusive = t);
        }
      }
      function hu(e, t, n) {
        let r = 0;
        for (let i = 0; i < e.position.length; i++) {
          const s = t[i],
            a = e.position[i];
          if (
            ((r = s.field.isKeyField() ? pl.comparator(pl.fromName(a.referenceValue), n.key) : Kc(a, n.data.field(s.field))),
            'desc' === s.dir && (r *= -1),
            0 !== r)
          )
            break;
        }
        return r;
      }
      function fu(e, t) {
        if (null === e) return null === t;
        if (null === t) return !1;
        if (e.inclusive !== t.inclusive || e.position.length !== t.position.length) return !1;
        for (let n = 0; n < e.position.length; n++) if (!Gc(e.position[n], t.position[n])) return !1;
        return !0;
      }
      class pu {
        constructor(e) {
          let t = arguments.length > 1 && void 0 !== arguments[1] ? arguments[1] : 'asc';
          (this.field = e), (this.dir = t);
        }
      }
      function mu(e, t) {
        return e.dir === t.dir && e.field.isEqual(t.field);
      }
      class gu {}
      class vu extends gu {
        constructor(e, t, n) {
          super(), (this.field = e), (this.op = t), (this.value = n);
        }
        static create(e, t, n) {
          return e.isKeyField()
            ? 'in' === t || 'not-in' === t
              ? this.createKeyFieldInFilter(e, t, n)
              : new ku(e, t, n)
            : 'array-contains' === t
              ? new Du(e, n)
              : 'in' === t
                ? new Au(e, n)
                : 'not-in' === t
                  ? new Ou(e, n)
                  : 'array-contains-any' === t
                    ? new Lu(e, n)
                    : new vu(e, t, n);
        }
        static createKeyFieldInFilter(e, t, n) {
          return 'in' === t ? new Cu(e, n) : new Nu(e, n);
        }
        matches(e) {
          const t = e.data.field(this.field);
          return '!=' === this.op
            ? null !== t && this.matchesComparison(Kc(t, this.value))
            : null !== t && qc(this.value) === qc(t) && this.matchesComparison(Kc(t, this.value));
        }
        matchesComparison(e) {
          switch (this.op) {
            case '<':
              return e < 0;
            case '<=':
              return e <= 0;
            case '==':
              return 0 === e;
            case '!=':
              return 0 !== e;
            case '>':
              return e > 0;
            case '>=':
              return e >= 0;
            default:
              return qo();
          }
        }
        isInequality() {
          return ['<', '<=', '>', '>=', '!=', 'not-in'].indexOf(this.op) >= 0;
        }
        getFlattenedFilters() {
          return [this];
        }
        getFilters() {
          return [this];
        }
      }
      class yu extends gu {
        constructor(e, t) {
          super(), (this.filters = e), (this.op = t), (this.ae = null);
        }
        static create(e, t) {
          return new yu(e, t);
        }
        matches(e) {
          return wu(this)
            ? void 0 === this.filters.find((t) => !t.matches(e))
            : void 0 !== this.filters.find((t) => t.matches(e));
        }
        getFlattenedFilters() {
          return null !== this.ae || (this.ae = this.filters.reduce((e, t) => e.concat(t.getFlattenedFilters()), [])), this.ae;
        }
        getFilters() {
          return Object.assign([], this.filters);
        }
      }
      function wu(e) {
        return 'and' === e.op;
      }
      function bu(e) {
        return 'or' === e.op;
      }
      function Su(e) {
        return Eu(e) && wu(e);
      }
      function Eu(e) {
        for (const t of e.filters) if (t instanceof yu) return !1;
        return !0;
      }
      function Tu(e) {
        if (e instanceof vu) return e.field.canonicalString() + e.op.toString() + Qc(e.value);
        if (Su(e)) return e.filters.map((e) => Tu(e)).join(',');
        {
          const t = e.filters.map((e) => Tu(e)).join(',');
          return ''.concat(e.op, '(').concat(t, ')');
        }
      }
      function _u(e, t) {
        return e instanceof vu
          ? (function (e, t) {
              return t instanceof vu && e.op === t.op && e.field.isEqual(t.field) && Gc(e.value, t.value);
            })(e, t)
          : e instanceof yu
            ? (function (e, t) {
                return (
                  t instanceof yu &&
                  e.op === t.op &&
                  e.filters.length === t.filters.length &&
                  e.filters.reduce((e, n, r) => e && _u(n, t.filters[r]), !0)
                );
              })(e, t)
            : void qo();
      }
      function Iu(e, t) {
        const n = e.filters.concat(t);
        return yu.create(n, e.op);
      }
      function xu(e) {
        return e instanceof vu
          ? (function (e) {
              return ''.concat(e.field.canonicalString(), ' ').concat(e.op, ' ').concat(Qc(e.value));
            })(e)
          : e instanceof yu
            ? (function (e) {
                return e.op.toString() + ' {' + e.getFilters().map(xu).join(' ,') + '}';
              })(e)
            : 'Filter';
      }
      class ku extends vu {
        constructor(e, t, n) {
          super(e, t, n), (this.key = pl.fromName(n.referenceValue));
        }
        matches(e) {
          const t = pl.comparator(e.key, this.key);
          return this.matchesComparison(t);
        }
      }
      class Cu extends vu {
        constructor(e, t) {
          super(e, 'in', t), (this.keys = Pu('in', t));
        }
        matches(e) {
          return this.keys.some((t) => t.isEqual(e.key));
        }
      }
      class Nu extends vu {
        constructor(e, t) {
          super(e, 'not-in', t), (this.keys = Pu('not-in', t));
        }
        matches(e) {
          return !this.keys.some((t) => t.isEqual(e.key));
        }
      }
      function Pu(e, t) {
        var n;
        return ((null === (n = t.arrayValue) || void 0 === n ? void 0 : n.values) || []).map((e) =>
          pl.fromName(e.referenceValue),
        );
      }
      class Du extends vu {
        constructor(e, t) {
          super(e, 'array-contains', t);
        }
        matches(e) {
          const t = e.data.field(this.field);
          return $c(t) && Hc(t.arrayValue, this.value);
        }
      }
      class Au extends vu {
        constructor(e, t) {
          super(e, 'in', t);
        }
        matches(e) {
          const t = e.data.field(this.field);
          return null !== t && Hc(this.value.arrayValue, t);
        }
      }
      class Ou extends vu {
        constructor(e, t) {
          super(e, 'not-in', t);
        }
        matches(e) {
          if (Hc(this.value.arrayValue, { nullValue: 'NULL_VALUE' })) return !1;
          const t = e.data.field(this.field);
          return null !== t && !Hc(this.value.arrayValue, t);
        }
      }
      class Lu extends vu {
        constructor(e, t) {
          super(e, 'array-contains-any', t);
        }
        matches(e) {
          const t = e.data.field(this.field);
          return !(!$c(t) || !t.arrayValue.values) && t.arrayValue.values.some((e) => Hc(this.value.arrayValue, e));
        }
      }
      class Ru {
        constructor(e) {
          let t = arguments.length > 1 && void 0 !== arguments[1] ? arguments[1] : null,
            n = arguments.length > 2 && void 0 !== arguments[2] ? arguments[2] : [],
            r = arguments.length > 3 && void 0 !== arguments[3] ? arguments[3] : [],
            i = arguments.length > 4 && void 0 !== arguments[4] ? arguments[4] : null,
            s = arguments.length > 5 && void 0 !== arguments[5] ? arguments[5] : null,
            a = arguments.length > 6 && void 0 !== arguments[6] ? arguments[6] : null;
          (this.path = e),
            (this.collectionGroup = t),
            (this.orderBy = n),
            (this.filters = r),
            (this.limit = i),
            (this.startAt = s),
            (this.endAt = a),
            (this.ue = null);
        }
      }
      function Mu(e) {
        return new Ru(
          e,
          arguments.length > 1 && void 0 !== arguments[1] ? arguments[1] : null,
          arguments.length > 2 && void 0 !== arguments[2] ? arguments[2] : [],
          arguments.length > 3 && void 0 !== arguments[3] ? arguments[3] : [],
          arguments.length > 4 && void 0 !== arguments[4] ? arguments[4] : null,
          arguments.length > 5 && void 0 !== arguments[5] ? arguments[5] : null,
          arguments.length > 6 && void 0 !== arguments[6] ? arguments[6] : null,
        );
      }
      function Fu(e) {
        const t = Ho(e);
        if (null === t.ue) {
          let e = t.path.canonicalString();
          null !== t.collectionGroup && (e += '|cg:' + t.collectionGroup),
            (e += '|f:'),
            (e += t.filters.map((e) => Tu(e)).join(',')),
            (e += '|ob:'),
            (e += t.orderBy
              .map((e) =>
                (function (e) {
                  return e.field.canonicalString() + e.dir;
                })(e),
              )
              .join(',')),
            zl(t.limit) || ((e += '|l:'), (e += t.limit)),
            t.startAt &&
              ((e += '|lb:'), (e += t.startAt.inclusive ? 'b:' : 'a:'), (e += t.startAt.position.map((e) => Qc(e)).join(','))),
            t.endAt &&
              ((e += '|ub:'), (e += t.endAt.inclusive ? 'a:' : 'b:'), (e += t.endAt.position.map((e) => Qc(e)).join(','))),
            (t.ue = e);
        }
        return t.ue;
      }
      function ju(e, t) {
        if (e.limit !== t.limit) return !1;
        if (e.orderBy.length !== t.orderBy.length) return !1;
        for (let n = 0; n < e.orderBy.length; n++) if (!mu(e.orderBy[n], t.orderBy[n])) return !1;
        if (e.filters.length !== t.filters.length) return !1;
        for (let n = 0; n < e.filters.length; n++) if (!_u(e.filters[n], t.filters[n])) return !1;
        return (
          e.collectionGroup === t.collectionGroup &&
          !!e.path.isEqual(t.path) &&
          !!fu(e.startAt, t.startAt) &&
          fu(e.endAt, t.endAt)
        );
      }
      function Uu(e) {
        return pl.isDocumentKey(e.path) && null === e.collectionGroup && 0 === e.filters.length;
      }
      function Vu(e, t) {
        return e.filters.filter((e) => e instanceof vu && e.field.isEqual(t));
      }
      function zu(e, t, n) {
        let r = Bc,
          i = !0;
        for (const s of Vu(e, t)) {
          let e = Bc,
            t = !0;
          switch (s.op) {
            case '<':
            case '<=':
              e = iu(s.value);
              break;
            case '==':
            case 'in':
            case '>=':
              e = s.value;
              break;
            case '>':
              (e = s.value), (t = !1);
              break;
            case '!=':
            case 'not-in':
              e = Bc;
          }
          au({ value: r, inclusive: i }, { value: e, inclusive: t }) < 0 && ((r = e), (i = t));
        }
        if (null !== n)
          for (let s = 0; s < e.orderBy.length; ++s)
            if (e.orderBy[s].field.isEqual(t)) {
              const e = n.position[s];
              au({ value: r, inclusive: i }, { value: e, inclusive: n.inclusive }) < 0 && ((r = e), (i = n.inclusive));
              break;
            }
        return { value: r, inclusive: i };
      }
      function Bu(e, t, n) {
        let r = zc,
          i = !0;
        for (const s of Vu(e, t)) {
          let e = zc,
            t = !0;
          switch (s.op) {
            case '>=':
            case '>':
              (e = su(s.value)), (t = !1);
              break;
            case '==':
            case 'in':
            case '<=':
              e = s.value;
              break;
            case '<':
              (e = s.value), (t = !1);
              break;
            case '!=':
            case 'not-in':
              e = zc;
          }
          ou({ value: r, inclusive: i }, { value: e, inclusive: t }) > 0 && ((r = e), (i = t));
        }
        if (null !== n)
          for (let s = 0; s < e.orderBy.length; ++s)
            if (e.orderBy[s].field.isEqual(t)) {
              const e = n.position[s];
              ou({ value: r, inclusive: i }, { value: e, inclusive: n.inclusive }) > 0 && ((r = e), (i = n.inclusive));
              break;
            }
        return { value: r, inclusive: i };
      }
      class qu {
        constructor(e) {
          let t = arguments.length > 1 && void 0 !== arguments[1] ? arguments[1] : null,
            n = arguments.length > 2 && void 0 !== arguments[2] ? arguments[2] : [],
            r = arguments.length > 3 && void 0 !== arguments[3] ? arguments[3] : [],
            i = arguments.length > 4 && void 0 !== arguments[4] ? arguments[4] : null,
            s = arguments.length > 5 && void 0 !== arguments[5] ? arguments[5] : 'F',
            a = arguments.length > 6 && void 0 !== arguments[6] ? arguments[6] : null,
            o = arguments.length > 7 && void 0 !== arguments[7] ? arguments[7] : null;
          (this.path = e),
            (this.collectionGroup = t),
            (this.explicitOrderBy = n),
            (this.filters = r),
            (this.limit = i),
            (this.limitType = s),
            (this.startAt = a),
            (this.endAt = o),
            (this.ce = null),
            (this.le = null),
            (this.he = null),
            this.startAt,
            this.endAt;
        }
      }
      function Gu(e, t, n, r, i, s, a, o) {
        return new qu(e, t, n, r, i, s, a, o);
      }
      function Hu(e) {
        return new qu(e);
      }
      function Ku(e) {
        return (
          0 === e.filters.length &&
          null === e.limit &&
          null == e.startAt &&
          null == e.endAt &&
          (0 === e.explicitOrderBy.length || (1 === e.explicitOrderBy.length && e.explicitOrderBy[0].field.isKeyField()))
        );
      }
      function Wu(e) {
        return null !== e.collectionGroup;
      }
      function Qu(e) {
        const t = Ho(e);
        if (null === t.ce) {
          t.ce = [];
          const e = new Set();
          for (const i of t.explicitOrderBy) t.ce.push(i), e.add(i.field.canonicalString());
          const n = t.explicitOrderBy.length > 0 ? t.explicitOrderBy[t.explicitOrderBy.length - 1].dir : 'asc',
            r = (function (e) {
              let t = new xc(fl.comparator);
              return (
                e.filters.forEach((e) => {
                  e.getFlattenedFilters().forEach((e) => {
                    e.isInequality() && (t = t.add(e.field));
                  });
                }),
                t
              );
            })(t);
          r.forEach((r) => {
            e.has(r.canonicalString()) || r.isKeyField() || t.ce.push(new pu(r, n));
          }),
            e.has(fl.keyField().canonicalString()) || t.ce.push(new pu(fl.keyField(), n));
        }
        return t.ce;
      }
      function Yu(e) {
        const t = Ho(e);
        return t.le || (t.le = Ju(t, Qu(e))), t.le;
      }
      function Ju(e, t) {
        if ('F' === e.limitType) return Mu(e.path, e.collectionGroup, t, e.filters, e.limit, e.startAt, e.endAt);
        {
          t = t.map((e) => {
            const t = 'desc' === e.dir ? 'asc' : 'desc';
            return new pu(e.field, t);
          });
          const n = e.endAt ? new du(e.endAt.position, e.endAt.inclusive) : null,
            r = e.startAt ? new du(e.startAt.position, e.startAt.inclusive) : null;
          return Mu(e.path, e.collectionGroup, t, e.filters, e.limit, n, r);
        }
      }
      function Xu(e, t) {
        const n = e.filters.concat([t]);
        return new qu(e.path, e.collectionGroup, e.explicitOrderBy.slice(), n, e.limit, e.limitType, e.startAt, e.endAt);
      }
      function $u(e, t, n) {
        return new qu(e.path, e.collectionGroup, e.explicitOrderBy.slice(), e.filters.slice(), t, n, e.startAt, e.endAt);
      }
      function Zu(e, t) {
        return ju(Yu(e), Yu(t)) && e.limitType === t.limitType;
      }
      function ed(e) {
        return ''.concat(Fu(Yu(e)), '|lt:').concat(e.limitType);
      }
      function td(e) {
        return 'Query(target='
          .concat(
            (function (e) {
              let t = e.path.canonicalString();
              return (
                null !== e.collectionGroup && (t += ' collectionGroup=' + e.collectionGroup),
                e.filters.length > 0 && (t += ', filters: ['.concat(e.filters.map((e) => xu(e)).join(', '), ']')),
                zl(e.limit) || (t += ', limit: ' + e.limit),
                e.orderBy.length > 0 &&
                  (t += ', orderBy: ['.concat(
                    e.orderBy
                      .map((e) =>
                        (function (e) {
                          return ''.concat(e.field.canonicalString(), ' (').concat(e.dir, ')');
                        })(e),
                      )
                      .join(', '),
                    ']',
                  )),
                e.startAt &&
                  ((t += ', startAt: '),
                  (t += e.startAt.inclusive ? 'b:' : 'a:'),
                  (t += e.startAt.position.map((e) => Qc(e)).join(','))),
                e.endAt &&
                  ((t += ', endAt: '),
                  (t += e.endAt.inclusive ? 'a:' : 'b:'),
                  (t += e.endAt.position.map((e) => Qc(e)).join(','))),
                'Target('.concat(t, ')')
              );
            })(Yu(e)),
            '; limitType=',
          )
          .concat(e.limitType, ')');
      }
      function nd(e, t) {
        return (
          t.isFoundDocument() &&
          (function (e, t) {
            const n = t.key.path;
            return null !== e.collectionGroup
              ? t.key.hasCollectionId(e.collectionGroup) && e.path.isPrefixOf(n)
              : pl.isDocumentKey(e.path)
                ? e.path.isEqual(n)
                : e.path.isImmediateParentOf(n);
          })(e, t) &&
          (function (e, t) {
            for (const n of Qu(e)) if (!n.field.isKeyField() && null === t.data.field(n.field)) return !1;
            return !0;
          })(e, t) &&
          (function (e, t) {
            for (const n of e.filters) if (!n.matches(t)) return !1;
            return !0;
          })(e, t) &&
          (function (e, t) {
            return (
              !(
                e.startAt &&
                !(function (e, t, n) {
                  const r = hu(e, t, n);
                  return e.inclusive ? r <= 0 : r < 0;
                })(e.startAt, Qu(e), t)
              ) &&
              !(
                e.endAt &&
                !(function (e, t, n) {
                  const r = hu(e, t, n);
                  return e.inclusive ? r >= 0 : r > 0;
                })(e.endAt, Qu(e), t)
              )
            );
          })(e, t)
        );
      }
      function rd(e) {
        return e.collectionGroup || (e.path.length % 2 == 1 ? e.path.lastSegment() : e.path.get(e.path.length - 2));
      }
      function id(e) {
        return (t, n) => {
          let r = !1;
          for (const i of Qu(e)) {
            const e = sd(i, t, n);
            if (0 !== e) return e;
            r = r || i.field.isKeyField();
          }
          return 0;
        };
      }
      function sd(e, t, n) {
        const r = e.field.isKeyField()
          ? pl.comparator(t.key, n.key)
          : (function (e, t, n) {
              const r = t.data.field(e),
                i = n.data.field(e);
              return null !== r && null !== i ? Kc(r, i) : qo();
            })(e.field, t, n);
        switch (e.dir) {
          case 'asc':
            return r;
          case 'desc':
            return -1 * r;
          default:
            return qo();
        }
      }
      class ad {
        constructor(e, t) {
          (this.mapKeyFn = e), (this.equalsFn = t), (this.inner = {}), (this.innerSize = 0);
        }
        get(e) {
          const t = this.mapKeyFn(e),
            n = this.inner[t];
          if (void 0 !== n) for (const [r, i] of n) if (this.equalsFn(r, e)) return i;
        }
        has(e) {
          return void 0 !== this.get(e);
        }
        set(e, t) {
          const n = this.mapKeyFn(e),
            r = this.inner[n];
          if (void 0 === r) return (this.inner[n] = [[e, t]]), void this.innerSize++;
          for (let i = 0; i < r.length; i++) if (this.equalsFn(r[i][0], e)) return void (r[i] = [e, t]);
          r.push([e, t]), this.innerSize++;
        }
        delete(e) {
          const t = this.mapKeyFn(e),
            n = this.inner[t];
          if (void 0 === n) return !1;
          for (let r = 0; r < n.length; r++)
            if (this.equalsFn(n[r][0], e)) return 1 === n.length ? delete this.inner[t] : n.splice(r, 1), this.innerSize--, !0;
          return !1;
        }
        forEach(e) {
          Sc(this.inner, (t, n) => {
            for (const [r, i] of n) e(r, i);
          });
        }
        isEmpty() {
          return Ec(this.inner);
        }
        size() {
          return this.innerSize;
        }
      }
      const od = new Tc(pl.comparator);
      function ld() {
        return od;
      }
      const cd = new Tc(pl.comparator);
      function ud() {
        let e = cd;
        for (var t = arguments.length, n = new Array(t), r = 0; r < t; r++) n[r] = arguments[r];
        for (const i of n) e = e.insert(i.key, i);
        return e;
      }
      function dd(e) {
        let t = cd;
        return e.forEach((e, n) => (t = t.insert(e, n.overlayedDocument))), t;
      }
      function hd() {
        return pd();
      }
      function fd() {
        return pd();
      }
      function pd() {
        return new ad(
          (e) => e.toString(),
          (e, t) => e.isEqual(t),
        );
      }
      const md = new Tc(pl.comparator),
        gd = new xc(pl.comparator);
      function vd() {
        let e = gd;
        for (var t = arguments.length, n = new Array(t), r = 0; r < t; r++) n[r] = arguments[r];
        for (const i of n) e = e.add(i);
        return e;
      }
      const yd = new xc(sl);
      function wd() {
        return yd;
      }
      function bd(e, t) {
        if (e.useProto3Json) {
          if (isNaN(t)) return { doubleValue: 'NaN' };
          if (t === 1 / 0) return { doubleValue: 'Infinity' };
          if (t === -1 / 0) return { doubleValue: '-Infinity' };
        }
        return { doubleValue: Bl(t) ? '-0' : t };
      }
      function Sd(e) {
        return { integerValue: '' + e };
      }
      function Ed(e, t) {
        return ql(t) ? Sd(t) : bd(e, t);
      }
      class Td {
        constructor() {
          this._ = void 0;
        }
      }
      function _d(e, t, n) {
        return e instanceof kd
          ? (function (e, t) {
              const n = {
                fields: {
                  __type__: { stringValue: 'server_timestamp' },
                  __local_write_time__: { timestampValue: { seconds: e.seconds, nanos: e.nanoseconds } },
                },
              };
              return t && Mc(t) && (t = Fc(t)), t && (n.fields.__previous_value__ = t), { mapValue: n };
            })(n, t)
          : e instanceof Cd
            ? Nd(e, t)
            : e instanceof Pd
              ? Dd(e, t)
              : (function (e, t) {
                  const n = xd(e, t),
                    r = Od(n) + Od(e.Pe);
                  return Xc(n) && Xc(e.Pe) ? Sd(r) : bd(e.serializer, r);
                })(e, t);
      }
      function Id(e, t, n) {
        return e instanceof Cd ? Nd(e, t) : e instanceof Pd ? Dd(e, t) : n;
      }
      function xd(e, t) {
        return e instanceof Ad
          ? (function (e) {
              return (
                Xc(e) ||
                (function (e) {
                  return !!e && 'doubleValue' in e;
                })(e)
              );
            })(t)
            ? t
            : { integerValue: 0 }
          : null;
      }
      class kd extends Td {}
      class Cd extends Td {
        constructor(e) {
          super(), (this.elements = e);
        }
      }
      function Nd(e, t) {
        const n = Ld(t);
        for (const r of e.elements) n.some((e) => Gc(e, r)) || n.push(r);
        return { arrayValue: { values: n } };
      }
      class Pd extends Td {
        constructor(e) {
          super(), (this.elements = e);
        }
      }
      function Dd(e, t) {
        let n = Ld(t);
        for (const r of e.elements) n = n.filter((e) => !Gc(e, r));
        return { arrayValue: { values: n } };
      }
      class Ad extends Td {
        constructor(e, t) {
          super(), (this.serializer = e), (this.Pe = t);
        }
      }
      function Od(e) {
        return Lc(e.integerValue || e.doubleValue);
      }
      function Ld(e) {
        return $c(e) && e.arrayValue.values ? e.arrayValue.values.slice() : [];
      }
      class Rd {
        constructor(e, t) {
          (this.field = e), (this.transform = t);
        }
      }
      class Md {
        constructor(e, t) {
          (this.version = e), (this.transformResults = t);
        }
      }
      class Fd {
        constructor(e, t) {
          (this.updateTime = e), (this.exists = t);
        }
        static none() {
          return new Fd();
        }
        static exists(e) {
          return new Fd(void 0, e);
        }
        static updateTime(e) {
          return new Fd(e);
        }
        get isNone() {
          return void 0 === this.updateTime && void 0 === this.exists;
        }
        isEqual(e) {
          return (
            this.exists === e.exists &&
            (this.updateTime ? !!e.updateTime && this.updateTime.isEqual(e.updateTime) : !e.updateTime)
          );
        }
      }
      function jd(e, t) {
        return void 0 !== e.updateTime
          ? t.isFoundDocument() && t.version.isEqual(e.updateTime)
          : void 0 === e.exists || e.exists === t.isFoundDocument();
      }
      class Ud {}
      function Vd(e, t) {
        if (!e.hasLocalMutations || (t && 0 === t.fields.length)) return null;
        if (null === t) return e.isNoDocument() ? new Jd(e.key, Fd.none()) : new Hd(e.key, e.data, Fd.none());
        {
          const n = e.data,
            r = lu.empty();
          let i = new xc(fl.comparator);
          for (let e of t.fields)
            if (!i.has(e)) {
              let t = n.field(e);
              null === t && e.length > 1 && ((e = e.popLast()), (t = n.field(e))),
                null === t ? r.delete(e) : r.set(e, t),
                (i = i.add(e));
            }
          return new Kd(e.key, r, new Nc(i.toArray()), Fd.none());
        }
      }
      function zd(e, t, n) {
        e instanceof Hd
          ? (function (e, t, n) {
              const r = e.value.clone(),
                i = Qd(e.fieldTransforms, t, n.transformResults);
              r.setAll(i), t.convertToFoundDocument(n.version, r).setHasCommittedMutations();
            })(e, t, n)
          : e instanceof Kd
            ? (function (e, t, n) {
                if (!jd(e.precondition, t)) return void t.convertToUnknownDocument(n.version);
                const r = Qd(e.fieldTransforms, t, n.transformResults),
                  i = t.data;
                i.setAll(Wd(e)), i.setAll(r), t.convertToFoundDocument(n.version, i).setHasCommittedMutations();
              })(e, t, n)
            : (function (e, t, n) {
                t.convertToNoDocument(n.version).setHasCommittedMutations();
              })(0, t, n);
      }
      function Bd(e, t, n, r) {
        return e instanceof Hd
          ? (function (e, t, n, r) {
              if (!jd(e.precondition, t)) return n;
              const i = e.value.clone(),
                s = Yd(e.fieldTransforms, r, t);
              return i.setAll(s), t.convertToFoundDocument(t.version, i).setHasLocalMutations(), null;
            })(e, t, n, r)
          : e instanceof Kd
            ? (function (e, t, n, r) {
                if (!jd(e.precondition, t)) return n;
                const i = Yd(e.fieldTransforms, r, t),
                  s = t.data;
                return (
                  s.setAll(Wd(e)),
                  s.setAll(i),
                  t.convertToFoundDocument(t.version, s).setHasLocalMutations(),
                  null === n ? null : n.unionWith(e.fieldMask.fields).unionWith(e.fieldTransforms.map((e) => e.field))
                );
              })(e, t, n, r)
            : (function (e, t, n) {
                return jd(e.precondition, t) ? (t.convertToNoDocument(t.version).setHasLocalMutations(), null) : n;
              })(e, t, n);
      }
      function qd(e, t) {
        let n = null;
        for (const r of e.fieldTransforms) {
          const e = t.data.field(r.field),
            i = xd(r.transform, e || null);
          null != i && (null === n && (n = lu.empty()), n.set(r.field, i));
        }
        return n || null;
      }
      function Gd(e, t) {
        return (
          e.type === t.type &&
          !!e.key.isEqual(t.key) &&
          !!e.precondition.isEqual(t.precondition) &&
          !!(function (e, t) {
            return (
              (void 0 === e && void 0 === t) ||
              (!(!e || !t) &&
                al(e, t, (e, t) =>
                  (function (e, t) {
                    return (
                      e.field.isEqual(t.field) &&
                      (function (e, t) {
                        return (e instanceof Cd && t instanceof Cd) || (e instanceof Pd && t instanceof Pd)
                          ? al(e.elements, t.elements, Gc)
                          : e instanceof Ad && t instanceof Ad
                            ? Gc(e.Pe, t.Pe)
                            : e instanceof kd && t instanceof kd;
                      })(e.transform, t.transform)
                    );
                  })(e, t),
                ))
            );
          })(e.fieldTransforms, t.fieldTransforms) &&
          (0 === e.type ? e.value.isEqual(t.value) : 1 !== e.type || (e.data.isEqual(t.data) && e.fieldMask.isEqual(t.fieldMask)))
        );
      }
      class Hd extends Ud {
        constructor(e, t, n) {
          let r = arguments.length > 3 && void 0 !== arguments[3] ? arguments[3] : [];
          super(), (this.key = e), (this.value = t), (this.precondition = n), (this.fieldTransforms = r), (this.type = 0);
        }
        getFieldMask() {
          return null;
        }
      }
      class Kd extends Ud {
        constructor(e, t, n, r) {
          let i = arguments.length > 4 && void 0 !== arguments[4] ? arguments[4] : [];
          super(),
            (this.key = e),
            (this.data = t),
            (this.fieldMask = n),
            (this.precondition = r),
            (this.fieldTransforms = i),
            (this.type = 1);
        }
        getFieldMask() {
          return this.fieldMask;
        }
      }
      function Wd(e) {
        const t = new Map();
        return (
          e.fieldMask.fields.forEach((n) => {
            if (!n.isEmpty()) {
              const r = e.data.field(n);
              t.set(n, r);
            }
          }),
          t
        );
      }
      function Qd(e, t, n) {
        const r = new Map();
        Go(e.length === n.length);
        for (let i = 0; i < n.length; i++) {
          const s = e[i],
            a = s.transform,
            o = t.data.field(s.field);
          r.set(s.field, Id(a, o, n[i]));
        }
        return r;
      }
      function Yd(e, t, n) {
        const r = new Map();
        for (const i of e) {
          const e = i.transform,
            s = n.data.field(i.field);
          r.set(i.field, _d(e, s, t));
        }
        return r;
      }
      class Jd extends Ud {
        constructor(e, t) {
          super(), (this.key = e), (this.precondition = t), (this.type = 2), (this.fieldTransforms = []);
        }
        getFieldMask() {
          return null;
        }
      }
      class Xd extends Ud {
        constructor(e, t) {
          super(), (this.key = e), (this.precondition = t), (this.type = 3), (this.fieldTransforms = []);
        }
        getFieldMask() {
          return null;
        }
      }
      class $d {
        constructor(e, t, n, r) {
          (this.batchId = e), (this.localWriteTime = t), (this.baseMutations = n), (this.mutations = r);
        }
        applyToRemoteDocument(e, t) {
          const n = t.mutationResults;
          for (let r = 0; r < this.mutations.length; r++) {
            const t = this.mutations[r];
            t.key.isEqual(e.key) && zd(t, e, n[r]);
          }
        }
        applyToLocalView(e, t) {
          for (const n of this.baseMutations) n.key.isEqual(e.key) && (t = Bd(n, e, t, this.localWriteTime));
          for (const n of this.mutations) n.key.isEqual(e.key) && (t = Bd(n, e, t, this.localWriteTime));
          return t;
        }
        applyToLocalDocumentSet(e, t) {
          const n = fd();
          return (
            this.mutations.forEach((r) => {
              const i = e.get(r.key),
                s = i.overlayedDocument;
              let a = this.applyToLocalView(s, i.mutatedFields);
              a = t.has(r.key) ? null : a;
              const o = Vd(s, a);
              null !== o && n.set(r.key, o), s.isValidDocument() || s.convertToNoDocument(cl.min());
            }),
            n
          );
        }
        keys() {
          return this.mutations.reduce((e, t) => e.add(t.key), vd());
        }
        isEqual(e) {
          return (
            this.batchId === e.batchId &&
            al(this.mutations, e.mutations, (e, t) => Gd(e, t)) &&
            al(this.baseMutations, e.baseMutations, (e, t) => Gd(e, t))
          );
        }
      }
      class Zd {
        constructor(e, t, n, r) {
          (this.batch = e), (this.commitVersion = t), (this.mutationResults = n), (this.docVersions = r);
        }
        static from(e, t, n) {
          Go(e.mutations.length === n.length);
          let r = md;
          const i = e.mutations;
          for (let s = 0; s < i.length; s++) r = r.insert(i[s].key, n[s].version);
          return new Zd(e, t, n, r);
        }
      }
      class eh {
        constructor(e, t) {
          (this.largestBatchId = e), (this.mutation = t);
        }
        getKey() {
          return this.mutation.key;
        }
        isEqual(e) {
          return null !== e && this.mutation === e.mutation;
        }
        toString() {
          return 'Overlay{\n      largestBatchId: '
            .concat(this.largestBatchId, ',\n      mutation: ')
            .concat(this.mutation.toString(), '\n    }');
        }
      }
      class th {
        constructor(e, t) {
          (this.count = e), (this.unchangedNames = t);
        }
      }
      var nh, rh;
      function ih(e) {
        switch (e) {
          default:
            return qo();
          case Ko.CANCELLED:
          case Ko.UNKNOWN:
          case Ko.DEADLINE_EXCEEDED:
          case Ko.RESOURCE_EXHAUSTED:
          case Ko.INTERNAL:
          case Ko.UNAVAILABLE:
          case Ko.UNAUTHENTICATED:
            return !1;
          case Ko.INVALID_ARGUMENT:
          case Ko.NOT_FOUND:
          case Ko.ALREADY_EXISTS:
          case Ko.PERMISSION_DENIED:
          case Ko.FAILED_PRECONDITION:
          case Ko.ABORTED:
          case Ko.OUT_OF_RANGE:
          case Ko.UNIMPLEMENTED:
          case Ko.DATA_LOSS:
            return !0;
        }
      }
      function sh(e) {
        if (void 0 === e) return Vo('GRPC error has no .code'), Ko.UNKNOWN;
        switch (e) {
          case nh.OK:
            return Ko.OK;
          case nh.CANCELLED:
            return Ko.CANCELLED;
          case nh.UNKNOWN:
            return Ko.UNKNOWN;
          case nh.DEADLINE_EXCEEDED:
            return Ko.DEADLINE_EXCEEDED;
          case nh.RESOURCE_EXHAUSTED:
            return Ko.RESOURCE_EXHAUSTED;
          case nh.INTERNAL:
            return Ko.INTERNAL;
          case nh.UNAVAILABLE:
            return Ko.UNAVAILABLE;
          case nh.UNAUTHENTICATED:
            return Ko.UNAUTHENTICATED;
          case nh.INVALID_ARGUMENT:
            return Ko.INVALID_ARGUMENT;
          case nh.NOT_FOUND:
            return Ko.NOT_FOUND;
          case nh.ALREADY_EXISTS:
            return Ko.ALREADY_EXISTS;
          case nh.PERMISSION_DENIED:
            return Ko.PERMISSION_DENIED;
          case nh.FAILED_PRECONDITION:
            return Ko.FAILED_PRECONDITION;
          case nh.ABORTED:
            return Ko.ABORTED;
          case nh.OUT_OF_RANGE:
            return Ko.OUT_OF_RANGE;
          case nh.UNIMPLEMENTED:
            return Ko.UNIMPLEMENTED;
          case nh.DATA_LOSS:
            return Ko.DATA_LOSS;
          default:
            return qo();
        }
      }
      ((rh = nh || (nh = {}))[(rh.OK = 0)] = 'OK'),
        (rh[(rh.CANCELLED = 1)] = 'CANCELLED'),
        (rh[(rh.UNKNOWN = 2)] = 'UNKNOWN'),
        (rh[(rh.INVALID_ARGUMENT = 3)] = 'INVALID_ARGUMENT'),
        (rh[(rh.DEADLINE_EXCEEDED = 4)] = 'DEADLINE_EXCEEDED'),
        (rh[(rh.NOT_FOUND = 5)] = 'NOT_FOUND'),
        (rh[(rh.ALREADY_EXISTS = 6)] = 'ALREADY_EXISTS'),
        (rh[(rh.PERMISSION_DENIED = 7)] = 'PERMISSION_DENIED'),
        (rh[(rh.UNAUTHENTICATED = 16)] = 'UNAUTHENTICATED'),
        (rh[(rh.RESOURCE_EXHAUSTED = 8)] = 'RESOURCE_EXHAUSTED'),
        (rh[(rh.FAILED_PRECONDITION = 9)] = 'FAILED_PRECONDITION'),
        (rh[(rh.ABORTED = 10)] = 'ABORTED'),
        (rh[(rh.OUT_OF_RANGE = 11)] = 'OUT_OF_RANGE'),
        (rh[(rh.UNIMPLEMENTED = 12)] = 'UNIMPLEMENTED'),
        (rh[(rh.INTERNAL = 13)] = 'INTERNAL'),
        (rh[(rh.UNAVAILABLE = 14)] = 'UNAVAILABLE'),
        (rh[(rh.DATA_LOSS = 15)] = 'DATA_LOSS');
      let ah = null;
      function oh() {
        return new TextEncoder();
      }
      const lh = new wo([4294967295, 4294967295], 0);
      function ch(e) {
        const t = oh().encode(e),
          n = new bo();
        return n.update(t), new Uint8Array(n.digest());
      }
      function uh(e) {
        const t = new DataView(e.buffer),
          n = t.getUint32(0, !0),
          r = t.getUint32(4, !0),
          i = t.getUint32(8, !0),
          s = t.getUint32(12, !0);
        return [new wo([n, r], 0), new wo([i, s], 0)];
      }
      class dh {
        constructor(e, t, n) {
          if (((this.bitmap = e), (this.padding = t), (this.hashCount = n), t < 0 || t >= 8))
            throw new hh('Invalid padding: '.concat(t));
          if (n < 0) throw new hh('Invalid hash count: '.concat(n));
          if (e.length > 0 && 0 === this.hashCount) throw new hh('Invalid hash count: '.concat(n));
          if (0 === e.length && 0 !== t) throw new hh('Invalid padding when bitmap length is 0: '.concat(t));
          (this.Ie = 8 * e.length - t), (this.Te = wo.fromNumber(this.Ie));
        }
        Ee(e, t, n) {
          let r = e.add(t.multiply(wo.fromNumber(n)));
          return 1 === r.compare(lh) && (r = new wo([r.getBits(0), r.getBits(1)], 0)), r.modulo(this.Te).toNumber();
        }
        de(e) {
          return 0 != (this.bitmap[Math.floor(e / 8)] & (1 << e % 8));
        }
        mightContain(e) {
          if (0 === this.Ie) return !1;
          const t = ch(e),
            [n, r] = uh(t);
          for (let i = 0; i < this.hashCount; i++) {
            const e = this.Ee(n, r, i);
            if (!this.de(e)) return !1;
          }
          return !0;
        }
        static create(e, t, n) {
          const r = e % 8 == 0 ? 0 : 8 - (e % 8),
            i = new Uint8Array(Math.ceil(e / 8)),
            s = new dh(i, r, t);
          return n.forEach((e) => s.insert(e)), s;
        }
        insert(e) {
          if (0 === this.Ie) return;
          const t = ch(e),
            [n, r] = uh(t);
          for (let i = 0; i < this.hashCount; i++) {
            const e = this.Ee(n, r, i);
            this.Ae(e);
          }
        }
        Ae(e) {
          const t = Math.floor(e / 8),
            n = e % 8;
          this.bitmap[t] |= 1 << n;
        }
      }
      class hh extends Error {
        constructor() {
          super(...arguments), (this.name = 'BloomFilterError');
        }
      }
      class fh {
        constructor(e, t, n, r, i) {
          (this.snapshotVersion = e),
            (this.targetChanges = t),
            (this.targetMismatches = n),
            (this.documentUpdates = r),
            (this.resolvedLimboDocuments = i);
        }
        static createSynthesizedRemoteEventForCurrentChange(e, t, n) {
          const r = new Map();
          return r.set(e, ph.createSynthesizedTargetChangeForCurrentChange(e, t, n)), new fh(cl.min(), r, new Tc(sl), ld(), vd());
        }
      }
      class ph {
        constructor(e, t, n, r, i) {
          (this.resumeToken = e),
            (this.current = t),
            (this.addedDocuments = n),
            (this.modifiedDocuments = r),
            (this.removedDocuments = i);
        }
        static createSynthesizedTargetChangeForCurrentChange(e, t, n) {
          return new ph(n, t, vd(), vd(), vd());
        }
      }
      class mh {
        constructor(e, t, n, r) {
          (this.Re = e), (this.removedTargetIds = t), (this.key = n), (this.Ve = r);
        }
      }
      class gh {
        constructor(e, t) {
          (this.targetId = e), (this.me = t);
        }
      }
      class vh {
        constructor(e, t) {
          let n = arguments.length > 2 && void 0 !== arguments[2] ? arguments[2] : Dc.EMPTY_BYTE_STRING,
            r = arguments.length > 3 && void 0 !== arguments[3] ? arguments[3] : null;
          (this.state = e), (this.targetIds = t), (this.resumeToken = n), (this.cause = r);
        }
      }
      class yh {
        constructor() {
          (this.fe = 0), (this.ge = Sh()), (this.pe = Dc.EMPTY_BYTE_STRING), (this.ye = !1), (this.we = !0);
        }
        get current() {
          return this.ye;
        }
        get resumeToken() {
          return this.pe;
        }
        get Se() {
          return 0 !== this.fe;
        }
        get be() {
          return this.we;
        }
        De(e) {
          e.approximateByteSize() > 0 && ((this.we = !0), (this.pe = e));
        }
        Ce() {
          let e = vd(),
            t = vd(),
            n = vd();
          return (
            this.ge.forEach((r, i) => {
              switch (i) {
                case 0:
                  e = e.add(r);
                  break;
                case 2:
                  t = t.add(r);
                  break;
                case 1:
                  n = n.add(r);
                  break;
                default:
                  qo();
              }
            }),
            new ph(this.pe, this.ye, e, t, n)
          );
        }
        ve() {
          (this.we = !1), (this.ge = Sh());
        }
        Fe(e, t) {
          (this.we = !0), (this.ge = this.ge.insert(e, t));
        }
        Me(e) {
          (this.we = !0), (this.ge = this.ge.remove(e));
        }
        xe() {
          this.fe += 1;
        }
        Oe() {
          (this.fe -= 1), Go(this.fe >= 0);
        }
        Ne() {
          (this.we = !0), (this.ye = !0);
        }
      }
      class wh {
        constructor(e) {
          (this.Le = e), (this.Be = new Map()), (this.ke = ld()), (this.qe = bh()), (this.Qe = new Tc(sl));
        }
        Ke(e) {
          for (const t of e.Re) e.Ve && e.Ve.isFoundDocument() ? this.$e(t, e.Ve) : this.Ue(t, e.key, e.Ve);
          for (const t of e.removedTargetIds) this.Ue(t, e.key, e.Ve);
        }
        We(e) {
          this.forEachTarget(e, (t) => {
            const n = this.Ge(t);
            switch (e.state) {
              case 0:
                this.ze(t) && n.De(e.resumeToken);
                break;
              case 1:
                n.Oe(), n.Se || n.ve(), n.De(e.resumeToken);
                break;
              case 2:
                n.Oe(), n.Se || this.removeTarget(t);
                break;
              case 3:
                this.ze(t) && (n.Ne(), n.De(e.resumeToken));
                break;
              case 4:
                this.ze(t) && (this.je(t), n.De(e.resumeToken));
                break;
              default:
                qo();
            }
          });
        }
        forEachTarget(e, t) {
          e.targetIds.length > 0
            ? e.targetIds.forEach(t)
            : this.Be.forEach((e, n) => {
                this.ze(n) && t(n);
              });
        }
        He(e) {
          const t = e.targetId,
            n = e.me.count,
            r = this.Je(t);
          if (r) {
            const i = r.target;
            if (Uu(i))
              if (0 === n) {
                const e = new pl(i.path);
                this.Ue(t, e, uu.newNoDocument(e, cl.min()));
              } else Go(1 === n);
            else {
              const r = this.Ye(t);
              if (r !== n) {
                const n = this.Ze(e),
                  i = n ? this.Xe(n, e, r) : 1;
                if (0 !== i) {
                  this.je(t);
                  const e = 2 === i ? 'TargetPurposeExistenceFilterMismatchBloom' : 'TargetPurposeExistenceFilterMismatch';
                  this.Qe = this.Qe.insert(t, e);
                }
                null == ah ||
                  ah.et(
                    (function (e, t, n, r, i) {
                      var s, a, o, l, c, u;
                      const d = {
                          localCacheCount: e,
                          existenceFilterCount: t.count,
                          databaseId: n.database,
                          projectId: n.projectId,
                        },
                        h = t.unchangedNames;
                      return (
                        h &&
                          (d.bloomFilter = {
                            applied: 0 === i,
                            hashCount: null !== (s = null == h ? void 0 : h.hashCount) && void 0 !== s ? s : 0,
                            bitmapLength:
                              null !==
                                (l =
                                  null === (o = null === (a = null == h ? void 0 : h.bits) || void 0 === a ? void 0 : a.bitmap) ||
                                  void 0 === o
                                    ? void 0
                                    : o.length) && void 0 !== l
                                ? l
                                : 0,
                            padding:
                              null !== (u = null === (c = null == h ? void 0 : h.bits) || void 0 === c ? void 0 : c.padding) &&
                              void 0 !== u
                                ? u
                                : 0,
                            mightContain: (e) => {
                              var t;
                              return null !== (t = null == r ? void 0 : r.mightContain(e)) && void 0 !== t && t;
                            },
                          }),
                        d
                      );
                    })(r, e.me, this.Le.tt(), n, i),
                  );
              }
            }
          }
        }
        Ze(e) {
          const t = e.me.unchangedNames;
          if (!t || !t.bits) return null;
          const {
            bits: { bitmap: n = '', padding: r = 0 },
            hashCount: i = 0,
          } = t;
          let s, a;
          try {
            s = Rc(n).toUint8Array();
          } catch (e) {
            if (e instanceof Pc)
              return (
                zo(
                  'Decoding the base64 bloom filter in existence filter failed (' +
                    e.message +
                    '); ignoring the bloom filter and falling back to full re-query.',
                ),
                null
              );
            throw e;
          }
          try {
            a = new dh(s, r, i);
          } catch (e) {
            return zo(e instanceof hh ? 'BloomFilter error: ' : 'Applying bloom filter failed: ', e), null;
          }
          return 0 === a.Ie ? null : a;
        }
        Xe(e, t, n) {
          return t.me.count === n - this.nt(e, t.targetId) ? 0 : 2;
        }
        nt(e, t) {
          const n = this.Le.getRemoteKeysForTarget(t);
          let r = 0;
          return (
            n.forEach((n) => {
              const i = this.Le.tt(),
                s = 'projects/'
                  .concat(i.projectId, '/databases/')
                  .concat(i.database, '/documents/')
                  .concat(n.path.canonicalString());
              e.mightContain(s) || (this.Ue(t, n, null), r++);
            }),
            r
          );
        }
        rt(e) {
          const t = new Map();
          this.Be.forEach((n, r) => {
            const i = this.Je(r);
            if (i) {
              if (n.current && Uu(i.target)) {
                const t = new pl(i.target.path);
                null !== this.ke.get(t) || this.it(r, t) || this.Ue(r, t, uu.newNoDocument(t, e));
              }
              n.be && (t.set(r, n.Ce()), n.ve());
            }
          });
          let n = vd();
          this.qe.forEach((e, t) => {
            let r = !0;
            t.forEachWhile((e) => {
              const t = this.Je(e);
              return !t || 'TargetPurposeLimboResolution' === t.purpose || ((r = !1), !1);
            }),
              r && (n = n.add(e));
          }),
            this.ke.forEach((t, n) => n.setReadTime(e));
          const r = new fh(e, t, this.Qe, this.ke, n);
          return (this.ke = ld()), (this.qe = bh()), (this.Qe = new Tc(sl)), r;
        }
        $e(e, t) {
          if (!this.ze(e)) return;
          const n = this.it(e, t.key) ? 2 : 0;
          this.Ge(e).Fe(t.key, n), (this.ke = this.ke.insert(t.key, t)), (this.qe = this.qe.insert(t.key, this.st(t.key).add(e)));
        }
        Ue(e, t, n) {
          if (!this.ze(e)) return;
          const r = this.Ge(e);
          this.it(e, t) ? r.Fe(t, 1) : r.Me(t),
            (this.qe = this.qe.insert(t, this.st(t).delete(e))),
            n && (this.ke = this.ke.insert(t, n));
        }
        removeTarget(e) {
          this.Be.delete(e);
        }
        Ye(e) {
          const t = this.Ge(e).Ce();
          return this.Le.getRemoteKeysForTarget(e).size + t.addedDocuments.size - t.removedDocuments.size;
        }
        xe(e) {
          this.Ge(e).xe();
        }
        Ge(e) {
          let t = this.Be.get(e);
          return t || ((t = new yh()), this.Be.set(e, t)), t;
        }
        st(e) {
          let t = this.qe.get(e);
          return t || ((t = new xc(sl)), (this.qe = this.qe.insert(e, t))), t;
        }
        ze(e) {
          const t = null !== this.Je(e);
          return t || Uo('WatchChangeAggregator', 'Detected inactive target', e), t;
        }
        Je(e) {
          const t = this.Be.get(e);
          return t && t.Se ? null : this.Le.ot(e);
        }
        je(e) {
          this.Be.set(e, new yh()),
            this.Le.getRemoteKeysForTarget(e).forEach((t) => {
              this.Ue(e, t, null);
            });
        }
        it(e, t) {
          return this.Le.getRemoteKeysForTarget(e).has(t);
        }
      }
      function bh() {
        return new Tc(pl.comparator);
      }
      function Sh() {
        return new Tc(pl.comparator);
      }
      const Eh = { asc: 'ASCENDING', desc: 'DESCENDING' },
        Th = {
          '<': 'LESS_THAN',
          '<=': 'LESS_THAN_OR_EQUAL',
          '>': 'GREATER_THAN',
          '>=': 'GREATER_THAN_OR_EQUAL',
          '==': 'EQUAL',
          '!=': 'NOT_EQUAL',
          'array-contains': 'ARRAY_CONTAINS',
          in: 'IN',
          'not-in': 'NOT_IN',
          'array-contains-any': 'ARRAY_CONTAINS_ANY',
        },
        _h = { and: 'AND', or: 'OR' };
      class Ih {
        constructor(e, t) {
          (this.databaseId = e), (this.useProto3Json = t);
        }
      }
      function xh(e, t) {
        return e.useProto3Json || zl(t) ? t : { value: t };
      }
      function kh(e, t) {
        return e.useProto3Json
          ? ''
              .concat(new Date(1e3 * t.seconds).toISOString().replace(/\.\d*/, '').replace('Z', ''), '.')
              .concat(('000000000' + t.nanoseconds).slice(-9), 'Z')
          : { seconds: '' + t.seconds, nanos: t.nanoseconds };
      }
      function Ch(e, t) {
        return e.useProto3Json ? t.toBase64() : t.toUint8Array();
      }
      function Nh(e, t) {
        return kh(e, t.toTimestamp());
      }
      function Ph(e) {
        return (
          Go(!!e),
          cl.fromTimestamp(
            (function (e) {
              const t = Oc(e);
              return new ll(t.seconds, t.nanos);
            })(e),
          )
        );
      }
      function Dh(e, t) {
        return Ah(e, t).canonicalString();
      }
      function Ah(e, t) {
        const n = (function (e) {
          return new dl(['projects', e.projectId, 'databases', e.database]);
        })(e).child('documents');
        return void 0 === t ? n : n.child(t);
      }
      function Oh(e) {
        const t = dl.fromString(e);
        return Go(tf(t)), t;
      }
      function Lh(e, t) {
        return Dh(e.databaseId, t.path);
      }
      function Rh(e, t) {
        const n = Oh(t);
        if (n.get(1) !== e.databaseId.projectId)
          throw new Wo(
            Ko.INVALID_ARGUMENT,
            'Tried to deserialize key from different project: ' + n.get(1) + ' vs ' + e.databaseId.projectId,
          );
        if (n.get(3) !== e.databaseId.database)
          throw new Wo(
            Ko.INVALID_ARGUMENT,
            'Tried to deserialize key from different database: ' + n.get(3) + ' vs ' + e.databaseId.database,
          );
        return new pl(Uh(n));
      }
      function Mh(e, t) {
        return Dh(e.databaseId, t);
      }
      function Fh(e) {
        const t = Oh(e);
        return 4 === t.length ? dl.emptyPath() : Uh(t);
      }
      function jh(e) {
        return new dl(['projects', e.databaseId.projectId, 'databases', e.databaseId.database]).canonicalString();
      }
      function Uh(e) {
        return Go(e.length > 4 && 'documents' === e.get(4)), e.popFirst(5);
      }
      function Vh(e, t, n) {
        return { name: Lh(e, t), fields: n.value.mapValue.fields };
      }
      function zh(e, t, n) {
        const r = Rh(e, t.name),
          i = Ph(t.updateTime),
          s = t.createTime ? Ph(t.createTime) : cl.min(),
          a = new lu({ mapValue: { fields: t.fields } }),
          o = uu.newFoundDocument(r, i, s, a);
        return n && o.setHasCommittedMutations(), n ? o.setHasCommittedMutations() : o;
      }
      function Bh(e, t) {
        let n;
        if (t instanceof Hd) n = { update: Vh(e, t.key, t.value) };
        else if (t instanceof Jd) n = { delete: Lh(e, t.key) };
        else if (t instanceof Kd) n = { update: Vh(e, t.key, t.data), updateMask: ef(t.fieldMask) };
        else {
          if (!(t instanceof Xd)) return qo();
          n = { verify: Lh(e, t.key) };
        }
        return (
          t.fieldTransforms.length > 0 &&
            (n.updateTransforms = t.fieldTransforms.map((e) =>
              (function (e, t) {
                const n = t.transform;
                if (n instanceof kd) return { fieldPath: t.field.canonicalString(), setToServerValue: 'REQUEST_TIME' };
                if (n instanceof Cd)
                  return { fieldPath: t.field.canonicalString(), appendMissingElements: { values: n.elements } };
                if (n instanceof Pd) return { fieldPath: t.field.canonicalString(), removeAllFromArray: { values: n.elements } };
                if (n instanceof Ad) return { fieldPath: t.field.canonicalString(), increment: n.Pe };
                throw qo();
              })(0, e),
            )),
          t.precondition.isNone ||
            (n.currentDocument = (function (e, t) {
              return void 0 !== t.updateTime
                ? { updateTime: Nh(e, t.updateTime) }
                : void 0 !== t.exists
                  ? { exists: t.exists }
                  : qo();
            })(e, t.precondition)),
          n
        );
      }
      function qh(e, t) {
        const n = t.currentDocument
            ? (function (e) {
                return void 0 !== e.updateTime
                  ? Fd.updateTime(Ph(e.updateTime))
                  : void 0 !== e.exists
                    ? Fd.exists(e.exists)
                    : Fd.none();
              })(t.currentDocument)
            : Fd.none(),
          r = t.updateTransforms
            ? t.updateTransforms.map((t) =>
                (function (e, t) {
                  let n = null;
                  if ('setToServerValue' in t) Go('REQUEST_TIME' === t.setToServerValue), (n = new kd());
                  else if ('appendMissingElements' in t) {
                    const e = t.appendMissingElements.values || [];
                    n = new Cd(e);
                  } else if ('removeAllFromArray' in t) {
                    const e = t.removeAllFromArray.values || [];
                    n = new Pd(e);
                  } else 'increment' in t ? (n = new Ad(e, t.increment)) : qo();
                  const r = fl.fromServerFormat(t.fieldPath);
                  return new Rd(r, n);
                })(e, t),
              )
            : [];
        if (t.update) {
          t.update.name;
          const i = Rh(e, t.update.name),
            s = new lu({ mapValue: { fields: t.update.fields } });
          if (t.updateMask) {
            const e = (function (e) {
              const t = e.fieldPaths || [];
              return new Nc(t.map((e) => fl.fromServerFormat(e)));
            })(t.updateMask);
            return new Kd(i, s, e, n, r);
          }
          return new Hd(i, s, n, r);
        }
        if (t.delete) {
          const r = Rh(e, t.delete);
          return new Jd(r, n);
        }
        if (t.verify) {
          const r = Rh(e, t.verify);
          return new Xd(r, n);
        }
        return qo();
      }
      function Gh(e, t) {
        return { documents: [Mh(e, t.path)] };
      }
      function Hh(e, t) {
        const n = { structuredQuery: {} },
          r = t.path;
        let i;
        null !== t.collectionGroup
          ? ((i = r), (n.structuredQuery.from = [{ collectionId: t.collectionGroup, allDescendants: !0 }]))
          : ((i = r.popLast()), (n.structuredQuery.from = [{ collectionId: r.lastSegment() }])),
          (n.parent = Mh(e, i));
        const s = (function (e) {
          if (0 !== e.length) return Zh(yu.create(e, 'and'));
        })(t.filters);
        s && (n.structuredQuery.where = s);
        const a = (function (e) {
          if (0 !== e.length)
            return e.map((e) =>
              (function (e) {
                return { field: Xh(e.field), direction: Qh(e.dir) };
              })(e),
            );
        })(t.orderBy);
        a && (n.structuredQuery.orderBy = a);
        const o = xh(e, t.limit);
        return (
          null !== o && (n.structuredQuery.limit = o),
          t.startAt &&
            (n.structuredQuery.startAt = (function (e) {
              return { before: e.inclusive, values: e.position };
            })(t.startAt)),
          t.endAt &&
            (n.structuredQuery.endAt = (function (e) {
              return { before: !e.inclusive, values: e.position };
            })(t.endAt)),
          { _t: n, parent: i }
        );
      }
      function Kh(e) {
        let t = Fh(e.parent);
        const n = e.structuredQuery,
          r = n.from ? n.from.length : 0;
        let i = null;
        if (r > 0) {
          Go(1 === r);
          const e = n.from[0];
          e.allDescendants ? (i = e.collectionId) : (t = t.child(e.collectionId));
        }
        let s = [];
        n.where &&
          (s = (function (e) {
            const t = Wh(e);
            return t instanceof yu && Su(t) ? t.getFilters() : [t];
          })(n.where));
        let a = [];
        n.orderBy &&
          (a = (function (e) {
            return e.map((e) =>
              (function (e) {
                return new pu(
                  $h(e.field),
                  (function (e) {
                    switch (e) {
                      case 'ASCENDING':
                        return 'asc';
                      case 'DESCENDING':
                        return 'desc';
                      default:
                        return;
                    }
                  })(e.direction),
                );
              })(e),
            );
          })(n.orderBy));
        let o = null;
        n.limit &&
          (o = (function (e) {
            let t;
            return (t = 'object' == typeof e ? e.value : e), zl(t) ? null : t;
          })(n.limit));
        let l = null;
        n.startAt &&
          (l = (function (e) {
            const t = !!e.before,
              n = e.values || [];
            return new du(n, t);
          })(n.startAt));
        let c = null;
        return (
          n.endAt &&
            (c = (function (e) {
              const t = !e.before,
                n = e.values || [];
              return new du(n, t);
            })(n.endAt)),
          Gu(t, i, a, s, o, 'F', l, c)
        );
      }
      function Wh(e) {
        return void 0 !== e.unaryFilter
          ? (function (e) {
              switch (e.unaryFilter.op) {
                case 'IS_NAN':
                  const t = $h(e.unaryFilter.field);
                  return vu.create(t, '==', { doubleValue: NaN });
                case 'IS_NULL':
                  const n = $h(e.unaryFilter.field);
                  return vu.create(n, '==', { nullValue: 'NULL_VALUE' });
                case 'IS_NOT_NAN':
                  const r = $h(e.unaryFilter.field);
                  return vu.create(r, '!=', { doubleValue: NaN });
                case 'IS_NOT_NULL':
                  const i = $h(e.unaryFilter.field);
                  return vu.create(i, '!=', { nullValue: 'NULL_VALUE' });
                default:
                  return qo();
              }
            })(e)
          : void 0 !== e.fieldFilter
            ? (function (e) {
                return vu.create(
                  $h(e.fieldFilter.field),
                  (function (e) {
                    switch (e) {
                      case 'EQUAL':
                        return '==';
                      case 'NOT_EQUAL':
                        return '!=';
                      case 'GREATER_THAN':
                        return '>';
                      case 'GREATER_THAN_OR_EQUAL':
                        return '>=';
                      case 'LESS_THAN':
                        return '<';
                      case 'LESS_THAN_OR_EQUAL':
                        return '<=';
                      case 'ARRAY_CONTAINS':
                        return 'array-contains';
                      case 'IN':
                        return 'in';
                      case 'NOT_IN':
                        return 'not-in';
                      case 'ARRAY_CONTAINS_ANY':
                        return 'array-contains-any';
                      default:
                        return qo();
                    }
                  })(e.fieldFilter.op),
                  e.fieldFilter.value,
                );
              })(e)
            : void 0 !== e.compositeFilter
              ? (function (e) {
                  return yu.create(
                    e.compositeFilter.filters.map((e) => Wh(e)),
                    (function (e) {
                      switch (e) {
                        case 'AND':
                          return 'and';
                        case 'OR':
                          return 'or';
                        default:
                          return qo();
                      }
                    })(e.compositeFilter.op),
                  );
                })(e)
              : qo();
      }
      function Qh(e) {
        return Eh[e];
      }
      function Yh(e) {
        return Th[e];
      }
      function Jh(e) {
        return _h[e];
      }
      function Xh(e) {
        return { fieldPath: e.canonicalString() };
      }
      function $h(e) {
        return fl.fromServerFormat(e.fieldPath);
      }
      function Zh(e) {
        return e instanceof vu
          ? (function (e) {
              if ('==' === e.op) {
                if (eu(e.value)) return { unaryFilter: { field: Xh(e.field), op: 'IS_NAN' } };
                if (Zc(e.value)) return { unaryFilter: { field: Xh(e.field), op: 'IS_NULL' } };
              } else if ('!=' === e.op) {
                if (eu(e.value)) return { unaryFilter: { field: Xh(e.field), op: 'IS_NOT_NAN' } };
                if (Zc(e.value)) return { unaryFilter: { field: Xh(e.field), op: 'IS_NOT_NULL' } };
              }
              return { fieldFilter: { field: Xh(e.field), op: Yh(e.op), value: e.value } };
            })(e)
          : e instanceof yu
            ? (function (e) {
                const t = e.getFilters().map((e) => Zh(e));
                return 1 === t.length ? t[0] : { compositeFilter: { op: Jh(e.op), filters: t } };
              })(e)
            : qo();
      }
      function ef(e) {
        const t = [];
        return e.fields.forEach((e) => t.push(e.canonicalString())), { fieldPaths: t };
      }
      function tf(e) {
        return e.length >= 4 && 'projects' === e.get(0) && 'databases' === e.get(2);
      }
      class nf {
        constructor(e, t, n, r) {
          let i = arguments.length > 4 && void 0 !== arguments[4] ? arguments[4] : cl.min(),
            s = arguments.length > 5 && void 0 !== arguments[5] ? arguments[5] : cl.min(),
            a = arguments.length > 6 && void 0 !== arguments[6] ? arguments[6] : Dc.EMPTY_BYTE_STRING,
            o = arguments.length > 7 && void 0 !== arguments[7] ? arguments[7] : null;
          (this.target = e),
            (this.targetId = t),
            (this.purpose = n),
            (this.sequenceNumber = r),
            (this.snapshotVersion = i),
            (this.lastLimboFreeSnapshotVersion = s),
            (this.resumeToken = a),
            (this.expectedCount = o);
        }
        withSequenceNumber(e) {
          return new nf(
            this.target,
            this.targetId,
            this.purpose,
            e,
            this.snapshotVersion,
            this.lastLimboFreeSnapshotVersion,
            this.resumeToken,
            this.expectedCount,
          );
        }
        withResumeToken(e, t) {
          return new nf(
            this.target,
            this.targetId,
            this.purpose,
            this.sequenceNumber,
            t,
            this.lastLimboFreeSnapshotVersion,
            e,
            null,
          );
        }
        withExpectedCount(e) {
          return new nf(
            this.target,
            this.targetId,
            this.purpose,
            this.sequenceNumber,
            this.snapshotVersion,
            this.lastLimboFreeSnapshotVersion,
            this.resumeToken,
            e,
          );
        }
        withLastLimboFreeSnapshotVersion(e) {
          return new nf(
            this.target,
            this.targetId,
            this.purpose,
            this.sequenceNumber,
            this.snapshotVersion,
            e,
            this.resumeToken,
            this.expectedCount,
          );
        }
      }
      class rf {
        constructor(e) {
          this.ct = e;
        }
      }
      function sf(e, t) {
        const n = t.key,
          r = {
            prefixPath: n.getCollectionPath().popLast().toArray(),
            collectionGroup: n.collectionGroup,
            documentId: n.path.lastSegment(),
            readTime: af(t.readTime),
            hasCommittedMutations: t.hasCommittedMutations,
          };
        if (t.isFoundDocument())
          r.document = (function (e, t) {
            return {
              name: Lh(e, t.key),
              fields: t.data.value.mapValue.fields,
              updateTime: kh(e, t.version.toTimestamp()),
              createTime: kh(e, t.createTime.toTimestamp()),
            };
          })(e.ct, t);
        else if (t.isNoDocument()) r.noDocument = { path: n.path.toArray(), readTime: of(t.version) };
        else {
          if (!t.isUnknownDocument()) return qo();
          r.unknownDocument = { path: n.path.toArray(), version: of(t.version) };
        }
        return r;
      }
      function af(e) {
        const t = e.toTimestamp();
        return [t.seconds, t.nanoseconds];
      }
      function of(e) {
        const t = e.toTimestamp();
        return { seconds: t.seconds, nanoseconds: t.nanoseconds };
      }
      function lf(e) {
        const t = new ll(e.seconds, e.nanoseconds);
        return cl.fromTimestamp(t);
      }
      function cf(e, t) {
        const n = (t.baseMutations || []).map((t) => qh(e.ct, t));
        for (let s = 0; s < t.mutations.length - 1; ++s) {
          const e = t.mutations[s];
          if (s + 1 < t.mutations.length && void 0 !== t.mutations[s + 1].transform) {
            const n = t.mutations[s + 1];
            (e.updateTransforms = n.transform.fieldTransforms), t.mutations.splice(s + 1, 1), ++s;
          }
        }
        const r = t.mutations.map((t) => qh(e.ct, t)),
          i = ll.fromMillis(t.localWriteTimeMs);
        return new $d(t.batchId, i, n, r);
      }
      function uf(e) {
        const t = lf(e.readTime),
          n = void 0 !== e.lastLimboFreeSnapshotVersion ? lf(e.lastLimboFreeSnapshotVersion) : cl.min();
        let r;
        return (
          (r = (function (e) {
            return void 0 !== e.documents;
          })(e.query)
            ? (function (e) {
                return Go(1 === e.documents.length), Yu(Hu(Fh(e.documents[0])));
              })(e.query)
            : (function (e) {
                return Yu(Kh(e));
              })(e.query)),
          new nf(r, e.targetId, 'TargetPurposeListen', e.lastListenSequenceNumber, t, n, Dc.fromBase64String(e.resumeToken))
        );
      }
      function df(e, t) {
        const n = of(t.snapshotVersion),
          r = of(t.lastLimboFreeSnapshotVersion);
        let i;
        i = Uu(t.target) ? Gh(e.ct, t.target) : Hh(e.ct, t.target)._t;
        const s = t.resumeToken.toBase64();
        return {
          targetId: t.targetId,
          canonicalId: Fu(t.target),
          readTime: n,
          resumeToken: s,
          lastListenSequenceNumber: t.sequenceNumber,
          lastLimboFreeSnapshotVersion: r,
          query: i,
        };
      }
      function hf(e) {
        const t = Kh({ parent: e.parent, structuredQuery: e.structuredQuery });
        return 'LAST' === e.limitType ? $u(t, t.limit, 'L') : t;
      }
      function ff(e, t) {
        return new eh(t.largestBatchId, qh(e.ct, t.overlayMutation));
      }
      function pf(e, t) {
        const n = t.path.lastSegment();
        return [e, Gl(t.path.popLast()), n];
      }
      function mf(e, t, n, r) {
        return {
          indexId: e,
          uid: t,
          sequenceNumber: n,
          readTime: of(r.readTime),
          documentKey: Gl(r.documentKey.path),
          largestBatchId: r.largestBatchId,
        };
      }
      class gf {
        getBundleMetadata(e, t) {
          return vf(e)
            .get(t)
            .next((e) => {
              if (e)
                return (function (e) {
                  return { id: e.bundleId, createTime: lf(e.createTime), version: e.version };
                })(e);
            });
        }
        saveBundleMetadata(e, t) {
          return vf(e).put(
            (function (e) {
              return { bundleId: e.id, createTime: of(Ph(e.createTime)), version: e.version };
            })(t),
          );
        }
        getNamedQuery(e, t) {
          return yf(e)
            .get(t)
            .next((e) => {
              if (e)
                return (function (e) {
                  return { name: e.name, query: hf(e.bundledQuery), readTime: lf(e.readTime) };
                })(e);
            });
        }
        saveNamedQuery(e, t) {
          return yf(e).put(
            (function (e) {
              return { name: e.name, readTime: of(Ph(e.readTime)), bundledQuery: e.bundledQuery };
            })(t),
          );
        }
      }
      function vf(e) {
        return wc(e, 'bundles');
      }
      function yf(e) {
        return wc(e, 'namedQueries');
      }
      class wf {
        constructor(e, t) {
          (this.serializer = e), (this.userId = t);
        }
        static lt(e, t) {
          const n = t.uid || '';
          return new wf(e, n);
        }
        getOverlay(e, t) {
          return bf(e)
            .get(pf(this.userId, t))
            .next((e) => (e ? ff(this.serializer, e) : null));
        }
        getOverlays(e, t) {
          const n = hd();
          return kl
            .forEach(t, (t) =>
              this.getOverlay(e, t).next((e) => {
                null !== e && n.set(t, e);
              }),
            )
            .next(() => n);
        }
        saveOverlays(e, t, n) {
          const r = [];
          return (
            n.forEach((n, i) => {
              const s = new eh(t, i);
              r.push(this.ht(e, s));
            }),
            kl.waitFor(r)
          );
        }
        removeOverlaysForBatchId(e, t, n) {
          const r = new Set();
          t.forEach((e) => r.add(Gl(e.getCollectionPath())));
          const i = [];
          return (
            r.forEach((t) => {
              const r = IDBKeyRange.bound([this.userId, t, n], [this.userId, t, n + 1], !1, !0);
              i.push(bf(e).j('collectionPathOverlayIndex', r));
            }),
            kl.waitFor(i)
          );
        }
        getOverlaysForCollection(e, t, n) {
          const r = hd(),
            i = Gl(t),
            s = IDBKeyRange.bound([this.userId, i, n], [this.userId, i, Number.POSITIVE_INFINITY], !0);
          return bf(e)
            .U('collectionPathOverlayIndex', s)
            .next((e) => {
              for (const t of e) {
                const e = ff(this.serializer, t);
                r.set(e.getKey(), e);
              }
              return r;
            });
        }
        getOverlaysForCollectionGroup(e, t, n, r) {
          const i = hd();
          let s;
          const a = IDBKeyRange.bound([this.userId, t, n], [this.userId, t, Number.POSITIVE_INFINITY], !0);
          return bf(e)
            .J({ index: 'collectionGroupOverlayIndex', range: a }, (e, t, n) => {
              const a = ff(this.serializer, t);
              i.size() < r || a.largestBatchId === s ? (i.set(a.getKey(), a), (s = a.largestBatchId)) : n.done();
            })
            .next(() => i);
        }
        ht(e, t) {
          return bf(e).put(
            (function (e, t, n) {
              const [r, i, s] = pf(t, n.mutation.key);
              return {
                userId: t,
                collectionPath: i,
                documentId: s,
                collectionGroup: n.mutation.key.getCollectionGroup(),
                largestBatchId: n.largestBatchId,
                overlayMutation: Bh(e.ct, n.mutation),
              };
            })(this.serializer, this.userId, t),
          );
        }
      }
      function bf(e) {
        return wc(e, 'documentOverlays');
      }
      class Sf {
        constructor() {}
        Pt(e, t) {
          this.It(e, t), t.Tt();
        }
        It(e, t) {
          if ('nullValue' in e) this.Et(t, 5);
          else if ('booleanValue' in e) this.Et(t, 10), t.dt(e.booleanValue ? 1 : 0);
          else if ('integerValue' in e) this.Et(t, 15), t.dt(Lc(e.integerValue));
          else if ('doubleValue' in e) {
            const n = Lc(e.doubleValue);
            isNaN(n) ? this.Et(t, 13) : (this.Et(t, 15), Bl(n) ? t.dt(0) : t.dt(n));
          } else if ('timestampValue' in e) {
            let n = e.timestampValue;
            this.Et(t, 20), 'string' == typeof n && (n = Oc(n)), t.At(''.concat(n.seconds || '')), t.dt(n.nanos || 0);
          } else if ('stringValue' in e) this.Rt(e.stringValue, t), this.Vt(t);
          else if ('bytesValue' in e) this.Et(t, 30), t.ft(Rc(e.bytesValue)), this.Vt(t);
          else if ('referenceValue' in e) this.gt(e.referenceValue, t);
          else if ('geoPointValue' in e) {
            const n = e.geoPointValue;
            this.Et(t, 45), t.dt(n.latitude || 0), t.dt(n.longitude || 0);
          } else
            'mapValue' in e
              ? ru(e)
                ? this.Et(t, Number.MAX_SAFE_INTEGER)
                : (this.yt(e.mapValue, t), this.Vt(t))
              : 'arrayValue' in e
                ? (this.wt(e.arrayValue, t), this.Vt(t))
                : qo();
        }
        Rt(e, t) {
          this.Et(t, 25), this.St(e, t);
        }
        St(e, t) {
          t.At(e);
        }
        yt(e, t) {
          const n = e.fields || {};
          this.Et(t, 55);
          for (const r of Object.keys(n)) this.Rt(r, t), this.It(n[r], t);
        }
        wt(e, t) {
          const n = e.values || [];
          this.Et(t, 50);
          for (const r of n) this.It(r, t);
        }
        gt(e, t) {
          this.Et(t, 37),
            pl.fromName(e).path.forEach((e) => {
              this.Et(t, 60), this.St(e, t);
            });
        }
        Et(e, t) {
          e.dt(t);
        }
        Vt(e) {
          e.dt(2);
        }
      }
      function Ef(e) {
        if (0 === e) return 8;
        let t = 0;
        return e >> 4 == 0 && ((t += 4), (e <<= 4)), e >> 6 == 0 && ((t += 2), (e <<= 2)), e >> 7 == 0 && (t += 1), t;
      }
      function Tf(e) {
        const t =
          64 -
          (function (e) {
            let t = 0;
            for (let n = 0; n < 8; ++n) {
              const r = Ef(255 & e[n]);
              if (((t += r), 8 !== r)) break;
            }
            return t;
          })(e);
        return Math.ceil(t / 8);
      }
      Sf.bt = new Sf();
      class _f {
        constructor() {
          (this.buffer = new Uint8Array(1024)), (this.position = 0);
        }
        Dt(e) {
          const t = e[Symbol.iterator]();
          let n = t.next();
          for (; !n.done; ) this.Ct(n.value), (n = t.next());
          this.vt();
        }
        Ft(e) {
          const t = e[Symbol.iterator]();
          let n = t.next();
          for (; !n.done; ) this.Mt(n.value), (n = t.next());
          this.xt();
        }
        Ot(e) {
          for (const t of e) {
            const e = t.charCodeAt(0);
            if (e < 128) this.Ct(e);
            else if (e < 2048) this.Ct(960 | (e >>> 6)), this.Ct(128 | (63 & e));
            else if (t < '\ud800' || '\udbff' < t)
              this.Ct(480 | (e >>> 12)), this.Ct(128 | (63 & (e >>> 6))), this.Ct(128 | (63 & e));
            else {
              const e = t.codePointAt(0);
              this.Ct(240 | (e >>> 18)),
                this.Ct(128 | (63 & (e >>> 12))),
                this.Ct(128 | (63 & (e >>> 6))),
                this.Ct(128 | (63 & e));
            }
          }
          this.vt();
        }
        Nt(e) {
          for (const t of e) {
            const e = t.charCodeAt(0);
            if (e < 128) this.Mt(e);
            else if (e < 2048) this.Mt(960 | (e >>> 6)), this.Mt(128 | (63 & e));
            else if (t < '\ud800' || '\udbff' < t)
              this.Mt(480 | (e >>> 12)), this.Mt(128 | (63 & (e >>> 6))), this.Mt(128 | (63 & e));
            else {
              const e = t.codePointAt(0);
              this.Mt(240 | (e >>> 18)),
                this.Mt(128 | (63 & (e >>> 12))),
                this.Mt(128 | (63 & (e >>> 6))),
                this.Mt(128 | (63 & e));
            }
          }
          this.xt();
        }
        Lt(e) {
          const t = this.Bt(e),
            n = Tf(t);
          this.kt(1 + n), (this.buffer[this.position++] = 255 & n);
          for (let r = t.length - n; r < t.length; ++r) this.buffer[this.position++] = 255 & t[r];
        }
        qt(e) {
          const t = this.Bt(e),
            n = Tf(t);
          this.kt(1 + n), (this.buffer[this.position++] = ~(255 & n));
          for (let r = t.length - n; r < t.length; ++r) this.buffer[this.position++] = ~(255 & t[r]);
        }
        Qt() {
          this.Kt(255), this.Kt(255);
        }
        $t() {
          this.Ut(255), this.Ut(255);
        }
        reset() {
          this.position = 0;
        }
        seed(e) {
          this.kt(e.length), this.buffer.set(e, this.position), (this.position += e.length);
        }
        Wt() {
          return this.buffer.slice(0, this.position);
        }
        Bt(e) {
          const t = (function (e) {
              const t = new DataView(new ArrayBuffer(8));
              return t.setFloat64(0, e, !1), new Uint8Array(t.buffer);
            })(e),
            n = 0 != (128 & t[0]);
          t[0] ^= n ? 255 : 128;
          for (let r = 1; r < t.length; ++r) t[r] ^= n ? 255 : 0;
          return t;
        }
        Ct(e) {
          const t = 255 & e;
          0 === t ? (this.Kt(0), this.Kt(255)) : 255 === t ? (this.Kt(255), this.Kt(0)) : this.Kt(t);
        }
        Mt(e) {
          const t = 255 & e;
          0 === t ? (this.Ut(0), this.Ut(255)) : 255 === t ? (this.Ut(255), this.Ut(0)) : this.Ut(e);
        }
        vt() {
          this.Kt(0), this.Kt(1);
        }
        xt() {
          this.Ut(0), this.Ut(1);
        }
        Kt(e) {
          this.kt(1), (this.buffer[this.position++] = e);
        }
        Ut(e) {
          this.kt(1), (this.buffer[this.position++] = ~e);
        }
        kt(e) {
          const t = e + this.position;
          if (t <= this.buffer.length) return;
          let n = 2 * this.buffer.length;
          n < t && (n = t);
          const r = new Uint8Array(n);
          r.set(this.buffer), (this.buffer = r);
        }
      }
      class If {
        constructor(e) {
          this.Gt = e;
        }
        ft(e) {
          this.Gt.Dt(e);
        }
        At(e) {
          this.Gt.Ot(e);
        }
        dt(e) {
          this.Gt.Lt(e);
        }
        Tt() {
          this.Gt.Qt();
        }
      }
      class xf {
        constructor(e) {
          this.Gt = e;
        }
        ft(e) {
          this.Gt.Ft(e);
        }
        At(e) {
          this.Gt.Nt(e);
        }
        dt(e) {
          this.Gt.qt(e);
        }
        Tt() {
          this.Gt.$t();
        }
      }
      class kf {
        constructor() {
          (this.Gt = new _f()), (this.zt = new If(this.Gt)), (this.jt = new xf(this.Gt));
        }
        seed(e) {
          this.Gt.seed(e);
        }
        Ht(e) {
          return 0 === e ? this.zt : this.jt;
        }
        Wt() {
          return this.Gt.Wt();
        }
        reset() {
          this.Gt.reset();
        }
      }
      class Cf {
        constructor(e, t, n, r) {
          (this.indexId = e), (this.documentKey = t), (this.arrayValue = n), (this.directionalValue = r);
        }
        Jt() {
          const e = this.directionalValue.length,
            t = 0 === e || 255 === this.directionalValue[e - 1] ? e + 1 : e,
            n = new Uint8Array(t);
          return (
            n.set(this.directionalValue, 0),
            t !== e ? n.set([0], this.directionalValue.length) : ++n[n.length - 1],
            new Cf(this.indexId, this.documentKey, this.arrayValue, n)
          );
        }
      }
      function Nf(e, t) {
        let n = e.indexId - t.indexId;
        return 0 !== n
          ? n
          : ((n = Pf(e.arrayValue, t.arrayValue)),
            0 !== n
              ? n
              : ((n = Pf(e.directionalValue, t.directionalValue)), 0 !== n ? n : pl.comparator(e.documentKey, t.documentKey)));
      }
      function Pf(e, t) {
        for (let n = 0; n < e.length && n < t.length; ++n) {
          const r = e[n] - t[n];
          if (0 !== r) return r;
        }
        return e.length - t.length;
      }
      class Df {
        constructor(e) {
          (this.Yt = new xc((e, t) => fl.comparator(e.field, t.field))),
            (this.collectionId = null != e.collectionGroup ? e.collectionGroup : e.path.lastSegment()),
            (this.Zt = e.orderBy),
            (this.Xt = []);
          for (const t of e.filters) {
            const e = t;
            e.isInequality() ? (this.Yt = this.Yt.add(e)) : this.Xt.push(e);
          }
        }
        get en() {
          return this.Yt.size > 1;
        }
        tn(e) {
          if ((Go(e.collectionGroup === this.collectionId), this.en)) return !1;
          const t = gl(e);
          if (void 0 !== t && !this.nn(t)) return !1;
          const n = vl(e);
          let r = new Set(),
            i = 0,
            s = 0;
          for (; i < n.length && this.nn(n[i]); ++i) r = r.add(n[i].fieldPath.canonicalString());
          if (i === n.length) return !0;
          if (this.Yt.size > 0) {
            const e = this.Yt.getIterator().getNext();
            if (!r.has(e.field.canonicalString())) {
              const t = n[i];
              if (!this.rn(e, t) || !this.sn(this.Zt[s++], t)) return !1;
            }
            ++i;
          }
          for (; i < n.length; ++i) {
            const e = n[i];
            if (s >= this.Zt.length || !this.sn(this.Zt[s++], e)) return !1;
          }
          return !0;
        }
        on() {
          if (this.en) return null;
          let e = new xc(fl.comparator);
          const t = [];
          for (const n of this.Xt)
            if (!n.field.isKeyField())
              if ('array-contains' === n.op || 'array-contains-any' === n.op) t.push(new yl(n.field, 2));
              else {
                if (e.has(n.field)) continue;
                (e = e.add(n.field)), t.push(new yl(n.field, 0));
              }
          for (const n of this.Zt)
            n.field.isKeyField() || e.has(n.field) || ((e = e.add(n.field)), t.push(new yl(n.field, 'asc' === n.dir ? 0 : 1)));
          return new ml(ml.UNKNOWN_ID, this.collectionId, t, wl.empty());
        }
        nn(e) {
          for (const t of this.Xt) if (this.rn(t, e)) return !0;
          return !1;
        }
        rn(e, t) {
          if (void 0 === e || !e.field.isEqual(t.fieldPath)) return !1;
          const n = 'array-contains' === e.op || 'array-contains-any' === e.op;
          return (2 === t.kind) === n;
        }
        sn(e, t) {
          return !!e.field.isEqual(t.fieldPath) && ((0 === t.kind && 'asc' === e.dir) || (1 === t.kind && 'desc' === e.dir));
        }
      }
      function Af(e) {
        var t, n;
        if ((Go(e instanceof vu || e instanceof yu), e instanceof vu)) {
          if (e instanceof Au) {
            const r =
              (null === (n = null === (t = e.value.arrayValue) || void 0 === t ? void 0 : t.values) || void 0 === n
                ? void 0
                : n.map((t) => vu.create(e.field, '==', t))) || [];
            return yu.create(r, 'or');
          }
          return e;
        }
        const r = e.filters.map((e) => Af(e));
        return yu.create(r, e.op);
      }
      function Of(e) {
        if (0 === e.getFilters().length) return [];
        const t = Ff(Af(e));
        return Go(Mf(t)), Lf(t) || Rf(t) ? [t] : t.getFilters();
      }
      function Lf(e) {
        return e instanceof vu;
      }
      function Rf(e) {
        return e instanceof yu && Su(e);
      }
      function Mf(e) {
        return (
          Lf(e) ||
          Rf(e) ||
          (function (e) {
            if (e instanceof yu && bu(e)) {
              for (const t of e.getFilters()) if (!Lf(t) && !Rf(t)) return !1;
              return !0;
            }
            return !1;
          })(e)
        );
      }
      function Ff(e) {
        if ((Go(e instanceof vu || e instanceof yu), e instanceof vu)) return e;
        if (1 === e.filters.length) return Ff(e.filters[0]);
        const t = e.filters.map((e) => Ff(e));
        let n = yu.create(t, e.op);
        return (
          (n = Vf(n)),
          Mf(n) ? n : (Go(n instanceof yu), Go(wu(n)), Go(n.filters.length > 1), n.filters.reduce((e, t) => jf(e, t)))
        );
      }
      function jf(e, t) {
        let n;
        return (
          Go(e instanceof vu || e instanceof yu),
          Go(t instanceof vu || t instanceof yu),
          (n =
            e instanceof vu
              ? t instanceof vu
                ? (function (e, t) {
                    return yu.create([e, t], 'and');
                  })(e, t)
                : Uf(e, t)
              : t instanceof vu
                ? Uf(t, e)
                : (function (e, t) {
                    if ((Go(e.filters.length > 0 && t.filters.length > 0), wu(e) && wu(t))) return Iu(e, t.getFilters());
                    const n = bu(e) ? e : t,
                      r = bu(e) ? t : e,
                      i = n.filters.map((e) => jf(e, r));
                    return yu.create(i, 'or');
                  })(e, t)),
          Vf(n)
        );
      }
      function Uf(e, t) {
        if (wu(t)) return Iu(t, e.getFilters());
        {
          const n = t.filters.map((t) => jf(e, t));
          return yu.create(n, 'or');
        }
      }
      function Vf(e) {
        if ((Go(e instanceof vu || e instanceof yu), e instanceof vu)) return e;
        const t = e.getFilters();
        if (1 === t.length) return Vf(t[0]);
        if (Eu(e)) return e;
        const n = t.map((e) => Vf(e)),
          r = [];
        return (
          n.forEach((t) => {
            t instanceof vu ? r.push(t) : t instanceof yu && (t.op === e.op ? r.push(...t.filters) : r.push(t));
          }),
          1 === r.length ? r[0] : yu.create(r, e.op)
        );
      }
      class zf {
        constructor() {
          this._n = new Bf();
        }
        addToCollectionParentIndex(e, t) {
          return this._n.add(t), kl.resolve();
        }
        getCollectionParents(e, t) {
          return kl.resolve(this._n.getEntries(t));
        }
        addFieldIndex(e, t) {
          return kl.resolve();
        }
        deleteFieldIndex(e, t) {
          return kl.resolve();
        }
        deleteAllFieldIndexes(e) {
          return kl.resolve();
        }
        createTargetIndexes(e, t) {
          return kl.resolve();
        }
        getDocumentsMatchingTarget(e, t) {
          return kl.resolve(null);
        }
        getIndexType(e, t) {
          return kl.resolve(0);
        }
        getFieldIndexes(e, t) {
          return kl.resolve([]);
        }
        getNextCollectionGroupToUpdate(e) {
          return kl.resolve(null);
        }
        getMinOffset(e, t) {
          return kl.resolve(El.min());
        }
        getMinOffsetFromCollectionGroup(e, t) {
          return kl.resolve(El.min());
        }
        updateCollectionGroup(e, t, n) {
          return kl.resolve();
        }
        updateIndexEntries(e, t) {
          return kl.resolve();
        }
      }
      class Bf {
        constructor() {
          this.index = {};
        }
        add(e) {
          const t = e.lastSegment(),
            n = e.popLast(),
            r = this.index[t] || new xc(dl.comparator),
            i = !r.has(n);
          return (this.index[t] = r.add(n)), i;
        }
        has(e) {
          const t = e.lastSegment(),
            n = e.popLast(),
            r = this.index[t];
          return r && r.has(n);
        }
        getEntries(e) {
          return (this.index[e] || new xc(dl.comparator)).toArray();
        }
      }
      const qf = new Uint8Array(0);
      class Gf {
        constructor(e, t) {
          (this.databaseId = t),
            (this.an = new Bf()),
            (this.un = new ad(
              (e) => Fu(e),
              (e, t) => ju(e, t),
            )),
            (this.uid = e.uid || '');
        }
        addToCollectionParentIndex(e, t) {
          if (!this.an.has(t)) {
            const n = t.lastSegment(),
              r = t.popLast();
            e.addOnCommittedListener(() => {
              this.an.add(t);
            });
            const i = { collectionId: n, parent: Gl(r) };
            return Hf(e).put(i);
          }
          return kl.resolve();
        }
        getCollectionParents(e, t) {
          const n = [],
            r = IDBKeyRange.bound([t, ''], [ol(t), ''], !1, !0);
          return Hf(e)
            .U(r)
            .next((e) => {
              for (const r of e) {
                if (r.collectionId !== t) break;
                n.push(Wl(r.parent));
              }
              return n;
            });
        }
        addFieldIndex(e, t) {
          const n = Wf(e),
            r = (function (e) {
              return {
                indexId: e.indexId,
                collectionGroup: e.collectionGroup,
                fields: e.fields.map((e) => [e.fieldPath.canonicalString(), e.kind]),
              };
            })(t);
          delete r.indexId;
          const i = n.add(r);
          if (t.indexState) {
            const n = Qf(e);
            return i.next((e) => {
              n.put(mf(e, this.uid, t.indexState.sequenceNumber, t.indexState.offset));
            });
          }
          return i.next();
        }
        deleteFieldIndex(e, t) {
          const n = Wf(e),
            r = Qf(e),
            i = Kf(e);
          return n
            .delete(t.indexId)
            .next(() => r.delete(IDBKeyRange.bound([t.indexId], [t.indexId + 1], !1, !0)))
            .next(() => i.delete(IDBKeyRange.bound([t.indexId], [t.indexId + 1], !1, !0)));
        }
        deleteAllFieldIndexes(e) {
          const t = Wf(e),
            n = Kf(e),
            r = Qf(e);
          return t
            .j()
            .next(() => n.j())
            .next(() => r.j());
        }
        createTargetIndexes(e, t) {
          return kl.forEach(this.cn(t), (t) =>
            this.getIndexType(e, t).next((n) => {
              if (0 === n || 1 === n) {
                const n = new Df(t).on();
                if (null != n) return this.addFieldIndex(e, n);
              }
            }),
          );
        }
        getDocumentsMatchingTarget(e, t) {
          const n = Kf(e);
          let r = !0;
          const i = new Map();
          return kl
            .forEach(this.cn(t), (t) =>
              this.ln(e, t).next((e) => {
                r && (r = !!e), i.set(t, e);
              }),
            )
            .next(() => {
              if (r) {
                let e = vd();
                const r = [];
                return kl
                  .forEach(i, (i, s) => {
                    Uo(
                      'IndexedDbIndexManager',
                      'Using index '
                        .concat(
                          (function (e) {
                            return 'id='
                              .concat(e.indexId, '|cg=')
                              .concat(e.collectionGroup, '|f=')
                              .concat(e.fields.map((e) => ''.concat(e.fieldPath, ':').concat(e.kind)).join(','));
                          })(i),
                          ' to execute ',
                        )
                        .concat(Fu(t)),
                    );
                    const a = (function (e, t) {
                        const n = gl(t);
                        if (void 0 === n) return null;
                        for (const r of Vu(e, n.fieldPath))
                          switch (r.op) {
                            case 'array-contains-any':
                              return r.value.arrayValue.values || [];
                            case 'array-contains':
                              return [r.value];
                          }
                        return null;
                      })(s, i),
                      o = (function (e, t) {
                        const n = new Map();
                        for (const r of vl(t))
                          for (const t of Vu(e, r.fieldPath))
                            switch (t.op) {
                              case '==':
                              case 'in':
                                n.set(r.fieldPath.canonicalString(), t.value);
                                break;
                              case 'not-in':
                              case '!=':
                                return n.set(r.fieldPath.canonicalString(), t.value), Array.from(n.values());
                            }
                        return null;
                      })(s, i),
                      l = (function (e, t) {
                        const n = [];
                        let r = !0;
                        for (const i of vl(t)) {
                          const t = 0 === i.kind ? zu(e, i.fieldPath, e.startAt) : Bu(e, i.fieldPath, e.startAt);
                          n.push(t.value), r && (r = t.inclusive);
                        }
                        return new du(n, r);
                      })(s, i),
                      c = (function (e, t) {
                        const n = [];
                        let r = !0;
                        for (const i of vl(t)) {
                          const t = 0 === i.kind ? Bu(e, i.fieldPath, e.endAt) : zu(e, i.fieldPath, e.endAt);
                          n.push(t.value), r && (r = t.inclusive);
                        }
                        return new du(n, r);
                      })(s, i),
                      u = this.hn(i, s, l),
                      d = this.hn(i, s, c),
                      h = this.Pn(i, s, o),
                      f = this.In(i.indexId, a, u, l.inclusive, d, c.inclusive, h);
                    return kl.forEach(f, (i) =>
                      n.G(i, t.limit).next((t) => {
                        t.forEach((t) => {
                          const n = pl.fromSegments(t.documentKey);
                          e.has(n) || ((e = e.add(n)), r.push(n));
                        });
                      }),
                    );
                  })
                  .next(() => r);
              }
              return kl.resolve(null);
            });
        }
        cn(e) {
          let t = this.un.get(e);
          return (
            t ||
            ((t =
              0 === e.filters.length
                ? [e]
                : Of(yu.create(e.filters, 'and')).map((t) =>
                    Mu(e.path, e.collectionGroup, e.orderBy, t.getFilters(), e.limit, e.startAt, e.endAt),
                  )),
            this.un.set(e, t),
            t)
          );
        }
        In(e, t, n, r, i, s, a) {
          const o = (null != t ? t.length : 1) * Math.max(n.length, i.length),
            l = o / (null != t ? t.length : 1),
            c = [];
          for (let u = 0; u < o; ++u) {
            const o = t ? this.Tn(t[u / l]) : qf,
              d = this.En(e, o, n[u % l], r),
              h = this.dn(e, o, i[u % l], s),
              f = a.map((t) => this.En(e, o, t, !0));
            c.push(...this.createRange(d, h, f));
          }
          return c;
        }
        En(e, t, n, r) {
          const i = new Cf(e, pl.empty(), t, n);
          return r ? i : i.Jt();
        }
        dn(e, t, n, r) {
          const i = new Cf(e, pl.empty(), t, n);
          return r ? i.Jt() : i;
        }
        ln(e, t) {
          const n = new Df(t),
            r = null != t.collectionGroup ? t.collectionGroup : t.path.lastSegment();
          return this.getFieldIndexes(e, r).next((e) => {
            let t = null;
            for (const r of e) n.tn(r) && (!t || r.fields.length > t.fields.length) && (t = r);
            return t;
          });
        }
        getIndexType(e, t) {
          let n = 2;
          const r = this.cn(t);
          return kl
            .forEach(r, (t) =>
              this.ln(e, t).next((e) => {
                e
                  ? 0 !== n &&
                    e.fields.length <
                      (function (e) {
                        let t = new xc(fl.comparator),
                          n = !1;
                        for (const r of e.filters)
                          for (const e of r.getFlattenedFilters())
                            e.field.isKeyField() ||
                              ('array-contains' === e.op || 'array-contains-any' === e.op ? (n = !0) : (t = t.add(e.field)));
                        for (const r of e.orderBy) r.field.isKeyField() || (t = t.add(r.field));
                        return t.size + (n ? 1 : 0);
                      })(t) &&
                    (n = 1)
                  : (n = 0);
              }),
            )
            .next(() =>
              (function (e) {
                return null !== e.limit;
              })(t) &&
              r.length > 1 &&
              2 === n
                ? 1
                : n,
            );
        }
        An(e, t) {
          const n = new kf();
          for (const r of vl(e)) {
            const e = t.data.field(r.fieldPath);
            if (null == e) return null;
            const i = n.Ht(r.kind);
            Sf.bt.Pt(e, i);
          }
          return n.Wt();
        }
        Tn(e) {
          const t = new kf();
          return Sf.bt.Pt(e, t.Ht(0)), t.Wt();
        }
        Rn(e, t) {
          const n = new kf();
          return (
            Sf.bt.Pt(
              Jc(this.databaseId, t),
              n.Ht(
                (function (e) {
                  const t = vl(e);
                  return 0 === t.length ? 0 : t[t.length - 1].kind;
                })(e),
              ),
            ),
            n.Wt()
          );
        }
        Pn(e, t, n) {
          if (null === n) return [];
          let r = [];
          r.push(new kf());
          let i = 0;
          for (const s of vl(e)) {
            const e = n[i++];
            for (const n of r)
              if (this.Vn(t, s.fieldPath) && $c(e)) r = this.mn(r, s, e);
              else {
                const t = n.Ht(s.kind);
                Sf.bt.Pt(e, t);
              }
          }
          return this.fn(r);
        }
        hn(e, t, n) {
          return this.Pn(e, t, n.position);
        }
        fn(e) {
          const t = [];
          for (let n = 0; n < e.length; ++n) t[n] = e[n].Wt();
          return t;
        }
        mn(e, t, n) {
          const r = [...e],
            i = [];
          for (const s of n.arrayValue.values || [])
            for (const e of r) {
              const n = new kf();
              n.seed(e.Wt()), Sf.bt.Pt(s, n.Ht(t.kind)), i.push(n);
            }
          return i;
        }
        Vn(e, t) {
          return !!e.filters.find((e) => e instanceof vu && e.field.isEqual(t) && ('in' === e.op || 'not-in' === e.op));
        }
        getFieldIndexes(e, t) {
          const n = Wf(e),
            r = Qf(e);
          return (t ? n.U('collectionGroupIndex', IDBKeyRange.bound(t, t)) : n.U()).next((e) => {
            const t = [];
            return kl
              .forEach(e, (e) =>
                r.get([e.indexId, this.uid]).next((n) => {
                  t.push(
                    (function (e, t) {
                      const n = t
                          ? new wl(t.sequenceNumber, new El(lf(t.readTime), new pl(Wl(t.documentKey)), t.largestBatchId))
                          : wl.empty(),
                        r = e.fields.map((e) => {
                          let [t, n] = e;
                          return new yl(fl.fromServerFormat(t), n);
                        });
                      return new ml(e.indexId, e.collectionGroup, r, n);
                    })(e, n),
                  );
                }),
              )
              .next(() => t);
          });
        }
        getNextCollectionGroupToUpdate(e) {
          return this.getFieldIndexes(e).next((e) =>
            0 === e.length
              ? null
              : (e.sort((e, t) => {
                  const n = e.indexState.sequenceNumber - t.indexState.sequenceNumber;
                  return 0 !== n ? n : sl(e.collectionGroup, t.collectionGroup);
                }),
                e[0].collectionGroup),
          );
        }
        updateCollectionGroup(e, t, n) {
          const r = Wf(e),
            i = Qf(e);
          return this.gn(e).next((e) =>
            r
              .U('collectionGroupIndex', IDBKeyRange.bound(t, t))
              .next((t) => kl.forEach(t, (t) => i.put(mf(t.indexId, this.uid, e, n)))),
          );
        }
        updateIndexEntries(e, t) {
          const n = new Map();
          return kl.forEach(t, (t, r) => {
            const i = n.get(t.collectionGroup);
            return (i ? kl.resolve(i) : this.getFieldIndexes(e, t.collectionGroup)).next(
              (i) => (
                n.set(t.collectionGroup, i),
                kl.forEach(i, (n) =>
                  this.pn(e, t, n).next((t) => {
                    const i = this.yn(r, n);
                    return t.isEqual(i) ? kl.resolve() : this.wn(e, r, n, t, i);
                  }),
                )
              ),
            );
          });
        }
        Sn(e, t, n, r) {
          return Kf(e).put({
            indexId: r.indexId,
            uid: this.uid,
            arrayValue: r.arrayValue,
            directionalValue: r.directionalValue,
            orderedDocumentKey: this.Rn(n, t.key),
            documentKey: t.key.path.toArray(),
          });
        }
        bn(e, t, n, r) {
          return Kf(e).delete([r.indexId, this.uid, r.arrayValue, r.directionalValue, this.Rn(n, t.key), t.key.path.toArray()]);
        }
        pn(e, t, n) {
          const r = Kf(e);
          let i = new xc(Nf);
          return r
            .J({ index: 'documentKeyIndex', range: IDBKeyRange.only([n.indexId, this.uid, this.Rn(n, t)]) }, (e, r) => {
              i = i.add(new Cf(n.indexId, t, r.arrayValue, r.directionalValue));
            })
            .next(() => i);
        }
        yn(e, t) {
          let n = new xc(Nf);
          const r = this.An(t, e);
          if (null == r) return n;
          const i = gl(t);
          if (null != i) {
            const s = e.data.field(i.fieldPath);
            if ($c(s)) for (const i of s.arrayValue.values || []) n = n.add(new Cf(t.indexId, e.key, this.Tn(i), r));
          } else n = n.add(new Cf(t.indexId, e.key, qf, r));
          return n;
        }
        wn(e, t, n, r, i) {
          Uo('IndexedDbIndexManager', "Updating index entries for document '%s'", t.key);
          const s = [];
          return (
            (function (e, t, n, r, i) {
              const s = e.getIterator(),
                a = t.getIterator();
              let o = Cc(s),
                l = Cc(a);
              for (; o || l; ) {
                let e = !1,
                  t = !1;
                if (o && l) {
                  const r = n(o, l);
                  r < 0 ? (t = !0) : r > 0 && (e = !0);
                } else null != o ? (t = !0) : (e = !0);
                e ? (r(l), (l = Cc(a))) : t ? (i(o), (o = Cc(s))) : ((o = Cc(s)), (l = Cc(a)));
              }
            })(
              r,
              i,
              Nf,
              (r) => {
                s.push(this.Sn(e, t, n, r));
              },
              (r) => {
                s.push(this.bn(e, t, n, r));
              },
            ),
            kl.waitFor(s)
          );
        }
        gn(e) {
          let t = 1;
          return Qf(e)
            .J(
              { index: 'sequenceNumberIndex', reverse: !0, range: IDBKeyRange.upperBound([this.uid, Number.MAX_SAFE_INTEGER]) },
              (e, n, r) => {
                r.done(), (t = n.sequenceNumber + 1);
              },
            )
            .next(() => t);
        }
        createRange(e, t, n) {
          n = n.sort((e, t) => Nf(e, t)).filter((e, t, n) => !t || 0 !== Nf(e, n[t - 1]));
          const r = [];
          r.push(e);
          for (const s of n) {
            const n = Nf(s, e),
              i = Nf(s, t);
            if (0 === n) r[0] = e.Jt();
            else if (n > 0 && i < 0) r.push(s), r.push(s.Jt());
            else if (i > 0) break;
          }
          r.push(t);
          const i = [];
          for (let s = 0; s < r.length; s += 2) {
            if (this.Dn(r[s], r[s + 1])) return [];
            const e = [r[s].indexId, this.uid, r[s].arrayValue, r[s].directionalValue, qf, []],
              t = [r[s + 1].indexId, this.uid, r[s + 1].arrayValue, r[s + 1].directionalValue, qf, []];
            i.push(IDBKeyRange.bound(e, t));
          }
          return i;
        }
        Dn(e, t) {
          return Nf(e, t) > 0;
        }
        getMinOffsetFromCollectionGroup(e, t) {
          return this.getFieldIndexes(e, t).next(Yf);
        }
        getMinOffset(e, t) {
          return kl.mapArray(this.cn(t), (t) => this.ln(e, t).next((e) => e || qo())).next(Yf);
        }
      }
      function Hf(e) {
        return wc(e, 'collectionParents');
      }
      function Kf(e) {
        return wc(e, 'indexEntries');
      }
      function Wf(e) {
        return wc(e, 'indexConfiguration');
      }
      function Qf(e) {
        return wc(e, 'indexState');
      }
      function Yf(e) {
        Go(0 !== e.length);
        let t = e[0].indexState.offset,
          n = t.largestBatchId;
        for (let r = 1; r < e.length; r++) {
          const i = e[r].indexState.offset;
          Tl(i, t) < 0 && (t = i), n < i.largestBatchId && (n = i.largestBatchId);
        }
        return new El(t.readTime, t.documentKey, n);
      }
      const Jf = { didRun: !1, sequenceNumbersCollected: 0, targetsRemoved: 0, documentsRemoved: 0 };
      class Xf {
        constructor(e, t, n) {
          (this.cacheSizeCollectionThreshold = e), (this.percentileToCollect = t), (this.maximumSequenceNumbersToCollect = n);
        }
        static withCacheSize(e) {
          return new Xf(e, Xf.DEFAULT_COLLECTION_PERCENTILE, Xf.DEFAULT_MAX_SEQUENCE_NUMBERS_TO_COLLECT);
        }
      }
      function $f(e, t, n) {
        const r = e.store('mutations'),
          i = e.store('documentMutations'),
          s = [],
          a = IDBKeyRange.only(n.batchId);
        let o = 0;
        const l = r.J({ range: a }, (e, t, n) => (o++, n.delete()));
        s.push(
          l.next(() => {
            Go(1 === o);
          }),
        );
        const c = [];
        for (const u of n.mutations) {
          const e = Jl(t, u.key.path, n.batchId);
          s.push(i.delete(e)), c.push(u.key);
        }
        return kl.waitFor(s).next(() => c);
      }
      function Zf(e) {
        if (!e) return 0;
        let t;
        if (e.document) t = e.document;
        else if (e.unknownDocument) t = e.unknownDocument;
        else {
          if (!e.noDocument) throw qo();
          t = e.noDocument;
        }
        return JSON.stringify(t).length;
      }
      (Xf.DEFAULT_COLLECTION_PERCENTILE = 10),
        (Xf.DEFAULT_MAX_SEQUENCE_NUMBERS_TO_COLLECT = 1e3),
        (Xf.DEFAULT = new Xf(41943040, Xf.DEFAULT_COLLECTION_PERCENTILE, Xf.DEFAULT_MAX_SEQUENCE_NUMBERS_TO_COLLECT)),
        (Xf.DISABLED = new Xf(-1, 0, 0));
      class ep {
        constructor(e, t, n, r) {
          (this.userId = e), (this.serializer = t), (this.indexManager = n), (this.referenceDelegate = r), (this.Cn = {});
        }
        static lt(e, t, n, r) {
          Go('' !== e.uid);
          const i = e.isAuthenticated() ? e.uid : '';
          return new ep(i, t, n, r);
        }
        checkEmpty(e) {
          let t = !0;
          const n = IDBKeyRange.bound([this.userId, Number.NEGATIVE_INFINITY], [this.userId, Number.POSITIVE_INFINITY]);
          return np(e)
            .J({ index: 'userMutationsIndex', range: n }, (e, n, r) => {
              (t = !1), r.done();
            })
            .next(() => t);
        }
        addMutationBatch(e, t, n, r) {
          const i = rp(e),
            s = np(e);
          return s.add({}).next((a) => {
            Go('number' == typeof a);
            const o = new $d(a, t, n, r),
              l = (function (e, t, n) {
                const r = n.baseMutations.map((t) => Bh(e.ct, t)),
                  i = n.mutations.map((t) => Bh(e.ct, t));
                return {
                  userId: t,
                  batchId: n.batchId,
                  localWriteTimeMs: n.localWriteTime.toMillis(),
                  baseMutations: r,
                  mutations: i,
                };
              })(this.serializer, this.userId, o),
              c = [];
            let u = new xc((e, t) => sl(e.canonicalString(), t.canonicalString()));
            for (const e of r) {
              const t = Jl(this.userId, e.key.path, a);
              (u = u.add(e.key.path.popLast())), c.push(s.put(l)), c.push(i.put(t, Xl));
            }
            return (
              u.forEach((t) => {
                c.push(this.indexManager.addToCollectionParentIndex(e, t));
              }),
              e.addOnCommittedListener(() => {
                this.Cn[a] = o.keys();
              }),
              kl.waitFor(c).next(() => o)
            );
          });
        }
        lookupMutationBatch(e, t) {
          return np(e)
            .get(t)
            .next((e) => (e ? (Go(e.userId === this.userId), cf(this.serializer, e)) : null));
        }
        vn(e, t) {
          return this.Cn[t]
            ? kl.resolve(this.Cn[t])
            : this.lookupMutationBatch(e, t).next((e) => {
                if (e) {
                  const n = e.keys();
                  return (this.Cn[t] = n), n;
                }
                return null;
              });
        }
        getNextMutationBatchAfterBatchId(e, t) {
          const n = t + 1,
            r = IDBKeyRange.lowerBound([this.userId, n]);
          let i = null;
          return np(e)
            .J({ index: 'userMutationsIndex', range: r }, (e, t, r) => {
              t.userId === this.userId && (Go(t.batchId >= n), (i = cf(this.serializer, t))), r.done();
            })
            .next(() => i);
        }
        getHighestUnacknowledgedBatchId(e) {
          const t = IDBKeyRange.upperBound([this.userId, Number.POSITIVE_INFINITY]);
          let n = -1;
          return np(e)
            .J({ index: 'userMutationsIndex', range: t, reverse: !0 }, (e, t, r) => {
              (n = t.batchId), r.done();
            })
            .next(() => n);
        }
        getAllMutationBatches(e) {
          const t = IDBKeyRange.bound([this.userId, -1], [this.userId, Number.POSITIVE_INFINITY]);
          return np(e)
            .U('userMutationsIndex', t)
            .next((e) => e.map((e) => cf(this.serializer, e)));
        }
        getAllMutationBatchesAffectingDocumentKey(e, t) {
          const n = Yl(this.userId, t.path),
            r = IDBKeyRange.lowerBound(n),
            i = [];
          return rp(e)
            .J({ range: r }, (n, r, s) => {
              const [a, o, l] = n,
                c = Wl(o);
              if (a === this.userId && t.path.isEqual(c))
                return np(e)
                  .get(l)
                  .next((e) => {
                    if (!e) throw qo();
                    Go(e.userId === this.userId), i.push(cf(this.serializer, e));
                  });
              s.done();
            })
            .next(() => i);
        }
        getAllMutationBatchesAffectingDocumentKeys(e, t) {
          let n = new xc(sl);
          const r = [];
          return (
            t.forEach((t) => {
              const i = Yl(this.userId, t.path),
                s = IDBKeyRange.lowerBound(i),
                a = rp(e).J({ range: s }, (e, r, i) => {
                  const [s, a, o] = e,
                    l = Wl(a);
                  s === this.userId && t.path.isEqual(l) ? (n = n.add(o)) : i.done();
                });
              r.push(a);
            }),
            kl.waitFor(r).next(() => this.Fn(e, n))
          );
        }
        getAllMutationBatchesAffectingQuery(e, t) {
          const n = t.path,
            r = n.length + 1,
            i = Yl(this.userId, n),
            s = IDBKeyRange.lowerBound(i);
          let a = new xc(sl);
          return rp(e)
            .J({ range: s }, (e, t, i) => {
              const [s, o, l] = e,
                c = Wl(o);
              s === this.userId && n.isPrefixOf(c) ? c.length === r && (a = a.add(l)) : i.done();
            })
            .next(() => this.Fn(e, a));
        }
        Fn(e, t) {
          const n = [],
            r = [];
          return (
            t.forEach((t) => {
              r.push(
                np(e)
                  .get(t)
                  .next((e) => {
                    if (null === e) throw qo();
                    Go(e.userId === this.userId), n.push(cf(this.serializer, e));
                  }),
              );
            }),
            kl.waitFor(r).next(() => n)
          );
        }
        removeMutationBatch(e, t) {
          return $f(e._e, this.userId, t).next(
            (n) => (
              e.addOnCommittedListener(() => {
                this.Mn(t.batchId);
              }),
              kl.forEach(n, (t) => this.referenceDelegate.markPotentiallyOrphaned(e, t))
            ),
          );
        }
        Mn(e) {
          delete this.Cn[e];
        }
        performConsistencyCheck(e) {
          return this.checkEmpty(e).next((t) => {
            if (!t) return kl.resolve();
            const n = IDBKeyRange.lowerBound(
                (function (e) {
                  return [e];
                })(this.userId),
              ),
              r = [];
            return rp(e)
              .J({ range: n }, (e, t, n) => {
                if (e[0] === this.userId) {
                  const t = Wl(e[1]);
                  r.push(t);
                } else n.done();
              })
              .next(() => {
                Go(0 === r.length);
              });
          });
        }
        containsKey(e, t) {
          return tp(e, this.userId, t);
        }
        xn(e) {
          return ip(e)
            .get(this.userId)
            .next((e) => e || { userId: this.userId, lastAcknowledgedBatchId: -1, lastStreamToken: '' });
        }
      }
      function tp(e, t, n) {
        const r = Yl(t, n.path),
          i = r[1],
          s = IDBKeyRange.lowerBound(r);
        let a = !1;
        return rp(e)
          .J({ range: s, H: !0 }, (e, n, r) => {
            const [s, o, l] = e;
            s === t && o === i && (a = !0), r.done();
          })
          .next(() => a);
      }
      function np(e) {
        return wc(e, 'mutations');
      }
      function rp(e) {
        return wc(e, 'documentMutations');
      }
      function ip(e) {
        return wc(e, 'mutationQueues');
      }
      class sp {
        constructor(e) {
          this.On = e;
        }
        next() {
          return (this.On += 2), this.On;
        }
        static Nn() {
          return new sp(0);
        }
        static Ln() {
          return new sp(-1);
        }
      }
      class ap {
        constructor(e, t) {
          (this.referenceDelegate = e), (this.serializer = t);
        }
        allocateTargetId(e) {
          return this.Bn(e).next((t) => {
            const n = new sp(t.highestTargetId);
            return (t.highestTargetId = n.next()), this.kn(e, t).next(() => t.highestTargetId);
          });
        }
        getLastRemoteSnapshotVersion(e) {
          return this.Bn(e).next((e) =>
            cl.fromTimestamp(new ll(e.lastRemoteSnapshotVersion.seconds, e.lastRemoteSnapshotVersion.nanoseconds)),
          );
        }
        getHighestSequenceNumber(e) {
          return this.Bn(e).next((e) => e.highestListenSequenceNumber);
        }
        setTargetsMetadata(e, t, n) {
          return this.Bn(e).next(
            (r) => (
              (r.highestListenSequenceNumber = t),
              n && (r.lastRemoteSnapshotVersion = n.toTimestamp()),
              t > r.highestListenSequenceNumber && (r.highestListenSequenceNumber = t),
              this.kn(e, r)
            ),
          );
        }
        addTargetData(e, t) {
          return this.qn(e, t).next(() => this.Bn(e).next((n) => ((n.targetCount += 1), this.Qn(t, n), this.kn(e, n))));
        }
        updateTargetData(e, t) {
          return this.qn(e, t);
        }
        removeTargetData(e, t) {
          return this.removeMatchingKeysForTargetId(e, t.targetId)
            .next(() => op(e).delete(t.targetId))
            .next(() => this.Bn(e))
            .next((t) => (Go(t.targetCount > 0), (t.targetCount -= 1), this.kn(e, t)));
        }
        removeTargets(e, t, n) {
          let r = 0;
          const i = [];
          return op(e)
            .J((s, a) => {
              const o = uf(a);
              o.sequenceNumber <= t && null === n.get(o.targetId) && (r++, i.push(this.removeTargetData(e, o)));
            })
            .next(() => kl.waitFor(i))
            .next(() => r);
        }
        forEachTarget(e, t) {
          return op(e).J((e, n) => {
            const r = uf(n);
            t(r);
          });
        }
        Bn(e) {
          return lp(e)
            .get('targetGlobalKey')
            .next((e) => (Go(null !== e), e));
        }
        kn(e, t) {
          return lp(e).put('targetGlobalKey', t);
        }
        qn(e, t) {
          return op(e).put(df(this.serializer, t));
        }
        Qn(e, t) {
          let n = !1;
          return (
            e.targetId > t.highestTargetId && ((t.highestTargetId = e.targetId), (n = !0)),
            e.sequenceNumber > t.highestListenSequenceNumber && ((t.highestListenSequenceNumber = e.sequenceNumber), (n = !0)),
            n
          );
        }
        getTargetCount(e) {
          return this.Bn(e).next((e) => e.targetCount);
        }
        getTargetData(e, t) {
          const n = Fu(t),
            r = IDBKeyRange.bound([n, Number.NEGATIVE_INFINITY], [n, Number.POSITIVE_INFINITY]);
          let i = null;
          return op(e)
            .J({ range: r, index: 'queryTargetsIndex' }, (e, n, r) => {
              const s = uf(n);
              ju(t, s.target) && ((i = s), r.done());
            })
            .next(() => i);
        }
        addMatchingKeys(e, t, n) {
          const r = [],
            i = cp(e);
          return (
            t.forEach((t) => {
              const s = Gl(t.path);
              r.push(i.put({ targetId: n, path: s })), r.push(this.referenceDelegate.addReference(e, n, t));
            }),
            kl.waitFor(r)
          );
        }
        removeMatchingKeys(e, t, n) {
          const r = cp(e);
          return kl.forEach(t, (t) => {
            const i = Gl(t.path);
            return kl.waitFor([r.delete([n, i]), this.referenceDelegate.removeReference(e, n, t)]);
          });
        }
        removeMatchingKeysForTargetId(e, t) {
          const n = cp(e),
            r = IDBKeyRange.bound([t], [t + 1], !1, !0);
          return n.delete(r);
        }
        getMatchingKeysForTargetId(e, t) {
          const n = IDBKeyRange.bound([t], [t + 1], !1, !0),
            r = cp(e);
          let i = vd();
          return r
            .J({ range: n, H: !0 }, (e, t, n) => {
              const r = Wl(e[1]),
                s = new pl(r);
              i = i.add(s);
            })
            .next(() => i);
        }
        containsKey(e, t) {
          const n = Gl(t.path),
            r = IDBKeyRange.bound([n], [ol(n)], !1, !0);
          let i = 0;
          return cp(e)
            .J({ index: 'documentTargetsIndex', H: !0, range: r }, (e, t, n) => {
              let [r, s] = e;
              0 !== r && (i++, n.done());
            })
            .next(() => i > 0);
        }
        ot(e, t) {
          return op(e)
            .get(t)
            .next((e) => (e ? uf(e) : null));
        }
      }
      function op(e) {
        return wc(e, 'targets');
      }
      function lp(e) {
        return wc(e, 'targetGlobal');
      }
      function cp(e) {
        return wc(e, 'targetDocuments');
      }
      function up(e, t) {
        let [n, r] = e,
          [i, s] = t;
        const a = sl(n, i);
        return 0 === a ? sl(r, s) : a;
      }
      class dp {
        constructor(e) {
          (this.Kn = e), (this.buffer = new xc(up)), (this.$n = 0);
        }
        Un() {
          return ++this.$n;
        }
        Wn(e) {
          const t = [e, this.Un()];
          if (this.buffer.size < this.Kn) this.buffer = this.buffer.add(t);
          else {
            const e = this.buffer.last();
            up(t, e) < 0 && (this.buffer = this.buffer.delete(e).add(t));
          }
        }
        get maxValue() {
          return this.buffer.last()[0];
        }
      }
      class hp {
        constructor(e, t, n) {
          (this.garbageCollector = e), (this.asyncQueue = t), (this.localStore = n), (this.Gn = null);
        }
        start() {
          -1 !== this.garbageCollector.params.cacheSizeCollectionThreshold && this.zn(6e4);
        }
        stop() {
          this.Gn && (this.Gn.cancel(), (this.Gn = null));
        }
        get started() {
          return null !== this.Gn;
        }
        zn(e) {
          Uo('LruGarbageCollector', 'Garbage collection scheduled in '.concat(e, 'ms')),
            (this.Gn = this.asyncQueue.enqueueAfterDelay('lru_garbage_collection', e, async () => {
              this.Gn = null;
              try {
                await this.localStore.collectGarbage(this.garbageCollector);
              } catch (e) {
                Ol(e) ? Uo('LruGarbageCollector', 'Ignoring IndexedDB error during garbage collection: ', e) : await xl(e);
              }
              await this.zn(3e5);
            }));
        }
      }
      class fp {
        constructor(e, t) {
          (this.jn = e), (this.params = t);
        }
        calculateTargetCount(e, t) {
          return this.jn.Hn(e).next((e) => Math.floor((t / 100) * e));
        }
        nthSequenceNumber(e, t) {
          if (0 === t) return kl.resolve(Vl.oe);
          const n = new dp(t);
          return this.jn
            .forEachTarget(e, (e) => n.Wn(e.sequenceNumber))
            .next(() => this.jn.Jn(e, (e) => n.Wn(e)))
            .next(() => n.maxValue);
        }
        removeTargets(e, t, n) {
          return this.jn.removeTargets(e, t, n);
        }
        removeOrphanedDocuments(e, t) {
          return this.jn.removeOrphanedDocuments(e, t);
        }
        collect(e, t) {
          return -1 === this.params.cacheSizeCollectionThreshold
            ? (Uo('LruGarbageCollector', 'Garbage collection skipped; disabled'), kl.resolve(Jf))
            : this.getCacheSize(e).next((n) =>
                n < this.params.cacheSizeCollectionThreshold
                  ? (Uo(
                      'LruGarbageCollector',
                      'Garbage collection skipped; Cache size '
                        .concat(n, ' is lower than threshold ')
                        .concat(this.params.cacheSizeCollectionThreshold),
                    ),
                    Jf)
                  : this.Yn(e, t),
              );
        }
        getCacheSize(e) {
          return this.jn.getCacheSize(e);
        }
        Yn(e, t) {
          let n, r, i, s, a, o, l;
          const c = Date.now();
          return this.calculateTargetCount(e, this.params.percentileToCollect)
            .next(
              (t) => (
                t > this.params.maximumSequenceNumbersToCollect
                  ? (Uo(
                      'LruGarbageCollector',
                      'Capping sequence numbers to collect down to the maximum of '
                        .concat(this.params.maximumSequenceNumbersToCollect, ' from ')
                        .concat(t),
                    ),
                    (r = this.params.maximumSequenceNumbersToCollect))
                  : (r = t),
                (s = Date.now()),
                this.nthSequenceNumber(e, r)
              ),
            )
            .next((r) => ((n = r), (a = Date.now()), this.removeTargets(e, n, t)))
            .next((t) => ((i = t), (o = Date.now()), this.removeOrphanedDocuments(e, n)))
            .next(
              (e) => (
                (l = Date.now()),
                jo() <= On.DEBUG &&
                  Uo(
                    'LruGarbageCollector',
                    'LRU Garbage Collection\n\tCounted targets in '
                      .concat(s - c, 'ms\n\tDetermined least recently used ')
                      .concat(r, ' in ') +
                      (a - s) +
                      'ms\n' +
                      '\tRemoved '.concat(i, ' targets in ') +
                      (o - a) +
                      'ms\n' +
                      '\tRemoved '.concat(e, ' documents in ') +
                      (l - o) +
                      'ms\n' +
                      'Total Duration: '.concat(l - c, 'ms'),
                  ),
                kl.resolve({ didRun: !0, sequenceNumbersCollected: r, targetsRemoved: i, documentsRemoved: e })
              ),
            );
        }
      }
      function pp(e, t) {
        return new fp(e, t);
      }
      class mp {
        constructor(e, t) {
          (this.db = e), (this.garbageCollector = pp(this, t));
        }
        Hn(e) {
          const t = this.Zn(e);
          return this.db
            .getTargetCache()
            .getTargetCount(e)
            .next((e) => t.next((t) => e + t));
        }
        Zn(e) {
          let t = 0;
          return this.Jn(e, (e) => {
            t++;
          }).next(() => t);
        }
        forEachTarget(e, t) {
          return this.db.getTargetCache().forEachTarget(e, t);
        }
        Jn(e, t) {
          return this.Xn(e, (e, n) => t(n));
        }
        addReference(e, t, n) {
          return gp(e, n);
        }
        removeReference(e, t, n) {
          return gp(e, n);
        }
        removeTargets(e, t, n) {
          return this.db.getTargetCache().removeTargets(e, t, n);
        }
        markPotentiallyOrphaned(e, t) {
          return gp(e, t);
        }
        er(e, t) {
          return (function (e, t) {
            let n = !1;
            return ip(e)
              .Y((r) => tp(e, r, t).next((e) => (e && (n = !0), kl.resolve(!e))))
              .next(() => n);
          })(e, t);
        }
        removeOrphanedDocuments(e, t) {
          const n = this.db.getRemoteDocumentCache().newChangeBuffer(),
            r = [];
          let i = 0;
          return this.Xn(e, (s, a) => {
            if (a <= t) {
              const t = this.er(e, s).next((t) => {
                if (!t)
                  return (
                    i++,
                    n.getEntry(e, s).next(
                      () => (
                        n.removeEntry(s, cl.min()),
                        cp(e).delete(
                          (function (e) {
                            return [0, Gl(e.path)];
                          })(s),
                        )
                      ),
                    )
                  );
              });
              r.push(t);
            }
          })
            .next(() => kl.waitFor(r))
            .next(() => n.apply(e))
            .next(() => i);
        }
        removeTarget(e, t) {
          const n = t.withSequenceNumber(e.currentSequenceNumber);
          return this.db.getTargetCache().updateTargetData(e, n);
        }
        updateLimboDocument(e, t) {
          return gp(e, t);
        }
        Xn(e, t) {
          const n = cp(e);
          let r,
            i = Vl.oe;
          return n
            .J({ index: 'documentTargetsIndex' }, (e, n) => {
              let [s, a] = e,
                { path: o, sequenceNumber: l } = n;
              0 === s ? (i !== Vl.oe && t(new pl(Wl(r)), i), (i = l), (r = o)) : (i = Vl.oe);
            })
            .next(() => {
              i !== Vl.oe && t(new pl(Wl(r)), i);
            });
        }
        getCacheSize(e) {
          return this.db.getRemoteDocumentCache().getSize(e);
        }
      }
      function gp(e, t) {
        return cp(e).put(
          (function (e, t) {
            return { targetId: 0, path: Gl(e.path), sequenceNumber: t };
          })(t, e.currentSequenceNumber),
        );
      }
      class vp {
        constructor() {
          (this.changes = new ad(
            (e) => e.toString(),
            (e, t) => e.isEqual(t),
          )),
            (this.changesApplied = !1);
        }
        addEntry(e) {
          this.assertNotApplied(), this.changes.set(e.key, e);
        }
        removeEntry(e, t) {
          this.assertNotApplied(), this.changes.set(e, uu.newInvalidDocument(e).setReadTime(t));
        }
        getEntry(e, t) {
          this.assertNotApplied();
          const n = this.changes.get(t);
          return void 0 !== n ? kl.resolve(n) : this.getFromCache(e, t);
        }
        getEntries(e, t) {
          return this.getAllFromCache(e, t);
        }
        apply(e) {
          return this.assertNotApplied(), (this.changesApplied = !0), this.applyChanges(e);
        }
        assertNotApplied() {}
      }
      class yp {
        constructor(e) {
          this.serializer = e;
        }
        setIndexManager(e) {
          this.indexManager = e;
        }
        addEntry(e, t, n) {
          return Ep(e).put(n);
        }
        removeEntry(e, t, n) {
          return Ep(e).delete(
            (function (e, t) {
              const n = e.path.toArray();
              return [n.slice(0, n.length - 2), n[n.length - 2], af(t), n[n.length - 1]];
            })(t, n),
          );
        }
        updateMetadata(e, t) {
          return this.getMetadata(e).next((n) => ((n.byteSize += t), this.tr(e, n)));
        }
        getEntry(e, t) {
          let n = uu.newInvalidDocument(t);
          return Ep(e)
            .J({ index: 'documentKeyIndex', range: IDBKeyRange.only(Tp(t)) }, (e, r) => {
              n = this.nr(t, r);
            })
            .next(() => n);
        }
        rr(e, t) {
          let n = { size: 0, document: uu.newInvalidDocument(t) };
          return Ep(e)
            .J({ index: 'documentKeyIndex', range: IDBKeyRange.only(Tp(t)) }, (e, r) => {
              n = { document: this.nr(t, r), size: Zf(r) };
            })
            .next(() => n);
        }
        getEntries(e, t) {
          let n = ld();
          return this.ir(e, t, (e, t) => {
            const r = this.nr(e, t);
            n = n.insert(e, r);
          }).next(() => n);
        }
        sr(e, t) {
          let n = ld(),
            r = new Tc(pl.comparator);
          return this.ir(e, t, (e, t) => {
            const i = this.nr(e, t);
            (n = n.insert(e, i)), (r = r.insert(e, Zf(t)));
          }).next(() => ({ documents: n, _r: r }));
        }
        ir(e, t, n) {
          if (t.isEmpty()) return kl.resolve();
          let r = new xc(Ip);
          t.forEach((e) => (r = r.add(e)));
          const i = IDBKeyRange.bound(Tp(r.first()), Tp(r.last())),
            s = r.getIterator();
          let a = s.getNext();
          return Ep(e)
            .J({ index: 'documentKeyIndex', range: i }, (e, t, r) => {
              const i = pl.fromSegments([...t.prefixPath, t.collectionGroup, t.documentId]);
              for (; a && Ip(a, i) < 0; ) n(a, null), (a = s.getNext());
              a && a.isEqual(i) && (n(a, t), (a = s.hasNext() ? s.getNext() : null)), a ? r.$(Tp(a)) : r.done();
            })
            .next(() => {
              for (; a; ) n(a, null), (a = s.hasNext() ? s.getNext() : null);
            });
        }
        getDocumentsMatchingQuery(e, t, n, r, i) {
          const s = t.path,
            a = [
              s.popLast().toArray(),
              s.lastSegment(),
              af(n.readTime),
              n.documentKey.path.isEmpty() ? '' : n.documentKey.path.lastSegment(),
            ],
            o = [s.popLast().toArray(), s.lastSegment(), [Number.MAX_SAFE_INTEGER, Number.MAX_SAFE_INTEGER], ''];
          return Ep(e)
            .U(IDBKeyRange.bound(a, o, !0))
            .next((e) => {
              null == i || i.incrementDocumentReadCount(e.length);
              let n = ld();
              for (const i of e) {
                const e = this.nr(pl.fromSegments(i.prefixPath.concat(i.collectionGroup, i.documentId)), i);
                e.isFoundDocument() && (nd(t, e) || r.has(e.key)) && (n = n.insert(e.key, e));
              }
              return n;
            });
        }
        getAllFromCollectionGroup(e, t, n, r) {
          let i = ld();
          const s = _p(t, n),
            a = _p(t, El.max());
          return Ep(e)
            .J({ index: 'collectionGroupIndex', range: IDBKeyRange.bound(s, a, !0) }, (e, t, n) => {
              const s = this.nr(pl.fromSegments(t.prefixPath.concat(t.collectionGroup, t.documentId)), t);
              (i = i.insert(s.key, s)), i.size === r && n.done();
            })
            .next(() => i);
        }
        newChangeBuffer(e) {
          return new bp(this, !!e && e.trackRemovals);
        }
        getSize(e) {
          return this.getMetadata(e).next((e) => e.byteSize);
        }
        getMetadata(e) {
          return Sp(e)
            .get('remoteDocumentGlobalKey')
            .next((e) => (Go(!!e), e));
        }
        tr(e, t) {
          return Sp(e).put('remoteDocumentGlobalKey', t);
        }
        nr(e, t) {
          if (t) {
            const e = (function (e, t) {
              let n;
              if (t.document) n = zh(e.ct, t.document, !!t.hasCommittedMutations);
              else if (t.noDocument) {
                const e = pl.fromSegments(t.noDocument.path),
                  r = lf(t.noDocument.readTime);
                (n = uu.newNoDocument(e, r)), t.hasCommittedMutations && n.setHasCommittedMutations();
              } else {
                if (!t.unknownDocument) return qo();
                {
                  const e = pl.fromSegments(t.unknownDocument.path),
                    r = lf(t.unknownDocument.version);
                  n = uu.newUnknownDocument(e, r);
                }
              }
              return (
                t.readTime &&
                  n.setReadTime(
                    (function (e) {
                      const t = new ll(e[0], e[1]);
                      return cl.fromTimestamp(t);
                    })(t.readTime),
                  ),
                n
              );
            })(this.serializer, t);
            if (!e.isNoDocument() || !e.version.isEqual(cl.min())) return e;
          }
          return uu.newInvalidDocument(e);
        }
      }
      function wp(e) {
        return new yp(e);
      }
      class bp extends vp {
        constructor(e, t) {
          super(),
            (this.ar = e),
            (this.trackRemovals = t),
            (this.ur = new ad(
              (e) => e.toString(),
              (e, t) => e.isEqual(t),
            ));
        }
        applyChanges(e) {
          const t = [];
          let n = 0,
            r = new xc((e, t) => sl(e.canonicalString(), t.canonicalString()));
          return (
            this.changes.forEach((i, s) => {
              const a = this.ur.get(i);
              if ((t.push(this.ar.removeEntry(e, i, a.readTime)), s.isValidDocument())) {
                const o = sf(this.ar.serializer, s);
                r = r.add(i.path.popLast());
                const l = Zf(o);
                (n += l - a.size), t.push(this.ar.addEntry(e, i, o));
              } else if (((n -= a.size), this.trackRemovals)) {
                const n = sf(this.ar.serializer, s.convertToNoDocument(cl.min()));
                t.push(this.ar.addEntry(e, i, n));
              }
            }),
            r.forEach((n) => {
              t.push(this.ar.indexManager.addToCollectionParentIndex(e, n));
            }),
            t.push(this.ar.updateMetadata(e, n)),
            kl.waitFor(t)
          );
        }
        getFromCache(e, t) {
          return this.ar.rr(e, t).next((e) => (this.ur.set(t, { size: e.size, readTime: e.document.readTime }), e.document));
        }
        getAllFromCache(e, t) {
          return this.ar.sr(e, t).next((e) => {
            let { documents: t, _r: n } = e;
            return (
              n.forEach((e, n) => {
                this.ur.set(e, { size: n, readTime: t.get(e).readTime });
              }),
              t
            );
          });
        }
      }
      function Sp(e) {
        return wc(e, 'remoteDocumentGlobal');
      }
      function Ep(e) {
        return wc(e, 'remoteDocumentsV14');
      }
      function Tp(e) {
        const t = e.path.toArray();
        return [t.slice(0, t.length - 2), t[t.length - 2], t[t.length - 1]];
      }
      function _p(e, t) {
        const n = t.documentKey.path.toArray();
        return [e, af(t.readTime), n.slice(0, n.length - 2), n.length > 0 ? n[n.length - 1] : ''];
      }
      function Ip(e, t) {
        const n = e.path.toArray(),
          r = t.path.toArray();
        let i = 0;
        for (let s = 0; s < n.length - 2 && s < r.length - 2; ++s) if (((i = sl(n[s], r[s])), i)) return i;
        return (
          (i = sl(n.length, r.length)),
          i || ((i = sl(n[n.length - 2], r[r.length - 2])), i || sl(n[n.length - 1], r[r.length - 1]))
        );
      }
      class xp {
        constructor(e, t) {
          (this.overlayedDocument = e), (this.mutatedFields = t);
        }
      }
      class kp {
        constructor(e, t, n, r) {
          (this.remoteDocumentCache = e), (this.mutationQueue = t), (this.documentOverlayCache = n), (this.indexManager = r);
        }
        getDocument(e, t) {
          let n = null;
          return this.documentOverlayCache
            .getOverlay(e, t)
            .next((r) => ((n = r), this.remoteDocumentCache.getEntry(e, t)))
            .next((e) => (null !== n && Bd(n.mutation, e, Nc.empty(), ll.now()), e));
        }
        getDocuments(e, t) {
          return this.remoteDocumentCache.getEntries(e, t).next((t) => this.getLocalViewOfDocuments(e, t, vd()).next(() => t));
        }
        getLocalViewOfDocuments(e, t) {
          let n = arguments.length > 2 && void 0 !== arguments[2] ? arguments[2] : vd();
          const r = hd();
          return this.populateOverlays(e, r, t).next(() =>
            this.computeViews(e, t, r, n).next((e) => {
              let t = ud();
              return (
                e.forEach((e, n) => {
                  t = t.insert(e, n.overlayedDocument);
                }),
                t
              );
            }),
          );
        }
        getOverlayedDocuments(e, t) {
          const n = hd();
          return this.populateOverlays(e, n, t).next(() => this.computeViews(e, t, n, vd()));
        }
        populateOverlays(e, t, n) {
          const r = [];
          return (
            n.forEach((e) => {
              t.has(e) || r.push(e);
            }),
            this.documentOverlayCache.getOverlays(e, r).next((e) => {
              e.forEach((e, n) => {
                t.set(e, n);
              });
            })
          );
        }
        computeViews(e, t, n, r) {
          let i = ld();
          const s = pd(),
            a = pd();
          return (
            t.forEach((e, t) => {
              const a = n.get(t.key);
              r.has(t.key) && (void 0 === a || a.mutation instanceof Kd)
                ? (i = i.insert(t.key, t))
                : void 0 !== a
                  ? (s.set(t.key, a.mutation.getFieldMask()), Bd(a.mutation, t, a.mutation.getFieldMask(), ll.now()))
                  : s.set(t.key, Nc.empty());
            }),
            this.recalculateAndSaveOverlays(e, i).next(
              (e) => (
                e.forEach((e, t) => s.set(e, t)),
                t.forEach((e, t) => {
                  var n;
                  return a.set(e, new xp(t, null !== (n = s.get(e)) && void 0 !== n ? n : null));
                }),
                a
              ),
            )
          );
        }
        recalculateAndSaveOverlays(e, t) {
          const n = pd();
          let r = new Tc((e, t) => e - t),
            i = vd();
          return this.mutationQueue
            .getAllMutationBatchesAffectingDocumentKeys(e, t)
            .next((e) => {
              for (const i of e)
                i.keys().forEach((e) => {
                  const s = t.get(e);
                  if (null === s) return;
                  let a = n.get(e) || Nc.empty();
                  (a = i.applyToLocalView(s, a)), n.set(e, a);
                  const o = (r.get(i.batchId) || vd()).add(e);
                  r = r.insert(i.batchId, o);
                });
            })
            .next(() => {
              const s = [],
                a = r.getReverseIterator();
              for (; a.hasNext(); ) {
                const r = a.getNext(),
                  o = r.key,
                  l = r.value,
                  c = fd();
                l.forEach((e) => {
                  if (!i.has(e)) {
                    const r = Vd(t.get(e), n.get(e));
                    null !== r && c.set(e, r), (i = i.add(e));
                  }
                }),
                  s.push(this.documentOverlayCache.saveOverlays(e, o, c));
              }
              return kl.waitFor(s);
            })
            .next(() => n);
        }
        recalculateAndSaveOverlaysForDocumentKeys(e, t) {
          return this.remoteDocumentCache.getEntries(e, t).next((t) => this.recalculateAndSaveOverlays(e, t));
        }
        getDocumentsMatchingQuery(e, t, n, r) {
          return (function (e) {
            return pl.isDocumentKey(e.path) && null === e.collectionGroup && 0 === e.filters.length;
          })(t)
            ? this.getDocumentsMatchingDocumentQuery(e, t.path)
            : Wu(t)
              ? this.getDocumentsMatchingCollectionGroupQuery(e, t, n, r)
              : this.getDocumentsMatchingCollectionQuery(e, t, n, r);
        }
        getNextDocuments(e, t, n, r) {
          return this.remoteDocumentCache.getAllFromCollectionGroup(e, t, n, r).next((i) => {
            const s =
              r - i.size > 0
                ? this.documentOverlayCache.getOverlaysForCollectionGroup(e, t, n.largestBatchId, r - i.size)
                : kl.resolve(hd());
            let a = -1,
              o = i;
            return s.next((t) =>
              kl
                .forEach(
                  t,
                  (t, n) => (
                    a < n.largestBatchId && (a = n.largestBatchId),
                    i.get(t)
                      ? kl.resolve()
                      : this.remoteDocumentCache.getEntry(e, t).next((e) => {
                          o = o.insert(t, e);
                        })
                  ),
                )
                .next(() => this.populateOverlays(e, t, i))
                .next(() => this.computeViews(e, o, t, vd()))
                .next((e) => ({ batchId: a, changes: dd(e) })),
            );
          });
        }
        getDocumentsMatchingDocumentQuery(e, t) {
          return this.getDocument(e, new pl(t)).next((e) => {
            let t = ud();
            return e.isFoundDocument() && (t = t.insert(e.key, e)), t;
          });
        }
        getDocumentsMatchingCollectionGroupQuery(e, t, n, r) {
          const i = t.collectionGroup;
          let s = ud();
          return this.indexManager.getCollectionParents(e, i).next((a) =>
            kl
              .forEach(a, (a) => {
                const o = (function (e, t) {
                  return new qu(t, null, e.explicitOrderBy.slice(), e.filters.slice(), e.limit, e.limitType, e.startAt, e.endAt);
                })(t, a.child(i));
                return this.getDocumentsMatchingCollectionQuery(e, o, n, r).next((e) => {
                  e.forEach((e, t) => {
                    s = s.insert(e, t);
                  });
                });
              })
              .next(() => s),
          );
        }
        getDocumentsMatchingCollectionQuery(e, t, n, r) {
          let i;
          return this.documentOverlayCache
            .getOverlaysForCollection(e, t.path, n.largestBatchId)
            .next((s) => ((i = s), this.remoteDocumentCache.getDocumentsMatchingQuery(e, t, n, i, r)))
            .next((e) => {
              i.forEach((t, n) => {
                const r = n.getKey();
                null === e.get(r) && (e = e.insert(r, uu.newInvalidDocument(r)));
              });
              let n = ud();
              return (
                e.forEach((e, r) => {
                  const s = i.get(e);
                  void 0 !== s && Bd(s.mutation, r, Nc.empty(), ll.now()), nd(t, r) && (n = n.insert(e, r));
                }),
                n
              );
            });
        }
      }
      class Cp {
        constructor(e) {
          (this.serializer = e), (this.cr = new Map()), (this.lr = new Map());
        }
        getBundleMetadata(e, t) {
          return kl.resolve(this.cr.get(t));
        }
        saveBundleMetadata(e, t) {
          return (
            this.cr.set(
              t.id,
              (function (e) {
                return { id: e.id, version: e.version, createTime: Ph(e.createTime) };
              })(t),
            ),
            kl.resolve()
          );
        }
        getNamedQuery(e, t) {
          return kl.resolve(this.lr.get(t));
        }
        saveNamedQuery(e, t) {
          return (
            this.lr.set(
              t.name,
              (function (e) {
                return { name: e.name, query: hf(e.bundledQuery), readTime: Ph(e.readTime) };
              })(t),
            ),
            kl.resolve()
          );
        }
      }
      class Np {
        constructor() {
          (this.overlays = new Tc(pl.comparator)), (this.hr = new Map());
        }
        getOverlay(e, t) {
          return kl.resolve(this.overlays.get(t));
        }
        getOverlays(e, t) {
          const n = hd();
          return kl
            .forEach(t, (t) =>
              this.getOverlay(e, t).next((e) => {
                null !== e && n.set(t, e);
              }),
            )
            .next(() => n);
        }
        saveOverlays(e, t, n) {
          return (
            n.forEach((n, r) => {
              this.ht(e, t, r);
            }),
            kl.resolve()
          );
        }
        removeOverlaysForBatchId(e, t, n) {
          const r = this.hr.get(n);
          return void 0 !== r && (r.forEach((e) => (this.overlays = this.overlays.remove(e))), this.hr.delete(n)), kl.resolve();
        }
        getOverlaysForCollection(e, t, n) {
          const r = hd(),
            i = t.length + 1,
            s = new pl(t.child('')),
            a = this.overlays.getIteratorFrom(s);
          for (; a.hasNext(); ) {
            const e = a.getNext().value,
              s = e.getKey();
            if (!t.isPrefixOf(s.path)) break;
            s.path.length === i && e.largestBatchId > n && r.set(e.getKey(), e);
          }
          return kl.resolve(r);
        }
        getOverlaysForCollectionGroup(e, t, n, r) {
          let i = new Tc((e, t) => e - t);
          const s = this.overlays.getIterator();
          for (; s.hasNext(); ) {
            const e = s.getNext().value;
            if (e.getKey().getCollectionGroup() === t && e.largestBatchId > n) {
              let t = i.get(e.largestBatchId);
              null === t && ((t = hd()), (i = i.insert(e.largestBatchId, t))), t.set(e.getKey(), e);
            }
          }
          const a = hd(),
            o = i.getIterator();
          for (; o.hasNext() && (o.getNext().value.forEach((e, t) => a.set(e, t)), !(a.size() >= r)); );
          return kl.resolve(a);
        }
        ht(e, t, n) {
          const r = this.overlays.get(n.key);
          if (null !== r) {
            const e = this.hr.get(r.largestBatchId).delete(n.key);
            this.hr.set(r.largestBatchId, e);
          }
          this.overlays = this.overlays.insert(n.key, new eh(t, n));
          let i = this.hr.get(t);
          void 0 === i && ((i = vd()), this.hr.set(t, i)), this.hr.set(t, i.add(n.key));
        }
      }
      class Pp {
        constructor() {
          (this.Pr = new xc(Dp.Ir)), (this.Tr = new xc(Dp.Er));
        }
        isEmpty() {
          return this.Pr.isEmpty();
        }
        addReference(e, t) {
          const n = new Dp(e, t);
          (this.Pr = this.Pr.add(n)), (this.Tr = this.Tr.add(n));
        }
        dr(e, t) {
          e.forEach((e) => this.addReference(e, t));
        }
        removeReference(e, t) {
          this.Ar(new Dp(e, t));
        }
        Rr(e, t) {
          e.forEach((e) => this.removeReference(e, t));
        }
        Vr(e) {
          const t = new pl(new dl([])),
            n = new Dp(t, e),
            r = new Dp(t, e + 1),
            i = [];
          return (
            this.Tr.forEachInRange([n, r], (e) => {
              this.Ar(e), i.push(e.key);
            }),
            i
          );
        }
        mr() {
          this.Pr.forEach((e) => this.Ar(e));
        }
        Ar(e) {
          (this.Pr = this.Pr.delete(e)), (this.Tr = this.Tr.delete(e));
        }
        gr(e) {
          const t = new pl(new dl([])),
            n = new Dp(t, e),
            r = new Dp(t, e + 1);
          let i = vd();
          return (
            this.Tr.forEachInRange([n, r], (e) => {
              i = i.add(e.key);
            }),
            i
          );
        }
        containsKey(e) {
          const t = new Dp(e, 0),
            n = this.Pr.firstAfterOrEqual(t);
          return null !== n && e.isEqual(n.key);
        }
      }
      class Dp {
        constructor(e, t) {
          (this.key = e), (this.pr = t);
        }
        static Ir(e, t) {
          return pl.comparator(e.key, t.key) || sl(e.pr, t.pr);
        }
        static Er(e, t) {
          return sl(e.pr, t.pr) || pl.comparator(e.key, t.key);
        }
      }
      class Ap {
        constructor(e, t) {
          (this.indexManager = e),
            (this.referenceDelegate = t),
            (this.mutationQueue = []),
            (this.yr = 1),
            (this.wr = new xc(Dp.Ir));
        }
        checkEmpty(e) {
          return kl.resolve(0 === this.mutationQueue.length);
        }
        addMutationBatch(e, t, n, r) {
          const i = this.yr;
          this.yr++, this.mutationQueue.length > 0 && this.mutationQueue[this.mutationQueue.length - 1];
          const s = new $d(i, t, n, r);
          this.mutationQueue.push(s);
          for (const a of r)
            (this.wr = this.wr.add(new Dp(a.key, i))), this.indexManager.addToCollectionParentIndex(e, a.key.path.popLast());
          return kl.resolve(s);
        }
        lookupMutationBatch(e, t) {
          return kl.resolve(this.Sr(t));
        }
        getNextMutationBatchAfterBatchId(e, t) {
          const n = t + 1,
            r = this.br(n),
            i = r < 0 ? 0 : r;
          return kl.resolve(this.mutationQueue.length > i ? this.mutationQueue[i] : null);
        }
        getHighestUnacknowledgedBatchId() {
          return kl.resolve(0 === this.mutationQueue.length ? -1 : this.yr - 1);
        }
        getAllMutationBatches(e) {
          return kl.resolve(this.mutationQueue.slice());
        }
        getAllMutationBatchesAffectingDocumentKey(e, t) {
          const n = new Dp(t, 0),
            r = new Dp(t, Number.POSITIVE_INFINITY),
            i = [];
          return (
            this.wr.forEachInRange([n, r], (e) => {
              const t = this.Sr(e.pr);
              i.push(t);
            }),
            kl.resolve(i)
          );
        }
        getAllMutationBatchesAffectingDocumentKeys(e, t) {
          let n = new xc(sl);
          return (
            t.forEach((e) => {
              const t = new Dp(e, 0),
                r = new Dp(e, Number.POSITIVE_INFINITY);
              this.wr.forEachInRange([t, r], (e) => {
                n = n.add(e.pr);
              });
            }),
            kl.resolve(this.Dr(n))
          );
        }
        getAllMutationBatchesAffectingQuery(e, t) {
          const n = t.path,
            r = n.length + 1;
          let i = n;
          pl.isDocumentKey(i) || (i = i.child(''));
          const s = new Dp(new pl(i), 0);
          let a = new xc(sl);
          return (
            this.wr.forEachWhile((e) => {
              const t = e.key.path;
              return !!n.isPrefixOf(t) && (t.length === r && (a = a.add(e.pr)), !0);
            }, s),
            kl.resolve(this.Dr(a))
          );
        }
        Dr(e) {
          const t = [];
          return (
            e.forEach((e) => {
              const n = this.Sr(e);
              null !== n && t.push(n);
            }),
            t
          );
        }
        removeMutationBatch(e, t) {
          Go(0 === this.Cr(t.batchId, 'removed')), this.mutationQueue.shift();
          let n = this.wr;
          return kl
            .forEach(t.mutations, (r) => {
              const i = new Dp(r.key, t.batchId);
              return (n = n.delete(i)), this.referenceDelegate.markPotentiallyOrphaned(e, r.key);
            })
            .next(() => {
              this.wr = n;
            });
        }
        Mn(e) {}
        containsKey(e, t) {
          const n = new Dp(t, 0),
            r = this.wr.firstAfterOrEqual(n);
          return kl.resolve(t.isEqual(r && r.key));
        }
        performConsistencyCheck(e) {
          return this.mutationQueue.length, kl.resolve();
        }
        Cr(e, t) {
          return this.br(e);
        }
        br(e) {
          return 0 === this.mutationQueue.length ? 0 : e - this.mutationQueue[0].batchId;
        }
        Sr(e) {
          const t = this.br(e);
          return t < 0 || t >= this.mutationQueue.length ? null : this.mutationQueue[t];
        }
      }
      class Op {
        constructor(e) {
          (this.vr = e), (this.docs = new Tc(pl.comparator)), (this.size = 0);
        }
        setIndexManager(e) {
          this.indexManager = e;
        }
        addEntry(e, t) {
          const n = t.key,
            r = this.docs.get(n),
            i = r ? r.size : 0,
            s = this.vr(t);
          return (
            (this.docs = this.docs.insert(n, { document: t.mutableCopy(), size: s })),
            (this.size += s - i),
            this.indexManager.addToCollectionParentIndex(e, n.path.popLast())
          );
        }
        removeEntry(e) {
          const t = this.docs.get(e);
          t && ((this.docs = this.docs.remove(e)), (this.size -= t.size));
        }
        getEntry(e, t) {
          const n = this.docs.get(t);
          return kl.resolve(n ? n.document.mutableCopy() : uu.newInvalidDocument(t));
        }
        getEntries(e, t) {
          let n = ld();
          return (
            t.forEach((e) => {
              const t = this.docs.get(e);
              n = n.insert(e, t ? t.document.mutableCopy() : uu.newInvalidDocument(e));
            }),
            kl.resolve(n)
          );
        }
        getDocumentsMatchingQuery(e, t, n, r) {
          let i = ld();
          const s = t.path,
            a = new pl(s.child('')),
            o = this.docs.getIteratorFrom(a);
          for (; o.hasNext(); ) {
            const {
              key: e,
              value: { document: a },
            } = o.getNext();
            if (!s.isPrefixOf(e.path)) break;
            e.path.length > s.length + 1 ||
              Tl(Sl(a), n) <= 0 ||
              ((r.has(a.key) || nd(t, a)) && (i = i.insert(a.key, a.mutableCopy())));
          }
          return kl.resolve(i);
        }
        getAllFromCollectionGroup(e, t, n, r) {
          qo();
        }
        Fr(e, t) {
          return kl.forEach(this.docs, (e) => t(e));
        }
        newChangeBuffer(e) {
          return new Lp(this);
        }
        getSize(e) {
          return kl.resolve(this.size);
        }
      }
      class Lp extends vp {
        constructor(e) {
          super(), (this.ar = e);
        }
        applyChanges(e) {
          const t = [];
          return (
            this.changes.forEach((n, r) => {
              r.isValidDocument() ? t.push(this.ar.addEntry(e, r)) : this.ar.removeEntry(n);
            }),
            kl.waitFor(t)
          );
        }
        getFromCache(e, t) {
          return this.ar.getEntry(e, t);
        }
        getAllFromCache(e, t) {
          return this.ar.getEntries(e, t);
        }
      }
      class Rp {
        constructor(e) {
          (this.persistence = e),
            (this.Mr = new ad((e) => Fu(e), ju)),
            (this.lastRemoteSnapshotVersion = cl.min()),
            (this.highestTargetId = 0),
            (this.Or = 0),
            (this.Nr = new Pp()),
            (this.targetCount = 0),
            (this.Lr = sp.Nn());
        }
        forEachTarget(e, t) {
          return this.Mr.forEach((e, n) => t(n)), kl.resolve();
        }
        getLastRemoteSnapshotVersion(e) {
          return kl.resolve(this.lastRemoteSnapshotVersion);
        }
        getHighestSequenceNumber(e) {
          return kl.resolve(this.Or);
        }
        allocateTargetId(e) {
          return (this.highestTargetId = this.Lr.next()), kl.resolve(this.highestTargetId);
        }
        setTargetsMetadata(e, t, n) {
          return n && (this.lastRemoteSnapshotVersion = n), t > this.Or && (this.Or = t), kl.resolve();
        }
        qn(e) {
          this.Mr.set(e.target, e);
          const t = e.targetId;
          t > this.highestTargetId && ((this.Lr = new sp(t)), (this.highestTargetId = t)),
            e.sequenceNumber > this.Or && (this.Or = e.sequenceNumber);
        }
        addTargetData(e, t) {
          return this.qn(t), (this.targetCount += 1), kl.resolve();
        }
        updateTargetData(e, t) {
          return this.qn(t), kl.resolve();
        }
        removeTargetData(e, t) {
          return this.Mr.delete(t.target), this.Nr.Vr(t.targetId), (this.targetCount -= 1), kl.resolve();
        }
        removeTargets(e, t, n) {
          let r = 0;
          const i = [];
          return (
            this.Mr.forEach((s, a) => {
              a.sequenceNumber <= t &&
                null === n.get(a.targetId) &&
                (this.Mr.delete(s), i.push(this.removeMatchingKeysForTargetId(e, a.targetId)), r++);
            }),
            kl.waitFor(i).next(() => r)
          );
        }
        getTargetCount(e) {
          return kl.resolve(this.targetCount);
        }
        getTargetData(e, t) {
          const n = this.Mr.get(t) || null;
          return kl.resolve(n);
        }
        addMatchingKeys(e, t, n) {
          return this.Nr.dr(t, n), kl.resolve();
        }
        removeMatchingKeys(e, t, n) {
          this.Nr.Rr(t, n);
          const r = this.persistence.referenceDelegate,
            i = [];
          return (
            r &&
              t.forEach((t) => {
                i.push(r.markPotentiallyOrphaned(e, t));
              }),
            kl.waitFor(i)
          );
        }
        removeMatchingKeysForTargetId(e, t) {
          return this.Nr.Vr(t), kl.resolve();
        }
        getMatchingKeysForTargetId(e, t) {
          const n = this.Nr.gr(t);
          return kl.resolve(n);
        }
        containsKey(e, t) {
          return kl.resolve(this.Nr.containsKey(t));
        }
      }
      class Mp {
        constructor(e, t) {
          (this.Br = {}),
            (this.overlays = {}),
            (this.kr = new Vl(0)),
            (this.qr = !1),
            (this.qr = !0),
            (this.referenceDelegate = e(this)),
            (this.Qr = new Rp(this)),
            (this.indexManager = new zf()),
            (this.remoteDocumentCache = (function (e) {
              return new Op(e);
            })((e) => this.referenceDelegate.Kr(e))),
            (this.serializer = new rf(t)),
            (this.$r = new Cp(this.serializer));
        }
        start() {
          return Promise.resolve();
        }
        shutdown() {
          return (this.qr = !1), Promise.resolve();
        }
        get started() {
          return this.qr;
        }
        setDatabaseDeletedListener() {}
        setNetworkEnabled() {}
        getIndexManager(e) {
          return this.indexManager;
        }
        getDocumentOverlayCache(e) {
          let t = this.overlays[e.toKey()];
          return t || ((t = new Np()), (this.overlays[e.toKey()] = t)), t;
        }
        getMutationQueue(e, t) {
          let n = this.Br[e.toKey()];
          return n || ((n = new Ap(t, this.referenceDelegate)), (this.Br[e.toKey()] = n)), n;
        }
        getTargetCache() {
          return this.Qr;
        }
        getRemoteDocumentCache() {
          return this.remoteDocumentCache;
        }
        getBundleCache() {
          return this.$r;
        }
        runTransaction(e, t, n) {
          Uo('MemoryPersistence', 'Starting transaction:', e);
          const r = new Fp(this.kr.next());
          return (
            this.referenceDelegate.Ur(),
            n(r)
              .next((e) => this.referenceDelegate.Wr(r).next(() => e))
              .toPromise()
              .then((e) => (r.raiseOnCommittedEvent(), e))
          );
        }
        Gr(e, t) {
          return kl.or(Object.values(this.Br).map((n) => () => n.containsKey(e, t)));
        }
      }
      class Fp extends Il {
        constructor(e) {
          super(), (this.currentSequenceNumber = e);
        }
      }
      class jp {
        constructor(e) {
          (this.persistence = e), (this.zr = new Pp()), (this.jr = null);
        }
        static Hr(e) {
          return new jp(e);
        }
        get Jr() {
          if (this.jr) return this.jr;
          throw qo();
        }
        addReference(e, t, n) {
          return this.zr.addReference(n, t), this.Jr.delete(n.toString()), kl.resolve();
        }
        removeReference(e, t, n) {
          return this.zr.removeReference(n, t), this.Jr.add(n.toString()), kl.resolve();
        }
        markPotentiallyOrphaned(e, t) {
          return this.Jr.add(t.toString()), kl.resolve();
        }
        removeTarget(e, t) {
          this.zr.Vr(t.targetId).forEach((e) => this.Jr.add(e.toString()));
          const n = this.persistence.getTargetCache();
          return n
            .getMatchingKeysForTargetId(e, t.targetId)
            .next((e) => {
              e.forEach((e) => this.Jr.add(e.toString()));
            })
            .next(() => n.removeTargetData(e, t));
        }
        Ur() {
          this.jr = new Set();
        }
        Wr(e) {
          const t = this.persistence.getRemoteDocumentCache().newChangeBuffer();
          return kl
            .forEach(this.Jr, (n) => {
              const r = pl.fromPath(n);
              return this.Yr(e, r).next((e) => {
                e || t.removeEntry(r, cl.min());
              });
            })
            .next(() => ((this.jr = null), t.apply(e)));
        }
        updateLimboDocument(e, t) {
          return this.Yr(e, t).next((e) => {
            e ? this.Jr.delete(t.toString()) : this.Jr.add(t.toString());
          });
        }
        Kr(e) {
          return 0;
        }
        Yr(e, t) {
          return kl.or([
            () => kl.resolve(this.zr.containsKey(t)),
            () => this.persistence.getTargetCache().containsKey(e, t),
            () => this.persistence.Gr(e, t),
          ]);
        }
      }
      class Up {
        constructor(e) {
          this.serializer = e;
        }
        O(e, t, n, r) {
          const i = new Cl('createOrUpgrade', t);
          n < 1 &&
            r >= 1 &&
            ((function (e) {
              e.createObjectStore('owner');
            })(e),
            (function (e) {
              e.createObjectStore('mutationQueues', { keyPath: 'userId' }),
                e
                  .createObjectStore('mutations', { keyPath: 'batchId', autoIncrement: !0 })
                  .createIndex('userMutationsIndex', Ql, { unique: !0 }),
                e.createObjectStore('documentMutations');
            })(e),
            Vp(e),
            (function (e) {
              e.createObjectStore('remoteDocuments');
            })(e));
          let s = kl.resolve();
          return (
            n < 3 &&
              r >= 3 &&
              (0 !== n &&
                ((function (e) {
                  e.deleteObjectStore('targetDocuments'), e.deleteObjectStore('targets'), e.deleteObjectStore('targetGlobal');
                })(e),
                Vp(e)),
              (s = s.next(() =>
                (function (e) {
                  const t = e.store('targetGlobal'),
                    n = {
                      highestTargetId: 0,
                      highestListenSequenceNumber: 0,
                      lastRemoteSnapshotVersion: cl.min().toTimestamp(),
                      targetCount: 0,
                    };
                  return t.put('targetGlobalKey', n);
                })(i),
              ))),
            n < 4 &&
              r >= 4 &&
              (0 !== n &&
                (s = s.next(() =>
                  (function (e, t) {
                    return t
                      .store('mutations')
                      .U()
                      .next((n) => {
                        e.deleteObjectStore('mutations'),
                          e
                            .createObjectStore('mutations', { keyPath: 'batchId', autoIncrement: !0 })
                            .createIndex('userMutationsIndex', Ql, { unique: !0 });
                        const r = t.store('mutations'),
                          i = n.map((e) => r.put(e));
                        return kl.waitFor(i);
                      });
                  })(e, i),
                )),
              (s = s.next(() => {
                !(function (e) {
                  e.createObjectStore('clientMetadata', { keyPath: 'clientId' });
                })(e);
              }))),
            n < 5 && r >= 5 && (s = s.next(() => this.Xr(i))),
            n < 6 &&
              r >= 6 &&
              (s = s.next(
                () => (
                  (function (e) {
                    e.createObjectStore('remoteDocumentGlobal');
                  })(e),
                  this.ei(i)
                ),
              )),
            n < 7 && r >= 7 && (s = s.next(() => this.ti(i))),
            n < 8 && r >= 8 && (s = s.next(() => this.ni(e, i))),
            n < 9 &&
              r >= 9 &&
              (s = s.next(() => {
                !(function (e) {
                  e.objectStoreNames.contains('remoteDocumentChanges') && e.deleteObjectStore('remoteDocumentChanges');
                })(e);
              })),
            n < 10 && r >= 10 && (s = s.next(() => this.ri(i))),
            n < 11 &&
              r >= 11 &&
              (s = s.next(() => {
                !(function (e) {
                  e.createObjectStore('bundles', { keyPath: 'bundleId' });
                })(e),
                  (function (e) {
                    e.createObjectStore('namedQueries', { keyPath: 'name' });
                  })(e);
              })),
            n < 12 &&
              r >= 12 &&
              (s = s.next(() => {
                !(function (e) {
                  const t = e.createObjectStore('documentOverlays', { keyPath: cc });
                  t.createIndex('collectionPathOverlayIndex', uc, { unique: !1 }),
                    t.createIndex('collectionGroupOverlayIndex', dc, { unique: !1 });
                })(e);
              })),
            n < 13 &&
              r >= 13 &&
              (s = s
                .next(() =>
                  (function (e) {
                    const t = e.createObjectStore('remoteDocumentsV14', { keyPath: $l });
                    t.createIndex('documentKeyIndex', Zl), t.createIndex('collectionGroupIndex', ec);
                  })(e),
                )
                .next(() => this.ii(e, i))
                .next(() => e.deleteObjectStore('remoteDocuments'))),
            n < 14 && r >= 14 && (s = s.next(() => this.si(e, i))),
            n < 15 &&
              r >= 15 &&
              (s = s.next(() =>
                (function (e) {
                  e
                    .createObjectStore('indexConfiguration', { keyPath: 'indexId', autoIncrement: !0 })
                    .createIndex('collectionGroupIndex', 'collectionGroup', { unique: !1 }),
                    e.createObjectStore('indexState', { keyPath: sc }).createIndex('sequenceNumberIndex', ac, { unique: !1 }),
                    e.createObjectStore('indexEntries', { keyPath: oc }).createIndex('documentKeyIndex', lc, { unique: !1 });
                })(e),
              )),
            n < 16 &&
              r >= 16 &&
              (s = s
                .next(() => {
                  t.objectStore('indexState').clear();
                })
                .next(() => {
                  t.objectStore('indexEntries').clear();
                })),
            s
          );
        }
        ei(e) {
          let t = 0;
          return e
            .store('remoteDocuments')
            .J((e, n) => {
              t += Zf(n);
            })
            .next(() => {
              const n = { byteSize: t };
              return e.store('remoteDocumentGlobal').put('remoteDocumentGlobalKey', n);
            });
        }
        Xr(e) {
          const t = e.store('mutationQueues'),
            n = e.store('mutations');
          return t.U().next((t) =>
            kl.forEach(t, (t) => {
              const r = IDBKeyRange.bound([t.userId, -1], [t.userId, t.lastAcknowledgedBatchId]);
              return n.U('userMutationsIndex', r).next((n) =>
                kl.forEach(n, (n) => {
                  Go(n.userId === t.userId);
                  const r = cf(this.serializer, n);
                  return $f(e, t.userId, r).next(() => {});
                }),
              );
            }),
          );
        }
        ti(e) {
          const t = e.store('targetDocuments'),
            n = e.store('remoteDocuments');
          return e
            .store('targetGlobal')
            .get('targetGlobalKey')
            .next((e) => {
              const r = [];
              return n
                .J((n, i) => {
                  const s = new dl(n),
                    a = (function (e) {
                      return [0, Gl(e)];
                    })(s);
                  r.push(
                    t
                      .get(a)
                      .next((n) =>
                        n
                          ? kl.resolve()
                          : ((n) => t.put({ targetId: 0, path: Gl(n), sequenceNumber: e.highestListenSequenceNumber }))(s),
                      ),
                  );
                })
                .next(() => kl.waitFor(r));
            });
        }
        ni(e, t) {
          e.createObjectStore('collectionParents', { keyPath: ic });
          const n = t.store('collectionParents'),
            r = new Bf(),
            i = (e) => {
              if (r.add(e)) {
                const t = e.lastSegment(),
                  r = e.popLast();
                return n.put({ collectionId: t, parent: Gl(r) });
              }
            };
          return t
            .store('remoteDocuments')
            .J({ H: !0 }, (e, t) => {
              const n = new dl(e);
              return i(n.popLast());
            })
            .next(() =>
              t.store('documentMutations').J({ H: !0 }, (e, t) => {
                let [n, r, s] = e;
                const a = Wl(r);
                return i(a.popLast());
              }),
            );
        }
        ri(e) {
          const t = e.store('targets');
          return t.J((e, n) => {
            const r = uf(n),
              i = df(this.serializer, r);
            return t.put(i);
          });
        }
        ii(e, t) {
          const n = t.store('remoteDocuments'),
            r = [];
          return n
            .J((e, n) => {
              const i = t.store('remoteDocumentsV14'),
                s = (function (e) {
                  return e.document
                    ? new pl(dl.fromString(e.document.name).popFirst(5))
                    : e.noDocument
                      ? pl.fromSegments(e.noDocument.path)
                      : e.unknownDocument
                        ? pl.fromSegments(e.unknownDocument.path)
                        : qo();
                })(n).path.toArray(),
                a = {
                  prefixPath: s.slice(0, s.length - 2),
                  collectionGroup: s[s.length - 2],
                  documentId: s[s.length - 1],
                  readTime: n.readTime || [0, 0],
                  unknownDocument: n.unknownDocument,
                  noDocument: n.noDocument,
                  document: n.document,
                  hasCommittedMutations: !!n.hasCommittedMutations,
                };
              r.push(i.put(a));
            })
            .next(() => kl.waitFor(r));
        }
        si(e, t) {
          const n = t.store('mutations'),
            r = wp(this.serializer),
            i = new Mp(jp.Hr, this.serializer.ct);
          return n.U().next((e) => {
            const n = new Map();
            return (
              e.forEach((e) => {
                var t;
                let r = null !== (t = n.get(e.userId)) && void 0 !== t ? t : vd();
                cf(this.serializer, e)
                  .keys()
                  .forEach((e) => (r = r.add(e))),
                  n.set(e.userId, r);
              }),
              kl.forEach(n, (e, n) => {
                const s = new Ro(n),
                  a = wf.lt(this.serializer, s),
                  o = i.getIndexManager(s),
                  l = ep.lt(s, this.serializer, o, i.referenceDelegate);
                return new kp(r, l, a, o).recalculateAndSaveOverlaysForDocumentKeys(new yc(t, Vl.oe), e).next();
              })
            );
          });
        }
      }
      function Vp(e) {
        e.createObjectStore('targetDocuments', { keyPath: nc }).createIndex('documentTargetsIndex', rc, { unique: !0 }),
          e.createObjectStore('targets', { keyPath: 'targetId' }).createIndex('queryTargetsIndex', tc, { unique: !0 }),
          e.createObjectStore('targetGlobal');
      }
      const zp =
        'Failed to obtain exclusive access to the persistence layer. To allow shared access, multi-tab synchronization has to be enabled in all tabs. If you are using `experimentalForceOwningTab:true`, make sure that only one tab has persistence enabled at any given time.';
      class Bp {
        constructor(e, t, n, r, i, s, a, o, l, c) {
          let u = arguments.length > 10 && void 0 !== arguments[10] ? arguments[10] : 16;
          if (
            ((this.allowTabSynchronization = e),
            (this.persistenceKey = t),
            (this.clientId = n),
            (this.oi = i),
            (this.window = s),
            (this.document = a),
            (this._i = l),
            (this.ai = c),
            (this.ui = u),
            (this.kr = null),
            (this.qr = !1),
            (this.isPrimary = !1),
            (this.networkEnabled = !0),
            (this.ci = null),
            (this.inForeground = !1),
            (this.li = null),
            (this.hi = null),
            (this.Pi = Number.NEGATIVE_INFINITY),
            (this.Ii = (e) => Promise.resolve()),
            !Bp.D())
          )
            throw new Wo(
              Ko.UNIMPLEMENTED,
              'This platform is either missing IndexedDB or is known to have an incomplete implementation. Offline persistence has been disabled.',
            );
          (this.referenceDelegate = new mp(this, r)),
            (this.Ti = t + 'main'),
            (this.serializer = new rf(o)),
            (this.Ei = new Nl(this.Ti, this.ui, new Up(this.serializer))),
            (this.Qr = new ap(this.referenceDelegate, this.serializer)),
            (this.remoteDocumentCache = wp(this.serializer)),
            (this.$r = new gf()),
            this.window && this.window.localStorage
              ? (this.di = this.window.localStorage)
              : ((this.di = null),
                !1 === c &&
                  Vo(
                    'IndexedDbPersistence',
                    'LocalStorage is unavailable. As a result, persistence may not work reliably. In particular enablePersistence() could fail immediately after refreshing the page.',
                  ));
        }
        start() {
          return this.Ai()
            .then(() => {
              if (!this.isPrimary && !this.allowTabSynchronization) throw new Wo(Ko.FAILED_PRECONDITION, zp);
              return (
                this.Ri(),
                this.Vi(),
                this.mi(),
                this.runTransaction('getHighestListenSequenceNumber', 'readonly', (e) => this.Qr.getHighestSequenceNumber(e))
              );
            })
            .then((e) => {
              this.kr = new Vl(e, this._i);
            })
            .then(() => {
              this.qr = !0;
            })
            .catch((e) => (this.Ei && this.Ei.close(), Promise.reject(e)));
        }
        fi(e) {
          return (
            (this.Ii = async (t) => {
              if (this.started) return e(t);
            }),
            e(this.isPrimary)
          );
        }
        setDatabaseDeletedListener(e) {
          this.Ei.L(async (t) => {
            null === t.newVersion && (await e());
          });
        }
        setNetworkEnabled(e) {
          this.networkEnabled !== e &&
            ((this.networkEnabled = e),
            this.oi.enqueueAndForget(async () => {
              this.started && (await this.Ai());
            }));
        }
        Ai() {
          return this.runTransaction('updateClientMetadataAndTryBecomePrimary', 'readwrite', (e) =>
            Gp(e)
              .put({
                clientId: this.clientId,
                updateTimeMs: Date.now(),
                networkEnabled: this.networkEnabled,
                inForeground: this.inForeground,
              })
              .next(() => {
                if (this.isPrimary)
                  return this.gi(e).next((e) => {
                    e || ((this.isPrimary = !1), this.oi.enqueueRetryable(() => this.Ii(!1)));
                  });
              })
              .next(() => this.pi(e))
              .next((t) => (this.isPrimary && !t ? this.yi(e).next(() => !1) : !!t && this.wi(e).next(() => !0))),
          )
            .catch((e) => {
              if (Ol(e)) return Uo('IndexedDbPersistence', 'Failed to extend owner lease: ', e), this.isPrimary;
              if (!this.allowTabSynchronization) throw e;
              return Uo('IndexedDbPersistence', 'Releasing owner lease after error during lease refresh', e), !1;
            })
            .then((e) => {
              this.isPrimary !== e && this.oi.enqueueRetryable(() => this.Ii(e)), (this.isPrimary = e);
            });
        }
        gi(e) {
          return qp(e)
            .get('owner')
            .next((e) => kl.resolve(this.Si(e)));
        }
        bi(e) {
          return Gp(e).delete(this.clientId);
        }
        async Di() {
          if (this.isPrimary && !this.Ci(this.Pi, 18e5)) {
            this.Pi = Date.now();
            const e = await this.runTransaction('maybeGarbageCollectMultiClientState', 'readwrite-primary', (e) => {
              const t = wc(e, 'clientMetadata');
              return t.U().next((e) => {
                const n = this.vi(e, 18e5),
                  r = e.filter((e) => -1 === n.indexOf(e));
                return kl.forEach(r, (e) => t.delete(e.clientId)).next(() => r);
              });
            }).catch(() => []);
            if (this.di) for (const t of e) this.di.removeItem(this.Fi(t.clientId));
          }
        }
        mi() {
          this.hi = this.oi.enqueueAfterDelay('client_metadata_refresh', 4e3, () =>
            this.Ai()
              .then(() => this.Di())
              .then(() => this.mi()),
          );
        }
        Si(e) {
          return !!e && e.ownerId === this.clientId;
        }
        pi(e) {
          return this.ai
            ? kl.resolve(!0)
            : qp(e)
                .get('owner')
                .next((t) => {
                  if (null !== t && this.Ci(t.leaseTimestampMs, 5e3) && !this.Mi(t.ownerId)) {
                    if (this.Si(t) && this.networkEnabled) return !0;
                    if (!this.Si(t)) {
                      if (!t.allowTabSynchronization) throw new Wo(Ko.FAILED_PRECONDITION, zp);
                      return !1;
                    }
                  }
                  return (
                    !(!this.networkEnabled || !this.inForeground) ||
                    Gp(e)
                      .U()
                      .next(
                        (e) =>
                          void 0 ===
                          this.vi(e, 5e3).find((e) => {
                            if (this.clientId !== e.clientId) {
                              const t = !this.networkEnabled && e.networkEnabled,
                                n = !this.inForeground && e.inForeground,
                                r = this.networkEnabled === e.networkEnabled;
                              if (t || (n && r)) return !0;
                            }
                            return !1;
                          }),
                      )
                  );
                })
                .next(
                  (e) => (
                    this.isPrimary !== e &&
                      Uo('IndexedDbPersistence', 'Client '.concat(e ? 'is' : 'is not', ' eligible for a primary lease.')),
                    e
                  ),
                );
        }
        async shutdown() {
          (this.qr = !1),
            this.xi(),
            this.hi && (this.hi.cancel(), (this.hi = null)),
            this.Oi(),
            this.Ni(),
            await this.Ei.runTransaction('shutdown', 'readwrite', ['owner', 'clientMetadata'], (e) => {
              const t = new yc(e, Vl.oe);
              return this.yi(t).next(() => this.bi(t));
            }),
            this.Ei.close(),
            this.Li();
        }
        vi(e, t) {
          return e.filter((e) => this.Ci(e.updateTimeMs, t) && !this.Mi(e.clientId));
        }
        Bi() {
          return this.runTransaction('getActiveClients', 'readonly', (e) =>
            Gp(e)
              .U()
              .next((e) => this.vi(e, 18e5).map((e) => e.clientId)),
          );
        }
        get started() {
          return this.qr;
        }
        getMutationQueue(e, t) {
          return ep.lt(e, this.serializer, t, this.referenceDelegate);
        }
        getTargetCache() {
          return this.Qr;
        }
        getRemoteDocumentCache() {
          return this.remoteDocumentCache;
        }
        getIndexManager(e) {
          return new Gf(e, this.serializer.ct.databaseId);
        }
        getDocumentOverlayCache(e) {
          return wf.lt(this.serializer, e);
        }
        getBundleCache() {
          return this.$r;
        }
        runTransaction(e, t, n) {
          Uo('IndexedDbPersistence', 'Starting transaction:', e);
          const r = 'readonly' === t ? 'readonly' : 'readwrite',
            i = (function (e) {
              return 16 === e ? vc : 15 === e ? gc : 14 === e ? mc : 13 === e ? pc : 12 === e ? fc : 11 === e ? hc : void qo();
            })(this.ui);
          let s;
          return this.Ei.runTransaction(
            e,
            r,
            i,
            (r) => (
              (s = new yc(r, this.kr ? this.kr.next() : Vl.oe)),
              'readwrite-primary' === t
                ? this.gi(s)
                    .next((e) => !!e || this.pi(s))
                    .next((t) => {
                      if (!t)
                        throw (
                          (Vo("Failed to obtain primary lease for action '".concat(e, "'.")),
                          (this.isPrimary = !1),
                          this.oi.enqueueRetryable(() => this.Ii(!1)),
                          new Wo(Ko.FAILED_PRECONDITION, _l))
                        );
                      return n(s);
                    })
                    .next((e) => this.wi(s).next(() => e))
                : this.ki(s).next(() => n(s))
            ),
          ).then((e) => (s.raiseOnCommittedEvent(), e));
        }
        ki(e) {
          return qp(e)
            .get('owner')
            .next((e) => {
              if (
                null !== e &&
                this.Ci(e.leaseTimestampMs, 5e3) &&
                !this.Mi(e.ownerId) &&
                !this.Si(e) &&
                !(this.ai || (this.allowTabSynchronization && e.allowTabSynchronization))
              )
                throw new Wo(Ko.FAILED_PRECONDITION, zp);
            });
        }
        wi(e) {
          const t = {
            ownerId: this.clientId,
            allowTabSynchronization: this.allowTabSynchronization,
            leaseTimestampMs: Date.now(),
          };
          return qp(e).put('owner', t);
        }
        static D() {
          return Nl.D();
        }
        yi(e) {
          const t = qp(e);
          return t
            .get('owner')
            .next((e) =>
              this.Si(e) ? (Uo('IndexedDbPersistence', 'Releasing primary lease.'), t.delete('owner')) : kl.resolve(),
            );
        }
        Ci(e, t) {
          const n = Date.now();
          return (
            !(e < n - t) && (!(e > n) || (Vo('Detected an update time that is in the future: '.concat(e, ' > ').concat(n)), !1))
          );
        }
        Ri() {
          null !== this.document &&
            'function' == typeof this.document.addEventListener &&
            ((this.li = () => {
              this.oi.enqueueAndForget(() => ((this.inForeground = 'visible' === this.document.visibilityState), this.Ai()));
            }),
            this.document.addEventListener('visibilitychange', this.li),
            (this.inForeground = 'visible' === this.document.visibilityState));
        }
        Oi() {
          this.li && (this.document.removeEventListener('visibilitychange', this.li), (this.li = null));
        }
        Vi() {
          var e;
          'function' == typeof (null === (e = this.window) || void 0 === e ? void 0 : e.addEventListener) &&
            ((this.ci = () => {
              this.xi();
              const e = /(?:Version|Mobile)\/1[456]/;
              mn() && (navigator.appVersion.match(e) || navigator.userAgent.match(e)) && this.oi.enterRestrictedMode(!0),
                this.oi.enqueueAndForget(() => this.shutdown());
            }),
            this.window.addEventListener('pagehide', this.ci));
        }
        Ni() {
          this.ci && (this.window.removeEventListener('pagehide', this.ci), (this.ci = null));
        }
        Mi(e) {
          var t;
          try {
            const n = null !== (null === (t = this.di) || void 0 === t ? void 0 : t.getItem(this.Fi(e)));
            return (
              Uo('IndexedDbPersistence', "Client '".concat(e, "' ").concat(n ? 'is' : 'is not', ' zombied in LocalStorage')), n
            );
          } catch (e) {
            return Vo('IndexedDbPersistence', 'Failed to get zombied client id.', e), !1;
          }
        }
        xi() {
          if (this.di)
            try {
              this.di.setItem(this.Fi(this.clientId), String(Date.now()));
            } catch (Wy) {
              Vo('Failed to set zombie client id.', Wy);
            }
        }
        Li() {
          if (this.di)
            try {
              this.di.removeItem(this.Fi(this.clientId));
            } catch (Wy) {}
        }
        Fi(e) {
          return 'firestore_zombie_'.concat(this.persistenceKey, '_').concat(e);
        }
      }
      function qp(e) {
        return wc(e, 'owner');
      }
      function Gp(e) {
        return wc(e, 'clientMetadata');
      }
      function Hp(e, t) {
        let n = e.projectId;
        return e.isDefaultDatabase || (n += '.' + e.database), 'firestore/' + t + '/' + n + '/';
      }
      class Kp {
        constructor(e, t, n, r) {
          (this.targetId = e), (this.fromCache = t), (this.qi = n), (this.Qi = r);
        }
        static Ki(e, t) {
          let n = vd(),
            r = vd();
          for (const i of t.docChanges)
            switch (i.type) {
              case 0:
                n = n.add(i.doc.key);
                break;
              case 1:
                r = r.add(i.doc.key);
            }
          return new Kp(e, t.fromCache, n, r);
        }
      }
      class Wp {
        constructor() {
          this._documentReadCount = 0;
        }
        get documentReadCount() {
          return this._documentReadCount;
        }
        incrementDocumentReadCount(e) {
          this._documentReadCount += e;
        }
      }
      class Qp {
        constructor() {
          (this.$i = !1), (this.Ui = !1), (this.Wi = 100), (this.Gi = mn() ? 8 : Pl(pn()) > 0 ? 6 : 4);
        }
        initialize(e, t) {
          (this.zi = e), (this.indexManager = t), (this.$i = !0);
        }
        getDocumentsMatchingQuery(e, t, n, r) {
          const i = { result: null };
          return this.ji(e, t)
            .next((e) => {
              i.result = e;
            })
            .next(() => {
              if (!i.result)
                return this.Hi(e, t, r, n).next((e) => {
                  i.result = e;
                });
            })
            .next(() => {
              if (i.result) return;
              const n = new Wp();
              return this.Ji(e, t, n).next((r) => {
                if (((i.result = r), this.Ui)) return this.Yi(e, t, n, r.size);
              });
            })
            .next(() => i.result);
        }
        Yi(e, t, n, r) {
          return n.documentReadCount < this.Wi
            ? (jo() <= On.DEBUG &&
                Uo(
                  'QueryEngine',
                  'SDK will not create cache indexes for query:',
                  td(t),
                  'since it only creates cache indexes for collection contains',
                  'more than or equal to',
                  this.Wi,
                  'documents',
                ),
              kl.resolve())
            : (jo() <= On.DEBUG &&
                Uo(
                  'QueryEngine',
                  'Query:',
                  td(t),
                  'scans',
                  n.documentReadCount,
                  'local documents and returns',
                  r,
                  'documents as results.',
                ),
              n.documentReadCount > this.Gi * r
                ? (jo() <= On.DEBUG &&
                    Uo(
                      'QueryEngine',
                      'The SDK decides to create cache indexes for query:',
                      td(t),
                      'as using cache indexes may help improve performance.',
                    ),
                  this.indexManager.createTargetIndexes(e, Yu(t)))
                : kl.resolve());
        }
        ji(e, t) {
          if (Ku(t)) return kl.resolve(null);
          let n = Yu(t);
          return this.indexManager.getIndexType(e, n).next((r) =>
            0 === r
              ? null
              : (null !== t.limit && 1 === r && ((t = $u(t, null, 'F')), (n = Yu(t))),
                this.indexManager.getDocumentsMatchingTarget(e, n).next((r) => {
                  const i = vd(...r);
                  return this.zi.getDocuments(e, i).next((r) =>
                    this.indexManager.getMinOffset(e, n).next((n) => {
                      const s = this.Zi(t, r);
                      return this.Xi(t, s, i, n.readTime) ? this.ji(e, $u(t, null, 'F')) : this.es(e, s, t, n);
                    }),
                  );
                })),
          );
        }
        Hi(e, t, n, r) {
          return Ku(t) || r.isEqual(cl.min())
            ? kl.resolve(null)
            : this.zi.getDocuments(e, n).next((i) => {
                const s = this.Zi(t, i);
                return this.Xi(t, s, n, r)
                  ? kl.resolve(null)
                  : (jo() <= On.DEBUG &&
                      Uo('QueryEngine', 'Re-using previous result from %s to execute query: %s', r.toString(), td(t)),
                    this.es(e, s, t, bl(r, -1)).next((e) => e));
              });
        }
        Zi(e, t) {
          let n = new xc(id(e));
          return (
            t.forEach((t, r) => {
              nd(e, r) && (n = n.add(r));
            }),
            n
          );
        }
        Xi(e, t, n, r) {
          if (null === e.limit) return !1;
          if (n.size !== t.size) return !0;
          const i = 'F' === e.limitType ? t.last() : t.first();
          return !!i && (i.hasPendingWrites || i.version.compareTo(r) > 0);
        }
        Ji(e, t, n) {
          return (
            jo() <= On.DEBUG && Uo('QueryEngine', 'Using full collection scan to execute query:', td(t)),
            this.zi.getDocumentsMatchingQuery(e, t, El.min(), n)
          );
        }
        es(e, t, n, r) {
          return this.zi.getDocumentsMatchingQuery(e, n, r).next(
            (e) => (
              t.forEach((t) => {
                e = e.insert(t.key, t);
              }),
              e
            ),
          );
        }
      }
      class Yp {
        constructor(e, t, n, r) {
          (this.persistence = e),
            (this.ts = t),
            (this.serializer = r),
            (this.ns = new Tc(sl)),
            (this.rs = new ad((e) => Fu(e), ju)),
            (this.ss = new Map()),
            (this.os = e.getRemoteDocumentCache()),
            (this.Qr = e.getTargetCache()),
            (this.$r = e.getBundleCache()),
            this._s(n);
        }
        _s(e) {
          (this.documentOverlayCache = this.persistence.getDocumentOverlayCache(e)),
            (this.indexManager = this.persistence.getIndexManager(e)),
            (this.mutationQueue = this.persistence.getMutationQueue(e, this.indexManager)),
            (this.localDocuments = new kp(this.os, this.mutationQueue, this.documentOverlayCache, this.indexManager)),
            this.os.setIndexManager(this.indexManager),
            this.ts.initialize(this.localDocuments, this.indexManager);
        }
        collectGarbage(e) {
          return this.persistence.runTransaction('Collect garbage', 'readwrite-primary', (t) => e.collect(t, this.ns));
        }
      }
      function Jp(e, t, n, r) {
        return new Yp(e, t, n, r);
      }
      async function Xp(e, t) {
        const n = Ho(e);
        return await n.persistence.runTransaction('Handle user change', 'readonly', (e) => {
          let r;
          return n.mutationQueue
            .getAllMutationBatches(e)
            .next((i) => ((r = i), n._s(t), n.mutationQueue.getAllMutationBatches(e)))
            .next((t) => {
              const i = [],
                s = [];
              let a = vd();
              for (const e of r) {
                i.push(e.batchId);
                for (const t of e.mutations) a = a.add(t.key);
              }
              for (const e of t) {
                s.push(e.batchId);
                for (const t of e.mutations) a = a.add(t.key);
              }
              return n.localDocuments.getDocuments(e, a).next((e) => ({ us: e, removedBatchIds: i, addedBatchIds: s }));
            });
        });
      }
      function $p(e) {
        const t = Ho(e);
        return t.persistence.runTransaction('Get last remote snapshot version', 'readonly', (e) =>
          t.Qr.getLastRemoteSnapshotVersion(e),
        );
      }
      function Zp(e, t, n) {
        let r = vd(),
          i = vd();
        return (
          n.forEach((e) => (r = r.add(e))),
          t.getEntries(e, r).next((e) => {
            let r = ld();
            return (
              n.forEach((n, s) => {
                const a = e.get(n);
                s.isFoundDocument() !== a.isFoundDocument() && (i = i.add(n)),
                  s.isNoDocument() && s.version.isEqual(cl.min())
                    ? (t.removeEntry(n, s.readTime), (r = r.insert(n, s)))
                    : !a.isValidDocument() ||
                        s.version.compareTo(a.version) > 0 ||
                        (0 === s.version.compareTo(a.version) && a.hasPendingWrites)
                      ? (t.addEntry(s), (r = r.insert(n, s)))
                      : Uo(
                          'LocalStore',
                          'Ignoring outdated watch update for ',
                          n,
                          '. Current version:',
                          a.version,
                          ' Watch version:',
                          s.version,
                        );
              }),
              { cs: r, ls: i }
            );
          })
        );
      }
      function em(e, t) {
        const n = Ho(e);
        return n.persistence.runTransaction(
          'Get next mutation batch',
          'readonly',
          (e) => (void 0 === t && (t = -1), n.mutationQueue.getNextMutationBatchAfterBatchId(e, t)),
        );
      }
      function tm(e, t) {
        const n = Ho(e);
        return n.persistence
          .runTransaction('Allocate target', 'readwrite', (e) => {
            let r;
            return n.Qr.getTargetData(e, t).next((i) =>
              i
                ? ((r = i), kl.resolve(r))
                : n.Qr.allocateTargetId(e).next(
                    (i) => (
                      (r = new nf(t, i, 'TargetPurposeListen', e.currentSequenceNumber)), n.Qr.addTargetData(e, r).next(() => r)
                    ),
                  ),
            );
          })
          .then((e) => {
            const r = n.ns.get(e.targetId);
            return (
              (null === r || e.snapshotVersion.compareTo(r.snapshotVersion) > 0) &&
                ((n.ns = n.ns.insert(e.targetId, e)), n.rs.set(t, e.targetId)),
              e
            );
          });
      }
      async function nm(e, t, n) {
        const r = Ho(e),
          i = r.ns.get(t),
          s = n ? 'readwrite' : 'readwrite-primary';
        try {
          n ||
            (await r.persistence.runTransaction('Release target', s, (e) => r.persistence.referenceDelegate.removeTarget(e, i)));
        } catch (e) {
          if (!Ol(e)) throw e;
          Uo('LocalStore', 'Failed to update sequence numbers for target '.concat(t, ': ').concat(e));
        }
        (r.ns = r.ns.remove(t)), r.rs.delete(i.target);
      }
      function rm(e, t, n) {
        const r = Ho(e);
        let i = cl.min(),
          s = vd();
        return r.persistence.runTransaction('Execute query', 'readwrite', (e) =>
          (function (e, t, n) {
            const r = Ho(e),
              i = r.rs.get(n);
            return void 0 !== i ? kl.resolve(r.ns.get(i)) : r.Qr.getTargetData(t, n);
          })(r, e, Yu(t))
            .next((t) => {
              if (t)
                return (
                  (i = t.lastLimboFreeSnapshotVersion),
                  r.Qr.getMatchingKeysForTargetId(e, t.targetId).next((e) => {
                    s = e;
                  })
                );
            })
            .next(() => r.ts.getDocumentsMatchingQuery(e, t, n ? i : cl.min(), n ? s : vd()))
            .next((e) => (am(r, rd(t), e), { documents: e, hs: s })),
        );
      }
      function im(e, t) {
        const n = Ho(e),
          r = Ho(n.Qr),
          i = n.ns.get(t);
        return i
          ? Promise.resolve(i.target)
          : n.persistence.runTransaction('Get target data', 'readonly', (e) => r.ot(e, t).next((e) => (e ? e.target : null)));
      }
      function sm(e, t) {
        const n = Ho(e),
          r = n.ss.get(t) || cl.min();
        return n.persistence
          .runTransaction('Get new document changes', 'readonly', (e) =>
            n.os.getAllFromCollectionGroup(e, t, bl(r, -1), Number.MAX_SAFE_INTEGER),
          )
          .then((e) => (am(n, t, e), e));
      }
      function am(e, t, n) {
        let r = e.ss.get(t) || cl.min();
        n.forEach((e, t) => {
          t.readTime.compareTo(r) > 0 && (r = t.readTime);
        }),
          e.ss.set(t, r);
      }
      function om(e, t) {
        return 'firestore_clients_'.concat(e, '_').concat(t);
      }
      function lm(e, t, n) {
        let r = 'firestore_mutations_'.concat(e, '_').concat(n);
        return t.isAuthenticated() && (r += '_'.concat(t.uid)), r;
      }
      function cm(e, t) {
        return 'firestore_targets_'.concat(e, '_').concat(t);
      }
      class um {
        constructor(e, t, n, r) {
          (this.user = e), (this.batchId = t), (this.state = n), (this.error = r);
        }
        static Es(e, t, n) {
          const r = JSON.parse(n);
          let i,
            s =
              'object' == typeof r &&
              -1 !== ['pending', 'acknowledged', 'rejected'].indexOf(r.state) &&
              (void 0 === r.error || 'object' == typeof r.error);
          return (
            s &&
              r.error &&
              ((s = 'string' == typeof r.error.message && 'string' == typeof r.error.code),
              s && (i = new Wo(r.error.code, r.error.message))),
            s
              ? new um(e, t, r.state, i)
              : (Vo('SharedClientState', "Failed to parse mutation state for ID '".concat(t, "': ").concat(n)), null)
          );
        }
        ds() {
          const e = { state: this.state, updateTimeMs: Date.now() };
          return this.error && (e.error = { code: this.error.code, message: this.error.message }), JSON.stringify(e);
        }
      }
      class dm {
        constructor(e, t, n) {
          (this.targetId = e), (this.state = t), (this.error = n);
        }
        static Es(e, t) {
          const n = JSON.parse(t);
          let r,
            i =
              'object' == typeof n &&
              -1 !== ['not-current', 'current', 'rejected'].indexOf(n.state) &&
              (void 0 === n.error || 'object' == typeof n.error);
          return (
            i &&
              n.error &&
              ((i = 'string' == typeof n.error.message && 'string' == typeof n.error.code),
              i && (r = new Wo(n.error.code, n.error.message))),
            i
              ? new dm(e, n.state, r)
              : (Vo('SharedClientState', "Failed to parse target state for ID '".concat(e, "': ").concat(t)), null)
          );
        }
        ds() {
          const e = { state: this.state, updateTimeMs: Date.now() };
          return this.error && (e.error = { code: this.error.code, message: this.error.message }), JSON.stringify(e);
        }
      }
      class hm {
        constructor(e, t) {
          (this.clientId = e), (this.activeTargetIds = t);
        }
        static Es(e, t) {
          const n = JSON.parse(t);
          let r = 'object' == typeof n && n.activeTargetIds instanceof Array,
            i = wd();
          for (let s = 0; r && s < n.activeTargetIds.length; ++s)
            (r = ql(n.activeTargetIds[s])), (i = i.add(n.activeTargetIds[s]));
          return r
            ? new hm(e, i)
            : (Vo('SharedClientState', "Failed to parse client data for instance '".concat(e, "': ").concat(t)), null);
        }
      }
      class fm {
        constructor(e, t) {
          (this.clientId = e), (this.onlineState = t);
        }
        static Es(e) {
          const t = JSON.parse(e);
          return 'object' == typeof t &&
            -1 !== ['Unknown', 'Online', 'Offline'].indexOf(t.onlineState) &&
            'string' == typeof t.clientId
            ? new fm(t.clientId, t.onlineState)
            : (Vo('SharedClientState', 'Failed to parse online state: '.concat(e)), null);
        }
      }
      class pm {
        constructor() {
          this.activeTargetIds = wd();
        }
        As(e) {
          this.activeTargetIds = this.activeTargetIds.add(e);
        }
        Rs(e) {
          this.activeTargetIds = this.activeTargetIds.delete(e);
        }
        ds() {
          const e = { activeTargetIds: this.activeTargetIds.toArray(), updateTimeMs: Date.now() };
          return JSON.stringify(e);
        }
      }
      class mm {
        constructor(e, t, n, r, i) {
          (this.window = e),
            (this.oi = t),
            (this.persistenceKey = n),
            (this.Vs = r),
            (this.syncEngine = null),
            (this.onlineStateHandler = null),
            (this.sequenceNumberHandler = null),
            (this.fs = this.gs.bind(this)),
            (this.ps = new Tc(sl)),
            (this.started = !1),
            (this.ys = []);
          const s = n.replace(/[.*+?^${}()|[\]\\]/g, '\\$&');
          (this.storage = this.window.localStorage),
            (this.currentUser = i),
            (this.ws = om(this.persistenceKey, this.Vs)),
            (this.Ss = (function (e) {
              return 'firestore_sequence_number_'.concat(e);
            })(this.persistenceKey)),
            (this.ps = this.ps.insert(this.Vs, new pm())),
            (this.bs = new RegExp('^firestore_clients_'.concat(s, '_([^_]*)$'))),
            (this.Ds = new RegExp('^firestore_mutations_'.concat(s, '_(\\d+)(?:_(.*))?$'))),
            (this.Cs = new RegExp('^firestore_targets_'.concat(s, '_(\\d+)$'))),
            (this.vs = (function (e) {
              return 'firestore_online_state_'.concat(e);
            })(this.persistenceKey)),
            (this.Fs = (function (e) {
              return 'firestore_bundle_loaded_v2_'.concat(e);
            })(this.persistenceKey)),
            this.window.addEventListener('storage', this.fs);
        }
        static D(e) {
          return !(!e || !e.localStorage);
        }
        async start() {
          const e = await this.syncEngine.Bi();
          for (const n of e) {
            if (n === this.Vs) continue;
            const e = this.getItem(om(this.persistenceKey, n));
            if (e) {
              const t = hm.Es(n, e);
              t && (this.ps = this.ps.insert(t.clientId, t));
            }
          }
          this.Ms();
          const t = this.storage.getItem(this.vs);
          if (t) {
            const e = this.xs(t);
            e && this.Os(e);
          }
          for (const n of this.ys) this.gs(n);
          (this.ys = []), this.window.addEventListener('pagehide', () => this.shutdown()), (this.started = !0);
        }
        writeSequenceNumber(e) {
          this.setItem(this.Ss, JSON.stringify(e));
        }
        getAllActiveQueryTargets() {
          return this.Ns(this.ps);
        }
        isActiveQueryTarget(e) {
          let t = !1;
          return (
            this.ps.forEach((n, r) => {
              r.activeTargetIds.has(e) && (t = !0);
            }),
            t
          );
        }
        addPendingMutation(e) {
          this.Ls(e, 'pending');
        }
        updateMutationState(e, t, n) {
          this.Ls(e, t, n), this.Bs(e);
        }
        addLocalQueryTarget(e) {
          let t = 'not-current';
          if (this.isActiveQueryTarget(e)) {
            const n = this.storage.getItem(cm(this.persistenceKey, e));
            if (n) {
              const r = dm.Es(e, n);
              r && (t = r.state);
            }
          }
          return this.ks.As(e), this.Ms(), t;
        }
        removeLocalQueryTarget(e) {
          this.ks.Rs(e), this.Ms();
        }
        isLocalQueryTarget(e) {
          return this.ks.activeTargetIds.has(e);
        }
        clearQueryState(e) {
          this.removeItem(cm(this.persistenceKey, e));
        }
        updateQueryState(e, t, n) {
          this.qs(e, t, n);
        }
        handleUserChange(e, t, n) {
          t.forEach((e) => {
            this.Bs(e);
          }),
            (this.currentUser = e),
            n.forEach((e) => {
              this.addPendingMutation(e);
            });
        }
        setOnlineState(e) {
          this.Qs(e);
        }
        notifyBundleLoaded(e) {
          this.Ks(e);
        }
        shutdown() {
          this.started && (this.window.removeEventListener('storage', this.fs), this.removeItem(this.ws), (this.started = !1));
        }
        getItem(e) {
          const t = this.storage.getItem(e);
          return Uo('SharedClientState', 'READ', e, t), t;
        }
        setItem(e, t) {
          Uo('SharedClientState', 'SET', e, t), this.storage.setItem(e, t);
        }
        removeItem(e) {
          Uo('SharedClientState', 'REMOVE', e), this.storage.removeItem(e);
        }
        gs(e) {
          const t = e;
          if (t.storageArea === this.storage) {
            if ((Uo('SharedClientState', 'EVENT', t.key, t.newValue), t.key === this.ws))
              return void Vo(
                'Received WebStorage notification for local change. Another client might have garbage-collected our state',
              );
            this.oi.enqueueRetryable(async () => {
              if (this.started) {
                if (null !== t.key)
                  if (this.bs.test(t.key)) {
                    if (null == t.newValue) {
                      const e = this.$s(t.key);
                      return this.Us(e, null);
                    }
                    {
                      const e = this.Ws(t.key, t.newValue);
                      if (e) return this.Us(e.clientId, e);
                    }
                  } else if (this.Ds.test(t.key)) {
                    if (null !== t.newValue) {
                      const e = this.Gs(t.key, t.newValue);
                      if (e) return this.zs(e);
                    }
                  } else if (this.Cs.test(t.key)) {
                    if (null !== t.newValue) {
                      const e = this.js(t.key, t.newValue);
                      if (e) return this.Hs(e);
                    }
                  } else if (t.key === this.vs) {
                    if (null !== t.newValue) {
                      const e = this.xs(t.newValue);
                      if (e) return this.Os(e);
                    }
                  } else if (t.key === this.Ss) {
                    const e = (function (e) {
                      let t = Vl.oe;
                      if (null != e)
                        try {
                          const n = JSON.parse(e);
                          Go('number' == typeof n), (t = n);
                        } catch (e) {
                          Vo('SharedClientState', 'Failed to read sequence number from WebStorage', e);
                        }
                      return t;
                    })(t.newValue);
                    e !== Vl.oe && this.sequenceNumberHandler(e);
                  } else if (t.key === this.Fs) {
                    const e = this.Js(t.newValue);
                    await Promise.all(e.map((e) => this.syncEngine.Ys(e)));
                  }
              } else this.ys.push(t);
            });
          }
        }
        get ks() {
          return this.ps.get(this.Vs);
        }
        Ms() {
          this.setItem(this.ws, this.ks.ds());
        }
        Ls(e, t, n) {
          const r = new um(this.currentUser, e, t, n),
            i = lm(this.persistenceKey, this.currentUser, e);
          this.setItem(i, r.ds());
        }
        Bs(e) {
          const t = lm(this.persistenceKey, this.currentUser, e);
          this.removeItem(t);
        }
        Qs(e) {
          const t = { clientId: this.Vs, onlineState: e };
          this.storage.setItem(this.vs, JSON.stringify(t));
        }
        qs(e, t, n) {
          const r = cm(this.persistenceKey, e),
            i = new dm(e, t, n);
          this.setItem(r, i.ds());
        }
        Ks(e) {
          const t = JSON.stringify(Array.from(e));
          this.setItem(this.Fs, t);
        }
        $s(e) {
          const t = this.bs.exec(e);
          return t ? t[1] : null;
        }
        Ws(e, t) {
          const n = this.$s(e);
          return hm.Es(n, t);
        }
        Gs(e, t) {
          const n = this.Ds.exec(e),
            r = Number(n[1]),
            i = void 0 !== n[2] ? n[2] : null;
          return um.Es(new Ro(i), r, t);
        }
        js(e, t) {
          const n = this.Cs.exec(e),
            r = Number(n[1]);
          return dm.Es(r, t);
        }
        xs(e) {
          return fm.Es(e);
        }
        Js(e) {
          return JSON.parse(e);
        }
        async zs(e) {
          if (e.user.uid === this.currentUser.uid) return this.syncEngine.Zs(e.batchId, e.state, e.error);
          Uo('SharedClientState', 'Ignoring mutation for non-active user '.concat(e.user.uid));
        }
        Hs(e) {
          return this.syncEngine.Xs(e.targetId, e.state, e.error);
        }
        Us(e, t) {
          const n = t ? this.ps.insert(e, t) : this.ps.remove(e),
            r = this.Ns(this.ps),
            i = this.Ns(n),
            s = [],
            a = [];
          return (
            i.forEach((e) => {
              r.has(e) || s.push(e);
            }),
            r.forEach((e) => {
              i.has(e) || a.push(e);
            }),
            this.syncEngine.eo(s, a).then(() => {
              this.ps = n;
            })
          );
        }
        Os(e) {
          this.ps.get(e.clientId) && this.onlineStateHandler(e.onlineState);
        }
        Ns(e) {
          let t = wd();
          return (
            e.forEach((e, n) => {
              t = t.unionWith(n.activeTargetIds);
            }),
            t
          );
        }
      }
      class gm {
        constructor() {
          (this.no = new pm()), (this.ro = {}), (this.onlineStateHandler = null), (this.sequenceNumberHandler = null);
        }
        addPendingMutation(e) {}
        updateMutationState(e, t, n) {}
        addLocalQueryTarget(e) {
          return this.no.As(e), this.ro[e] || 'not-current';
        }
        updateQueryState(e, t, n) {
          this.ro[e] = t;
        }
        removeLocalQueryTarget(e) {
          this.no.Rs(e);
        }
        isLocalQueryTarget(e) {
          return this.no.activeTargetIds.has(e);
        }
        clearQueryState(e) {
          delete this.ro[e];
        }
        getAllActiveQueryTargets() {
          return this.no.activeTargetIds;
        }
        isActiveQueryTarget(e) {
          return this.no.activeTargetIds.has(e);
        }
        start() {
          return (this.no = new pm()), Promise.resolve();
        }
        handleUserChange(e, t, n) {}
        setOnlineState(e) {}
        shutdown() {}
        writeSequenceNumber(e) {}
        notifyBundleLoaded(e) {}
      }
      class vm {
        io(e) {}
        shutdown() {}
      }
      class ym {
        constructor() {
          (this.so = () => this.oo()), (this._o = () => this.ao()), (this.uo = []), this.co();
        }
        io(e) {
          this.uo.push(e);
        }
        shutdown() {
          window.removeEventListener('online', this.so), window.removeEventListener('offline', this._o);
        }
        co() {
          window.addEventListener('online', this.so), window.addEventListener('offline', this._o);
        }
        oo() {
          Uo('ConnectivityMonitor', 'Network connectivity changed: AVAILABLE');
          for (const e of this.uo) e(0);
        }
        ao() {
          Uo('ConnectivityMonitor', 'Network connectivity changed: UNAVAILABLE');
          for (const e of this.uo) e(1);
        }
        static D() {
          return 'undefined' != typeof window && void 0 !== window.addEventListener && void 0 !== window.removeEventListener;
        }
      }
      let wm = null;
      function bm() {
        return null === wm ? (wm = 268435456 + Math.round(2147483648 * Math.random())) : wm++, '0x' + wm.toString(16);
      }
      const Sm = {
        BatchGetDocuments: 'batchGet',
        Commit: 'commit',
        RunQuery: 'runQuery',
        RunAggregationQuery: 'runAggregationQuery',
      };
      class Em {
        constructor(e) {
          (this.lo = e.lo), (this.ho = e.ho);
        }
        Po(e) {
          this.Io = e;
        }
        To(e) {
          this.Eo = e;
        }
        Ao(e) {
          this.Ro = e;
        }
        onMessage(e) {
          this.Vo = e;
        }
        close() {
          this.ho();
        }
        send(e) {
          this.lo(e);
        }
        mo() {
          this.Io();
        }
        fo() {
          this.Eo();
        }
        po(e) {
          this.Ro(e);
        }
        yo(e) {
          this.Vo(e);
        }
      }
      const Tm = 'WebChannelConnection';
      class _m extends class {
        constructor(e) {
          (this.databaseInfo = e), (this.databaseId = e.databaseId);
          const t = e.ssl ? 'https' : 'http',
            n = encodeURIComponent(this.databaseId.projectId),
            r = encodeURIComponent(this.databaseId.database);
          (this.wo = t + '://' + e.host),
            (this.So = 'projects/'.concat(n, '/databases/').concat(r)),
            (this.bo =
              '(default)' === this.databaseId.database
                ? 'project_id='.concat(n)
                : 'project_id='.concat(n, '&database_id=').concat(r));
        }
        get Do() {
          return !1;
        }
        Co(e, t, n, r, i) {
          const s = bm(),
            a = this.vo(e, t.toUriEncodedString());
          Uo('RestConnection', "Sending RPC '".concat(e, "' ").concat(s, ':'), a, n);
          const o = { 'google-cloud-resource-prefix': this.So, 'x-goog-request-params': this.bo };
          return (
            this.Fo(o, r, i),
            this.Mo(e, a, o, n).then(
              (t) => (Uo('RestConnection', "Received RPC '".concat(e, "' ").concat(s, ': '), t), t),
              (t) => {
                throw (
                  (zo('RestConnection', "RPC '".concat(e, "' ").concat(s, ' failed with error: '), t, 'url: ', a, 'request:', n),
                  t)
                );
              },
            )
          );
        }
        xo(e, t, n, r, i, s) {
          return this.Co(e, t, n, r, i);
        }
        Fo(e, t, n) {
          (e['X-Goog-Api-Client'] = 'gl-js/ fire/' + Mo),
            (e['Content-Type'] = 'text/plain'),
            this.databaseInfo.appId && (e['X-Firebase-GMPID'] = this.databaseInfo.appId),
            t && t.headers.forEach((t, n) => (e[n] = t)),
            n && n.headers.forEach((t, n) => (e[n] = t));
        }
        vo(e, t) {
          const n = Sm[e];
          return ''.concat(this.wo, '/v1/').concat(t, ':').concat(n);
        }
        terminate() {}
      } {
        constructor(e) {
          super(e),
            (this.forceLongPolling = e.forceLongPolling),
            (this.autoDetectLongPolling = e.autoDetectLongPolling),
            (this.useFetchStreams = e.useFetchStreams),
            (this.longPollingOptions = e.longPollingOptions);
        }
        Mo(e, t, n, r) {
          const i = bm();
          return new Promise((s, a) => {
            const o = new To();
            o.setWithCredentials(!0),
              o.listenOnce(xo.COMPLETE, () => {
                try {
                  switch (o.getLastErrorCode()) {
                    case ko.NO_ERROR:
                      const t = o.getResponseJson();
                      Uo(Tm, "XHR for RPC '".concat(e, "' ").concat(i, ' received:'), JSON.stringify(t)), s(t);
                      break;
                    case ko.TIMEOUT:
                      Uo(Tm, "RPC '".concat(e, "' ").concat(i, ' timed out')),
                        a(new Wo(Ko.DEADLINE_EXCEEDED, 'Request time out'));
                      break;
                    case ko.HTTP_ERROR:
                      const n = o.getStatus();
                      if (
                        (Uo(
                          Tm,
                          "RPC '".concat(e, "' ").concat(i, ' failed with status:'),
                          n,
                          'response text:',
                          o.getResponseText(),
                        ),
                        n > 0)
                      ) {
                        let e = o.getResponseJson();
                        Array.isArray(e) && (e = e[0]);
                        const t = null == e ? void 0 : e.error;
                        if (t && t.status && t.message) {
                          const e = (function (e) {
                            const t = e.toLowerCase().replace(/_/g, '-');
                            return Object.values(Ko).indexOf(t) >= 0 ? t : Ko.UNKNOWN;
                          })(t.status);
                          a(new Wo(e, t.message));
                        } else a(new Wo(Ko.UNKNOWN, 'Server responded with status ' + o.getStatus()));
                      } else a(new Wo(Ko.UNAVAILABLE, 'Connection failed.'));
                      break;
                    default:
                      qo();
                  }
                } finally {
                  Uo(Tm, "RPC '".concat(e, "' ").concat(i, ' completed.'));
                }
              });
            const l = JSON.stringify(r);
            Uo(Tm, "RPC '".concat(e, "' ").concat(i, ' sending request:'), r), o.send(t, 'POST', l, n, 15);
          });
        }
        Oo(e, t, n) {
          const r = bm(),
            i = [this.wo, '/', 'google.firestore.v1.Firestore', '/', e, '/channel'],
            s = Do(),
            a = Po(),
            o = {
              httpSessionIdParam: 'gsessionid',
              initMessageHeaders: {},
              messageUrlParams: {
                database: 'projects/'.concat(this.databaseId.projectId, '/databases/').concat(this.databaseId.database),
              },
              sendRawJson: !0,
              supportsCrossDomainXhr: !0,
              internalChannelParams: { forwardChannelRequestTimeoutMs: 6e5 },
              forceLongPolling: this.forceLongPolling,
              detectBufferingProxy: this.autoDetectLongPolling,
            },
            l = this.longPollingOptions.timeoutSeconds;
          void 0 !== l && (o.longPollingTimeout = Math.round(1e3 * l)),
            this.useFetchStreams && (o.xmlHttpFactory = new _o({})),
            this.Fo(o.initMessageHeaders, t, n),
            (o.encodeInitMessageHeaders = !0);
          const c = i.join('');
          Uo(Tm, "Creating RPC '".concat(e, "' stream ").concat(r, ': ').concat(c), o);
          const u = s.createWebChannel(c, o);
          let d = !1,
            h = !1;
          const f = new Em({
              lo: (t) => {
                h
                  ? Uo(Tm, "Not sending because RPC '".concat(e, "' stream ").concat(r, ' is closed:'), t)
                  : (d || (Uo(Tm, "Opening RPC '".concat(e, "' stream ").concat(r, ' transport.')), u.open(), (d = !0)),
                    Uo(Tm, "RPC '".concat(e, "' stream ").concat(r, ' sending:'), t),
                    u.send(t));
              },
              ho: () => u.close(),
            }),
            p = (e, t, n) => {
              e.listen(t, (e) => {
                try {
                  n(e);
                } catch (e) {
                  setTimeout(() => {
                    throw e;
                  }, 0);
                }
              });
            };
          return (
            p(u, Io.EventType.OPEN, () => {
              h || (Uo(Tm, "RPC '".concat(e, "' stream ").concat(r, ' transport opened.')), f.mo());
            }),
            p(u, Io.EventType.CLOSE, () => {
              h || ((h = !0), Uo(Tm, "RPC '".concat(e, "' stream ").concat(r, ' transport closed')), f.po());
            }),
            p(u, Io.EventType.ERROR, (t) => {
              h ||
                ((h = !0),
                zo(Tm, "RPC '".concat(e, "' stream ").concat(r, ' transport errored:'), t),
                f.po(new Wo(Ko.UNAVAILABLE, 'The operation could not be completed')));
            }),
            p(u, Io.EventType.MESSAGE, (t) => {
              var n;
              if (!h) {
                const i = t.data[0];
                Go(!!i);
                const s = i,
                  a = s.error || (null === (n = s[0]) || void 0 === n ? void 0 : n.error);
                if (a) {
                  Uo(Tm, "RPC '".concat(e, "' stream ").concat(r, ' received error:'), a);
                  const t = a.status;
                  let n = (function (e) {
                      const t = nh[e];
                      if (void 0 !== t) return sh(t);
                    })(t),
                    i = a.message;
                  void 0 === n && ((n = Ko.INTERNAL), (i = 'Unknown error status: ' + t + ' with message ' + a.message)),
                    (h = !0),
                    f.po(new Wo(n, i)),
                    u.close();
                } else Uo(Tm, "RPC '".concat(e, "' stream ").concat(r, ' received:'), i), f.yo(i);
              }
            }),
            p(a, No.STAT_EVENT, (t) => {
              t.stat === Co.PROXY
                ? Uo(Tm, "RPC '".concat(e, "' stream ").concat(r, ' detected buffering proxy'))
                : t.stat === Co.NOPROXY && Uo(Tm, "RPC '".concat(e, "' stream ").concat(r, ' detected no buffering proxy'));
            }),
            setTimeout(() => {
              f.fo();
            }, 0),
            f
          );
        }
      }
      function Im() {
        return 'undefined' != typeof window ? window : null;
      }
      function xm() {
        return 'undefined' != typeof document ? document : null;
      }
      function km(e) {
        return new Ih(e, !0);
      }
      class Cm {
        constructor(e, t) {
          let n = arguments.length > 2 && void 0 !== arguments[2] ? arguments[2] : 1e3,
            r = arguments.length > 3 && void 0 !== arguments[3] ? arguments[3] : 1.5,
            i = arguments.length > 4 && void 0 !== arguments[4] ? arguments[4] : 6e4;
          (this.oi = e),
            (this.timerId = t),
            (this.No = n),
            (this.Lo = r),
            (this.Bo = i),
            (this.ko = 0),
            (this.qo = null),
            (this.Qo = Date.now()),
            this.reset();
        }
        reset() {
          this.ko = 0;
        }
        Ko() {
          this.ko = this.Bo;
        }
        $o(e) {
          this.cancel();
          const t = Math.floor(this.ko + this.Uo()),
            n = Math.max(0, Date.now() - this.Qo),
            r = Math.max(0, t - n);
          r > 0 &&
            Uo(
              'ExponentialBackoff',
              'Backing off for '
                .concat(r, ' ms (base delay: ')
                .concat(this.ko, ' ms, delay with jitter: ')
                .concat(t, ' ms, last attempt: ')
                .concat(n, ' ms ago)'),
            ),
            (this.qo = this.oi.enqueueAfterDelay(this.timerId, r, () => ((this.Qo = Date.now()), e()))),
            (this.ko *= this.Lo),
            this.ko < this.No && (this.ko = this.No),
            this.ko > this.Bo && (this.ko = this.Bo);
        }
        Wo() {
          null !== this.qo && (this.qo.skipDelay(), (this.qo = null));
        }
        cancel() {
          null !== this.qo && (this.qo.cancel(), (this.qo = null));
        }
        Uo() {
          return (Math.random() - 0.5) * this.ko;
        }
      }
      class Nm {
        constructor(e, t, n, r, i, s, a, o) {
          (this.oi = e),
            (this.Go = n),
            (this.zo = r),
            (this.connection = i),
            (this.authCredentialsProvider = s),
            (this.appCheckCredentialsProvider = a),
            (this.listener = o),
            (this.state = 0),
            (this.jo = 0),
            (this.Ho = null),
            (this.Jo = null),
            (this.stream = null),
            (this.Yo = new Cm(e, t));
        }
        Zo() {
          return 1 === this.state || 5 === this.state || this.Xo();
        }
        Xo() {
          return 2 === this.state || 3 === this.state;
        }
        start() {
          4 !== this.state ? this.auth() : this.e_();
        }
        async stop() {
          this.Zo() && (await this.close(0));
        }
        t_() {
          (this.state = 0), this.Yo.reset();
        }
        n_() {
          this.Xo() && null === this.Ho && (this.Ho = this.oi.enqueueAfterDelay(this.Go, 6e4, () => this.r_()));
        }
        i_(e) {
          this.s_(), this.stream.send(e);
        }
        async r_() {
          if (this.Xo()) return this.close(0);
        }
        s_() {
          this.Ho && (this.Ho.cancel(), (this.Ho = null));
        }
        o_() {
          this.Jo && (this.Jo.cancel(), (this.Jo = null));
        }
        async close(e, t) {
          this.s_(),
            this.o_(),
            this.Yo.cancel(),
            this.jo++,
            4 !== e
              ? this.Yo.reset()
              : t && t.code === Ko.RESOURCE_EXHAUSTED
                ? (Vo(t.toString()), Vo('Using maximum backoff delay to prevent overloading the backend.'), this.Yo.Ko())
                : t &&
                  t.code === Ko.UNAUTHENTICATED &&
                  3 !== this.state &&
                  (this.authCredentialsProvider.invalidateToken(), this.appCheckCredentialsProvider.invalidateToken()),
            null !== this.stream && (this.__(), this.stream.close(), (this.stream = null)),
            (this.state = e),
            await this.listener.Ao(t);
        }
        __() {}
        auth() {
          this.state = 1;
          const e = this.a_(this.jo),
            t = this.jo;
          Promise.all([this.authCredentialsProvider.getToken(), this.appCheckCredentialsProvider.getToken()]).then(
            (e) => {
              let [n, r] = e;
              this.jo === t && this.u_(n, r);
            },
            (t) => {
              e(() => {
                const e = new Wo(Ko.UNKNOWN, 'Fetching auth token failed: ' + t.message);
                return this.c_(e);
              });
            },
          );
        }
        u_(e, t) {
          const n = this.a_(this.jo);
          (this.stream = this.l_(e, t)),
            this.stream.Po(() => {
              n(() => this.listener.Po());
            }),
            this.stream.To(() => {
              n(
                () => (
                  (this.state = 2),
                  (this.Jo = this.oi.enqueueAfterDelay(this.zo, 1e4, () => (this.Xo() && (this.state = 3), Promise.resolve()))),
                  this.listener.To()
                ),
              );
            }),
            this.stream.Ao((e) => {
              n(() => this.c_(e));
            }),
            this.stream.onMessage((e) => {
              n(() => this.onMessage(e));
            });
        }
        e_() {
          (this.state = 5),
            this.Yo.$o(async () => {
              (this.state = 0), this.start();
            });
        }
        c_(e) {
          return Uo('PersistentStream', 'close with error: '.concat(e)), (this.stream = null), this.close(4, e);
        }
        a_(e) {
          return (t) => {
            this.oi.enqueueAndForget(() =>
              this.jo === e
                ? t()
                : (Uo('PersistentStream', 'stream callback skipped by getCloseGuardedDispatcher.'), Promise.resolve()),
            );
          };
        }
      }
      class Pm extends Nm {
        constructor(e, t, n, r, i, s) {
          super(e, 'listen_stream_connection_backoff', 'listen_stream_idle', 'health_check_timeout', t, n, r, s),
            (this.serializer = i);
        }
        l_(e, t) {
          return this.connection.Oo('Listen', e, t);
        }
        onMessage(e) {
          this.Yo.reset();
          const t = (function (e, t) {
              let n;
              if ('targetChange' in t) {
                t.targetChange;
                const r = (function (e) {
                    return 'NO_CHANGE' === e
                      ? 0
                      : 'ADD' === e
                        ? 1
                        : 'REMOVE' === e
                          ? 2
                          : 'CURRENT' === e
                            ? 3
                            : 'RESET' === e
                              ? 4
                              : qo();
                  })(t.targetChange.targetChangeType || 'NO_CHANGE'),
                  i = t.targetChange.targetIds || [],
                  s = (function (e, t) {
                    return e.useProto3Json
                      ? (Go(void 0 === t || 'string' == typeof t), Dc.fromBase64String(t || ''))
                      : (Go(void 0 === t || t instanceof Buffer || t instanceof Uint8Array),
                        Dc.fromUint8Array(t || new Uint8Array()));
                  })(e, t.targetChange.resumeToken),
                  a = t.targetChange.cause,
                  o =
                    a &&
                    (function (e) {
                      const t = void 0 === e.code ? Ko.UNKNOWN : sh(e.code);
                      return new Wo(t, e.message || '');
                    })(a);
                n = new vh(r, i, s, o || null);
              } else if ('documentChange' in t) {
                t.documentChange;
                const r = t.documentChange;
                r.document, r.document.name, r.document.updateTime;
                const i = Rh(e, r.document.name),
                  s = Ph(r.document.updateTime),
                  a = r.document.createTime ? Ph(r.document.createTime) : cl.min(),
                  o = new lu({ mapValue: { fields: r.document.fields } }),
                  l = uu.newFoundDocument(i, s, a, o),
                  c = r.targetIds || [],
                  u = r.removedTargetIds || [];
                n = new mh(c, u, l.key, l);
              } else if ('documentDelete' in t) {
                t.documentDelete;
                const r = t.documentDelete;
                r.document;
                const i = Rh(e, r.document),
                  s = r.readTime ? Ph(r.readTime) : cl.min(),
                  a = uu.newNoDocument(i, s),
                  o = r.removedTargetIds || [];
                n = new mh([], o, a.key, a);
              } else if ('documentRemove' in t) {
                t.documentRemove;
                const r = t.documentRemove;
                r.document;
                const i = Rh(e, r.document),
                  s = r.removedTargetIds || [];
                n = new mh([], s, i, null);
              } else {
                if (!('filter' in t)) return qo();
                {
                  t.filter;
                  const e = t.filter;
                  e.targetId;
                  const { count: r = 0, unchangedNames: i } = e,
                    s = new th(r, i),
                    a = e.targetId;
                  n = new gh(a, s);
                }
              }
              return n;
            })(this.serializer, e),
            n = (function (e) {
              if (!('targetChange' in e)) return cl.min();
              const t = e.targetChange;
              return t.targetIds && t.targetIds.length ? cl.min() : t.readTime ? Ph(t.readTime) : cl.min();
            })(e);
          return this.listener.h_(t, n);
        }
        P_(e) {
          const t = {};
          (t.database = jh(this.serializer)),
            (t.addTarget = (function (e, t) {
              let n;
              const r = t.target;
              if (
                ((n = Uu(r) ? { documents: Gh(e, r) } : { query: Hh(e, r)._t }),
                (n.targetId = t.targetId),
                t.resumeToken.approximateByteSize() > 0)
              ) {
                n.resumeToken = Ch(e, t.resumeToken);
                const r = xh(e, t.expectedCount);
                null !== r && (n.expectedCount = r);
              } else if (t.snapshotVersion.compareTo(cl.min()) > 0) {
                n.readTime = kh(e, t.snapshotVersion.toTimestamp());
                const r = xh(e, t.expectedCount);
                null !== r && (n.expectedCount = r);
              }
              return n;
            })(this.serializer, e));
          const n = (function (e, t) {
            const n = (function (e) {
              switch (e) {
                case 'TargetPurposeListen':
                  return null;
                case 'TargetPurposeExistenceFilterMismatch':
                  return 'existence-filter-mismatch';
                case 'TargetPurposeExistenceFilterMismatchBloom':
                  return 'existence-filter-mismatch-bloom';
                case 'TargetPurposeLimboResolution':
                  return 'limbo-document';
                default:
                  return qo();
              }
            })(t.purpose);
            return null == n ? null : { 'goog-listen-tags': n };
          })(this.serializer, e);
          n && (t.labels = n), this.i_(t);
        }
        I_(e) {
          const t = {};
          (t.database = jh(this.serializer)), (t.removeTarget = e), this.i_(t);
        }
      }
      class Dm extends Nm {
        constructor(e, t, n, r, i, s) {
          super(e, 'write_stream_connection_backoff', 'write_stream_idle', 'health_check_timeout', t, n, r, s),
            (this.serializer = i),
            (this.T_ = !1);
        }
        get E_() {
          return this.T_;
        }
        start() {
          (this.T_ = !1), (this.lastStreamToken = void 0), super.start();
        }
        __() {
          this.T_ && this.d_([]);
        }
        l_(e, t) {
          return this.connection.Oo('Write', e, t);
        }
        onMessage(e) {
          if ((Go(!!e.streamToken), (this.lastStreamToken = e.streamToken), this.T_)) {
            this.Yo.reset();
            const t = (function (e, t) {
                return e && e.length > 0
                  ? (Go(void 0 !== t),
                    e.map((e) =>
                      (function (e, t) {
                        let n = e.updateTime ? Ph(e.updateTime) : Ph(t);
                        return n.isEqual(cl.min()) && (n = Ph(t)), new Md(n, e.transformResults || []);
                      })(e, t),
                    ))
                  : [];
              })(e.writeResults, e.commitTime),
              n = Ph(e.commitTime);
            return this.listener.A_(n, t);
          }
          return Go(!e.writeResults || 0 === e.writeResults.length), (this.T_ = !0), this.listener.R_();
        }
        V_() {
          const e = {};
          (e.database = jh(this.serializer)), this.i_(e);
        }
        d_(e) {
          const t = { streamToken: this.lastStreamToken, writes: e.map((e) => Bh(this.serializer, e)) };
          this.i_(t);
        }
      }
      class Am extends class {} {
        constructor(e, t, n, r) {
          super(),
            (this.authCredentials = e),
            (this.appCheckCredentials = t),
            (this.connection = n),
            (this.serializer = r),
            (this.m_ = !1);
        }
        f_() {
          if (this.m_) throw new Wo(Ko.FAILED_PRECONDITION, 'The client has already been terminated.');
        }
        Co(e, t, n, r) {
          return (
            this.f_(),
            Promise.all([this.authCredentials.getToken(), this.appCheckCredentials.getToken()])
              .then((i) => {
                let [s, a] = i;
                return this.connection.Co(e, Ah(t, n), r, s, a);
              })
              .catch((e) => {
                throw 'FirebaseError' === e.name
                  ? (e.code === Ko.UNAUTHENTICATED &&
                      (this.authCredentials.invalidateToken(), this.appCheckCredentials.invalidateToken()),
                    e)
                  : new Wo(Ko.UNKNOWN, e.toString());
              })
          );
        }
        xo(e, t, n, r, i) {
          return (
            this.f_(),
            Promise.all([this.authCredentials.getToken(), this.appCheckCredentials.getToken()])
              .then((s) => {
                let [a, o] = s;
                return this.connection.xo(e, Ah(t, n), r, a, o, i);
              })
              .catch((e) => {
                throw 'FirebaseError' === e.name
                  ? (e.code === Ko.UNAUTHENTICATED &&
                      (this.authCredentials.invalidateToken(), this.appCheckCredentials.invalidateToken()),
                    e)
                  : new Wo(Ko.UNKNOWN, e.toString());
              })
          );
        }
        terminate() {
          (this.m_ = !0), this.connection.terminate();
        }
      }
      class Om {
        constructor(e, t) {
          (this.asyncQueue = e),
            (this.onlineStateHandler = t),
            (this.state = 'Unknown'),
            (this.g_ = 0),
            (this.p_ = null),
            (this.y_ = !0);
        }
        w_() {
          0 === this.g_ &&
            (this.S_('Unknown'),
            (this.p_ = this.asyncQueue.enqueueAfterDelay(
              'online_state_timeout',
              1e4,
              () => (
                (this.p_ = null), this.b_("Backend didn't respond within 10 seconds."), this.S_('Offline'), Promise.resolve()
              ),
            )));
        }
        D_(e) {
          'Online' === this.state
            ? this.S_('Unknown')
            : (this.g_++,
              this.g_ >= 1 &&
                (this.C_(), this.b_('Connection failed 1 times. Most recent error: '.concat(e.toString())), this.S_('Offline')));
        }
        set(e) {
          this.C_(), (this.g_ = 0), 'Online' === e && (this.y_ = !1), this.S_(e);
        }
        S_(e) {
          e !== this.state && ((this.state = e), this.onlineStateHandler(e));
        }
        b_(e) {
          const t = 'Could not reach Cloud Firestore backend. '.concat(
            e,
            '\nThis typically indicates that your device does not have a healthy Internet connection at the moment. The client will operate in offline mode until it is able to successfully connect to the backend.',
          );
          this.y_ ? (Vo(t), (this.y_ = !1)) : Uo('OnlineStateTracker', t);
        }
        C_() {
          null !== this.p_ && (this.p_.cancel(), (this.p_ = null));
        }
      }
      class Lm {
        constructor(e, t, n, r, i) {
          (this.localStore = e),
            (this.datastore = t),
            (this.asyncQueue = n),
            (this.remoteSyncer = {}),
            (this.v_ = []),
            (this.F_ = new Map()),
            (this.M_ = new Set()),
            (this.x_ = []),
            (this.O_ = i),
            this.O_.io((e) => {
              n.enqueueAndForget(async () => {
                qm(this) &&
                  (Uo('RemoteStore', 'Restarting streams for network reachability change.'),
                  await (async function (e) {
                    const t = Ho(e);
                    t.M_.add(4), await Mm(t), t.N_.set('Unknown'), t.M_.delete(4), await Rm(t);
                  })(this));
              });
            }),
            (this.N_ = new Om(n, r));
        }
      }
      async function Rm(e) {
        if (qm(e)) for (const t of e.x_) await t(!0);
      }
      async function Mm(e) {
        for (const t of e.x_) await t(!1);
      }
      function Fm(e, t) {
        const n = Ho(e);
        n.F_.has(t.targetId) || (n.F_.set(t.targetId, t), Bm(n) ? zm(n) : lg(n).Xo() && Um(n, t));
      }
      function jm(e, t) {
        const n = Ho(e),
          r = lg(n);
        n.F_.delete(t), r.Xo() && Vm(n, t), 0 === n.F_.size && (r.Xo() ? r.n_() : qm(n) && n.N_.set('Unknown'));
      }
      function Um(e, t) {
        if ((e.L_.xe(t.targetId), t.resumeToken.approximateByteSize() > 0 || t.snapshotVersion.compareTo(cl.min()) > 0)) {
          const n = e.remoteSyncer.getRemoteKeysForTarget(t.targetId).size;
          t = t.withExpectedCount(n);
        }
        lg(e).P_(t);
      }
      function Vm(e, t) {
        e.L_.xe(t), lg(e).I_(t);
      }
      function zm(e) {
        (e.L_ = new wh({
          getRemoteKeysForTarget: (t) => e.remoteSyncer.getRemoteKeysForTarget(t),
          ot: (t) => e.F_.get(t) || null,
          tt: () => e.datastore.serializer.databaseId,
        })),
          lg(e).start(),
          e.N_.w_();
      }
      function Bm(e) {
        return qm(e) && !lg(e).Zo() && e.F_.size > 0;
      }
      function qm(e) {
        return 0 === Ho(e).M_.size;
      }
      function Gm(e) {
        e.L_ = void 0;
      }
      async function Hm(e) {
        e.N_.set('Online');
      }
      async function Km(e) {
        e.F_.forEach((t, n) => {
          Um(e, t);
        });
      }
      async function Wm(e, t) {
        Gm(e), Bm(e) ? (e.N_.D_(t), zm(e)) : e.N_.set('Unknown');
      }
      async function Qm(e, t, n) {
        if ((e.N_.set('Online'), t instanceof vh && 2 === t.state && t.cause))
          try {
            await (async function (e, t) {
              const n = t.cause;
              for (const r of t.targetIds)
                e.F_.has(r) && (await e.remoteSyncer.rejectListen(r, n), e.F_.delete(r), e.L_.removeTarget(r));
            })(e, t);
          } catch (n) {
            Uo('RemoteStore', 'Failed to remove targets %s: %s ', t.targetIds.join(','), n), await Ym(e, n);
          }
        else if ((t instanceof mh ? e.L_.Ke(t) : t instanceof gh ? e.L_.He(t) : e.L_.We(t), !n.isEqual(cl.min())))
          try {
            const t = await $p(e.localStore);
            n.compareTo(t) >= 0 &&
              (await (function (e, t) {
                const n = e.L_.rt(t);
                return (
                  n.targetChanges.forEach((n, r) => {
                    if (n.resumeToken.approximateByteSize() > 0) {
                      const i = e.F_.get(r);
                      i && e.F_.set(r, i.withResumeToken(n.resumeToken, t));
                    }
                  }),
                  n.targetMismatches.forEach((t, n) => {
                    const r = e.F_.get(t);
                    if (!r) return;
                    e.F_.set(t, r.withResumeToken(Dc.EMPTY_BYTE_STRING, r.snapshotVersion)), Vm(e, t);
                    const i = new nf(r.target, t, n, r.sequenceNumber);
                    Um(e, i);
                  }),
                  e.remoteSyncer.applyRemoteEvent(n)
                );
              })(e, n));
          } catch (t) {
            Uo('RemoteStore', 'Failed to raise snapshot:', t), await Ym(e, t);
          }
      }
      async function Ym(e, t, n) {
        if (!Ol(t)) throw t;
        e.M_.add(1),
          await Mm(e),
          e.N_.set('Offline'),
          n || (n = () => $p(e.localStore)),
          e.asyncQueue.enqueueRetryable(async () => {
            Uo('RemoteStore', 'Retrying IndexedDB access'), await n(), e.M_.delete(1), await Rm(e);
          });
      }
      function Jm(e, t) {
        return t().catch((n) => Ym(e, n, t));
      }
      async function Xm(e) {
        const t = Ho(e),
          n = cg(t);
        let r = t.v_.length > 0 ? t.v_[t.v_.length - 1].batchId : -1;
        for (; $m(t); )
          try {
            const e = await em(t.localStore, r);
            if (null === e) {
              0 === t.v_.length && n.n_();
              break;
            }
            (r = e.batchId), Zm(t, e);
          } catch (e) {
            await Ym(t, e);
          }
        eg(t) && tg(t);
      }
      function $m(e) {
        return qm(e) && e.v_.length < 10;
      }
      function Zm(e, t) {
        e.v_.push(t);
        const n = cg(e);
        n.Xo() && n.E_ && n.d_(t.mutations);
      }
      function eg(e) {
        return qm(e) && !cg(e).Zo() && e.v_.length > 0;
      }
      function tg(e) {
        cg(e).start();
      }
      async function ng(e) {
        cg(e).V_();
      }
      async function rg(e) {
        const t = cg(e);
        for (const n of e.v_) t.d_(n.mutations);
      }
      async function ig(e, t, n) {
        const r = e.v_.shift(),
          i = Zd.from(r, t, n);
        await Jm(e, () => e.remoteSyncer.applySuccessfulWrite(i)), await Xm(e);
      }
      async function sg(e, t) {
        t &&
          cg(e).E_ &&
          (await (async function (e, t) {
            if (
              (function (e) {
                return ih(e) && e !== Ko.ABORTED;
              })(t.code)
            ) {
              const n = e.v_.shift();
              cg(e).t_(), await Jm(e, () => e.remoteSyncer.rejectFailedWrite(n.batchId, t)), await Xm(e);
            }
          })(e, t)),
          eg(e) && tg(e);
      }
      async function ag(e, t) {
        const n = Ho(e);
        n.asyncQueue.verifyOperationInProgress(), Uo('RemoteStore', 'RemoteStore received new credentials');
        const r = qm(n);
        n.M_.add(3),
          await Mm(n),
          r && n.N_.set('Unknown'),
          await n.remoteSyncer.handleCredentialChange(t),
          n.M_.delete(3),
          await Rm(n);
      }
      async function og(e, t) {
        const n = Ho(e);
        t ? (n.M_.delete(2), await Rm(n)) : t || (n.M_.add(2), await Mm(n), n.N_.set('Unknown'));
      }
      function lg(e) {
        return (
          e.B_ ||
            ((e.B_ = (function (e, t, n) {
              const r = Ho(e);
              return r.f_(), new Pm(t, r.connection, r.authCredentials, r.appCheckCredentials, r.serializer, n);
            })(e.datastore, e.asyncQueue, {
              Po: Hm.bind(null, e),
              To: Km.bind(null, e),
              Ao: Wm.bind(null, e),
              h_: Qm.bind(null, e),
            })),
            e.x_.push(async (t) => {
              t ? (e.B_.t_(), Bm(e) ? zm(e) : e.N_.set('Unknown')) : (await e.B_.stop(), Gm(e));
            })),
          e.B_
        );
      }
      function cg(e) {
        return (
          e.k_ ||
            ((e.k_ = (function (e, t, n) {
              const r = Ho(e);
              return r.f_(), new Dm(t, r.connection, r.authCredentials, r.appCheckCredentials, r.serializer, n);
            })(e.datastore, e.asyncQueue, {
              Po: () => Promise.resolve(),
              To: ng.bind(null, e),
              Ao: sg.bind(null, e),
              R_: rg.bind(null, e),
              A_: ig.bind(null, e),
            })),
            e.x_.push(async (t) => {
              t
                ? (e.k_.t_(), await Xm(e))
                : (await e.k_.stop(),
                  e.v_.length > 0 &&
                    (Uo('RemoteStore', 'Stopping write stream with '.concat(e.v_.length, ' pending writes')), (e.v_ = [])));
            })),
          e.k_
        );
      }
      class ug {
        constructor(e, t, n, r, i) {
          (this.asyncQueue = e),
            (this.timerId = t),
            (this.targetTimeMs = n),
            (this.op = r),
            (this.removalCallback = i),
            (this.deferred = new Qo()),
            (this.then = this.deferred.promise.then.bind(this.deferred.promise)),
            this.deferred.promise.catch((e) => {});
        }
        get promise() {
          return this.deferred.promise;
        }
        static createAndSchedule(e, t, n, r, i) {
          const s = Date.now() + n,
            a = new ug(e, t, s, r, i);
          return a.start(n), a;
        }
        start(e) {
          this.timerHandle = setTimeout(() => this.handleDelayElapsed(), e);
        }
        skipDelay() {
          return this.handleDelayElapsed();
        }
        cancel(e) {
          null !== this.timerHandle &&
            (this.clearTimeout(), this.deferred.reject(new Wo(Ko.CANCELLED, 'Operation cancelled' + (e ? ': ' + e : ''))));
        }
        handleDelayElapsed() {
          this.asyncQueue.enqueueAndForget(() =>
            null !== this.timerHandle
              ? (this.clearTimeout(), this.op().then((e) => this.deferred.resolve(e)))
              : Promise.resolve(),
          );
        }
        clearTimeout() {
          null !== this.timerHandle && (this.removalCallback(this), clearTimeout(this.timerHandle), (this.timerHandle = null));
        }
      }
      function dg(e, t) {
        if ((Vo('AsyncQueue', ''.concat(t, ': ').concat(e)), Ol(e))) return new Wo(Ko.UNAVAILABLE, ''.concat(t, ': ').concat(e));
        throw e;
      }
      class hg {
        constructor(e) {
          (this.comparator = e ? (t, n) => e(t, n) || pl.comparator(t.key, n.key) : (e, t) => pl.comparator(e.key, t.key)),
            (this.keyedMap = ud()),
            (this.sortedSet = new Tc(this.comparator));
        }
        static emptySet(e) {
          return new hg(e.comparator);
        }
        has(e) {
          return null != this.keyedMap.get(e);
        }
        get(e) {
          return this.keyedMap.get(e);
        }
        first() {
          return this.sortedSet.minKey();
        }
        last() {
          return this.sortedSet.maxKey();
        }
        isEmpty() {
          return this.sortedSet.isEmpty();
        }
        indexOf(e) {
          const t = this.keyedMap.get(e);
          return t ? this.sortedSet.indexOf(t) : -1;
        }
        get size() {
          return this.sortedSet.size;
        }
        forEach(e) {
          this.sortedSet.inorderTraversal((t, n) => (e(t), !1));
        }
        add(e) {
          const t = this.delete(e.key);
          return t.copy(t.keyedMap.insert(e.key, e), t.sortedSet.insert(e, null));
        }
        delete(e) {
          const t = this.get(e);
          return t ? this.copy(this.keyedMap.remove(e), this.sortedSet.remove(t)) : this;
        }
        isEqual(e) {
          if (!(e instanceof hg)) return !1;
          if (this.size !== e.size) return !1;
          const t = this.sortedSet.getIterator(),
            n = e.sortedSet.getIterator();
          for (; t.hasNext(); ) {
            const e = t.getNext().key,
              r = n.getNext().key;
            if (!e.isEqual(r)) return !1;
          }
          return !0;
        }
        toString() {
          const e = [];
          return (
            this.forEach((t) => {
              e.push(t.toString());
            }),
            0 === e.length ? 'DocumentSet ()' : 'DocumentSet (\n  ' + e.join('  \n') + '\n)'
          );
        }
        copy(e, t) {
          const n = new hg();
          return (n.comparator = this.comparator), (n.keyedMap = e), (n.sortedSet = t), n;
        }
      }
      class fg {
        constructor() {
          this.q_ = new Tc(pl.comparator);
        }
        track(e) {
          const t = e.doc.key,
            n = this.q_.get(t);
          n
            ? 0 !== e.type && 3 === n.type
              ? (this.q_ = this.q_.insert(t, e))
              : 3 === e.type && 1 !== n.type
                ? (this.q_ = this.q_.insert(t, { type: n.type, doc: e.doc }))
                : 2 === e.type && 2 === n.type
                  ? (this.q_ = this.q_.insert(t, { type: 2, doc: e.doc }))
                  : 2 === e.type && 0 === n.type
                    ? (this.q_ = this.q_.insert(t, { type: 0, doc: e.doc }))
                    : 1 === e.type && 0 === n.type
                      ? (this.q_ = this.q_.remove(t))
                      : 1 === e.type && 2 === n.type
                        ? (this.q_ = this.q_.insert(t, { type: 1, doc: n.doc }))
                        : 0 === e.type && 1 === n.type
                          ? (this.q_ = this.q_.insert(t, { type: 2, doc: e.doc }))
                          : qo()
            : (this.q_ = this.q_.insert(t, e));
        }
        Q_() {
          const e = [];
          return (
            this.q_.inorderTraversal((t, n) => {
              e.push(n);
            }),
            e
          );
        }
      }
      class pg {
        constructor(e, t, n, r, i, s, a, o, l) {
          (this.query = e),
            (this.docs = t),
            (this.oldDocs = n),
            (this.docChanges = r),
            (this.mutatedKeys = i),
            (this.fromCache = s),
            (this.syncStateChanged = a),
            (this.excludesMetadataChanges = o),
            (this.hasCachedResults = l);
        }
        static fromInitialDocuments(e, t, n, r, i) {
          const s = [];
          return (
            t.forEach((e) => {
              s.push({ type: 0, doc: e });
            }),
            new pg(e, t, hg.emptySet(t), s, n, r, !0, !1, i)
          );
        }
        get hasPendingWrites() {
          return !this.mutatedKeys.isEmpty();
        }
        isEqual(e) {
          if (
            !(
              this.fromCache === e.fromCache &&
              this.hasCachedResults === e.hasCachedResults &&
              this.syncStateChanged === e.syncStateChanged &&
              this.mutatedKeys.isEqual(e.mutatedKeys) &&
              Zu(this.query, e.query) &&
              this.docs.isEqual(e.docs) &&
              this.oldDocs.isEqual(e.oldDocs)
            )
          )
            return !1;
          const t = this.docChanges,
            n = e.docChanges;
          if (t.length !== n.length) return !1;
          for (let r = 0; r < t.length; r++) if (t[r].type !== n[r].type || !t[r].doc.isEqual(n[r].doc)) return !1;
          return !0;
        }
      }
      class mg {
        constructor() {
          (this.K_ = void 0), (this.U_ = []);
        }
        W_() {
          return this.U_.some((e) => e.G_());
        }
      }
      class gg {
        constructor() {
          (this.queries = new ad((e) => ed(e), Zu)), (this.onlineState = 'Unknown'), (this.z_ = new Set());
        }
      }
      async function vg(e, t) {
        const n = Ho(e);
        let r = 3;
        const i = t.query;
        let s = n.queries.get(i);
        s ? !s.W_() && t.G_() && (r = 2) : ((s = new mg()), (r = t.G_() ? 0 : 1));
        try {
          switch (r) {
            case 0:
              s.K_ = await n.onListen(i, !0);
              break;
            case 1:
              s.K_ = await n.onListen(i, !1);
              break;
            case 2:
              await n.onFirstRemoteStoreListen(i);
          }
        } catch (e) {
          const n = dg(e, "Initialization of query '".concat(td(t.query), "' failed"));
          return void t.onError(n);
        }
        n.queries.set(i, s), s.U_.push(t), t.j_(n.onlineState), s.K_ && t.H_(s.K_) && Sg(n);
      }
      async function yg(e, t) {
        const n = Ho(e),
          r = t.query;
        let i = 3;
        const s = n.queries.get(r);
        if (s) {
          const e = s.U_.indexOf(t);
          e >= 0 && (s.U_.splice(e, 1), 0 === s.U_.length ? (i = t.G_() ? 0 : 1) : !s.W_() && t.G_() && (i = 2));
        }
        switch (i) {
          case 0:
            return n.queries.delete(r), n.onUnlisten(r, !0);
          case 1:
            return n.queries.delete(r), n.onUnlisten(r, !1);
          case 2:
            return n.onLastRemoteStoreUnlisten(r);
          default:
            return;
        }
      }
      function wg(e, t) {
        const n = Ho(e);
        let r = !1;
        for (const i of t) {
          const e = i.query,
            t = n.queries.get(e);
          if (t) {
            for (const e of t.U_) e.H_(i) && (r = !0);
            t.K_ = i;
          }
        }
        r && Sg(n);
      }
      function bg(e, t, n) {
        const r = Ho(e),
          i = r.queries.get(t);
        if (i) for (const s of i.U_) s.onError(n);
        r.queries.delete(t);
      }
      function Sg(e) {
        e.z_.forEach((e) => {
          e.next();
        });
      }
      var Eg, Tg;
      ((Tg = Eg || (Eg = {})).J_ = 'default'), (Tg.Cache = 'cache');
      class _g {
        constructor(e, t, n) {
          (this.query = e),
            (this.Y_ = t),
            (this.Z_ = !1),
            (this.X_ = null),
            (this.onlineState = 'Unknown'),
            (this.options = n || {});
        }
        H_(e) {
          if (!this.options.includeMetadataChanges) {
            const t = [];
            for (const n of e.docChanges) 3 !== n.type && t.push(n);
            e = new pg(e.query, e.docs, e.oldDocs, t, e.mutatedKeys, e.fromCache, e.syncStateChanged, !0, e.hasCachedResults);
          }
          let t = !1;
          return (
            this.Z_ ? this.ea(e) && (this.Y_.next(e), (t = !0)) : this.ta(e, this.onlineState) && (this.na(e), (t = !0)),
            (this.X_ = e),
            t
          );
        }
        onError(e) {
          this.Y_.error(e);
        }
        j_(e) {
          this.onlineState = e;
          let t = !1;
          return this.X_ && !this.Z_ && this.ta(this.X_, e) && (this.na(this.X_), (t = !0)), t;
        }
        ta(e, t) {
          if (!e.fromCache) return !0;
          if (!this.G_()) return !0;
          const n = 'Offline' !== t;
          return (!this.options.ra || !n) && (!e.docs.isEmpty() || e.hasCachedResults || 'Offline' === t);
        }
        ea(e) {
          if (e.docChanges.length > 0) return !0;
          const t = this.X_ && this.X_.hasPendingWrites !== e.hasPendingWrites;
          return !(!e.syncStateChanged && !t) && !0 === this.options.includeMetadataChanges;
        }
        na(e) {
          (e = pg.fromInitialDocuments(e.query, e.docs, e.mutatedKeys, e.fromCache, e.hasCachedResults)),
            (this.Z_ = !0),
            this.Y_.next(e);
        }
        G_() {
          return this.options.source !== Eg.Cache;
        }
      }
      class Ig {
        constructor(e) {
          this.key = e;
        }
      }
      class xg {
        constructor(e) {
          this.key = e;
        }
      }
      class kg {
        constructor(e, t) {
          (this.query = e),
            (this.la = t),
            (this.ha = null),
            (this.hasCachedResults = !1),
            (this.current = !1),
            (this.Pa = vd()),
            (this.mutatedKeys = vd()),
            (this.Ia = id(e)),
            (this.Ta = new hg(this.Ia));
        }
        get Ea() {
          return this.la;
        }
        da(e, t) {
          const n = t ? t.Aa : new fg(),
            r = t ? t.Ta : this.Ta;
          let i = t ? t.mutatedKeys : this.mutatedKeys,
            s = r,
            a = !1;
          const o = 'F' === this.query.limitType && r.size === this.query.limit ? r.last() : null,
            l = 'L' === this.query.limitType && r.size === this.query.limit ? r.first() : null;
          if (
            (e.inorderTraversal((e, t) => {
              const c = r.get(e),
                u = nd(this.query, t) ? t : null,
                d = !!c && this.mutatedKeys.has(c.key),
                h = !!u && (u.hasLocalMutations || (this.mutatedKeys.has(u.key) && u.hasCommittedMutations));
              let f = !1;
              c && u
                ? c.data.isEqual(u.data)
                  ? d !== h && (n.track({ type: 3, doc: u }), (f = !0))
                  : this.Ra(c, u) ||
                    (n.track({ type: 2, doc: u }), (f = !0), ((o && this.Ia(u, o) > 0) || (l && this.Ia(u, l) < 0)) && (a = !0))
                : !c && u
                  ? (n.track({ type: 0, doc: u }), (f = !0))
                  : c && !u && (n.track({ type: 1, doc: c }), (f = !0), (o || l) && (a = !0)),
                f && (u ? ((s = s.add(u)), (i = h ? i.add(e) : i.delete(e))) : ((s = s.delete(e)), (i = i.delete(e))));
            }),
            null !== this.query.limit)
          )
            for (; s.size > this.query.limit; ) {
              const e = 'F' === this.query.limitType ? s.last() : s.first();
              (s = s.delete(e.key)), (i = i.delete(e.key)), n.track({ type: 1, doc: e });
            }
          return { Ta: s, Aa: n, Xi: a, mutatedKeys: i };
        }
        Ra(e, t) {
          return e.hasLocalMutations && t.hasCommittedMutations && !t.hasLocalMutations;
        }
        applyChanges(e, t, n, r) {
          const i = this.Ta;
          (this.Ta = e.Ta), (this.mutatedKeys = e.mutatedKeys);
          const s = e.Aa.Q_();
          s.sort(
            (e, t) =>
              (function (e, t) {
                const n = (e) => {
                  switch (e) {
                    case 0:
                      return 1;
                    case 2:
                    case 3:
                      return 2;
                    case 1:
                      return 0;
                    default:
                      return qo();
                  }
                };
                return n(e) - n(t);
              })(e.type, t.type) || this.Ia(e.doc, t.doc),
          ),
            this.Va(n),
            (r = null != r && r);
          const a = t && !r ? this.ma() : [],
            o = 0 === this.Pa.size && this.current && !r ? 1 : 0,
            l = o !== this.ha;
          return (
            (this.ha = o),
            0 !== s.length || l
              ? {
                  snapshot: new pg(
                    this.query,
                    e.Ta,
                    i,
                    s,
                    e.mutatedKeys,
                    0 === o,
                    l,
                    !1,
                    !!n && n.resumeToken.approximateByteSize() > 0,
                  ),
                  fa: a,
                }
              : { fa: a }
          );
        }
        j_(e) {
          return this.current && 'Offline' === e
            ? ((this.current = !1), this.applyChanges({ Ta: this.Ta, Aa: new fg(), mutatedKeys: this.mutatedKeys, Xi: !1 }, !1))
            : { fa: [] };
        }
        ga(e) {
          return !this.la.has(e) && !!this.Ta.has(e) && !this.Ta.get(e).hasLocalMutations;
        }
        Va(e) {
          e &&
            (e.addedDocuments.forEach((e) => (this.la = this.la.add(e))),
            e.modifiedDocuments.forEach((e) => {}),
            e.removedDocuments.forEach((e) => (this.la = this.la.delete(e))),
            (this.current = e.current));
        }
        ma() {
          if (!this.current) return [];
          const e = this.Pa;
          (this.Pa = vd()),
            this.Ta.forEach((e) => {
              this.ga(e.key) && (this.Pa = this.Pa.add(e.key));
            });
          const t = [];
          return (
            e.forEach((e) => {
              this.Pa.has(e) || t.push(new xg(e));
            }),
            this.Pa.forEach((n) => {
              e.has(n) || t.push(new Ig(n));
            }),
            t
          );
        }
        pa(e) {
          (this.la = e.hs), (this.Pa = vd());
          const t = this.da(e.documents);
          return this.applyChanges(t, !0);
        }
        ya() {
          return pg.fromInitialDocuments(this.query, this.Ta, this.mutatedKeys, 0 === this.ha, this.hasCachedResults);
        }
      }
      class Cg {
        constructor(e, t, n) {
          (this.query = e), (this.targetId = t), (this.view = n);
        }
      }
      class Ng {
        constructor(e) {
          (this.key = e), (this.wa = !1);
        }
      }
      class Pg {
        constructor(e, t, n, r, i, s) {
          (this.localStore = e),
            (this.remoteStore = t),
            (this.eventManager = n),
            (this.sharedClientState = r),
            (this.currentUser = i),
            (this.maxConcurrentLimboResolutions = s),
            (this.Sa = {}),
            (this.ba = new ad((e) => ed(e), Zu)),
            (this.Da = new Map()),
            (this.Ca = new Set()),
            (this.va = new Tc(pl.comparator)),
            (this.Fa = new Map()),
            (this.Ma = new Pp()),
            (this.xa = {}),
            (this.Oa = new Map()),
            (this.Na = sp.Ln()),
            (this.onlineState = 'Unknown'),
            (this.La = void 0);
        }
        get isPrimaryClient() {
          return !0 === this.La;
        }
      }
      async function Dg(e, t) {
        let n = !(arguments.length > 2 && void 0 !== arguments[2]) || arguments[2];
        const r = av(e);
        let i;
        const s = r.ba.get(t);
        return s ? (r.sharedClientState.addLocalQueryTarget(s.targetId), (i = s.view.ya())) : (i = await Og(r, t, n, !0)), i;
      }
      async function Ag(e, t) {
        const n = av(e);
        await Og(n, t, !0, !1);
      }
      async function Og(e, t, n, r) {
        const i = await tm(e.localStore, Yu(t)),
          s = i.targetId,
          a = n ? e.sharedClientState.addLocalQueryTarget(s) : 'not-current';
        let o;
        return r && (o = await Lg(e, t, s, 'current' === a, i.resumeToken)), e.isPrimaryClient && n && Fm(e.remoteStore, i), o;
      }
      async function Lg(e, t, n, r, i) {
        e.Ba = (t, n, r) =>
          (async function (e, t, n, r) {
            let i = t.view.da(n);
            i.Xi &&
              (i = await rm(e.localStore, t.query, !1).then((e) => {
                let { documents: n } = e;
                return t.view.da(n, i);
              }));
            const s = r && r.targetChanges.get(t.targetId),
              a = r && null != r.targetMismatches.get(t.targetId),
              o = t.view.applyChanges(i, e.isPrimaryClient, s, a);
            return Kg(e, t.targetId, o.fa), o.snapshot;
          })(e, t, n, r);
        const s = await rm(e.localStore, t, !0),
          a = new kg(t, s.hs),
          o = a.da(s.documents),
          l = ph.createSynthesizedTargetChangeForCurrentChange(n, r && 'Offline' !== e.onlineState, i),
          c = a.applyChanges(o, e.isPrimaryClient, l);
        Kg(e, n, c.fa);
        const u = new Cg(t, n, a);
        return e.ba.set(t, u), e.Da.has(n) ? e.Da.get(n).push(t) : e.Da.set(n, [t]), c.snapshot;
      }
      async function Rg(e, t, n) {
        const r = Ho(e),
          i = r.ba.get(t),
          s = r.Da.get(i.targetId);
        if (s.length > 1)
          return (
            r.Da.set(
              i.targetId,
              s.filter((e) => !Zu(e, t)),
            ),
            void r.ba.delete(t)
          );
        r.isPrimaryClient
          ? (r.sharedClientState.removeLocalQueryTarget(i.targetId),
            r.sharedClientState.isActiveQueryTarget(i.targetId) ||
              (await nm(r.localStore, i.targetId, !1)
                .then(() => {
                  r.sharedClientState.clearQueryState(i.targetId), n && jm(r.remoteStore, i.targetId), Gg(r, i.targetId);
                })
                .catch(xl)))
          : (Gg(r, i.targetId), await nm(r.localStore, i.targetId, !0));
      }
      async function Mg(e, t) {
        const n = Ho(e),
          r = n.ba.get(t),
          i = n.Da.get(r.targetId);
        n.isPrimaryClient &&
          1 === i.length &&
          (n.sharedClientState.removeLocalQueryTarget(r.targetId), jm(n.remoteStore, r.targetId));
      }
      async function Fg(e, t) {
        const n = Ho(e);
        try {
          const e = await (function (e, t) {
            const n = Ho(e),
              r = t.snapshotVersion;
            let i = n.ns;
            return n.persistence
              .runTransaction('Apply remote event', 'readwrite-primary', (e) => {
                const s = n.os.newChangeBuffer({ trackRemovals: !0 });
                i = n.ns;
                const a = [];
                t.targetChanges.forEach((s, o) => {
                  const l = i.get(o);
                  if (!l) return;
                  a.push(
                    n.Qr.removeMatchingKeys(e, s.removedDocuments, o).next(() => n.Qr.addMatchingKeys(e, s.addedDocuments, o)),
                  );
                  let c = l.withSequenceNumber(e.currentSequenceNumber);
                  null !== t.targetMismatches.get(o)
                    ? (c = c.withResumeToken(Dc.EMPTY_BYTE_STRING, cl.min()).withLastLimboFreeSnapshotVersion(cl.min()))
                    : s.resumeToken.approximateByteSize() > 0 && (c = c.withResumeToken(s.resumeToken, r)),
                    (i = i.insert(o, c)),
                    (function (e, t, n) {
                      return (
                        0 === e.resumeToken.approximateByteSize() ||
                        t.snapshotVersion.toMicroseconds() - e.snapshotVersion.toMicroseconds() >= 3e8 ||
                        n.addedDocuments.size + n.modifiedDocuments.size + n.removedDocuments.size > 0
                      );
                    })(l, c, s) && a.push(n.Qr.updateTargetData(e, c));
                });
                let o = ld(),
                  l = vd();
                if (
                  (t.documentUpdates.forEach((r) => {
                    t.resolvedLimboDocuments.has(r) && a.push(n.persistence.referenceDelegate.updateLimboDocument(e, r));
                  }),
                  a.push(
                    Zp(e, s, t.documentUpdates).next((e) => {
                      (o = e.cs), (l = e.ls);
                    }),
                  ),
                  !r.isEqual(cl.min()))
                ) {
                  const t = n.Qr.getLastRemoteSnapshotVersion(e).next((t) =>
                    n.Qr.setTargetsMetadata(e, e.currentSequenceNumber, r),
                  );
                  a.push(t);
                }
                return kl
                  .waitFor(a)
                  .next(() => s.apply(e))
                  .next(() => n.localDocuments.getLocalViewOfDocuments(e, o, l))
                  .next(() => o);
              })
              .then((e) => ((n.ns = i), e));
          })(n.localStore, t);
          t.targetChanges.forEach((e, t) => {
            const r = n.Fa.get(t);
            r &&
              (Go(e.addedDocuments.size + e.modifiedDocuments.size + e.removedDocuments.size <= 1),
              e.addedDocuments.size > 0
                ? (r.wa = !0)
                : e.modifiedDocuments.size > 0
                  ? Go(r.wa)
                  : e.removedDocuments.size > 0 && (Go(r.wa), (r.wa = !1)));
          }),
            await Yg(n, e, t);
        } catch (e) {
          await xl(e);
        }
      }
      function jg(e, t, n) {
        const r = Ho(e);
        if ((r.isPrimaryClient && 0 === n) || (!r.isPrimaryClient && 1 === n)) {
          const e = [];
          r.ba.forEach((n, r) => {
            const i = r.view.j_(t);
            i.snapshot && e.push(i.snapshot);
          }),
            (function (e, t) {
              const n = Ho(e);
              n.onlineState = t;
              let r = !1;
              n.queries.forEach((e, n) => {
                for (const i of n.U_) i.j_(t) && (r = !0);
              }),
                r && Sg(n);
            })(r.eventManager, t),
            e.length && r.Sa.h_(e),
            (r.onlineState = t),
            r.isPrimaryClient && r.sharedClientState.setOnlineState(t);
        }
      }
      async function Ug(e, t, n) {
        const r = Ho(e);
        r.sharedClientState.updateQueryState(t, 'rejected', n);
        const i = r.Fa.get(t),
          s = i && i.key;
        if (s) {
          let e = new Tc(pl.comparator);
          e = e.insert(s, uu.newNoDocument(s, cl.min()));
          const n = vd().add(s),
            i = new fh(cl.min(), new Map(), new Tc(sl), e, n);
          await Fg(r, i), (r.va = r.va.remove(s)), r.Fa.delete(t), Qg(r);
        } else
          await nm(r.localStore, t, !1)
            .then(() => Gg(r, t, n))
            .catch(xl);
      }
      async function Vg(e, t) {
        const n = Ho(e),
          r = t.batch.batchId;
        try {
          const e = await (function (e, t) {
            const n = Ho(e);
            return n.persistence.runTransaction('Acknowledge batch', 'readwrite-primary', (e) => {
              const r = t.batch.keys(),
                i = n.os.newChangeBuffer({ trackRemovals: !0 });
              return (function (e, t, n, r) {
                const i = n.batch,
                  s = i.keys();
                let a = kl.resolve();
                return (
                  s.forEach((e) => {
                    a = a
                      .next(() => r.getEntry(t, e))
                      .next((t) => {
                        const s = n.docVersions.get(e);
                        Go(null !== s),
                          t.version.compareTo(s) < 0 &&
                            (i.applyToRemoteDocument(t, n),
                            t.isValidDocument() && (t.setReadTime(n.commitVersion), r.addEntry(t)));
                      });
                  }),
                  a.next(() => e.mutationQueue.removeMutationBatch(t, i))
                );
              })(n, e, t, i)
                .next(() => i.apply(e))
                .next(() => n.mutationQueue.performConsistencyCheck(e))
                .next(() => n.documentOverlayCache.removeOverlaysForBatchId(e, r, t.batch.batchId))
                .next(() =>
                  n.localDocuments.recalculateAndSaveOverlaysForDocumentKeys(
                    e,
                    (function (e) {
                      let t = vd();
                      for (let n = 0; n < e.mutationResults.length; ++n)
                        e.mutationResults[n].transformResults.length > 0 && (t = t.add(e.batch.mutations[n].key));
                      return t;
                    })(t),
                  ),
                )
                .next(() => n.localDocuments.getDocuments(e, r));
            });
          })(n.localStore, t);
          qg(n, r, null), Bg(n, r), n.sharedClientState.updateMutationState(r, 'acknowledged'), await Yg(n, e);
        } catch (e) {
          await xl(e);
        }
      }
      async function zg(e, t, n) {
        const r = Ho(e);
        try {
          const e = await (function (e, t) {
            const n = Ho(e);
            return n.persistence.runTransaction('Reject batch', 'readwrite-primary', (e) => {
              let r;
              return n.mutationQueue
                .lookupMutationBatch(e, t)
                .next((t) => (Go(null !== t), (r = t.keys()), n.mutationQueue.removeMutationBatch(e, t)))
                .next(() => n.mutationQueue.performConsistencyCheck(e))
                .next(() => n.documentOverlayCache.removeOverlaysForBatchId(e, r, t))
                .next(() => n.localDocuments.recalculateAndSaveOverlaysForDocumentKeys(e, r))
                .next(() => n.localDocuments.getDocuments(e, r));
            });
          })(r.localStore, t);
          qg(r, t, n), Bg(r, t), r.sharedClientState.updateMutationState(t, 'rejected', n), await Yg(r, e);
        } catch (n) {
          await xl(n);
        }
      }
      function Bg(e, t) {
        (e.Oa.get(t) || []).forEach((e) => {
          e.resolve();
        }),
          e.Oa.delete(t);
      }
      function qg(e, t, n) {
        const r = Ho(e);
        let i = r.xa[r.currentUser.toKey()];
        if (i) {
          const e = i.get(t);
          e && (n ? e.reject(n) : e.resolve(), (i = i.remove(t))), (r.xa[r.currentUser.toKey()] = i);
        }
      }
      function Gg(e, t) {
        let n = arguments.length > 2 && void 0 !== arguments[2] ? arguments[2] : null;
        e.sharedClientState.removeLocalQueryTarget(t);
        for (const r of e.Da.get(t)) e.ba.delete(r), n && e.Sa.ka(r, n);
        e.Da.delete(t),
          e.isPrimaryClient &&
            e.Ma.Vr(t).forEach((t) => {
              e.Ma.containsKey(t) || Hg(e, t);
            });
      }
      function Hg(e, t) {
        e.Ca.delete(t.path.canonicalString());
        const n = e.va.get(t);
        null !== n && (jm(e.remoteStore, n), (e.va = e.va.remove(t)), e.Fa.delete(n), Qg(e));
      }
      function Kg(e, t, n) {
        for (const r of n)
          r instanceof Ig
            ? (e.Ma.addReference(r.key, t), Wg(e, r))
            : r instanceof xg
              ? (Uo('SyncEngine', 'Document no longer in limbo: ' + r.key),
                e.Ma.removeReference(r.key, t),
                e.Ma.containsKey(r.key) || Hg(e, r.key))
              : qo();
      }
      function Wg(e, t) {
        const n = t.key,
          r = n.path.canonicalString();
        e.va.get(n) || e.Ca.has(r) || (Uo('SyncEngine', 'New document in limbo: ' + n), e.Ca.add(r), Qg(e));
      }
      function Qg(e) {
        for (; e.Ca.size > 0 && e.va.size < e.maxConcurrentLimboResolutions; ) {
          const t = e.Ca.values().next().value;
          e.Ca.delete(t);
          const n = new pl(dl.fromString(t)),
            r = e.Na.next();
          e.Fa.set(r, new Ng(n)),
            (e.va = e.va.insert(n, r)),
            Fm(e.remoteStore, new nf(Yu(Hu(n.path)), r, 'TargetPurposeLimboResolution', Vl.oe));
        }
      }
      async function Yg(e, t, n) {
        const r = Ho(e),
          i = [],
          s = [],
          a = [];
        r.ba.isEmpty() ||
          (r.ba.forEach((e, o) => {
            a.push(
              r.Ba(o, t, n).then((e) => {
                if ((e || n) && r.isPrimaryClient) {
                  const t = e && !e.fromCache;
                  r.sharedClientState.updateQueryState(o.targetId, t ? 'current' : 'not-current');
                }
                if (e) {
                  i.push(e);
                  const t = Kp.Ki(o.targetId, e);
                  s.push(t);
                }
              }),
            );
          }),
          await Promise.all(a),
          r.Sa.h_(i),
          await (async function (e, t) {
            const n = Ho(e);
            try {
              await n.persistence.runTransaction('notifyLocalViewChanges', 'readwrite', (e) =>
                kl.forEach(t, (t) =>
                  kl
                    .forEach(t.qi, (r) => n.persistence.referenceDelegate.addReference(e, t.targetId, r))
                    .next(() => kl.forEach(t.Qi, (r) => n.persistence.referenceDelegate.removeReference(e, t.targetId, r))),
                ),
              );
            } catch (e) {
              if (!Ol(e)) throw e;
              Uo('LocalStore', 'Failed to update sequence numbers: ' + e);
            }
            for (const r of t) {
              const e = r.targetId;
              if (!r.fromCache) {
                const t = n.ns.get(e),
                  r = t.snapshotVersion,
                  i = t.withLastLimboFreeSnapshotVersion(r);
                n.ns = n.ns.insert(e, i);
              }
            }
          })(r.localStore, s));
      }
      async function Jg(e, t) {
        const n = Ho(e);
        if (!n.currentUser.isEqual(t)) {
          Uo('SyncEngine', 'User change. New user:', t.toKey());
          const e = await Xp(n.localStore, t);
          (n.currentUser = t),
            (function (e, t) {
              e.Oa.forEach((e) => {
                e.forEach((e) => {
                  e.reject(new Wo(Ko.CANCELLED, t));
                });
              }),
                e.Oa.clear();
            })(n, "'waitForPendingWrites' promise is rejected due to a user change."),
            n.sharedClientState.handleUserChange(t, e.removedBatchIds, e.addedBatchIds),
            await Yg(n, e.us);
        }
      }
      function Xg(e, t) {
        const n = Ho(e),
          r = n.Fa.get(t);
        if (r && r.wa) return vd().add(r.key);
        {
          let e = vd();
          const r = n.Da.get(t);
          if (!r) return e;
          for (const t of r) {
            const r = n.ba.get(t);
            e = e.unionWith(r.view.Ea);
          }
          return e;
        }
      }
      async function $g(e, t) {
        const n = Ho(e),
          r = await rm(n.localStore, t.query, !0),
          i = t.view.pa(r);
        return n.isPrimaryClient && Kg(n, t.targetId, i.fa), i;
      }
      async function Zg(e, t) {
        const n = Ho(e);
        return sm(n.localStore, t).then((e) => Yg(n, e));
      }
      async function ev(e, t, n, r) {
        const i = Ho(e),
          s = await (function (e, t) {
            const n = Ho(e),
              r = Ho(n.mutationQueue);
            return n.persistence.runTransaction('Lookup mutation documents', 'readonly', (e) =>
              r.vn(e, t).next((t) => (t ? n.localDocuments.getDocuments(e, t) : kl.resolve(null))),
            );
          })(i.localStore, t);
        null !== s
          ? ('pending' === n
              ? await Xm(i.remoteStore)
              : 'acknowledged' === n || 'rejected' === n
                ? (qg(i, t, r || null),
                  Bg(i, t),
                  (function (e, t) {
                    Ho(Ho(e).mutationQueue).Mn(t);
                  })(i.localStore, t))
                : qo(),
            await Yg(i, s))
          : Uo('SyncEngine', 'Cannot apply mutation batch with id: ' + t);
      }
      async function tv(e, t, n) {
        const r = Ho(e),
          i = [],
          s = [];
        for (const a of t) {
          let e;
          const t = r.Da.get(a);
          if (t && 0 !== t.length) {
            e = await tm(r.localStore, Yu(t[0]));
            for (const e of t) {
              const t = r.ba.get(e),
                n = await $g(r, t);
              n.snapshot && s.push(n.snapshot);
            }
          } else {
            const t = await im(r.localStore, a);
            (e = await tm(r.localStore, t)), await Lg(r, nv(t), a, !1, e.resumeToken);
          }
          i.push(e);
        }
        return r.Sa.h_(s), i;
      }
      function nv(e) {
        return Gu(e.path, e.collectionGroup, e.orderBy, e.filters, e.limit, 'F', e.startAt, e.endAt);
      }
      function rv(e) {
        return (function (e) {
          return Ho(Ho(e).persistence).Bi();
        })(Ho(e).localStore);
      }
      async function iv(e, t, n, r) {
        const i = Ho(e);
        if (i.La) return void Uo('SyncEngine', 'Ignoring unexpected query state notification.');
        const s = i.Da.get(t);
        if (s && s.length > 0)
          switch (n) {
            case 'current':
            case 'not-current': {
              const e = await sm(i.localStore, rd(s[0])),
                r = fh.createSynthesizedRemoteEventForCurrentChange(t, 'current' === n, Dc.EMPTY_BYTE_STRING);
              await Yg(i, e, r);
              break;
            }
            case 'rejected':
              await nm(i.localStore, t, !0), Gg(i, t, r);
              break;
            default:
              qo();
          }
      }
      async function sv(e, t, n) {
        const r = av(e);
        if (r.La) {
          for (const e of t) {
            if (r.Da.has(e) && r.sharedClientState.isActiveQueryTarget(e)) {
              Uo('SyncEngine', 'Adding an already active target ' + e);
              continue;
            }
            const t = await im(r.localStore, e),
              n = await tm(r.localStore, t);
            await Lg(r, nv(t), n.targetId, !1, n.resumeToken), Fm(r.remoteStore, n);
          }
          for (const e of n)
            r.Da.has(e) &&
              (await nm(r.localStore, e, !1)
                .then(() => {
                  jm(r.remoteStore, e), Gg(r, e);
                })
                .catch(xl));
        }
      }
      function av(e) {
        const t = Ho(e);
        return (
          (t.remoteStore.remoteSyncer.applyRemoteEvent = Fg.bind(null, t)),
          (t.remoteStore.remoteSyncer.getRemoteKeysForTarget = Xg.bind(null, t)),
          (t.remoteStore.remoteSyncer.rejectListen = Ug.bind(null, t)),
          (t.Sa.h_ = wg.bind(null, t.eventManager)),
          (t.Sa.ka = bg.bind(null, t.eventManager)),
          t
        );
      }
      function ov(e) {
        const t = Ho(e);
        return (
          (t.remoteStore.remoteSyncer.applySuccessfulWrite = Vg.bind(null, t)),
          (t.remoteStore.remoteSyncer.rejectFailedWrite = zg.bind(null, t)),
          t
        );
      }
      class lv {
        constructor() {
          this.synchronizeTabs = !1;
        }
        async initialize(e) {
          (this.serializer = km(e.databaseInfo.databaseId)),
            (this.sharedClientState = this.createSharedClientState(e)),
            (this.persistence = this.createPersistence(e)),
            await this.persistence.start(),
            (this.localStore = this.createLocalStore(e)),
            (this.gcScheduler = this.createGarbageCollectionScheduler(e, this.localStore)),
            (this.indexBackfillerScheduler = this.createIndexBackfillerScheduler(e, this.localStore));
        }
        createGarbageCollectionScheduler(e, t) {
          return null;
        }
        createIndexBackfillerScheduler(e, t) {
          return null;
        }
        createLocalStore(e) {
          return Jp(this.persistence, new Qp(), e.initialUser, this.serializer);
        }
        createPersistence(e) {
          return new Mp(jp.Hr, this.serializer);
        }
        createSharedClientState(e) {
          return new gm();
        }
        async terminate() {
          var e, t;
          null === (e = this.gcScheduler) || void 0 === e || e.stop(),
            null === (t = this.indexBackfillerScheduler) || void 0 === t || t.stop(),
            this.sharedClientState.shutdown(),
            await this.persistence.shutdown();
        }
      }
      class cv extends lv {
        constructor(e, t, n) {
          super(), (this.Qa = e), (this.cacheSizeBytes = t), (this.forceOwnership = n), (this.synchronizeTabs = !1);
        }
        async initialize(e) {
          await super.initialize(e),
            await this.Qa.initialize(this, e),
            await ov(this.Qa.syncEngine),
            await Xm(this.Qa.remoteStore),
            await this.persistence.fi(
              () => (
                this.gcScheduler && !this.gcScheduler.started && this.gcScheduler.start(),
                this.indexBackfillerScheduler && !this.indexBackfillerScheduler.started && this.indexBackfillerScheduler.start(),
                Promise.resolve()
              ),
            );
        }
        createLocalStore(e) {
          return Jp(this.persistence, new Qp(), e.initialUser, this.serializer);
        }
        createGarbageCollectionScheduler(e, t) {
          const n = this.persistence.referenceDelegate.garbageCollector;
          return new hp(n, e.asyncQueue, t);
        }
        createIndexBackfillerScheduler(e, t) {
          const n = new Ul(t, this.persistence);
          return new jl(e.asyncQueue, n);
        }
        createPersistence(e) {
          const t = Hp(e.databaseInfo.databaseId, e.databaseInfo.persistenceKey),
            n = void 0 !== this.cacheSizeBytes ? Xf.withCacheSize(this.cacheSizeBytes) : Xf.DEFAULT;
          return new Bp(
            this.synchronizeTabs,
            t,
            e.clientId,
            n,
            e.asyncQueue,
            Im(),
            xm(),
            this.serializer,
            this.sharedClientState,
            !!this.forceOwnership,
          );
        }
        createSharedClientState(e) {
          return new gm();
        }
      }
      class uv extends cv {
        constructor(e, t) {
          super(e, t, !1), (this.Qa = e), (this.cacheSizeBytes = t), (this.synchronizeTabs = !0);
        }
        async initialize(e) {
          await super.initialize(e);
          const t = this.Qa.syncEngine;
          this.sharedClientState instanceof mm &&
            ((this.sharedClientState.syncEngine = {
              Zs: ev.bind(null, t),
              Xs: iv.bind(null, t),
              eo: sv.bind(null, t),
              Bi: rv.bind(null, t),
              Ys: Zg.bind(null, t),
            }),
            await this.sharedClientState.start()),
            await this.persistence.fi(async (e) => {
              await (async function (e, t) {
                const n = Ho(e);
                if ((av(n), ov(n), !0 === t && !0 !== n.La)) {
                  const e = n.sharedClientState.getAllActiveQueryTargets(),
                    t = await tv(n, e.toArray());
                  (n.La = !0), await og(n.remoteStore, !0);
                  for (const r of t) Fm(n.remoteStore, r);
                } else if (!1 === t && !1 !== n.La) {
                  const e = [];
                  let t = Promise.resolve();
                  n.Da.forEach((r, i) => {
                    n.sharedClientState.isLocalQueryTarget(i)
                      ? e.push(i)
                      : (t = t.then(() => (Gg(n, i), nm(n.localStore, i, !0)))),
                      jm(n.remoteStore, i);
                  }),
                    await t,
                    await tv(n, e),
                    (function (e) {
                      const t = Ho(e);
                      t.Fa.forEach((e, n) => {
                        jm(t.remoteStore, n);
                      }),
                        t.Ma.mr(),
                        (t.Fa = new Map()),
                        (t.va = new Tc(pl.comparator));
                    })(n),
                    (n.La = !1),
                    await og(n.remoteStore, !1);
                }
              })(this.Qa.syncEngine, e),
                this.gcScheduler && (e && !this.gcScheduler.started ? this.gcScheduler.start() : e || this.gcScheduler.stop()),
                this.indexBackfillerScheduler &&
                  (e && !this.indexBackfillerScheduler.started
                    ? this.indexBackfillerScheduler.start()
                    : e || this.indexBackfillerScheduler.stop());
            });
        }
        createSharedClientState(e) {
          const t = Im();
          if (!mm.D(t))
            throw new Wo(Ko.UNIMPLEMENTED, 'IndexedDB persistence is only available on platforms that support LocalStorage.');
          const n = Hp(e.databaseInfo.databaseId, e.databaseInfo.persistenceKey);
          return new mm(t, e.asyncQueue, n, e.clientId, e.initialUser);
        }
      }
      class dv {
        async initialize(e, t) {
          this.localStore ||
            ((this.localStore = e.localStore),
            (this.sharedClientState = e.sharedClientState),
            (this.datastore = this.createDatastore(t)),
            (this.remoteStore = this.createRemoteStore(t)),
            (this.eventManager = this.createEventManager(t)),
            (this.syncEngine = this.createSyncEngine(t, !e.synchronizeTabs)),
            (this.sharedClientState.onlineStateHandler = (e) => jg(this.syncEngine, e, 1)),
            (this.remoteStore.remoteSyncer.handleCredentialChange = Jg.bind(null, this.syncEngine)),
            await og(this.remoteStore, this.syncEngine.isPrimaryClient));
        }
        createEventManager(e) {
          return new gg();
        }
        createDatastore(e) {
          const t = km(e.databaseInfo.databaseId),
            n = (function (e) {
              return new _m(e);
            })(e.databaseInfo);
          return (function (e, t, n, r) {
            return new Am(e, t, n, r);
          })(e.authCredentials, e.appCheckCredentials, n, t);
        }
        createRemoteStore(e) {
          return (function (e, t, n, r, i) {
            return new Lm(e, t, n, r, i);
          })(this.localStore, this.datastore, e.asyncQueue, (e) => jg(this.syncEngine, e, 0), ym.D() ? new ym() : new vm());
        }
        createSyncEngine(e, t) {
          return (function (e, t, n, r, i, s, a) {
            const o = new Pg(e, t, n, r, i, s);
            return a && (o.La = !0), o;
          })(
            this.localStore,
            this.remoteStore,
            this.eventManager,
            this.sharedClientState,
            e.initialUser,
            e.maxConcurrentLimboResolutions,
            t,
          );
        }
        async terminate() {
          var e;
          await (async function (e) {
            const t = Ho(e);
            Uo('RemoteStore', 'RemoteStore shutting down.'), t.M_.add(5), await Mm(t), t.O_.shutdown(), t.N_.set('Unknown');
          })(this.remoteStore),
            null === (e = this.datastore) || void 0 === e || e.terminate();
        }
      }
      class hv {
        constructor(e) {
          (this.observer = e), (this.muted = !1);
        }
        next(e) {
          this.observer.next && this.Ka(this.observer.next, e);
        }
        error(e) {
          this.observer.error ? this.Ka(this.observer.error, e) : Vo('Uncaught Error in snapshot listener:', e.toString());
        }
        $a() {
          this.muted = !0;
        }
        Ka(e, t) {
          this.muted ||
            setTimeout(() => {
              this.muted || e(t);
            }, 0);
        }
      }
      class fv {
        constructor(e, t, n, r) {
          (this.authCredentials = e),
            (this.appCheckCredentials = t),
            (this.asyncQueue = n),
            (this.databaseInfo = r),
            (this.user = Ro.UNAUTHENTICATED),
            (this.clientId = il.newId()),
            (this.authCredentialListener = () => Promise.resolve()),
            (this.appCheckCredentialListener = () => Promise.resolve()),
            this.authCredentials.start(n, async (e) => {
              Uo('FirestoreClient', 'Received user=', e.uid), await this.authCredentialListener(e), (this.user = e);
            }),
            this.appCheckCredentials.start(
              n,
              (e) => (Uo('FirestoreClient', 'Received new app check token=', e), this.appCheckCredentialListener(e, this.user)),
            );
        }
        get configuration() {
          return {
            asyncQueue: this.asyncQueue,
            databaseInfo: this.databaseInfo,
            clientId: this.clientId,
            authCredentials: this.authCredentials,
            appCheckCredentials: this.appCheckCredentials,
            initialUser: this.user,
            maxConcurrentLimboResolutions: 100,
          };
        }
        setCredentialChangeListener(e) {
          this.authCredentialListener = e;
        }
        setAppCheckTokenChangeListener(e) {
          this.appCheckCredentialListener = e;
        }
        verifyNotTerminated() {
          if (this.asyncQueue.isShuttingDown) throw new Wo(Ko.FAILED_PRECONDITION, 'The client has already been terminated.');
        }
        terminate() {
          this.asyncQueue.enterRestrictedMode();
          const e = new Qo();
          return (
            this.asyncQueue.enqueueAndForgetEvenWhileRestricted(async () => {
              try {
                this._onlineComponents && (await this._onlineComponents.terminate()),
                  this._offlineComponents && (await this._offlineComponents.terminate()),
                  this.authCredentials.shutdown(),
                  this.appCheckCredentials.shutdown(),
                  e.resolve();
              } catch (t) {
                const n = dg(t, 'Failed to shutdown persistence');
                e.reject(n);
              }
            }),
            e.promise
          );
        }
      }
      async function pv(e, t) {
        e.asyncQueue.verifyOperationInProgress(), Uo('FirestoreClient', 'Initializing OfflineComponentProvider');
        const n = e.configuration;
        await t.initialize(n);
        let r = n.initialUser;
        e.setCredentialChangeListener(async (e) => {
          r.isEqual(e) || (await Xp(t.localStore, e), (r = e));
        }),
          t.persistence.setDatabaseDeletedListener(() => e.terminate()),
          (e._offlineComponents = t);
      }
      async function mv(e, t) {
        e.asyncQueue.verifyOperationInProgress();
        const n = await vv(e);
        Uo('FirestoreClient', 'Initializing OnlineComponentProvider'),
          await t.initialize(n, e.configuration),
          e.setCredentialChangeListener((e) => ag(t.remoteStore, e)),
          e.setAppCheckTokenChangeListener((e, n) => ag(t.remoteStore, n)),
          (e._onlineComponents = t);
      }
      function gv(e) {
        return 'FirebaseError' === e.name
          ? e.code === Ko.FAILED_PRECONDITION || e.code === Ko.UNIMPLEMENTED
          : !('undefined' != typeof DOMException && e instanceof DOMException) || 22 === e.code || 20 === e.code || 11 === e.code;
      }
      async function vv(e) {
        if (!e._offlineComponents)
          if (e._uninitializedComponentsProvider) {
            Uo('FirestoreClient', 'Using user provided OfflineComponentProvider');
            try {
              await pv(e, e._uninitializedComponentsProvider._offline);
            } catch (t) {
              const n = t;
              if (!gv(n)) throw n;
              zo('Error using user provided cache. Falling back to memory cache: ' + n), await pv(e, new lv());
            }
          } else Uo('FirestoreClient', 'Using default OfflineComponentProvider'), await pv(e, new lv());
        return e._offlineComponents;
      }
      async function yv(e) {
        return (
          e._onlineComponents ||
            (e._uninitializedComponentsProvider
              ? (Uo('FirestoreClient', 'Using user provided OnlineComponentProvider'),
                await mv(e, e._uninitializedComponentsProvider._online))
              : (Uo('FirestoreClient', 'Using default OnlineComponentProvider'), await mv(e, new dv()))),
          e._onlineComponents
        );
      }
      function wv(e) {
        return yv(e).then((e) => e.syncEngine);
      }
      async function bv(e) {
        const t = await yv(e),
          n = t.eventManager;
        return (
          (n.onListen = Dg.bind(null, t.syncEngine)),
          (n.onUnlisten = Rg.bind(null, t.syncEngine)),
          (n.onFirstRemoteStoreListen = Ag.bind(null, t.syncEngine)),
          (n.onLastRemoteStoreUnlisten = Mg.bind(null, t.syncEngine)),
          n
        );
      }
      function Sv(e, t) {
        let n = arguments.length > 2 && void 0 !== arguments[2] ? arguments[2] : {};
        const r = new Qo();
        return (
          e.asyncQueue.enqueueAndForget(async () =>
            (function (e, t, n, r, i) {
              const s = new hv({
                  next: (s) => {
                    t.enqueueAndForget(() => yg(e, a));
                    const o = s.docs.has(n);
                    !o && s.fromCache
                      ? i.reject(new Wo(Ko.UNAVAILABLE, 'Failed to get document because the client is offline.'))
                      : o && s.fromCache && r && 'server' === r.source
                        ? i.reject(
                            new Wo(
                              Ko.UNAVAILABLE,
                              'Failed to get document from server. (However, this document does exist in the local cache. Run again without setting source to "server" to retrieve the cached document.)',
                            ),
                          )
                        : i.resolve(s);
                  },
                  error: (e) => i.reject(e),
                }),
                a = new _g(Hu(n.path), s, { includeMetadataChanges: !0, ra: !0 });
              return vg(e, a);
            })(await bv(e), e.asyncQueue, t, n, r),
          ),
          r.promise
        );
      }
      function Ev(e) {
        const t = {};
        return void 0 !== e.timeoutSeconds && (t.timeoutSeconds = e.timeoutSeconds), t;
      }
      const Tv = new Map();
      function _v(e, t, n) {
        if (!n) throw new Wo(Ko.INVALID_ARGUMENT, 'Function '.concat(e, '() cannot be called with an empty ').concat(t, '.'));
      }
      function Iv(e) {
        if (!pl.isDocumentKey(e))
          throw new Wo(
            Ko.INVALID_ARGUMENT,
            'Invalid document reference. Document references must have an even number of segments, but '
              .concat(e, ' has ')
              .concat(e.length, '.'),
          );
      }
      function xv(e) {
        if (pl.isDocumentKey(e))
          throw new Wo(
            Ko.INVALID_ARGUMENT,
            'Invalid collection reference. Collection references must have an odd number of segments, but '
              .concat(e, ' has ')
              .concat(e.length, '.'),
          );
      }
      function kv(e) {
        if (void 0 === e) return 'undefined';
        if (null === e) return 'null';
        if ('string' == typeof e) return e.length > 20 && (e = ''.concat(e.substring(0, 20), '...')), JSON.stringify(e);
        if ('number' == typeof e || 'boolean' == typeof e) return '' + e;
        if ('object' == typeof e) {
          if (e instanceof Array) return 'an array';
          {
            const t = (function (e) {
              return e.constructor ? e.constructor.name : null;
            })(e);
            return t ? 'a custom '.concat(t, ' object') : 'an object';
          }
        }
        return 'function' == typeof e ? 'a function' : qo();
      }
      function Cv(e, t) {
        if (('_delegate' in e && (e = e._delegate), !(e instanceof t))) {
          if (t.name === e.constructor.name)
            throw new Wo(
              Ko.INVALID_ARGUMENT,
              'Type does not match the expected instance. Did you pass a reference from a different Firestore SDK?',
            );
          {
            const n = kv(e);
            throw new Wo(Ko.INVALID_ARGUMENT, "Expected type '".concat(t.name, "', but it was: ").concat(n));
          }
        }
        return e;
      }
      class Nv {
        constructor(e) {
          var t, n;
          if (void 0 === e.host) {
            if (void 0 !== e.ssl) throw new Wo(Ko.INVALID_ARGUMENT, "Can't provide ssl option if host option is not set");
            (this.host = 'firestore.googleapis.com'), (this.ssl = !0);
          } else (this.host = e.host), (this.ssl = null === (t = e.ssl) || void 0 === t || t);
          if (
            ((this.credentials = e.credentials),
            (this.ignoreUndefinedProperties = !!e.ignoreUndefinedProperties),
            (this.localCache = e.localCache),
            void 0 === e.cacheSizeBytes)
          )
            this.cacheSizeBytes = 41943040;
          else {
            if (-1 !== e.cacheSizeBytes && e.cacheSizeBytes < 1048576)
              throw new Wo(Ko.INVALID_ARGUMENT, 'cacheSizeBytes must be at least 1048576');
            this.cacheSizeBytes = e.cacheSizeBytes;
          }
          (function (e, t, n, r) {
            if (!0 === t && !0 === r)
              throw new Wo(Ko.INVALID_ARGUMENT, ''.concat(e, ' and ').concat(n, ' cannot be used together.'));
          })(
            'experimentalForceLongPolling',
            e.experimentalForceLongPolling,
            'experimentalAutoDetectLongPolling',
            e.experimentalAutoDetectLongPolling,
          ),
            (this.experimentalForceLongPolling = !!e.experimentalForceLongPolling),
            this.experimentalForceLongPolling
              ? (this.experimentalAutoDetectLongPolling = !1)
              : void 0 === e.experimentalAutoDetectLongPolling
                ? (this.experimentalAutoDetectLongPolling = !0)
                : (this.experimentalAutoDetectLongPolling = !!e.experimentalAutoDetectLongPolling),
            (this.experimentalLongPollingOptions = Ev(null !== (n = e.experimentalLongPollingOptions) && void 0 !== n ? n : {})),
            (function (e) {
              if (void 0 !== e.timeoutSeconds) {
                if (isNaN(e.timeoutSeconds))
                  throw new Wo(
                    Ko.INVALID_ARGUMENT,
                    'invalid long polling timeout: '.concat(e.timeoutSeconds, ' (must not be NaN)'),
                  );
                if (e.timeoutSeconds < 5)
                  throw new Wo(
                    Ko.INVALID_ARGUMENT,
                    'invalid long polling timeout: '.concat(e.timeoutSeconds, ' (minimum allowed value is 5)'),
                  );
                if (e.timeoutSeconds > 30)
                  throw new Wo(
                    Ko.INVALID_ARGUMENT,
                    'invalid long polling timeout: '.concat(e.timeoutSeconds, ' (maximum allowed value is 30)'),
                  );
              }
            })(this.experimentalLongPollingOptions),
            (this.useFetchStreams = !!e.useFetchStreams);
        }
        isEqual(e) {
          return (
            this.host === e.host &&
            this.ssl === e.ssl &&
            this.credentials === e.credentials &&
            this.cacheSizeBytes === e.cacheSizeBytes &&
            this.experimentalForceLongPolling === e.experimentalForceLongPolling &&
            this.experimentalAutoDetectLongPolling === e.experimentalAutoDetectLongPolling &&
            (function (e, t) {
              return e.timeoutSeconds === t.timeoutSeconds;
            })(this.experimentalLongPollingOptions, e.experimentalLongPollingOptions) &&
            this.ignoreUndefinedProperties === e.ignoreUndefinedProperties &&
            this.useFetchStreams === e.useFetchStreams
          );
        }
      }
      class Pv {
        constructor(e, t, n, r) {
          (this._authCredentials = e),
            (this._appCheckCredentials = t),
            (this._databaseId = n),
            (this._app = r),
            (this.type = 'firestore-lite'),
            (this._persistenceKey = '(lite)'),
            (this._settings = new Nv({})),
            (this._settingsFrozen = !1);
        }
        get app() {
          if (!this._app)
            throw new Wo(Ko.FAILED_PRECONDITION, "Firestore was not initialized using the Firebase SDK. 'app' is not available");
          return this._app;
        }
        get _initialized() {
          return this._settingsFrozen;
        }
        get _terminated() {
          return void 0 !== this._terminateTask;
        }
        _setSettings(e) {
          if (this._settingsFrozen)
            throw new Wo(
              Ko.FAILED_PRECONDITION,
              'Firestore has already been started and its settings can no longer be changed. You can only modify settings before calling any other methods on a Firestore object.',
            );
          (this._settings = new Nv(e)),
            void 0 !== e.credentials &&
              (this._authCredentials = (function (e) {
                if (!e) return new Jo();
                switch (e.type) {
                  case 'firstParty':
                    return new el(e.sessionIndex || '0', e.iamToken || null, e.authTokenFactory || null);
                  case 'provider':
                    return e.client;
                  default:
                    throw new Wo(Ko.INVALID_ARGUMENT, 'makeAuthCredentialsProvider failed due to invalid credential type');
                }
              })(e.credentials));
        }
        _getSettings() {
          return this._settings;
        }
        _freezeSettings() {
          return (this._settingsFrozen = !0), this._settings;
        }
        _delete() {
          return this._terminateTask || (this._terminateTask = this._terminate()), this._terminateTask;
        }
        toJSON() {
          return { app: this._app, databaseId: this._databaseId, settings: this._settings };
        }
        _terminate() {
          return (
            (function (e) {
              const t = Tv.get(e);
              t && (Uo('ComponentProvider', 'Removing Datastore'), Tv.delete(e), t.terminate());
            })(this),
            Promise.resolve()
          );
        }
      }
      function Dv(e, t, n) {
        let r = arguments.length > 3 && void 0 !== arguments[3] ? arguments[3] : {};
        var i;
        const s = (e = Cv(e, Pv))._getSettings(),
          a = ''.concat(t, ':').concat(n);
        if (
          ('firestore.googleapis.com' !== s.host &&
            s.host !== a &&
            zo('Host has been set in both settings() and connectFirestoreEmulator(), emulator host will be used.'),
          e._setSettings(Object.assign(Object.assign({}, s), { host: a, ssl: !1 })),
          r.mockUserToken)
        ) {
          let t, n;
          if ('string' == typeof r.mockUserToken) (t = r.mockUserToken), (n = Ro.MOCK_USER);
          else {
            t = (function (e, t) {
              if (e.uid)
                throw new Error(
                  'The "uid" field is no longer supported by mockUserToken. Please use "sub" instead for Firebase Auth User ID.',
                );
              const n = t || 'demo-project',
                r = e.iat || 0,
                i = e.sub || e.user_id;
              if (!i) throw new Error("mockUserToken must contain 'sub' or 'user_id' field!");
              const s = Object.assign(
                {
                  iss: 'https://securetoken.google.com/'.concat(n),
                  aud: n,
                  iat: r,
                  exp: r + 3600,
                  auth_time: r,
                  sub: i,
                  user_id: i,
                  firebase: { sign_in_provider: 'custom', identities: {} },
                },
                e,
              );
              return [an(JSON.stringify({ alg: 'none', type: 'JWT' })), an(JSON.stringify(s)), ''].join('.');
            })(r.mockUserToken, null === (i = e._app) || void 0 === i ? void 0 : i.options.projectId);
            const s = r.mockUserToken.sub || r.mockUserToken.user_id;
            if (!s) throw new Wo(Ko.INVALID_ARGUMENT, "mockUserToken must contain 'sub' or 'user_id' field!");
            n = new Ro(s);
          }
          e._authCredentials = new Xo(new Yo(t, n));
        }
      }
      class Av {
        constructor(e, t, n) {
          (this.converter = t), (this._query = n), (this.type = 'query'), (this.firestore = e);
        }
        withConverter(e) {
          return new Av(this.firestore, e, this._query);
        }
      }
      class Ov {
        constructor(e, t, n) {
          (this.converter = t), (this._key = n), (this.type = 'document'), (this.firestore = e);
        }
        get _path() {
          return this._key.path;
        }
        get id() {
          return this._key.path.lastSegment();
        }
        get path() {
          return this._key.path.canonicalString();
        }
        get parent() {
          return new Lv(this.firestore, this.converter, this._key.path.popLast());
        }
        withConverter(e) {
          return new Ov(this.firestore, e, this._key);
        }
      }
      class Lv extends Av {
        constructor(e, t, n) {
          super(e, t, Hu(n)), (this._path = n), (this.type = 'collection');
        }
        get id() {
          return this._query.path.lastSegment();
        }
        get path() {
          return this._query.path.canonicalString();
        }
        get parent() {
          const e = this._path.popLast();
          return e.isEmpty() ? null : new Ov(this.firestore, null, new pl(e));
        }
        withConverter(e) {
          return new Lv(this.firestore, e, this._path);
        }
      }
      function Rv(e, t) {
        for (var n = arguments.length, r = new Array(n > 2 ? n - 2 : 0), i = 2; i < n; i++) r[i - 2] = arguments[i];
        if (((e = kn(e)), _v('collection', 'path', t), e instanceof Pv)) {
          const n = dl.fromString(t, ...r);
          return xv(n), new Lv(e, null, n);
        }
        {
          if (!(e instanceof Ov || e instanceof Lv))
            throw new Wo(
              Ko.INVALID_ARGUMENT,
              'Expected first argument to collection() to be a CollectionReference, a DocumentReference or FirebaseFirestore',
            );
          const n = e._path.child(dl.fromString(t, ...r));
          return xv(n), new Lv(e.firestore, null, n);
        }
      }
      function Mv(e, t) {
        for (var n = arguments.length, r = new Array(n > 2 ? n - 2 : 0), i = 2; i < n; i++) r[i - 2] = arguments[i];
        if (((e = kn(e)), 1 === arguments.length && (t = il.newId()), _v('doc', 'path', t), e instanceof Pv)) {
          const n = dl.fromString(t, ...r);
          return Iv(n), new Ov(e, null, new pl(n));
        }
        {
          if (!(e instanceof Ov || e instanceof Lv))
            throw new Wo(
              Ko.INVALID_ARGUMENT,
              'Expected first argument to collection() to be a CollectionReference, a DocumentReference or FirebaseFirestore',
            );
          const n = e._path.child(dl.fromString(t, ...r));
          return Iv(n), new Ov(e.firestore, e instanceof Lv ? e.converter : null, new pl(n));
        }
      }
      class Fv {
        constructor() {
          (this.iu = Promise.resolve()),
            (this.su = []),
            (this.ou = !1),
            (this._u = []),
            (this.au = null),
            (this.uu = !1),
            (this.cu = !1),
            (this.lu = []),
            (this.Yo = new Cm(this, 'async_queue_retry')),
            (this.hu = () => {
              const e = xm();
              e && Uo('AsyncQueue', 'Visibility state changed to ' + e.visibilityState), this.Yo.Wo();
            });
          const e = xm();
          e && 'function' == typeof e.addEventListener && e.addEventListener('visibilitychange', this.hu);
        }
        get isShuttingDown() {
          return this.ou;
        }
        enqueueAndForget(e) {
          this.enqueue(e);
        }
        enqueueAndForgetEvenWhileRestricted(e) {
          this.Pu(), this.Iu(e);
        }
        enterRestrictedMode(e) {
          if (!this.ou) {
            (this.ou = !0), (this.cu = e || !1);
            const t = xm();
            t && 'function' == typeof t.removeEventListener && t.removeEventListener('visibilitychange', this.hu);
          }
        }
        enqueue(e) {
          if ((this.Pu(), this.ou)) return new Promise(() => {});
          const t = new Qo();
          return this.Iu(() => (this.ou && this.cu ? Promise.resolve() : (e().then(t.resolve, t.reject), t.promise))).then(
            () => t.promise,
          );
        }
        enqueueRetryable(e) {
          this.enqueueAndForget(() => (this.su.push(e), this.Tu()));
        }
        async Tu() {
          if (0 !== this.su.length) {
            try {
              await this.su[0](), this.su.shift(), this.Yo.reset();
            } catch (Wy) {
              if (!Ol(Wy)) throw Wy;
              Uo('AsyncQueue', 'Operation failed with retryable error: ' + Wy);
            }
            this.su.length > 0 && this.Yo.$o(() => this.Tu());
          }
        }
        Iu(e) {
          const t = this.iu.then(
            () => (
              (this.uu = !0),
              e()
                .catch((e) => {
                  (this.au = e), (this.uu = !1);
                  const t = (function (e) {
                    let t = e.message || '';
                    return e.stack && (t = e.stack.includes(e.message) ? e.stack : e.message + '\n' + e.stack), t;
                  })(e);
                  throw (Vo('INTERNAL UNHANDLED ERROR: ', t), e);
                })
                .then((e) => ((this.uu = !1), e))
            ),
          );
          return (this.iu = t), t;
        }
        enqueueAfterDelay(e, t, n) {
          this.Pu(), this.lu.indexOf(e) > -1 && (t = 0);
          const r = ug.createAndSchedule(this, e, t, n, (e) => this.Eu(e));
          return this._u.push(r), r;
        }
        Pu() {
          this.au && qo();
        }
        verifyOperationInProgress() {}
        async du() {
          let e;
          do {
            (e = this.iu), await e;
          } while (e !== this.iu);
        }
        Au(e) {
          for (const t of this._u) if (t.timerId === e) return !0;
          return !1;
        }
        Ru(e) {
          return this.du().then(() => {
            this._u.sort((e, t) => e.targetTimeMs - t.targetTimeMs);
            for (const t of this._u) if ((t.skipDelay(), 'all' !== e && t.timerId === e)) break;
            return this.du();
          });
        }
        Vu(e) {
          this.lu.push(e);
        }
        Eu(e) {
          const t = this._u.indexOf(e);
          this._u.splice(t, 1);
        }
      }
      function jv(e) {
        return (function (e, t) {
          if ('object' != typeof e || null === e) return !1;
          const n = e;
          for (const r of t) if (r in n && 'function' == typeof n[r]) return !0;
          return !1;
        })(e, ['next', 'error', 'complete']);
      }
      class Uv extends Pv {
        constructor(e, t, n, r) {
          super(e, t, n, r),
            (this.type = 'firestore'),
            (this._queue = new Fv()),
            (this._persistenceKey = (null == r ? void 0 : r.name) || '[DEFAULT]');
        }
        _terminate() {
          return this._firestoreClient || zv(this), this._firestoreClient.terminate();
        }
      }
      function Vv(e) {
        return e._firestoreClient || zv(e), e._firestoreClient.verifyNotTerminated(), e._firestoreClient;
      }
      function zv(e) {
        var t, n, r;
        const i = e._freezeSettings(),
          s = (function (e, t, n, r) {
            return new Uc(
              e,
              t,
              n,
              r.host,
              r.ssl,
              r.experimentalForceLongPolling,
              r.experimentalAutoDetectLongPolling,
              Ev(r.experimentalLongPollingOptions),
              r.useFetchStreams,
            );
          })(e._databaseId, (null === (t = e._app) || void 0 === t ? void 0 : t.options.appId) || '', e._persistenceKey, i);
        (e._firestoreClient = new fv(e._authCredentials, e._appCheckCredentials, e._queue, s)),
          (null === (n = i.localCache) || void 0 === n ? void 0 : n._offlineComponentProvider) &&
            (null === (r = i.localCache) || void 0 === r ? void 0 : r._onlineComponentProvider) &&
            (e._firestoreClient._uninitializedComponentsProvider = {
              _offlineKind: i.localCache.kind,
              _offline: i.localCache._offlineComponentProvider,
              _online: i.localCache._onlineComponentProvider,
            });
      }
      class Bv {
        constructor(e) {
          this._byteString = e;
        }
        static fromBase64String(e) {
          try {
            return new Bv(Dc.fromBase64String(e));
          } catch (e) {
            throw new Wo(Ko.INVALID_ARGUMENT, 'Failed to construct data from Base64 string: ' + e);
          }
        }
        static fromUint8Array(e) {
          return new Bv(Dc.fromUint8Array(e));
        }
        toBase64() {
          return this._byteString.toBase64();
        }
        toUint8Array() {
          return this._byteString.toUint8Array();
        }
        toString() {
          return 'Bytes(base64: ' + this.toBase64() + ')';
        }
        isEqual(e) {
          return this._byteString.isEqual(e._byteString);
        }
      }
      class qv {
        constructor() {
          for (var e = arguments.length, t = new Array(e), n = 0; n < e; n++) t[n] = arguments[n];
          for (let r = 0; r < t.length; ++r)
            if (0 === t[r].length)
              throw new Wo(Ko.INVALID_ARGUMENT, 'Invalid field name at argument $(i + 1). Field names must not be empty.');
          this._internalPath = new fl(t);
        }
        isEqual(e) {
          return this._internalPath.isEqual(e._internalPath);
        }
      }
      class Gv {
        constructor(e) {
          this._methodName = e;
        }
      }
      class Hv {
        constructor(e, t) {
          if (!isFinite(e) || e < -90 || e > 90)
            throw new Wo(Ko.INVALID_ARGUMENT, 'Latitude must be a number between -90 and 90, but was: ' + e);
          if (!isFinite(t) || t < -180 || t > 180)
            throw new Wo(Ko.INVALID_ARGUMENT, 'Longitude must be a number between -180 and 180, but was: ' + t);
          (this._lat = e), (this._long = t);
        }
        get latitude() {
          return this._lat;
        }
        get longitude() {
          return this._long;
        }
        isEqual(e) {
          return this._lat === e._lat && this._long === e._long;
        }
        toJSON() {
          return { latitude: this._lat, longitude: this._long };
        }
        _compareTo(e) {
          return sl(this._lat, e._lat) || sl(this._long, e._long);
        }
      }
      const Kv = /^__.*__$/;
      class Wv {
        constructor(e, t, n) {
          (this.data = e), (this.fieldMask = t), (this.fieldTransforms = n);
        }
        toMutation(e, t) {
          return null !== this.fieldMask
            ? new Kd(e, this.data, this.fieldMask, t, this.fieldTransforms)
            : new Hd(e, this.data, t, this.fieldTransforms);
        }
      }
      class Qv {
        constructor(e, t, n) {
          (this.data = e), (this.fieldMask = t), (this.fieldTransforms = n);
        }
        toMutation(e, t) {
          return new Kd(e, this.data, this.fieldMask, t, this.fieldTransforms);
        }
      }
      function Yv(e) {
        switch (e) {
          case 0:
          case 2:
          case 1:
            return !0;
          case 3:
          case 4:
            return !1;
          default:
            throw qo();
        }
      }
      class Jv {
        constructor(e, t, n, r, i, s) {
          (this.settings = e),
            (this.databaseId = t),
            (this.serializer = n),
            (this.ignoreUndefinedProperties = r),
            void 0 === i && this.mu(),
            (this.fieldTransforms = i || []),
            (this.fieldMask = s || []);
        }
        get path() {
          return this.settings.path;
        }
        get fu() {
          return this.settings.fu;
        }
        gu(e) {
          return new Jv(
            Object.assign(Object.assign({}, this.settings), e),
            this.databaseId,
            this.serializer,
            this.ignoreUndefinedProperties,
            this.fieldTransforms,
            this.fieldMask,
          );
        }
        pu(e) {
          var t;
          const n = null === (t = this.path) || void 0 === t ? void 0 : t.child(e),
            r = this.gu({ path: n, yu: !1 });
          return r.wu(e), r;
        }
        Su(e) {
          var t;
          const n = null === (t = this.path) || void 0 === t ? void 0 : t.child(e),
            r = this.gu({ path: n, yu: !1 });
          return r.mu(), r;
        }
        bu(e) {
          return this.gu({ path: void 0, yu: !0 });
        }
        Du(e) {
          return py(e, this.settings.methodName, this.settings.Cu || !1, this.path, this.settings.vu);
        }
        contains(e) {
          return (
            void 0 !== this.fieldMask.find((t) => e.isPrefixOf(t)) ||
            void 0 !== this.fieldTransforms.find((t) => e.isPrefixOf(t.field))
          );
        }
        mu() {
          if (this.path) for (let e = 0; e < this.path.length; e++) this.wu(this.path.get(e));
        }
        wu(e) {
          if (0 === e.length) throw this.Du('Document fields must not be empty');
          if (Yv(this.fu) && Kv.test(e)) throw this.Du('Document fields cannot begin and end with "__"');
        }
      }
      class Xv {
        constructor(e, t, n) {
          (this.databaseId = e), (this.ignoreUndefinedProperties = t), (this.serializer = n || km(e));
        }
        Fu(e, t, n) {
          let r = arguments.length > 3 && void 0 !== arguments[3] && arguments[3];
          return new Jv(
            { fu: e, methodName: t, vu: n, path: fl.emptyPath(), yu: !1, Cu: r },
            this.databaseId,
            this.serializer,
            this.ignoreUndefinedProperties,
          );
        }
      }
      function $v(e) {
        const t = e._freezeSettings(),
          n = km(e._databaseId);
        return new Xv(e._databaseId, !!t.ignoreUndefinedProperties, n);
      }
      function Zv(e, t, n, r, i) {
        let s = arguments.length > 5 && void 0 !== arguments[5] ? arguments[5] : {};
        const a = e.Fu(s.merge || s.mergeFields ? 2 : 0, t, n, i);
        uy('Data must be an object, but it was:', a, r);
        const o = ly(r, a);
        let l, c;
        if (s.merge) (l = new Nc(a.fieldMask)), (c = a.fieldTransforms);
        else if (s.mergeFields) {
          const e = [];
          for (const r of s.mergeFields) {
            const i = dy(t, r, n);
            if (!a.contains(i))
              throw new Wo(
                Ko.INVALID_ARGUMENT,
                "Field '".concat(i, "' is specified in your field mask but missing from your input data."),
              );
            my(e, i) || e.push(i);
          }
          (l = new Nc(e)), (c = a.fieldTransforms.filter((e) => l.covers(e.field)));
        } else (l = null), (c = a.fieldTransforms);
        return new Wv(new lu(o), l, c);
      }
      class ey extends Gv {
        _toFieldTransform(e) {
          if (2 !== e.fu)
            throw 1 === e.fu
              ? e.Du(''.concat(this._methodName, '() can only appear at the top level of your update data'))
              : e.Du(''.concat(this._methodName, '() cannot be used with set() unless you pass {merge:true}'));
          return e.fieldMask.push(e.path), null;
        }
        isEqual(e) {
          return e instanceof ey;
        }
      }
      function ty(e, t, n) {
        return new Jv(
          { fu: 3, vu: t.settings.vu, methodName: e._methodName, yu: n },
          t.databaseId,
          t.serializer,
          t.ignoreUndefinedProperties,
        );
      }
      class ny extends Gv {
        constructor(e, t) {
          super(e), (this.Mu = t);
        }
        _toFieldTransform(e) {
          const t = ty(this, e, !0),
            n = this.Mu.map((e) => oy(e, t)),
            r = new Cd(n);
          return new Rd(e.path, r);
        }
        isEqual(e) {
          return e instanceof ny && bn(this.Mu, e.Mu);
        }
      }
      class ry extends Gv {
        constructor(e, t) {
          super(e), (this.Mu = t);
        }
        _toFieldTransform(e) {
          const t = ty(this, e, !0),
            n = this.Mu.map((e) => oy(e, t)),
            r = new Pd(n);
          return new Rd(e.path, r);
        }
        isEqual(e) {
          return e instanceof ry && bn(this.Mu, e.Mu);
        }
      }
      function iy(e, t, n, r) {
        const i = e.Fu(1, t, n);
        uy('Data must be an object, but it was:', i, r);
        const s = [],
          a = lu.empty();
        Sc(r, (e, r) => {
          const o = fy(t, e, n);
          r = kn(r);
          const l = i.Su(o);
          if (r instanceof ey) s.push(o);
          else {
            const e = oy(r, l);
            null != e && (s.push(o), a.set(o, e));
          }
        });
        const o = new Nc(s);
        return new Qv(a, o, i.fieldTransforms);
      }
      function sy(e, t, n, r, i, s) {
        const a = e.Fu(1, t, n),
          o = [dy(t, r, n)],
          l = [i];
        if (s.length % 2 != 0)
          throw new Wo(
            Ko.INVALID_ARGUMENT,
            'Function '.concat(
              t,
              '() needs to be called with an even number of arguments that alternate between field names and values.',
            ),
          );
        for (let h = 0; h < s.length; h += 2) o.push(dy(t, s[h])), l.push(s[h + 1]);
        const c = [],
          u = lu.empty();
        for (let h = o.length - 1; h >= 0; --h)
          if (!my(c, o[h])) {
            const e = o[h];
            let t = l[h];
            t = kn(t);
            const n = a.Su(e);
            if (t instanceof ey) c.push(e);
            else {
              const r = oy(t, n);
              null != r && (c.push(e), u.set(e, r));
            }
          }
        const d = new Nc(c);
        return new Qv(u, d, a.fieldTransforms);
      }
      function ay(e, t, n) {
        let r = arguments.length > 3 && void 0 !== arguments[3] && arguments[3];
        return oy(n, e.Fu(r ? 4 : 3, t));
      }
      function oy(e, t) {
        if (cy((e = kn(e)))) return uy('Unsupported field value:', t, e), ly(e, t);
        if (e instanceof Gv)
          return (
            (function (e, t) {
              if (!Yv(t.fu)) throw t.Du(''.concat(e._methodName, '() can only be used with update() and set()'));
              if (!t.path) throw t.Du(''.concat(e._methodName, '() is not currently supported inside arrays'));
              const n = e._toFieldTransform(t);
              n && t.fieldTransforms.push(n);
            })(e, t),
            null
          );
        if (void 0 === e && t.ignoreUndefinedProperties) return null;
        if ((t.path && t.fieldMask.push(t.path), e instanceof Array)) {
          if (t.settings.yu && 4 !== t.fu) throw t.Du('Nested arrays are not supported');
          return (function (e, t) {
            const n = [];
            let r = 0;
            for (const i of e) {
              let e = oy(i, t.bu(r));
              null == e && (e = { nullValue: 'NULL_VALUE' }), n.push(e), r++;
            }
            return { arrayValue: { values: n } };
          })(e, t);
        }
        return (function (e, t) {
          if (null === (e = kn(e))) return { nullValue: 'NULL_VALUE' };
          if ('number' == typeof e) return Ed(t.serializer, e);
          if ('boolean' == typeof e) return { booleanValue: e };
          if ('string' == typeof e) return { stringValue: e };
          if (e instanceof Date) {
            const n = ll.fromDate(e);
            return { timestampValue: kh(t.serializer, n) };
          }
          if (e instanceof ll) {
            const n = new ll(e.seconds, 1e3 * Math.floor(e.nanoseconds / 1e3));
            return { timestampValue: kh(t.serializer, n) };
          }
          if (e instanceof Hv) return { geoPointValue: { latitude: e.latitude, longitude: e.longitude } };
          if (e instanceof Bv) return { bytesValue: Ch(t.serializer, e._byteString) };
          if (e instanceof Ov) {
            const n = t.databaseId,
              r = e.firestore._databaseId;
            if (!r.isEqual(n))
              throw t.Du(
                'Document reference is for database '
                  .concat(r.projectId, '/')
                  .concat(r.database, ' but should be for database ')
                  .concat(n.projectId, '/')
                  .concat(n.database),
              );
            return { referenceValue: Dh(e.firestore._databaseId || t.databaseId, e._key.path) };
          }
          throw t.Du('Unsupported field value: '.concat(kv(e)));
        })(e, t);
      }
      function ly(e, t) {
        const n = {};
        return (
          Ec(e)
            ? t.path && t.path.length > 0 && t.fieldMask.push(t.path)
            : Sc(e, (e, r) => {
                const i = oy(r, t.pu(e));
                null != i && (n[e] = i);
              }),
          { mapValue: { fields: n } }
        );
      }
      function cy(e) {
        return !(
          'object' != typeof e ||
          null === e ||
          e instanceof Array ||
          e instanceof Date ||
          e instanceof ll ||
          e instanceof Hv ||
          e instanceof Bv ||
          e instanceof Ov ||
          e instanceof Gv
        );
      }
      function uy(e, t, n) {
        if (
          !cy(n) ||
          !(function (e) {
            return (
              'object' == typeof e &&
              null !== e &&
              (Object.getPrototypeOf(e) === Object.prototype || null === Object.getPrototypeOf(e))
            );
          })(n)
        ) {
          const r = kv(n);
          throw 'an object' === r ? t.Du(e + ' a custom object') : t.Du(e + ' ' + r);
        }
      }
      function dy(e, t, n) {
        if ((t = kn(t)) instanceof qv) return t._internalPath;
        if ('string' == typeof t) return fy(e, t);
        throw py('Field path arguments must be of type string or ', e, !1, void 0, n);
      }
      const hy = new RegExp('[~\\*/\\[\\]]');
      function fy(e, t, n) {
        if (t.search(hy) >= 0)
          throw py('Invalid field path ('.concat(t, "). Paths must not contain '~', '*', '/', '[', or ']'"), e, !1, void 0, n);
        try {
          return new qv(...t.split('.'))._internalPath;
        } catch (r) {
          throw py(
            'Invalid field path ('.concat(t, "). Paths must not be empty, begin with '.', end with '.', or contain '..'"),
            e,
            !1,
            void 0,
            n,
          );
        }
      }
      function py(e, t, n, r, i) {
        const s = r && !r.isEmpty(),
          a = void 0 !== i;
        let o = 'Function '.concat(t, '() called with invalid data');
        n && (o += ' (via `toFirestore()`)'), (o += '. ');
        let l = '';
        return (
          (s || a) && ((l += ' (found'), s && (l += ' in field '.concat(r)), a && (l += ' in document '.concat(i)), (l += ')')),
          new Wo(Ko.INVALID_ARGUMENT, o + e + l)
        );
      }
      function my(e, t) {
        return e.some((e) => e.isEqual(t));
      }
      class gy {
        constructor(e, t, n, r, i) {
          (this._firestore = e), (this._userDataWriter = t), (this._key = n), (this._document = r), (this._converter = i);
        }
        get id() {
          return this._key.path.lastSegment();
        }
        get ref() {
          return new Ov(this._firestore, this._converter, this._key);
        }
        exists() {
          return null !== this._document;
        }
        data() {
          if (this._document) {
            if (this._converter) {
              const e = new vy(this._firestore, this._userDataWriter, this._key, this._document, null);
              return this._converter.fromFirestore(e);
            }
            return this._userDataWriter.convertValue(this._document.data.value);
          }
        }
        get(e) {
          if (this._document) {
            const t = this._document.data.field(yy('DocumentSnapshot.get', e));
            if (null !== t) return this._userDataWriter.convertValue(t);
          }
        }
      }
      class vy extends gy {
        data() {
          return super.data();
        }
      }
      function yy(e, t) {
        return 'string' == typeof t ? fy(e, t) : t instanceof qv ? t._internalPath : t._delegate._internalPath;
      }
      function wy(e) {
        if ('L' === e.limitType && 0 === e.explicitOrderBy.length)
          throw new Wo(Ko.UNIMPLEMENTED, 'limitToLast() queries require specifying at least one orderBy() clause');
      }
      class by {}
      class Sy extends by {}
      class Ey extends Sy {
        constructor(e, t, n) {
          super(), (this._field = e), (this._op = t), (this._value = n), (this.type = 'where');
        }
        static _create(e, t, n) {
          return new Ey(e, t, n);
        }
        _apply(e) {
          const t = this._parse(e);
          return ky(e._query, t), new Av(e.firestore, e.converter, Xu(e._query, t));
        }
        _parse(e) {
          const t = $v(e.firestore),
            n = (function (e, t, n, r, i, s, a) {
              let o;
              if (i.isKeyField()) {
                if ('array-contains' === s || 'array-contains-any' === s)
                  throw new Wo(Ko.INVALID_ARGUMENT, "Invalid Query. You can't perform '".concat(s, "' queries on documentId()."));
                if ('in' === s || 'not-in' === s) {
                  xy(a, s);
                  const t = [];
                  for (const n of a) t.push(Iy(r, e, n));
                  o = { arrayValue: { values: t } };
                } else o = Iy(r, e, a);
              } else
                ('in' !== s && 'not-in' !== s && 'array-contains-any' !== s) || xy(a, s),
                  (o = ay(n, t, a, 'in' === s || 'not-in' === s));
              return vu.create(i, s, o);
            })(e._query, 'where', t, e.firestore._databaseId, this._field, this._op, this._value);
          return n;
        }
      }
      class Ty extends by {
        constructor(e, t) {
          super(), (this.type = e), (this._queryConstraints = t);
        }
        static _create(e, t) {
          return new Ty(e, t);
        }
        _parse(e) {
          const t = this._queryConstraints.map((t) => t._parse(e)).filter((e) => e.getFilters().length > 0);
          return 1 === t.length ? t[0] : yu.create(t, this._getOperator());
        }
        _apply(e) {
          const t = this._parse(e);
          return 0 === t.getFilters().length
            ? e
            : ((function (e, t) {
                let n = e;
                const r = t.getFlattenedFilters();
                for (const i of r) ky(n, i), (n = Xu(n, i));
              })(e._query, t),
              new Av(e.firestore, e.converter, Xu(e._query, t)));
        }
        _getQueryConstraints() {
          return this._queryConstraints;
        }
        _getOperator() {
          return 'and' === this.type ? 'and' : 'or';
        }
      }
      class _y extends Sy {
        constructor(e, t) {
          super(), (this._field = e), (this._direction = t), (this.type = 'orderBy');
        }
        static _create(e, t) {
          return new _y(e, t);
        }
        _apply(e) {
          const t = (function (e, t, n) {
            if (null !== e.startAt)
              throw new Wo(
                Ko.INVALID_ARGUMENT,
                'Invalid query. You must not call startAt() or startAfter() before calling orderBy().',
              );
            if (null !== e.endAt)
              throw new Wo(
                Ko.INVALID_ARGUMENT,
                'Invalid query. You must not call endAt() or endBefore() before calling orderBy().',
              );
            return new pu(t, n);
          })(e._query, this._field, this._direction);
          return new Av(
            e.firestore,
            e.converter,
            (function (e, t) {
              const n = e.explicitOrderBy.concat([t]);
              return new qu(e.path, e.collectionGroup, n, e.filters.slice(), e.limit, e.limitType, e.startAt, e.endAt);
            })(e._query, t),
          );
        }
      }
      function Iy(e, t, n) {
        if ('string' == typeof (n = kn(n))) {
          if ('' === n)
            throw new Wo(
              Ko.INVALID_ARGUMENT,
              'Invalid query. When querying with documentId(), you must provide a valid document ID, but it was an empty string.',
            );
          if (!Wu(t) && -1 !== n.indexOf('/'))
            throw new Wo(
              Ko.INVALID_ARGUMENT,
              "Invalid query. When querying a collection by documentId(), you must provide a plain document ID, but '".concat(
                n,
                "' contains a '/' character.",
              ),
            );
          const r = t.path.child(dl.fromString(n));
          if (!pl.isDocumentKey(r))
            throw new Wo(
              Ko.INVALID_ARGUMENT,
              "Invalid query. When querying a collection group by documentId(), the value provided must result in a valid document path, but '"
                .concat(r, "' is not because it has an odd number of segments (")
                .concat(r.length, ').'),
            );
          return Jc(e, new pl(r));
        }
        if (n instanceof Ov) return Jc(e, n._key);
        throw new Wo(
          Ko.INVALID_ARGUMENT,
          'Invalid query. When querying with documentId(), you must provide a valid string or a DocumentReference, but it was: '.concat(
            kv(n),
            '.',
          ),
        );
      }
      function xy(e, t) {
        if (!Array.isArray(e) || 0 === e.length)
          throw new Wo(
            Ko.INVALID_ARGUMENT,
            "Invalid Query. A non-empty array is required for '".concat(t.toString(), "' filters."),
          );
      }
      function ky(e, t) {
        const n = (function (e, t) {
          for (const n of e) for (const e of n.getFlattenedFilters()) if (t.indexOf(e.op) >= 0) return e.op;
          return null;
        })(
          e.filters,
          (function (e) {
            switch (e) {
              case '!=':
                return ['!=', 'not-in'];
              case 'array-contains-any':
              case 'in':
                return ['not-in'];
              case 'not-in':
                return ['array-contains-any', 'in', 'not-in', '!='];
              default:
                return [];
            }
          })(t.op),
        );
        if (null !== n)
          throw n === t.op
            ? new Wo(Ko.INVALID_ARGUMENT, "Invalid query. You cannot use more than one '".concat(t.op.toString(), "' filter."))
            : new Wo(
                Ko.INVALID_ARGUMENT,
                "Invalid query. You cannot use '".concat(t.op.toString(), "' filters with '").concat(n.toString(), "' filters."),
              );
      }
      class Cy {
        convertValue(e) {
          let t = arguments.length > 1 && void 0 !== arguments[1] ? arguments[1] : 'none';
          switch (qc(e)) {
            case 0:
              return null;
            case 1:
              return e.booleanValue;
            case 2:
              return Lc(e.integerValue || e.doubleValue);
            case 3:
              return this.convertTimestamp(e.timestampValue);
            case 4:
              return this.convertServerTimestamp(e, t);
            case 5:
              return e.stringValue;
            case 6:
              return this.convertBytes(Rc(e.bytesValue));
            case 7:
              return this.convertReference(e.referenceValue);
            case 8:
              return this.convertGeoPoint(e.geoPointValue);
            case 9:
              return this.convertArray(e.arrayValue, t);
            case 10:
              return this.convertObject(e.mapValue, t);
            default:
              throw qo();
          }
        }
        convertObject(e, t) {
          return this.convertObjectMap(e.fields, t);
        }
        convertObjectMap(e) {
          let t = arguments.length > 1 && void 0 !== arguments[1] ? arguments[1] : 'none';
          const n = {};
          return (
            Sc(e, (e, r) => {
              n[e] = this.convertValue(r, t);
            }),
            n
          );
        }
        convertGeoPoint(e) {
          return new Hv(Lc(e.latitude), Lc(e.longitude));
        }
        convertArray(e, t) {
          return (e.values || []).map((e) => this.convertValue(e, t));
        }
        convertServerTimestamp(e, t) {
          switch (t) {
            case 'previous':
              const n = Fc(e);
              return null == n ? null : this.convertValue(n, t);
            case 'estimate':
              return this.convertTimestamp(jc(e));
            default:
              return null;
          }
        }
        convertTimestamp(e) {
          const t = Oc(e);
          return new ll(t.seconds, t.nanos);
        }
        convertDocumentKey(e, t) {
          const n = dl.fromString(e);
          Go(tf(n));
          const r = new Vc(n.get(1), n.get(3)),
            i = new pl(n.popFirst(5));
          return (
            r.isEqual(t) ||
              Vo(
                'Document '
                  .concat(i, ' contains a document reference within a different database (')
                  .concat(r.projectId, '/')
                  .concat(r.database, ') which is not supported. It will be treated as a reference in the current database (')
                  .concat(t.projectId, '/')
                  .concat(t.database, ') instead.'),
              ),
            i
          );
        }
      }
      function Ny(e, t, n) {
        let r;
        return (r = e ? (n && (n.merge || n.mergeFields) ? e.toFirestore(t, n) : e.toFirestore(t)) : t), r;
      }
      class Py {
        constructor(e, t) {
          (this.hasPendingWrites = e), (this.fromCache = t);
        }
        isEqual(e) {
          return this.hasPendingWrites === e.hasPendingWrites && this.fromCache === e.fromCache;
        }
      }
      class Dy extends gy {
        constructor(e, t, n, r, i, s) {
          super(e, t, n, r, s), (this._firestore = e), (this._firestoreImpl = e), (this.metadata = i);
        }
        exists() {
          return super.exists();
        }
        data() {
          let e = arguments.length > 0 && void 0 !== arguments[0] ? arguments[0] : {};
          if (this._document) {
            if (this._converter) {
              const t = new Ay(this._firestore, this._userDataWriter, this._key, this._document, this.metadata, null);
              return this._converter.fromFirestore(t, e);
            }
            return this._userDataWriter.convertValue(this._document.data.value, e.serverTimestamps);
          }
        }
        get(e) {
          let t = arguments.length > 1 && void 0 !== arguments[1] ? arguments[1] : {};
          if (this._document) {
            const n = this._document.data.field(yy('DocumentSnapshot.get', e));
            if (null !== n) return this._userDataWriter.convertValue(n, t.serverTimestamps);
          }
        }
      }
      class Ay extends Dy {
        data() {
          let e = arguments.length > 0 && void 0 !== arguments[0] ? arguments[0] : {};
          return super.data(e);
        }
      }
      class Oy {
        constructor(e, t, n, r) {
          (this._firestore = e),
            (this._userDataWriter = t),
            (this._snapshot = r),
            (this.metadata = new Py(r.hasPendingWrites, r.fromCache)),
            (this.query = n);
        }
        get docs() {
          const e = [];
          return this.forEach((t) => e.push(t)), e;
        }
        get size() {
          return this._snapshot.docs.size;
        }
        get empty() {
          return 0 === this.size;
        }
        forEach(e, t) {
          this._snapshot.docs.forEach((n) => {
            e.call(
              t,
              new Ay(
                this._firestore,
                this._userDataWriter,
                n.key,
                n,
                new Py(this._snapshot.mutatedKeys.has(n.key), this._snapshot.fromCache),
                this.query.converter,
              ),
            );
          });
        }
        docChanges() {
          const e = !!(arguments.length > 0 && void 0 !== arguments[0] ? arguments[0] : {}).includeMetadataChanges;
          if (e && this._snapshot.excludesMetadataChanges)
            throw new Wo(
              Ko.INVALID_ARGUMENT,
              'To include metadata changes with your document changes, you must also pass { includeMetadataChanges:true } to onSnapshot().',
            );
          return (
            (this._cachedChanges && this._cachedChangesIncludeMetadataChanges === e) ||
              ((this._cachedChanges = (function (e, t) {
                if (e._snapshot.oldDocs.isEmpty()) {
                  let t = 0;
                  return e._snapshot.docChanges.map((n) => {
                    const r = new Ay(
                      e._firestore,
                      e._userDataWriter,
                      n.doc.key,
                      n.doc,
                      new Py(e._snapshot.mutatedKeys.has(n.doc.key), e._snapshot.fromCache),
                      e.query.converter,
                    );
                    return n.doc, { type: 'added', doc: r, oldIndex: -1, newIndex: t++ };
                  });
                }
                {
                  let n = e._snapshot.oldDocs;
                  return e._snapshot.docChanges
                    .filter((e) => t || 3 !== e.type)
                    .map((t) => {
                      const r = new Ay(
                        e._firestore,
                        e._userDataWriter,
                        t.doc.key,
                        t.doc,
                        new Py(e._snapshot.mutatedKeys.has(t.doc.key), e._snapshot.fromCache),
                        e.query.converter,
                      );
                      let i = -1,
                        s = -1;
                      return (
                        0 !== t.type && ((i = n.indexOf(t.doc.key)), (n = n.delete(t.doc.key))),
                        1 !== t.type && ((n = n.add(t.doc)), (s = n.indexOf(t.doc.key))),
                        { type: Ly(t.type), doc: r, oldIndex: i, newIndex: s }
                      );
                    });
                }
              })(this, e)),
              (this._cachedChangesIncludeMetadataChanges = e)),
            this._cachedChanges
          );
        }
      }
      function Ly(e) {
        switch (e) {
          case 0:
            return 'added';
          case 2:
          case 3:
            return 'modified';
          case 1:
            return 'removed';
          default:
            return qo();
        }
      }
      function Ry(e) {
        e = Cv(e, Ov);
        const t = Cv(e.firestore, Uv);
        return Sv(Vv(t), e._key).then((n) => Vy(t, e, n));
      }
      class My extends Cy {
        constructor(e) {
          super(), (this.firestore = e);
        }
        convertBytes(e) {
          return new Bv(e);
        }
        convertReference(e) {
          const t = this.convertDocumentKey(e, this.firestore._databaseId);
          return new Ov(this.firestore, null, t);
        }
      }
      function Fy(e, t, n) {
        e = Cv(e, Ov);
        const r = Cv(e.firestore, Uv),
          i = $v(r);
        let s;
        for (var a = arguments.length, o = new Array(a > 3 ? a - 3 : 0), l = 3; l < a; l++) o[l - 3] = arguments[l];
        return (
          (s =
            'string' == typeof (t = kn(t)) || t instanceof qv
              ? sy(i, 'updateDoc', e._key, t, n, o)
              : iy(i, 'updateDoc', e._key, t)),
          Uy(r, [s.toMutation(e._key, Fd.exists(!0))])
        );
      }
      function jy(e) {
        for (var t = arguments.length, n = new Array(t > 1 ? t - 1 : 0), r = 1; r < t; r++) n[r - 1] = arguments[r];
        var i, s, a;
        e = kn(e);
        let o = { includeMetadataChanges: !1, source: 'default' },
          l = 0;
        'object' != typeof n[l] || jv(n[l]) || ((o = n[l]), l++);
        const c = { includeMetadataChanges: o.includeMetadataChanges, source: o.source };
        if (jv(n[l])) {
          const e = n[l];
          (n[l] = null === (i = e.next) || void 0 === i ? void 0 : i.bind(e)),
            (n[l + 1] = null === (s = e.error) || void 0 === s ? void 0 : s.bind(e)),
            (n[l + 2] = null === (a = e.complete) || void 0 === a ? void 0 : a.bind(e));
        }
        let u, d, h;
        if (e instanceof Ov)
          (d = Cv(e.firestore, Uv)),
            (h = Hu(e._key.path)),
            (u = {
              next: (t) => {
                n[l] && n[l](Vy(d, e, t));
              },
              error: n[l + 1],
              complete: n[l + 2],
            });
        else {
          const t = Cv(e, Av);
          (d = Cv(t.firestore, Uv)), (h = t._query);
          const r = new My(d);
          (u = {
            next: (e) => {
              n[l] && n[l](new Oy(d, r, t, e));
            },
            error: n[l + 1],
            complete: n[l + 2],
          }),
            wy(e._query);
        }
        return (function (e, t, n, r) {
          const i = new hv(r),
            s = new _g(t, i, n);
          return (
            e.asyncQueue.enqueueAndForget(async () => vg(await bv(e), s)),
            () => {
              i.$a(), e.asyncQueue.enqueueAndForget(async () => yg(await bv(e), s));
            }
          );
        })(Vv(d), h, c, u);
      }
      function Uy(e, t) {
        return (function (e, t) {
          const n = new Qo();
          return (
            e.asyncQueue.enqueueAndForget(async () =>
              (async function (e, t, n) {
                const r = ov(e);
                try {
                  const e = await (function (e, t) {
                    const n = Ho(e),
                      r = ll.now(),
                      i = t.reduce((e, t) => e.add(t.key), vd());
                    let s, a;
                    return n.persistence
                      .runTransaction('Locally write mutations', 'readwrite', (e) => {
                        let o = ld(),
                          l = vd();
                        return n.os
                          .getEntries(e, i)
                          .next((e) => {
                            (o = e),
                              o.forEach((e, t) => {
                                t.isValidDocument() || (l = l.add(e));
                              });
                          })
                          .next(() => n.localDocuments.getOverlayedDocuments(e, o))
                          .next((i) => {
                            s = i;
                            const a = [];
                            for (const e of t) {
                              const t = qd(e, s.get(e.key).overlayedDocument);
                              null != t && a.push(new Kd(e.key, t, cu(t.value.mapValue), Fd.exists(!0)));
                            }
                            return n.mutationQueue.addMutationBatch(e, r, a, t);
                          })
                          .next((t) => {
                            a = t;
                            const r = t.applyToLocalDocumentSet(s, l);
                            return n.documentOverlayCache.saveOverlays(e, t.batchId, r);
                          });
                      })
                      .then(() => ({ batchId: a.batchId, changes: dd(s) }));
                  })(r.localStore, t);
                  r.sharedClientState.addPendingMutation(e.batchId),
                    (function (e, t, n) {
                      let r = e.xa[e.currentUser.toKey()];
                      r || (r = new Tc(sl)), (r = r.insert(t, n)), (e.xa[e.currentUser.toKey()] = r);
                    })(r, e.batchId, n),
                    await Yg(r, e.changes),
                    await Xm(r.remoteStore);
                } catch (e) {
                  const t = dg(e, 'Failed to persist write');
                  n.reject(t);
                }
              })(await wv(e), t, n),
            ),
            n.promise
          );
        })(Vv(e), t);
      }
      function Vy(e, t, n) {
        const r = n.docs.get(t._key),
          i = new My(e);
        return new Dy(e, i, t._key, r, new Py(n.hasPendingWrites, n.fromCache), t.converter);
      }
      class zy {
        constructor(e) {
          let t;
          (this.kind = 'persistent'),
            (null == e ? void 0 : e.tabManager)
              ? (e.tabManager._initialize(e), (t = e.tabManager))
              : ((t = (function (e) {
                  return new By(null == e ? void 0 : e.forceOwnership);
                })(void 0)),
                t._initialize(e)),
            (this._onlineComponentProvider = t._onlineComponentProvider),
            (this._offlineComponentProvider = t._offlineComponentProvider);
        }
        toJSON() {
          return { kind: this.kind };
        }
      }
      class By {
        constructor(e) {
          (this.forceOwnership = e), (this.kind = 'persistentSingleTab');
        }
        toJSON() {
          return { kind: this.kind };
        }
        _initialize(e) {
          (this._onlineComponentProvider = new dv()),
            (this._offlineComponentProvider = new cv(
              this._onlineComponentProvider,
              null == e ? void 0 : e.cacheSizeBytes,
              this.forceOwnership,
            ));
        }
      }
      class qy {
        constructor() {
          this.kind = 'PersistentMultipleTab';
        }
        toJSON() {
          return { kind: this.kind };
        }
        _initialize(e) {
          (this._onlineComponentProvider = new dv()),
            (this._offlineComponentProvider = new uv(this._onlineComponentProvider, null == e ? void 0 : e.cacheSizeBytes));
        }
      }
      function Gy() {
        for (var e = arguments.length, t = new Array(e), n = 0; n < e; n++) t[n] = arguments[n];
        return new ny('arrayUnion', t);
      }
      function Hy() {
        for (var e = arguments.length, t = new Array(e), n = 0; n < e; n++) t[n] = arguments[n];
        return new ry('arrayRemove', t);
      }
      new WeakMap();
      !(function (e) {
        let t = !(arguments.length > 1 && void 0 !== arguments[1]) || arguments[1];
        !(function (e) {
          Mo = e;
        })(Br),
          Fr(
            new Cn(
              'firestore',
              (e, n) => {
                let { instanceIdentifier: r, options: i } = n;
                const s = e.getProvider('app').getImmediate(),
                  a = new Uv(
                    new $o(e.getProvider('auth-internal')),
                    new nl(e.getProvider('app-check-internal')),
                    (function (e, t) {
                      if (!Object.prototype.hasOwnProperty.apply(e.options, ['projectId']))
                        throw new Wo(Ko.INVALID_ARGUMENT, '"projectId" not provided in firebase.initializeApp.');
                      return new Vc(e.options.projectId, t);
                    })(s, r),
                    s,
                  );
                return (i = Object.assign({ useFetchStreams: t }, i)), a._setSettings(i), a;
              },
              'PUBLIC',
            ).setMultipleInstances(!0),
          ),
          Hr(Lo, '4.6.3', e),
          Hr(Lo, '4.6.3', 'esm2017');
      })();
      const Ky = qr({
        apiKey: 'AIzaSyDvVTxJZ_lLTGhmhsK1bbqPp8XTIKWckL8',
        authDomain: 'adv-app-dev-assignment.firebaseapp.com',
        projectId: 'adv-app-dev-assignment',
        storageBucket: 'adv-app-dev-assignment.appspot.com',
        messagingSenderId: '923720245338',
        appId: '1:923720245338:web:1dd5e75ae306ede64c3863',
      });
      var Wy;
      !(function (e, t, n) {
        n || (n = '(default)');
        const r = jr(e, 'firestore');
        if (r.isInitialized(n)) {
          const e = r.getImmediate({ identifier: n });
          if (bn(r.getOptions(n), t)) return e;
          throw new Wo(
            Ko.FAILED_PRECONDITION,
            'initializeFirestore() has already been called with different options. To avoid this error, call initializeFirestore() with the same options as when it was originally called, or call getFirestore() to return the already initialized instance.',
          );
        }
        if (void 0 !== t.cacheSizeBytes && void 0 !== t.localCache)
          throw new Wo(
            Ko.INVALID_ARGUMENT,
            'cache and cacheSizeBytes cannot be specified at the same time as cacheSizeBytes willbe deprecated. Instead, specify the cache size in the cache object',
          );
        if (void 0 !== t.cacheSizeBytes && -1 !== t.cacheSizeBytes && t.cacheSizeBytes < 1048576)
          throw new Wo(Ko.INVALID_ARGUMENT, 'cacheSizeBytes must be at least 1048576');
        r.initialize({ options: t, instanceIdentifier: n });
      })(Ky, { localCache: new zy(Wy), tabManager: new qy() });
      const Qy = (function () {
          let e = arguments.length > 0 && void 0 !== arguments[0] ? arguments[0] : Gr();
          const t = jr(e, 'auth');
          if (t.isInitialized()) return t.getImmediate();
          const n = (function (e, t) {
              const n = jr(e, 'auth');
              if (n.isInitialized()) {
                const e = n.getImmediate();
                if (bn(n.getOptions(), null !== t && void 0 !== t ? t : {})) return e;
                ui(e, 'already-initialized');
              }
              return n.initialize({ options: t });
            })(e, { popupRedirectResolver: uo, persistence: [wa, na, ia] }),
            r = hn('authTokenSyncURL');
          if (r && 'boolean' === typeof isSecureContext && isSecureContext) {
            const e = new URL(r, location.origin);
            if (location.origin === e.origin) {
              const t =
                ((i = e.toString()),
                async (e) => {
                  const t = e && (await e.getIdTokenResult()),
                    n = t && (new Date().getTime() - Date.parse(t.issuedAtTime)) / 1e3;
                  if (n && n > mo) return;
                  const r = null === t || void 0 === t ? void 0 : t.token;
                  go !== r &&
                    ((go = r),
                    await fetch(i, { method: r ? 'POST' : 'DELETE', headers: r ? { Authorization: 'Bearer '.concat(r) } : {} }));
                });
              !(function (e, t, n) {
                kn(e).beforeAuthStateChanged(t, n);
              })(n, t, () => t(n.currentUser)),
                (function (e, t, n, r) {
                  kn(e).onIdTokenChanged(t, n, r);
                })(n, (e) => t(e));
            }
          }
          var i;
          const s = un('auth');
          return s && xs(n, 'http://'.concat(s)), n;
        })(Ky),
        Yy = (function (e, t) {
          const n = 'string' == typeof e ? e : t || '(default)',
            r = jr('object' == typeof e ? e : Gr(), 'firestore').getImmediate({ identifier: n });
          if (!r._initialized) {
            const e = ((e) => {
              const t = un(e);
              if (!t) return;
              const n = t.lastIndexOf(':');
              if (n <= 0 || n + 1 === t.length)
                throw new Error('Invalid host '.concat(t, ' with no separate hostname and port!'));
              const r = parseInt(t.substring(n + 1), 10);
              return '[' === t[0] ? [t.substring(1, n - 1), r] : [t.substring(0, n), r];
            })('firestore');
            e && Dv(r, ...e);
          }
          return r;
        })(Ky);
      var Jy = n(579);
      const Xy = (0, t.createContext)(),
        $y = () => (0, t.useContext)(Xy),
        Zy = (e) => {
          let { children: n } = e;
          const [r, i] = (0, t.useState)('');
          return (
            (0, t.useEffect)(
              () =>
                (function (e, t, n, r) {
                  return kn(e).onAuthStateChanged(t, n, r);
                })(Qy, (e) => {
                  i(e ? e.uid : null);
                }),
              [],
            ),
            (0, Jy.jsx)(Xy.Provider, {
              value: {
                signInAnonUser: () =>
                  (async function (e) {
                    var t;
                    if (Ur(e.app)) return Promise.reject(fi(e));
                    const n = ys(e);
                    if ((await n._initializationPromise, null === (t = n.currentUser) || void 0 === t ? void 0 : t.isAnonymous))
                      return new Ks({ user: n.currentUser, providerId: null, operationType: 'signIn' });
                    const r = await Hs(n, { returnSecureToken: !0 }),
                      i = await Ks._fromIdTokenResponse(n, 'signIn', r, !0);
                    return await n._updateCurrentUser(i.user), i;
                  })(Qy),
                logout: () =>
                  (function (e) {
                    return kn(e).signOut();
                  })(Qy),
                user: r,
              },
              children: n,
            })
          );
        },
        ew = () => (0, Jy.jsx)(Jy.Fragment, {}),
        tw = () => {
          const [e, n] = (0, t.useState)({});
          return {
            loading: (t) => e[t] || !1,
            setLoading: (e, t) => {
              n((n) => ({ ...n, [e]: t }));
            },
          };
        };
      function nw(e) {
        return Qt({
          tag: 'svg',
          attr: { version: '1.1', viewBox: '0 0 16 16' },
          child: [
            {
              tag: 'path',
              attr: {
                d: 'M16 8c-0.020-1.045-0.247-2.086-0.665-3.038-0.417-0.953-1.023-1.817-1.766-2.53s-1.624-1.278-2.578-1.651c-0.953-0.374-1.978-0.552-2.991-0.531-1.013 0.020-2.021 0.24-2.943 0.646-0.923 0.405-1.758 0.992-2.449 1.712s-1.237 1.574-1.597 2.497c-0.361 0.923-0.533 1.914-0.512 2.895 0.020 0.981 0.234 1.955 0.627 2.847 0.392 0.892 0.961 1.7 1.658 2.368s1.523 1.195 2.416 1.543c0.892 0.348 1.851 0.514 2.799 0.493 0.949-0.020 1.89-0.227 2.751-0.608 0.862-0.379 1.642-0.929 2.287-1.604s1.154-1.472 1.488-2.335c0.204-0.523 0.342-1.069 0.415-1.622 0.019 0.001 0.039 0.002 0.059 0.002 0.552 0 1-0.448 1-1 0-0.028-0.001-0.056-0.004-0.083h0.004zM14.411 10.655c-0.367 0.831-0.898 1.584-1.55 2.206s-1.422 1.112-2.254 1.434c-0.832 0.323-1.723 0.476-2.608 0.454-0.884-0.020-1.759-0.215-2.56-0.57-0.801-0.354-1.526-0.867-2.125-1.495s-1.071-1.371-1.38-2.173c-0.31-0.801-0.457-1.66-0.435-2.512s0.208-1.694 0.551-2.464c0.342-0.77 0.836-1.468 1.441-2.044s1.321-1.029 2.092-1.326c0.771-0.298 1.596-0.438 2.416-0.416s1.629 0.202 2.368 0.532c0.74 0.329 1.41 0.805 1.963 1.387s0.988 1.27 1.272 2.011c0.285 0.74 0.418 1.532 0.397 2.32h0.004c-0.002 0.027-0.004 0.055-0.004 0.083 0 0.516 0.39 0.94 0.892 0.994-0.097 0.544-0.258 1.075-0.481 1.578z',
              },
              child: [],
            },
          ],
        })(e);
      }
      const rw = (e) => {
          let { styles: t } = e;
          return (0, Jy.jsx)(Jy.Fragment, {
            children: (0, Jy.jsx)('div', {
              className: 'flex items-center justify-center z-50',
              children: (0, Jy.jsx)(nw, { className: t }),
            }),
          });
        },
        iw = (e) => {
          let { label: t, onClick: n, styles: r, disabled: i, value: s, type: a } = e;
          return (0, Jy.jsx)('button', { type: a, className: r, value: s, disabled: i, onClick: n, children: t });
        },
        sw =
          'relative bg-white px-6 pt-10 flex flex-col sm:w-[500px] items-center border pb-8 ring-1 ring-gray-900/5 mx-4 my-2 md:rounded-lg',
        aw = 'text-6xl p-4',
        ow = 'text-[100px] sm:text-[150px] absolute top-0 right-0 rotate-[30deg]',
        lw = 'sm:relative sm:flex sm:flex-col sm:overflow-hidden w-screen sm:rounded-lg items-center',
        cw =
          'p-4 w-[185px] flex justify-center border rounded-lg bg-slate-500 text-white hover:bg-sky-600 transition ease-in-and-out duration-700',
        uw = 'border-2 border-gray-300 p-2 rounded-md',
        dw = 'bg-blue-500 text-white',
        hw = 'bg-red-500 text-gray-800',
        fw = 'px-4 py-2 rounded-md focus:outline-none',
        pw = (e) => {
          let { formLabel: t, handleSubmit: n, buttonStyles: r, buttonType: i, loadingState: s, buttonLabel: a } = e;
          return (0, Jy.jsxs)('div', {
            className: sw,
            children: [
              (0, Jy.jsx)(en, { className: ow }),
              (0, Jy.jsx)('h1', { className: aw, children: t }),
              (0, Jy.jsx)('form', { onSubmit: n, children: (0, Jy.jsx)(iw, { styles: r, type: i, disabled: s, label: a }) }),
            ],
          });
        },
        mw = () => {
          const [e, n] = (0, t.useState)(''),
            { user: r, signInAnonUser: i } = $y(),
            { loading: s, setLoading: a } = tw();
          if (r) return (0, Jy.jsx)(ht, { to: '/', replace: !0 });
          return (0, Jy.jsx)(Jy.Fragment, {
            children: (0, Jy.jsxs)('section', {
              className: lw,
              children: [
                (0, Jy.jsx)(pw, {
                  formLabel: 'Login',
                  handleSubmit: async (t) => {
                    try {
                      t.preventDefault(), n(''), a('login', !0), await i();
                    } catch (e) {
                      n(e.message);
                    } finally {
                      a('login', !1);
                    }
                  },
                  buttonStyles: cw,
                  buttonType: 'submit',
                  loadingState: s('login'),
                  buttonLabel: s('login') ? (0, Jy.jsx)(rw, { styles: 'animate-spin h-6 w-6' }) : 'Sign In Anonymously',
                }),
                e && (0, Jy.jsx)('p', { children: e }),
              ],
            }),
          });
        },
        gw = () =>
          (0, Jy.jsx)(Jy.Fragment, {
            children: (0, Jy.jsx)('div', { className: 'flex justify-center', children: (0, Jy.jsx)(mw, {}) }),
          }),
        vw = () => {
          const [e, n] = (0, t.useState)(''),
            { user: r, logout: i } = $y(),
            { loading: s, setLoading: a } = tw();
          if (!r) return (0, Jy.jsx)(ht, { to: '/', replace: !0 });
          return (0, Jy.jsx)(Jy.Fragment, {
            children: (0, Jy.jsxs)('section', {
              className: lw,
              children: [
                (0, Jy.jsx)(pw, {
                  formLabel: 'Sign Out',
                  handleSubmit: async (t) => {
                    try {
                      t.preventDefault(), n(''), a('signout', !0), await new Promise((e) => setTimeout(e, 2e3)), await i();
                    } catch (e) {
                      n(e.message);
                    } finally {
                      a('signout', !1);
                    }
                  },
                  buttonStyles: cw,
                  buttonType: 'submit',
                  loadingState: s('signout'),
                  buttonLabel: s('signout') ? (0, Jy.jsx)(rw, { styles: 'animate-spin h-6 w-6' }) : 'Sign out',
                }),
                e && (0, Jy.jsx)('p', { children: e }),
              ],
            }),
          });
        },
        yw = { SPADE: 'Spade', HEART: 'Heart', CLUB: 'Club', DIAMOND: 'Diamond' },
        ww = {
          TWO: { label: '2', value: 2 },
          THREE: { label: '3', value: 3 },
          FOUR: { label: '4', value: 4 },
          FIVE: { label: '5', value: 5 },
          SIX: { label: '6', value: 6 },
          SEVEN: { label: '7', value: 7 },
          EIGHT: { label: '8', value: 8 },
          NINE: { label: '9', value: 9 },
          TEN: { label: '10', value: 10 },
          JACK: { label: 'J', value: 11 },
          QUEEN: { label: 'Q', value: 12 },
          KING: { label: 'K', value: 13 },
          ACE: { label: 'A', value: 14 },
        },
        bw = async (e, t, n) => {
          try {
            const r = (() => {
                const e = [];
                for (const t in yw)
                  for (const n in ww) {
                    const r = { suit: yw[t], rank: ww[n] };
                    e.push(r);
                  }
                return e;
              })(),
              i = Rv(Yy, 'games'),
              s = await (function (e, t) {
                const n = Cv(e.firestore, Uv),
                  r = Mv(e),
                  i = Ny(e.converter, t);
                return Uy(n, [
                  Zv($v(e.firestore), 'addDoc', r._key, i, null !== e.converter, {}).toMutation(r._key, Fd.exists(!1)),
                ]).then(() => r);
              })(i, { owner: n, gameName: e, totalPlayers: t, started: !1, joinedPlayers: [], deck: r });
            return await Ew(n, s.id), s.id;
          } catch (r) {
            return r;
          }
        },
        Sw = async (e) => {
          let { collectionName: t, callback: n } = e;
          try {
            const e = (function (e, t) {
              let n = [];
              for (var r = arguments.length, i = new Array(r > 2 ? r - 2 : 0), s = 2; s < r; s++) i[s - 2] = arguments[s];
              t instanceof by && n.push(t),
                (n = n.concat(i)),
                (function (e) {
                  const t = e.filter((e) => e instanceof Ty).length,
                    n = e.filter((e) => e instanceof Ey).length;
                  if (t > 1 || (t > 0 && n > 0))
                    throw new Wo(
                      Ko.INVALID_ARGUMENT,
                      'InvalidQuery. When using composite filters, you cannot use more than one filter at the top level. Consider nesting the multiple filters within an `and(...)` statement. For example: change `query(query, where(...), or(...))` to `query(query, and(where(...), or(...)))`.',
                    );
                })(n);
              for (const a of n) e = a._apply(e);
              return e;
            })(
              Rv(Yy, t),
              (function (e) {
                const t = arguments.length > 1 && void 0 !== arguments[1] ? arguments[1] : 'asc',
                  n = yy('orderBy', e);
                return _y._create(n, t);
              })('totalPlayers'),
            );
            return jy(e, n);
          } catch (r) {
            return r;
          }
        },
        Ew = async (e, t) => {
          try {
            const n = Mv(Yy, 'games', t, 'players', e),
              r = Mv(Yy, 'games', t);
            await Fy(r, { joinedPlayers: Gy(e) }),
              await (function (e, t, n) {
                e = Cv(e, Ov);
                const r = Cv(e.firestore, Uv),
                  i = Ny(e.converter, t, n);
                return Uy(r, [Zv($v(r), 'setDoc', e._key, i, null !== e.converter, n).toMutation(e._key, Fd.none())]);
              })(n, { playerId: e, currentTurn: !1, readyCheck: !1, hand: [], hasMadeTurn: !1 });
          } catch (n) {
            return n;
          }
        },
        Tw = async (e, t) => {
          try {
            const n = Mv(Yy, 'games', t, 'players', e),
              r = Mv(Yy, 'games', t);
            await Fy(r, { joinedPlayers: Hy(e) }),
              await (function (e) {
                return Uy(Cv(e.firestore, Uv), [new Jd(e._key, Fd.none())]);
              })(n);
          } catch (n) {
            return n;
          }
        },
        _w = async (e, t, n) => {
          try {
            const r = Mv(Yy, 'games', e, 'players', t);
            await Fy(r, { readyCheck: n });
          } catch (r) {
            return r;
          }
        },
        Iw = async (e, t) => {
          try {
            const n = t[Math.floor(Math.random() * t.length)],
              r = Mv(Yy, 'games', e, 'players', n.playerId);
            await Fy(r, { currentTurn: !0 });
          } catch (n) {
            return n;
          }
        },
        xw = async (e, t) => {
          const n = Mv(Yy, 'games', e);
          try {
            const r = (await Ry(n)).data();
            if (!r.deck || r.deck.length < t) throw new Error('Not enough cards in deck to draw');
            let i = ((e) => {
              for (let t = e.length - 1; t > 0; t--) {
                const n = Math.floor(Math.random() * (t + 1));
                [e[t], e[n]] = [e[n], e[t]];
              }
              return e;
            })(r.deck);
            for (let s of r.joinedPlayers) {
              const r = Mv(Yy, 'games', e, 'players', s),
                a = i.slice(0, t),
                o = i.slice(t);
              await Fy(n, { deck: o }), await Fy(r, { hand: a }), (i = o);
            }
            return i;
          } catch (r) {
            throw (console.error('Error drawing cards: ', r), r);
          }
        },
        kw = async (e, t, n) => {
          try {
            const r = Mv(Yy, 'games', e, 'players', t),
              i = await Ry(r),
              s = i.data().hand.filter((e) => !n.some((t) => t.suit === e.suit && t.rank.label === e.rank.label));
            await Fy(r, { hand: s });
            const a = await (async (e, t) => {
                const n = Mv(Yy, 'games', e),
                  r = (await Ry(n)).data().deck,
                  i = r.slice(0, t),
                  s = r.slice(t);
                return await Fy(n, { deck: s }), i;
              })(e, n.length),
              o = await Ry(r),
              l = [...o.data().hand, ...a];
            return await Fy(r, { hand: l }), console.log('Selected cards removed and new cards drawn.'), l;
          } catch (r) {
            throw (console.error('Error removing selected cards and drawing new ones:', r), r);
          }
        },
        Cw = (e) => {
          const [n, r] = (0, t.useState)([]),
            [i, s] = (0, t.useState)({}),
            { loading: a, setLoading: o } = tw(),
            l = Je(),
            c = async () => {
              try {
                o('gameLobby', !0);
                const t = await (async (e, t) => {
                    try {
                      return jy(
                        Mv(Yy, 'games', e),
                        (e) => {
                          const n = e.data();
                          t(n);
                        },
                        (e) => {
                          console.error('Error fetching game data: ', e);
                        },
                      );
                    } catch (n) {
                      return n;
                    }
                  })(e, (t) => {
                    s(t), t.started && l('/games/session/'.concat(e));
                  }),
                  n = ((e, t) => {
                    try {
                      const n = jy(
                        Rv(Yy, 'games', e, 'players'),
                        (e) => {
                          const n = e.docs.map((e) => e.data());
                          t(n);
                        },
                        (e) => {
                          console.error('Error fetching game data: ', e);
                        },
                      );
                      return n;
                    } catch (n) {
                      console.error('Error setting up listener: ', n);
                    }
                  })(e, (e) => {
                    r(e);
                  });
                return () => {
                  n(), t();
                };
              } catch (t) {
                console.log(t);
              } finally {
                o('gameLobby', !1);
              }
            };
          return (
            (0, t.useEffect)(() => {
              c();
            }, [i.started]),
            { gameLobby: n, loading: a, gameData: i }
          );
        },
        Nw = () => {
          const { gameId: e } = $e(),
            { gameLobby: t, gameData: n, loading: r } = Cw(e),
            { user: i } = $y(),
            s = () => {
              _w(e, i, !0);
            },
            a = () => {
              _w(e, i, !1);
            };
          return (0, Jy.jsx)(Jy.Fragment, {
            children: r('gameLobby')
              ? (0, Jy.jsx)(rw, { styles: 'animate-spin h-10 w-10 text-black' })
              : (0, Jy.jsxs)('section', {
                  className: 'grid grid-cols-6 grid-rows-3',
                  children: [
                    (0, Jy.jsx)('h1', {
                      className: 'font-bold flex col-span-6 justify-center items-center',
                      children: n.gameName,
                    }),
                    (0, Jy.jsx)('div', {
                      className: 'flex row-start-2 col-span-6 justify-evenly',
                      children: t.map((e) =>
                        (0, Jy.jsxs)('div', {
                          className: 'relative group',
                          children: [
                            (0, Jy.jsx)('div', {
                              class:
                                'absolute -inset-1 bg-gradient-to-r from-green-500 via-red-500 to-violet-600 rounded-3xl blur transition duration-1000 '.concat(
                                  !0 === e.readyCheck ? 'opacity-80 animate-pulse' : 'opacity-0',
                                ),
                            }),
                            (0, Jy.jsxs)(
                              'div',
                              {
                                className: 'border rounded-lg h-[200px] flex flex-col relative bg-slate-100',
                                children: [
                                  (0, Jy.jsxs)('h1', { className: 'font-bold', children: ['Player: ', e.playerId] }),
                                  (0, Jy.jsxs)('p', {
                                    className: 'text-center mb-8 mt-4 mx-auto rounded-md',
                                    children: [
                                      (0, Jy.jsx)('span', { className: 'font-bold', children: 'Ready: ' }),
                                      !1 === e.readyCheck ? 'No' : 'Yes',
                                    ],
                                  }),
                                  (0, Jy.jsx)('div', {
                                    className: 'flex justify-center',
                                    children:
                                      i === e.playerId &&
                                      (!1 === e.readyCheck
                                        ? (0, Jy.jsx)(iw, {
                                            onClick: s,
                                            label: 'Ready',
                                            styles:
                                              'items-center px-3 py-2 text-md font-medium text-center text-white bg-green-500 rounded-lg hover:bg-sky-600 transition ease-in-and-out duration-700',
                                          })
                                        : (0, Jy.jsx)(iw, {
                                            label: 'Unready',
                                            onClick: a,
                                            styles:
                                              'items-center px-3 py-2 text-md font-medium text-center text-white bg-slate-500 rounded-lg hover:bg-red-600 transition ease-in-and-out duration-700',
                                          })),
                                  }),
                                ],
                              },
                              e.playerId,
                            ),
                          ],
                        }),
                      ),
                    }),
                    i === n.owner &&
                      t.length === n.totalPlayers &&
                      t.every((e) => e.readyCheck) &&
                      (0, Jy.jsx)('div', {
                        className: 'row-start-3 col-span-full flex justify-center items-center mt-4',
                        children: (0, Jy.jsx)(iw, {
                          label: 'Start Game',
                          onClick: () => {
                            (async (e, t) => {
                              try {
                                const n = Mv(Yy, 'games', e);
                                await Fy(n, { started: !0 }), await Iw(e, t), await xw(e, 5);
                              } catch (n) {
                                return n;
                              }
                            })(e, t);
                          },
                          styles:
                            'flex px-3 py-2 h-16 w-32 text-md font-medium\n              justify-center items-center\n              text-white bg-green-500 rounded-lg hover:bg-green-600\n              transition ease-in-and-out duration-700\n              ',
                        }),
                      }),
                  ],
                }),
          });
        },
        Pw = (e) => {
          let { inputType: t, value: n, onChange: r, placeHolder: i, styles: s, min: a, max: o, idLabel: l } = e;
          return (0, Jy.jsx)('input', {
            id: l,
            className: s,
            type: t,
            value: n,
            onChange: r,
            placeholder: i,
            minLength: a,
            maxLength: o,
          });
        },
        Dw = (e) => {
          let {
            handleCreateSubmit: t,
            inputType: n,
            placeHolder: r,
            value: i,
            onChange: s,
            buttonStyles: a,
            buttonType: o,
            loadingState: l,
            buttonLabel: c,
            children: u,
          } = e;
          return (0, Jy.jsxs)('form', {
            onSubmit: t,
            className: sw,
            children: [
              (0, Jy.jsx)(Jt, { className: 'hidden sm:block sm:text-[75px] absolute top-2 left-0' }),
              (0, Jy.jsx)(Pw, { styles: uw, inputType: n, placeHolder: r, value: i, onChange: s, min: 1, max: 10 }),
              u,
              (0, Jy.jsx)(iw, { styles: a, type: o, disabled: l, label: c }),
            ],
          });
        },
        Aw = (e) => {
          let { disabled: t, value: n, onClick: r, playerGridLabel: i } = e;
          return (0, Jy.jsx)(Jy.Fragment, {
            children: (0, Jy.jsxs)('div', {
              className: 'flex space-x-2 border p-4 rounded-lg  shadow-lg',
              children: [
                (0, Jy.jsx)('h1', { className: 'flex items-center text-2xl', children: i }),
                [2].map((e) =>
                  (0, Jy.jsx)(
                    iw,
                    {
                      type: 'button',
                      disabled: t,
                      value: e,
                      onClick: r,
                      label: e,
                      styles: ''.concat(fw, ' ').concat(n === e ? dw : hw),
                    },
                    e,
                  ),
                ),
              ],
            }),
          });
        },
        Ow = (e) => {
          const [n, r] = (0, t.useState)(e);
          return {
            value: n,
            onChange: (e) => {
              r(e.target.value);
            },
            onClick: (e) => {
              r(parseInt(e.target.value));
            },
            reset: () => {
              r(e);
            },
          };
        },
        Lw = () => {
          const [e, n] = (0, t.useState)(''),
            { loading: r, setLoading: i } = tw(),
            { user: s } = $y(),
            a = Ow(''),
            o = Ow(2);
          return (0, Jy.jsx)(Jy.Fragment, {
            children: (0, Jy.jsx)('section', {
              className: lw,
              children: (0, Jy.jsxs)(Dw, {
                handleCreateSubmit: async (t) => {
                  try {
                    t.preventDefault(),
                      n(''),
                      (() => {
                        if (!s) throw new Error('You must be signed in to create a game');
                      })(),
                      (() => {
                        if (a.value.length < 1 || a.value.startsWith(' '))
                          throw new Error('Game name must be at least 1 character long and not start with a space');
                      })(),
                      i('createGame', !0),
                      await new Promise((e) => setTimeout(e, 2e3)),
                      await bw(a.value, o.value, s);
                  } catch (e) {
                    n(''.concat(e.message));
                  } finally {
                    i('createGame', !1), a.reset(), o.reset();
                  }
                },
                inputType: 'text',
                placeHolder: 'Game Name...',
                value: a.value,
                onChange: a.onChange,
                buttonStyles:
                  'p-4 w-[185px] flex justify-center border rounded-lg bg-slate-500 text-white hover:bg-sky-600 transition ease-in-and-out duration-700',
                buttonType: 'submit',
                loadingState: r('createGame'),
                buttonLabel: r('createGame') ? (0, Jy.jsx)(rw, { styles: 'animate-spin h-6 w-6' }) : 'Create Game',
                children: [
                  (0, Jy.jsx)('div', {
                    className: 'my-8',
                    children: (0, Jy.jsx)(Aw, {
                      playerGridLabel: 'Players: ',
                      disabled: r('createGame'),
                      value: o.value,
                      onClick: o.onClick,
                      label: o.value,
                    }),
                  }),
                  e && (0, Jy.jsx)('p', { className: 'text-red-500 text-center', children: e }),
                ],
              }),
            }),
          });
        },
        Rw = (e, n) => {
          const [r, i] = (0, t.useState)([]),
            { loading: s, setLoading: a } = tw(),
            { user: o } = $y();
          return (
            (0, t.useEffect)(() => {
              (async () => {
                try {
                  return (
                    a('gameList', !0),
                    await new Promise((e) => setTimeout(e, 2e3)),
                    Sw({
                      collectionName: 'games',
                      callback: (t) => {
                        const r = t.docs.map((e) => ({ ...e.data(), id: e.id }));
                        if (e) {
                          const e = r.filter((e) => e.owner === o);
                          return i(e);
                        }
                        if (n) {
                          const e = r.filter((e) => e.joinedPlayers.includes(o));
                          return i(e);
                        }
                        const s = r.filter((e) => !1 === e.started);
                        return i(s);
                      },
                    })
                  );
                } catch (t) {
                  console.log(t);
                } finally {
                  a('gameList', !1);
                }
              })();
            }, [e, n]),
            { games: r, loading: s }
          );
        },
        Mw = (e) => {
          let { gameId: n, playerList: r, totalPlayers: i } = e;
          const { user: s } = $y(),
            [a, o] = (0, t.useState)(''),
            { loading: l, setLoading: c } = tw();
          return (0, Jy.jsxs)(Jy.Fragment, {
            children: [
              a && (0, Jy.jsx)('p', { className: 'text-red-700 text-sm', children: a }),
              (0, Jy.jsx)(iw, {
                type: 'button',
                onClick: async () => {
                  try {
                    if ((c('joinGame', !0), o(''), await new Promise((e) => setTimeout(e, 2e3)), r.includes(s)))
                      return o('You are already in this game');
                    if (i === r.length) return o('This game is full');
                    await Ew(s, n);
                  } catch (a) {
                    o(a);
                  } finally {
                    c('joinGame', !1);
                  }
                },
                label: l('joinGame') ? (0, Jy.jsx)(rw, { styles: 'w-6 h-6 animate-spin' }) : 'Join',
                styles:
                  'items-center px-3 py-2 text-md font-medium text-center text-white bg-slate-500 rounded-lg hover:bg-sky-600 transition ease-in-and-out duration-700',
              }),
            ],
          });
        },
        Fw = (e) => {
          let { game: n, player: r } = e;
          const [i, s] = (0, t.useState)(''),
            { loading: a, setLoading: o } = tw();
          return (0, Jy.jsxs)(Jy.Fragment, {
            children: [
              i && (0, Jy.jsx)('p', { className: 'text-red-700 text-sm', children: i }),
              (0, Jy.jsx)(iw, {
                type: 'button',
                onClick: async () => {
                  try {
                    if ((o('leaveGame', !0), s(''), await new Promise((e) => setTimeout(e, 2e3)), !n.joinedPlayers.includes(r)))
                      return s('You are not in this game');
                    s(''), await Tw(r, n.id);
                  } catch (i) {
                    s(i);
                  } finally {
                    o('leaveGame', !1);
                  }
                },
                label: a('leaveGame') ? (0, Jy.jsx)(rw, { styles: 'flex w-6 h-6 animate-spin' }) : 'Leave',
                styles:
                  'items-center px-3 py-2 \n        text-md font-medium text-center text-white \n        rounded-lg transition ease-in-and-out duration-700 bg-slate-500 hover:bg-sky-600',
              }),
            ],
          });
        },
        jw = (e) => {
          let { game: t, label: n } = e;
          return (0, Jy.jsx)(Jy.Fragment, {
            children: (0, Jy.jsx)(Rt, {
              to: '/games/lobby/'.concat(t.id),
              className:
                'items-center px-3 py-2 text-md font-medium text-center text-white bg-slate-500 rounded-lg hover:bg-sky-600 transition ease-in-and-out duration-700 mr-4',
              children: n,
            }),
          });
        },
        Uw = (e) => {
          let { game: t } = e;
          const { user: n } = $y();
          return (0, Jy.jsxs)('section', {
            className: 'p-6 mb-4 mx-4 sm:mx-6 md:mx-0 bg-[#319b81] rounded-lg shadow text-center',
            children: [
              (0, Jy.jsx)($t, {
                className: 'w-16 h-16 mx-auto text-white absolute rotate-12 right-5 hover:text-sky-500 hidden lg:block',
              }),
              (0, Jy.jsx)('h2', { className: 'h-6 mb-2 text-2xl font-bold tracking-tight text-black', children: t.gameName }),
              (0, Jy.jsxs)('p', { className: 'mb-3 font-normal', children: ['Player Limit: ', t.totalPlayers] }),
              (0, Jy.jsxs)('p', { className: 'text-black', children: ['Lobby: ', t.joinedPlayers.length, '/', t.totalPlayers] }),
              t.joinedPlayers.includes(n)
                ? (0, Jy.jsxs)('div', {
                    className: 'flex justify-center',
                    children: [(0, Jy.jsx)(jw, { game: t, label: 'Lobby' }), (0, Jy.jsx)(Fw, { game: t, player: n })],
                  })
                : (0, Jy.jsx)('div', {
                    className: 'flex justify-center',
                    children: (0, Jy.jsx)(Mw, { gameId: t.id, playerList: t.joinedPlayers, totalPlayers: t.totalPlayers }),
                  }),
            ],
          });
        },
        Vw = (e) => {
          let { games: t } = e;
          return (0, Jy.jsx)('section', { className: 'md:hidden', children: t.map((e) => (0, Jy.jsx)(Uw, { game: e }, e.id)) });
        };
      function zw(e) {
        return null !== e && 'object' === typeof e && 'constructor' in e && e.constructor === Object;
      }
      function Bw(e, t) {
        void 0 === e && (e = {}),
          void 0 === t && (t = {}),
          Object.keys(t).forEach((n) => {
            'undefined' === typeof e[n] ? (e[n] = t[n]) : zw(t[n]) && zw(e[n]) && Object.keys(t[n]).length > 0 && Bw(e[n], t[n]);
          });
      }
      const qw = {
        body: {},
        addEventListener() {},
        removeEventListener() {},
        activeElement: { blur() {}, nodeName: '' },
        querySelector: () => null,
        querySelectorAll: () => [],
        getElementById: () => null,
        createEvent: () => ({ initEvent() {} }),
        createElement: () => ({ children: [], childNodes: [], style: {}, setAttribute() {}, getElementsByTagName: () => [] }),
        createElementNS: () => ({}),
        importNode: () => null,
        location: { hash: '', host: '', hostname: '', href: '', origin: '', pathname: '', protocol: '', search: '' },
      };
      function Gw() {
        const e = 'undefined' !== typeof document ? document : {};
        return Bw(e, qw), e;
      }
      const Hw = {
        document: qw,
        navigator: { userAgent: '' },
        location: { hash: '', host: '', hostname: '', href: '', origin: '', pathname: '', protocol: '', search: '' },
        history: { replaceState() {}, pushState() {}, go() {}, back() {} },
        CustomEvent: function () {
          return this;
        },
        addEventListener() {},
        removeEventListener() {},
        getComputedStyle: () => ({ getPropertyValue: () => '' }),
        Image() {},
        Date() {},
        screen: {},
        setTimeout() {},
        clearTimeout() {},
        matchMedia: () => ({}),
        requestAnimationFrame: (e) => ('undefined' === typeof setTimeout ? (e(), null) : setTimeout(e, 0)),
        cancelAnimationFrame(e) {
          'undefined' !== typeof setTimeout && clearTimeout(e);
        },
      };
      function Kw() {
        const e = 'undefined' !== typeof window ? window : {};
        return Bw(e, Hw), e;
      }
      function Ww(e, t) {
        return void 0 === t && (t = 0), setTimeout(e, t);
      }
      function Qw() {
        return Date.now();
      }
      function Yw(e, t) {
        void 0 === t && (t = 'x');
        const n = Kw();
        let r, i, s;
        const a = (function (e) {
          const t = Kw();
          let n;
          return (
            t.getComputedStyle && (n = t.getComputedStyle(e, null)),
            !n && e.currentStyle && (n = e.currentStyle),
            n || (n = e.style),
            n
          );
        })(e);
        return (
          n.WebKitCSSMatrix
            ? ((i = a.transform || a.webkitTransform),
              i.split(',').length > 6 &&
                (i = i
                  .split(', ')
                  .map((e) => e.replace(',', '.'))
                  .join(', ')),
              (s = new n.WebKitCSSMatrix('none' === i ? '' : i)))
            : ((s =
                a.MozTransform ||
                a.OTransform ||
                a.MsTransform ||
                a.msTransform ||
                a.transform ||
                a.getPropertyValue('transform').replace('translate(', 'matrix(1, 0, 0, 1,')),
              (r = s.toString().split(','))),
          'x' === t && (i = n.WebKitCSSMatrix ? s.m41 : 16 === r.length ? parseFloat(r[12]) : parseFloat(r[4])),
          'y' === t && (i = n.WebKitCSSMatrix ? s.m42 : 16 === r.length ? parseFloat(r[13]) : parseFloat(r[5])),
          i || 0
        );
      }
      function Jw(e) {
        return (
          'object' === typeof e && null !== e && e.constructor && 'Object' === Object.prototype.toString.call(e).slice(8, -1)
        );
      }
      function Xw() {
        const e = Object(arguments.length <= 0 ? void 0 : arguments[0]),
          t = ['__proto__', 'constructor', 'prototype'];
        for (let r = 1; r < arguments.length; r += 1) {
          const i = r < 0 || arguments.length <= r ? void 0 : arguments[r];
          if (
            void 0 !== i &&
            null !== i &&
            ((n = i),
            !('undefined' !== typeof window && 'undefined' !== typeof window.HTMLElement
              ? n instanceof HTMLElement
              : n && (1 === n.nodeType || 11 === n.nodeType)))
          ) {
            const n = Object.keys(Object(i)).filter((e) => t.indexOf(e) < 0);
            for (let t = 0, r = n.length; t < r; t += 1) {
              const r = n[t],
                s = Object.getOwnPropertyDescriptor(i, r);
              void 0 !== s &&
                s.enumerable &&
                (Jw(e[r]) && Jw(i[r])
                  ? i[r].__swiper__
                    ? (e[r] = i[r])
                    : Xw(e[r], i[r])
                  : !Jw(e[r]) && Jw(i[r])
                    ? ((e[r] = {}), i[r].__swiper__ ? (e[r] = i[r]) : Xw(e[r], i[r]))
                    : (e[r] = i[r]));
            }
          }
        }
        var n;
        return e;
      }
      function $w(e, t, n) {
        e.style.setProperty(t, n);
      }
      function Zw(e) {
        let { swiper: t, targetPosition: n, side: r } = e;
        const i = Kw(),
          s = -t.translate;
        let a,
          o = null;
        const l = t.params.speed;
        (t.wrapperEl.style.scrollSnapType = 'none'), i.cancelAnimationFrame(t.cssModeFrameID);
        const c = n > s ? 'next' : 'prev',
          u = (e, t) => ('next' === c && e >= t) || ('prev' === c && e <= t),
          d = () => {
            (a = new Date().getTime()), null === o && (o = a);
            const e = Math.max(Math.min((a - o) / l, 1), 0),
              c = 0.5 - Math.cos(e * Math.PI) / 2;
            let h = s + c * (n - s);
            if ((u(h, n) && (h = n), t.wrapperEl.scrollTo({ [r]: h }), u(h, n)))
              return (
                (t.wrapperEl.style.overflow = 'hidden'),
                (t.wrapperEl.style.scrollSnapType = ''),
                setTimeout(() => {
                  (t.wrapperEl.style.overflow = ''), t.wrapperEl.scrollTo({ [r]: h });
                }),
                void i.cancelAnimationFrame(t.cssModeFrameID)
              );
            t.cssModeFrameID = i.requestAnimationFrame(d);
          };
        d();
      }
      function eb(e) {
        return (
          e.querySelector('.swiper-slide-transform') ||
          (e.shadowRoot && e.shadowRoot.querySelector('.swiper-slide-transform')) ||
          e
        );
      }
      function tb(e, t) {
        return void 0 === t && (t = ''), [...e.children].filter((e) => e.matches(t));
      }
      function nb(e) {
        try {
          return void console.warn(e);
        } catch (t) {}
      }
      function rb(e, t) {
        void 0 === t && (t = []);
        const n = document.createElement(e);
        return (
          n.classList.add(
            ...(Array.isArray(t)
              ? t
              : (function (e) {
                  return (
                    void 0 === e && (e = ''),
                    e
                      .trim()
                      .split(' ')
                      .filter((e) => !!e.trim())
                  );
                })(t)),
          ),
          n
        );
      }
      function ib(e, t) {
        return Kw().getComputedStyle(e, null).getPropertyValue(t);
      }
      function sb(e) {
        let t,
          n = e;
        if (n) {
          for (t = 0; null !== (n = n.previousSibling); ) 1 === n.nodeType && (t += 1);
          return t;
        }
      }
      function ab(e, t, n) {
        const r = Kw();
        return n
          ? e['width' === t ? 'offsetWidth' : 'offsetHeight'] +
              parseFloat(r.getComputedStyle(e, null).getPropertyValue('width' === t ? 'margin-right' : 'margin-top')) +
              parseFloat(r.getComputedStyle(e, null).getPropertyValue('width' === t ? 'margin-left' : 'margin-bottom'))
          : e.offsetWidth;
      }
      function ob(e) {
        return (Array.isArray(e) ? e : [e]).filter((e) => !!e);
      }
      let lb, cb, ub;
      function db() {
        return (
          lb ||
            (lb = (function () {
              const e = Kw(),
                t = Gw();
              return {
                smoothScroll: t.documentElement && t.documentElement.style && 'scrollBehavior' in t.documentElement.style,
                touch: !!('ontouchstart' in e || (e.DocumentTouch && t instanceof e.DocumentTouch)),
              };
            })()),
          lb
        );
      }
      function hb(e) {
        return (
          void 0 === e && (e = {}),
          cb ||
            (cb = (function (e) {
              let { userAgent: t } = void 0 === e ? {} : e;
              const n = db(),
                r = Kw(),
                i = r.navigator.platform,
                s = t || r.navigator.userAgent,
                a = { ios: !1, android: !1 },
                o = r.screen.width,
                l = r.screen.height,
                c = s.match(/(Android);?[\s\/]+([\d.]+)?/);
              let u = s.match(/(iPad).*OS\s([\d_]+)/);
              const d = s.match(/(iPod)(.*OS\s([\d_]+))?/),
                h = !u && s.match(/(iPhone\sOS|iOS)\s([\d_]+)/),
                f = 'Win32' === i;
              let p = 'MacIntel' === i;
              return (
                !u &&
                  p &&
                  n.touch &&
                  [
                    '1024x1366',
                    '1366x1024',
                    '834x1194',
                    '1194x834',
                    '834x1112',
                    '1112x834',
                    '768x1024',
                    '1024x768',
                    '820x1180',
                    '1180x820',
                    '810x1080',
                    '1080x810',
                  ].indexOf(''.concat(o, 'x').concat(l)) >= 0 &&
                  ((u = s.match(/(Version)\/([\d.]+)/)), u || (u = [0, 1, '13_0_0']), (p = !1)),
                c && !f && ((a.os = 'android'), (a.android = !0)),
                (u || h || d) && ((a.os = 'ios'), (a.ios = !0)),
                a
              );
            })(e)),
          cb
        );
      }
      function fb() {
        return (
          ub ||
            (ub = (function () {
              const e = Kw(),
                t = hb();
              let n = !1;
              function r() {
                const t = e.navigator.userAgent.toLowerCase();
                return t.indexOf('safari') >= 0 && t.indexOf('chrome') < 0 && t.indexOf('android') < 0;
              }
              if (r()) {
                const t = String(e.navigator.userAgent);
                if (t.includes('Version/')) {
                  const [e, r] = t
                    .split('Version/')[1]
                    .split(' ')[0]
                    .split('.')
                    .map((e) => Number(e));
                  n = e < 16 || (16 === e && r < 2);
                }
              }
              const i = /(iPhone|iPod|iPad).*AppleWebKit(?!.*Safari)/i.test(e.navigator.userAgent),
                s = r();
              return { isSafari: n || s, needPerspectiveFix: n, need3dFix: s || (i && t.ios), isWebView: i };
            })()),
          ub
        );
      }
      var pb = {
        on(e, t, n) {
          const r = this;
          if (!r.eventsListeners || r.destroyed) return r;
          if ('function' !== typeof t) return r;
          const i = n ? 'unshift' : 'push';
          return (
            e.split(' ').forEach((e) => {
              r.eventsListeners[e] || (r.eventsListeners[e] = []), r.eventsListeners[e][i](t);
            }),
            r
          );
        },
        once(e, t, n) {
          const r = this;
          if (!r.eventsListeners || r.destroyed) return r;
          if ('function' !== typeof t) return r;
          function i() {
            r.off(e, i), i.__emitterProxy && delete i.__emitterProxy;
            for (var n = arguments.length, s = new Array(n), a = 0; a < n; a++) s[a] = arguments[a];
            t.apply(r, s);
          }
          return (i.__emitterProxy = t), r.on(e, i, n);
        },
        onAny(e, t) {
          const n = this;
          if (!n.eventsListeners || n.destroyed) return n;
          if ('function' !== typeof e) return n;
          const r = t ? 'unshift' : 'push';
          return n.eventsAnyListeners.indexOf(e) < 0 && n.eventsAnyListeners[r](e), n;
        },
        offAny(e) {
          const t = this;
          if (!t.eventsListeners || t.destroyed) return t;
          if (!t.eventsAnyListeners) return t;
          const n = t.eventsAnyListeners.indexOf(e);
          return n >= 0 && t.eventsAnyListeners.splice(n, 1), t;
        },
        off(e, t) {
          const n = this;
          return !n.eventsListeners || n.destroyed
            ? n
            : n.eventsListeners
              ? (e.split(' ').forEach((e) => {
                  'undefined' === typeof t
                    ? (n.eventsListeners[e] = [])
                    : n.eventsListeners[e] &&
                      n.eventsListeners[e].forEach((r, i) => {
                        (r === t || (r.__emitterProxy && r.__emitterProxy === t)) && n.eventsListeners[e].splice(i, 1);
                      });
                }),
                n)
              : n;
        },
        emit() {
          const e = this;
          if (!e.eventsListeners || e.destroyed) return e;
          if (!e.eventsListeners) return e;
          let t, n, r;
          for (var i = arguments.length, s = new Array(i), a = 0; a < i; a++) s[a] = arguments[a];
          'string' === typeof s[0] || Array.isArray(s[0])
            ? ((t = s[0]), (n = s.slice(1, s.length)), (r = e))
            : ((t = s[0].events), (n = s[0].data), (r = s[0].context || e)),
            n.unshift(r);
          return (
            (Array.isArray(t) ? t : t.split(' ')).forEach((t) => {
              e.eventsAnyListeners &&
                e.eventsAnyListeners.length &&
                e.eventsAnyListeners.forEach((e) => {
                  e.apply(r, [t, ...n]);
                }),
                e.eventsListeners &&
                  e.eventsListeners[t] &&
                  e.eventsListeners[t].forEach((e) => {
                    e.apply(r, n);
                  });
            }),
            e
          );
        },
      };
      const mb = (e, t, n) => {
        t && !e.classList.contains(n) ? e.classList.add(n) : !t && e.classList.contains(n) && e.classList.remove(n);
      };
      const gb = (e, t, n) => {
        t && !e.classList.contains(n) ? e.classList.add(n) : !t && e.classList.contains(n) && e.classList.remove(n);
      };
      const vb = (e, t) => {
          if (!e || e.destroyed || !e.params) return;
          const n = t.closest(e.isElement ? 'swiper-slide' : '.'.concat(e.params.slideClass));
          if (n) {
            let t = n.querySelector('.'.concat(e.params.lazyPreloaderClass));
            !t &&
              e.isElement &&
              (n.shadowRoot
                ? (t = n.shadowRoot.querySelector('.'.concat(e.params.lazyPreloaderClass)))
                : requestAnimationFrame(() => {
                    n.shadowRoot && ((t = n.shadowRoot.querySelector('.'.concat(e.params.lazyPreloaderClass))), t && t.remove());
                  })),
              t && t.remove();
          }
        },
        yb = (e, t) => {
          if (!e.slides[t]) return;
          const n = e.slides[t].querySelector('[loading="lazy"]');
          n && n.removeAttribute('loading');
        },
        wb = (e) => {
          if (!e || e.destroyed || !e.params) return;
          let t = e.params.lazyPreloadPrevNext;
          const n = e.slides.length;
          if (!n || !t || t < 0) return;
          t = Math.min(t, n);
          const r = 'auto' === e.params.slidesPerView ? e.slidesPerViewDynamic() : Math.ceil(e.params.slidesPerView),
            i = e.activeIndex;
          if (e.params.grid && e.params.grid.rows > 1) {
            const n = i,
              s = [n - t];
            return (
              s.push(...Array.from({ length: t }).map((e, t) => n + r + t)),
              void e.slides.forEach((t, n) => {
                s.includes(t.column) && yb(e, n);
              })
            );
          }
          const s = i + r - 1;
          if (e.params.rewind || e.params.loop)
            for (let a = i - t; a <= s + t; a += 1) {
              const t = ((a % n) + n) % n;
              (t < i || t > s) && yb(e, t);
            }
          else for (let a = Math.max(i - t, 0); a <= Math.min(s + t, n - 1); a += 1) a !== i && (a > s || a < i) && yb(e, a);
        };
      var bb = {
        updateSize: function () {
          const e = this;
          let t, n;
          const r = e.el;
          (t = 'undefined' !== typeof e.params.width && null !== e.params.width ? e.params.width : r.clientWidth),
            (n = 'undefined' !== typeof e.params.height && null !== e.params.height ? e.params.height : r.clientHeight),
            (0 === t && e.isHorizontal()) ||
              (0 === n && e.isVertical()) ||
              ((t = t - parseInt(ib(r, 'padding-left') || 0, 10) - parseInt(ib(r, 'padding-right') || 0, 10)),
              (n = n - parseInt(ib(r, 'padding-top') || 0, 10) - parseInt(ib(r, 'padding-bottom') || 0, 10)),
              Number.isNaN(t) && (t = 0),
              Number.isNaN(n) && (n = 0),
              Object.assign(e, { width: t, height: n, size: e.isHorizontal() ? t : n }));
        },
        updateSlides: function () {
          const e = this;
          function t(t, n) {
            return parseFloat(t.getPropertyValue(e.getDirectionLabel(n)) || 0);
          }
          const n = e.params,
            { wrapperEl: r, slidesEl: i, size: s, rtlTranslate: a, wrongRTL: o } = e,
            l = e.virtual && n.virtual.enabled,
            c = l ? e.virtual.slides.length : e.slides.length,
            u = tb(i, '.'.concat(e.params.slideClass, ', swiper-slide')),
            d = l ? e.virtual.slides.length : u.length;
          let h = [];
          const f = [],
            p = [];
          let m = n.slidesOffsetBefore;
          'function' === typeof m && (m = n.slidesOffsetBefore.call(e));
          let g = n.slidesOffsetAfter;
          'function' === typeof g && (g = n.slidesOffsetAfter.call(e));
          const v = e.snapGrid.length,
            y = e.slidesGrid.length;
          let w = n.spaceBetween,
            b = -m,
            S = 0,
            E = 0;
          if ('undefined' === typeof s) return;
          'string' === typeof w && w.indexOf('%') >= 0
            ? (w = (parseFloat(w.replace('%', '')) / 100) * s)
            : 'string' === typeof w && (w = parseFloat(w)),
            (e.virtualSize = -w),
            u.forEach((e) => {
              a ? (e.style.marginLeft = '') : (e.style.marginRight = ''), (e.style.marginBottom = ''), (e.style.marginTop = '');
            }),
            n.centeredSlides &&
              n.cssMode &&
              ($w(r, '--swiper-centered-offset-before', ''), $w(r, '--swiper-centered-offset-after', ''));
          const T = n.grid && n.grid.rows > 1 && e.grid;
          let _;
          T ? e.grid.initSlides(u) : e.grid && e.grid.unsetSlides();
          const I =
            'auto' === n.slidesPerView &&
            n.breakpoints &&
            Object.keys(n.breakpoints).filter((e) => 'undefined' !== typeof n.breakpoints[e].slidesPerView).length > 0;
          for (let x = 0; x < d; x += 1) {
            let r;
            if (((_ = 0), u[x] && (r = u[x]), T && e.grid.updateSlide(x, r, u), !u[x] || 'none' !== ib(r, 'display'))) {
              if ('auto' === n.slidesPerView) {
                I && (u[x].style[e.getDirectionLabel('width')] = '');
                const i = getComputedStyle(r),
                  s = r.style.transform,
                  a = r.style.webkitTransform;
                if ((s && (r.style.transform = 'none'), a && (r.style.webkitTransform = 'none'), n.roundLengths))
                  _ = e.isHorizontal() ? ab(r, 'width', !0) : ab(r, 'height', !0);
                else {
                  const e = t(i, 'width'),
                    n = t(i, 'padding-left'),
                    s = t(i, 'padding-right'),
                    a = t(i, 'margin-left'),
                    o = t(i, 'margin-right'),
                    l = i.getPropertyValue('box-sizing');
                  if (l && 'border-box' === l) _ = e + a + o;
                  else {
                    const { clientWidth: t, offsetWidth: i } = r;
                    _ = e + n + s + a + o + (i - t);
                  }
                }
                s && (r.style.transform = s), a && (r.style.webkitTransform = a), n.roundLengths && (_ = Math.floor(_));
              } else
                (_ = (s - (n.slidesPerView - 1) * w) / n.slidesPerView),
                  n.roundLengths && (_ = Math.floor(_)),
                  u[x] && (u[x].style[e.getDirectionLabel('width')] = ''.concat(_, 'px'));
              u[x] && (u[x].swiperSlideSize = _),
                p.push(_),
                n.centeredSlides
                  ? ((b = b + _ / 2 + S / 2 + w),
                    0 === S && 0 !== x && (b = b - s / 2 - w),
                    0 === x && (b = b - s / 2 - w),
                    Math.abs(b) < 0.001 && (b = 0),
                    n.roundLengths && (b = Math.floor(b)),
                    E % n.slidesPerGroup === 0 && h.push(b),
                    f.push(b))
                  : (n.roundLengths && (b = Math.floor(b)),
                    (E - Math.min(e.params.slidesPerGroupSkip, E)) % e.params.slidesPerGroup === 0 && h.push(b),
                    f.push(b),
                    (b = b + _ + w)),
                (e.virtualSize += _ + w),
                (S = _),
                (E += 1);
            }
          }
          if (
            ((e.virtualSize = Math.max(e.virtualSize, s) + g),
            a && o && ('slide' === n.effect || 'coverflow' === n.effect) && (r.style.width = ''.concat(e.virtualSize + w, 'px')),
            n.setWrapperSize && (r.style[e.getDirectionLabel('width')] = ''.concat(e.virtualSize + w, 'px')),
            T && e.grid.updateWrapperSize(_, h),
            !n.centeredSlides)
          ) {
            const t = [];
            for (let r = 0; r < h.length; r += 1) {
              let i = h[r];
              n.roundLengths && (i = Math.floor(i)), h[r] <= e.virtualSize - s && t.push(i);
            }
            (h = t), Math.floor(e.virtualSize - s) - Math.floor(h[h.length - 1]) > 1 && h.push(e.virtualSize - s);
          }
          if (l && n.loop) {
            const t = p[0] + w;
            if (n.slidesPerGroup > 1) {
              const r = Math.ceil((e.virtual.slidesBefore + e.virtual.slidesAfter) / n.slidesPerGroup),
                i = t * n.slidesPerGroup;
              for (let e = 0; e < r; e += 1) h.push(h[h.length - 1] + i);
            }
            for (let r = 0; r < e.virtual.slidesBefore + e.virtual.slidesAfter; r += 1)
              1 === n.slidesPerGroup && h.push(h[h.length - 1] + t), f.push(f[f.length - 1] + t), (e.virtualSize += t);
          }
          if ((0 === h.length && (h = [0]), 0 !== w)) {
            const t = e.isHorizontal() && a ? 'marginLeft' : e.getDirectionLabel('marginRight');
            u.filter((e, t) => !(n.cssMode && !n.loop) || t !== u.length - 1).forEach((e) => {
              e.style[t] = ''.concat(w, 'px');
            });
          }
          if (n.centeredSlides && n.centeredSlidesBounds) {
            let e = 0;
            p.forEach((t) => {
              e += t + (w || 0);
            }),
              (e -= w);
            const t = e - s;
            h = h.map((e) => (e <= 0 ? -m : e > t ? t + g : e));
          }
          if (n.centerInsufficientSlides) {
            let e = 0;
            p.forEach((t) => {
              e += t + (w || 0);
            }),
              (e -= w);
            const t = (n.slidesOffsetBefore || 0) + (n.slidesOffsetAfter || 0);
            if (e + t < s) {
              const n = (s - e - t) / 2;
              h.forEach((e, t) => {
                h[t] = e - n;
              }),
                f.forEach((e, t) => {
                  f[t] = e + n;
                });
            }
          }
          if (
            (Object.assign(e, { slides: u, snapGrid: h, slidesGrid: f, slidesSizesGrid: p }),
            n.centeredSlides && n.cssMode && !n.centeredSlidesBounds)
          ) {
            $w(r, '--swiper-centered-offset-before', ''.concat(-h[0], 'px')),
              $w(r, '--swiper-centered-offset-after', ''.concat(e.size / 2 - p[p.length - 1] / 2, 'px'));
            const t = -e.snapGrid[0],
              n = -e.slidesGrid[0];
            (e.snapGrid = e.snapGrid.map((e) => e + t)), (e.slidesGrid = e.slidesGrid.map((e) => e + n));
          }
          if (
            (d !== c && e.emit('slidesLengthChange'),
            h.length !== v && (e.params.watchOverflow && e.checkOverflow(), e.emit('snapGridLengthChange')),
            f.length !== y && e.emit('slidesGridLengthChange'),
            n.watchSlidesProgress && e.updateSlidesOffset(),
            e.emit('slidesUpdated'),
            !l && !n.cssMode && ('slide' === n.effect || 'fade' === n.effect))
          ) {
            const t = ''.concat(n.containerModifierClass, 'backface-hidden'),
              r = e.el.classList.contains(t);
            d <= n.maxBackfaceHiddenSlides ? r || e.el.classList.add(t) : r && e.el.classList.remove(t);
          }
        },
        updateAutoHeight: function (e) {
          const t = this,
            n = [],
            r = t.virtual && t.params.virtual.enabled;
          let i,
            s = 0;
          'number' === typeof e ? t.setTransition(e) : !0 === e && t.setTransition(t.params.speed);
          const a = (e) => (r ? t.slides[t.getSlideIndexByData(e)] : t.slides[e]);
          if ('auto' !== t.params.slidesPerView && t.params.slidesPerView > 1)
            if (t.params.centeredSlides)
              (t.visibleSlides || []).forEach((e) => {
                n.push(e);
              });
            else
              for (i = 0; i < Math.ceil(t.params.slidesPerView); i += 1) {
                const e = t.activeIndex + i;
                if (e > t.slides.length && !r) break;
                n.push(a(e));
              }
          else n.push(a(t.activeIndex));
          for (i = 0; i < n.length; i += 1)
            if ('undefined' !== typeof n[i]) {
              const e = n[i].offsetHeight;
              s = e > s ? e : s;
            }
          (s || 0 === s) && (t.wrapperEl.style.height = ''.concat(s, 'px'));
        },
        updateSlidesOffset: function () {
          const e = this,
            t = e.slides,
            n = e.isElement ? (e.isHorizontal() ? e.wrapperEl.offsetLeft : e.wrapperEl.offsetTop) : 0;
          for (let r = 0; r < t.length; r += 1)
            t[r].swiperSlideOffset = (e.isHorizontal() ? t[r].offsetLeft : t[r].offsetTop) - n - e.cssOverflowAdjustment();
        },
        updateSlidesProgress: function (e) {
          void 0 === e && (e = (this && this.translate) || 0);
          const t = this,
            n = t.params,
            { slides: r, rtlTranslate: i, snapGrid: s } = t;
          if (0 === r.length) return;
          'undefined' === typeof r[0].swiperSlideOffset && t.updateSlidesOffset();
          let a = -e;
          i && (a = e), (t.visibleSlidesIndexes = []), (t.visibleSlides = []);
          let o = n.spaceBetween;
          'string' === typeof o && o.indexOf('%') >= 0
            ? (o = (parseFloat(o.replace('%', '')) / 100) * t.size)
            : 'string' === typeof o && (o = parseFloat(o));
          for (let l = 0; l < r.length; l += 1) {
            const e = r[l];
            let c = e.swiperSlideOffset;
            n.cssMode && n.centeredSlides && (c -= r[0].swiperSlideOffset);
            const u = (a + (n.centeredSlides ? t.minTranslate() : 0) - c) / (e.swiperSlideSize + o),
              d = (a - s[0] + (n.centeredSlides ? t.minTranslate() : 0) - c) / (e.swiperSlideSize + o),
              h = -(a - c),
              f = h + t.slidesSizesGrid[l],
              p = h >= 0 && h <= t.size - t.slidesSizesGrid[l],
              m = (h >= 0 && h < t.size - 1) || (f > 1 && f <= t.size) || (h <= 0 && f >= t.size);
            m && (t.visibleSlides.push(e), t.visibleSlidesIndexes.push(l)),
              mb(e, m, n.slideVisibleClass),
              mb(e, p, n.slideFullyVisibleClass),
              (e.progress = i ? -u : u),
              (e.originalProgress = i ? -d : d);
          }
        },
        updateProgress: function (e) {
          const t = this;
          if ('undefined' === typeof e) {
            const n = t.rtlTranslate ? -1 : 1;
            e = (t && t.translate && t.translate * n) || 0;
          }
          const n = t.params,
            r = t.maxTranslate() - t.minTranslate();
          let { progress: i, isBeginning: s, isEnd: a, progressLoop: o } = t;
          const l = s,
            c = a;
          if (0 === r) (i = 0), (s = !0), (a = !0);
          else {
            i = (e - t.minTranslate()) / r;
            const n = Math.abs(e - t.minTranslate()) < 1,
              o = Math.abs(e - t.maxTranslate()) < 1;
            (s = n || i <= 0), (a = o || i >= 1), n && (i = 0), o && (i = 1);
          }
          if (n.loop) {
            const n = t.getSlideIndexByData(0),
              r = t.getSlideIndexByData(t.slides.length - 1),
              i = t.slidesGrid[n],
              s = t.slidesGrid[r],
              a = t.slidesGrid[t.slidesGrid.length - 1],
              l = Math.abs(e);
            (o = l >= i ? (l - i) / a : (l + a - s) / a), o > 1 && (o -= 1);
          }
          Object.assign(t, { progress: i, progressLoop: o, isBeginning: s, isEnd: a }),
            (n.watchSlidesProgress || (n.centeredSlides && n.autoHeight)) && t.updateSlidesProgress(e),
            s && !l && t.emit('reachBeginning toEdge'),
            a && !c && t.emit('reachEnd toEdge'),
            ((l && !s) || (c && !a)) && t.emit('fromEdge'),
            t.emit('progress', i);
        },
        updateSlidesClasses: function () {
          const e = this,
            { slides: t, params: n, slidesEl: r, activeIndex: i } = e,
            s = e.virtual && n.virtual.enabled,
            a = e.grid && n.grid && n.grid.rows > 1,
            o = (e) => tb(r, '.'.concat(n.slideClass).concat(e, ', swiper-slide').concat(e))[0];
          let l, c, u;
          if (s)
            if (n.loop) {
              let t = i - e.virtual.slidesBefore;
              t < 0 && (t = e.virtual.slides.length + t),
                t >= e.virtual.slides.length && (t -= e.virtual.slides.length),
                (l = o('[data-swiper-slide-index="'.concat(t, '"]')));
            } else l = o('[data-swiper-slide-index="'.concat(i, '"]'));
          else
            a
              ? ((l = t.filter((e) => e.column === i)[0]),
                (u = t.filter((e) => e.column === i + 1)[0]),
                (c = t.filter((e) => e.column === i - 1)[0]))
              : (l = t[i]);
          l &&
            (a ||
              ((u = (function (e, t) {
                const n = [];
                for (; e.nextElementSibling; ) {
                  const r = e.nextElementSibling;
                  t ? r.matches(t) && n.push(r) : n.push(r), (e = r);
                }
                return n;
              })(l, '.'.concat(n.slideClass, ', swiper-slide'))[0]),
              n.loop && !u && (u = t[0]),
              (c = (function (e, t) {
                const n = [];
                for (; e.previousElementSibling; ) {
                  const r = e.previousElementSibling;
                  t ? r.matches(t) && n.push(r) : n.push(r), (e = r);
                }
                return n;
              })(l, '.'.concat(n.slideClass, ', swiper-slide'))[0]),
              n.loop && 0 === !c && (c = t[t.length - 1]))),
            t.forEach((e) => {
              gb(e, e === l, n.slideActiveClass), gb(e, e === u, n.slideNextClass), gb(e, e === c, n.slidePrevClass);
            }),
            e.emitSlidesClasses();
        },
        updateActiveIndex: function (e) {
          const t = this,
            n = t.rtlTranslate ? t.translate : -t.translate,
            { snapGrid: r, params: i, activeIndex: s, realIndex: a, snapIndex: o } = t;
          let l,
            c = e;
          const u = (e) => {
            let n = e - t.virtual.slidesBefore;
            return n < 0 && (n = t.virtual.slides.length + n), n >= t.virtual.slides.length && (n -= t.virtual.slides.length), n;
          };
          if (
            ('undefined' === typeof c &&
              (c = (function (e) {
                const { slidesGrid: t, params: n } = e,
                  r = e.rtlTranslate ? e.translate : -e.translate;
                let i;
                for (let s = 0; s < t.length; s += 1)
                  'undefined' !== typeof t[s + 1]
                    ? r >= t[s] && r < t[s + 1] - (t[s + 1] - t[s]) / 2
                      ? (i = s)
                      : r >= t[s] && r < t[s + 1] && (i = s + 1)
                    : r >= t[s] && (i = s);
                return n.normalizeSlideIndex && (i < 0 || 'undefined' === typeof i) && (i = 0), i;
              })(t)),
            r.indexOf(n) >= 0)
          )
            l = r.indexOf(n);
          else {
            const e = Math.min(i.slidesPerGroupSkip, c);
            l = e + Math.floor((c - e) / i.slidesPerGroup);
          }
          if ((l >= r.length && (l = r.length - 1), c === s && !t.params.loop))
            return void (l !== o && ((t.snapIndex = l), t.emit('snapIndexChange')));
          if (c === s && t.params.loop && t.virtual && t.params.virtual.enabled) return void (t.realIndex = u(c));
          const d = t.grid && i.grid && i.grid.rows > 1;
          let h;
          if (t.virtual && i.virtual.enabled && i.loop) h = u(c);
          else if (d) {
            const e = t.slides.filter((e) => e.column === c)[0];
            let n = parseInt(e.getAttribute('data-swiper-slide-index'), 10);
            Number.isNaN(n) && (n = Math.max(t.slides.indexOf(e), 0)), (h = Math.floor(n / i.grid.rows));
          } else if (t.slides[c]) {
            const e = t.slides[c].getAttribute('data-swiper-slide-index');
            h = e ? parseInt(e, 10) : c;
          } else h = c;
          Object.assign(t, {
            previousSnapIndex: o,
            snapIndex: l,
            previousRealIndex: a,
            realIndex: h,
            previousIndex: s,
            activeIndex: c,
          }),
            t.initialized && wb(t),
            t.emit('activeIndexChange'),
            t.emit('snapIndexChange'),
            (t.initialized || t.params.runCallbacksOnInit) && (a !== h && t.emit('realIndexChange'), t.emit('slideChange'));
        },
        updateClickedSlide: function (e, t) {
          const n = this,
            r = n.params;
          let i = e.closest('.'.concat(r.slideClass, ', swiper-slide'));
          !i &&
            n.isElement &&
            t &&
            t.length > 1 &&
            t.includes(e) &&
            [...t.slice(t.indexOf(e) + 1, t.length)].forEach((e) => {
              !i && e.matches && e.matches('.'.concat(r.slideClass, ', swiper-slide')) && (i = e);
            });
          let s,
            a = !1;
          if (i)
            for (let o = 0; o < n.slides.length; o += 1)
              if (n.slides[o] === i) {
                (a = !0), (s = o);
                break;
              }
          if (!i || !a) return (n.clickedSlide = void 0), void (n.clickedIndex = void 0);
          (n.clickedSlide = i),
            n.virtual && n.params.virtual.enabled
              ? (n.clickedIndex = parseInt(i.getAttribute('data-swiper-slide-index'), 10))
              : (n.clickedIndex = s),
            r.slideToClickedSlide && void 0 !== n.clickedIndex && n.clickedIndex !== n.activeIndex && n.slideToClickedSlide();
        },
      };
      var Sb = {
        getTranslate: function (e) {
          void 0 === e && (e = this.isHorizontal() ? 'x' : 'y');
          const { params: t, rtlTranslate: n, translate: r, wrapperEl: i } = this;
          if (t.virtualTranslate) return n ? -r : r;
          if (t.cssMode) return r;
          let s = Yw(i, e);
          return (s += this.cssOverflowAdjustment()), n && (s = -s), s || 0;
        },
        setTranslate: function (e, t) {
          const n = this,
            { rtlTranslate: r, params: i, wrapperEl: s, progress: a } = n;
          let o,
            l = 0,
            c = 0;
          n.isHorizontal() ? (l = r ? -e : e) : (c = e),
            i.roundLengths && ((l = Math.floor(l)), (c = Math.floor(c))),
            (n.previousTranslate = n.translate),
            (n.translate = n.isHorizontal() ? l : c),
            i.cssMode
              ? (s[n.isHorizontal() ? 'scrollLeft' : 'scrollTop'] = n.isHorizontal() ? -l : -c)
              : i.virtualTranslate ||
                (n.isHorizontal() ? (l -= n.cssOverflowAdjustment()) : (c -= n.cssOverflowAdjustment()),
                (s.style.transform = 'translate3d('.concat(l, 'px, ').concat(c, 'px, ').concat(0, 'px)')));
          const u = n.maxTranslate() - n.minTranslate();
          (o = 0 === u ? 0 : (e - n.minTranslate()) / u), o !== a && n.updateProgress(e), n.emit('setTranslate', n.translate, t);
        },
        minTranslate: function () {
          return -this.snapGrid[0];
        },
        maxTranslate: function () {
          return -this.snapGrid[this.snapGrid.length - 1];
        },
        translateTo: function (e, t, n, r, i) {
          void 0 === e && (e = 0), void 0 === t && (t = this.params.speed), void 0 === n && (n = !0), void 0 === r && (r = !0);
          const s = this,
            { params: a, wrapperEl: o } = s;
          if (s.animating && a.preventInteractionOnTransition) return !1;
          const l = s.minTranslate(),
            c = s.maxTranslate();
          let u;
          if (((u = r && e > l ? l : r && e < c ? c : e), s.updateProgress(u), a.cssMode)) {
            const e = s.isHorizontal();
            if (0 === t) o[e ? 'scrollLeft' : 'scrollTop'] = -u;
            else {
              if (!s.support.smoothScroll) return Zw({ swiper: s, targetPosition: -u, side: e ? 'left' : 'top' }), !0;
              o.scrollTo({ [e ? 'left' : 'top']: -u, behavior: 'smooth' });
            }
            return !0;
          }
          return (
            0 === t
              ? (s.setTransition(0), s.setTranslate(u), n && (s.emit('beforeTransitionStart', t, i), s.emit('transitionEnd')))
              : (s.setTransition(t),
                s.setTranslate(u),
                n && (s.emit('beforeTransitionStart', t, i), s.emit('transitionStart')),
                s.animating ||
                  ((s.animating = !0),
                  s.onTranslateToWrapperTransitionEnd ||
                    (s.onTranslateToWrapperTransitionEnd = function (e) {
                      s &&
                        !s.destroyed &&
                        e.target === this &&
                        (s.wrapperEl.removeEventListener('transitionend', s.onTranslateToWrapperTransitionEnd),
                        (s.onTranslateToWrapperTransitionEnd = null),
                        delete s.onTranslateToWrapperTransitionEnd,
                        (s.animating = !1),
                        n && s.emit('transitionEnd'));
                    }),
                  s.wrapperEl.addEventListener('transitionend', s.onTranslateToWrapperTransitionEnd))),
            !0
          );
        },
      };
      function Eb(e) {
        let { swiper: t, runCallbacks: n, direction: r, step: i } = e;
        const { activeIndex: s, previousIndex: a } = t;
        let o = r;
        if ((o || (o = s > a ? 'next' : s < a ? 'prev' : 'reset'), t.emit('transition'.concat(i)), n && s !== a)) {
          if ('reset' === o) return void t.emit('slideResetTransition'.concat(i));
          t.emit('slideChangeTransition'.concat(i)),
            'next' === o ? t.emit('slideNextTransition'.concat(i)) : t.emit('slidePrevTransition'.concat(i));
        }
      }
      var Tb = {
        setTransition: function (e, t) {
          const n = this;
          n.params.cssMode ||
            ((n.wrapperEl.style.transitionDuration = ''.concat(e, 'ms')),
            (n.wrapperEl.style.transitionDelay = 0 === e ? '0ms' : '')),
            n.emit('setTransition', e, t);
        },
        transitionStart: function (e, t) {
          void 0 === e && (e = !0);
          const n = this,
            { params: r } = n;
          r.cssMode || (r.autoHeight && n.updateAutoHeight(), Eb({ swiper: n, runCallbacks: e, direction: t, step: 'Start' }));
        },
        transitionEnd: function (e, t) {
          void 0 === e && (e = !0);
          const n = this,
            { params: r } = n;
          (n.animating = !1), r.cssMode || (n.setTransition(0), Eb({ swiper: n, runCallbacks: e, direction: t, step: 'End' }));
        },
      };
      var _b = {
        slideTo: function (e, t, n, r, i) {
          void 0 === e && (e = 0), void 0 === n && (n = !0), 'string' === typeof e && (e = parseInt(e, 10));
          const s = this;
          let a = e;
          a < 0 && (a = 0);
          const {
            params: o,
            snapGrid: l,
            slidesGrid: c,
            previousIndex: u,
            activeIndex: d,
            rtlTranslate: h,
            wrapperEl: f,
            enabled: p,
          } = s;
          if ((!p && !r && !i) || s.destroyed || (s.animating && o.preventInteractionOnTransition)) return !1;
          'undefined' === typeof t && (t = s.params.speed);
          const m = Math.min(s.params.slidesPerGroupSkip, a);
          let g = m + Math.floor((a - m) / s.params.slidesPerGroup);
          g >= l.length && (g = l.length - 1);
          const v = -l[g];
          if (o.normalizeSlideIndex)
            for (let w = 0; w < c.length; w += 1) {
              const e = -Math.floor(100 * v),
                t = Math.floor(100 * c[w]),
                n = Math.floor(100 * c[w + 1]);
              'undefined' !== typeof c[w + 1]
                ? e >= t && e < n - (n - t) / 2
                  ? (a = w)
                  : e >= t && e < n && (a = w + 1)
                : e >= t && (a = w);
            }
          if (s.initialized && a !== d) {
            if (!s.allowSlideNext && (h ? v > s.translate && v > s.minTranslate() : v < s.translate && v < s.minTranslate()))
              return !1;
            if (!s.allowSlidePrev && v > s.translate && v > s.maxTranslate() && (d || 0) !== a) return !1;
          }
          let y;
          if (
            (a !== (u || 0) && n && s.emit('beforeSlideChangeStart'),
            s.updateProgress(v),
            (y = a > d ? 'next' : a < d ? 'prev' : 'reset'),
            (h && -v === s.translate) || (!h && v === s.translate))
          )
            return (
              s.updateActiveIndex(a),
              o.autoHeight && s.updateAutoHeight(),
              s.updateSlidesClasses(),
              'slide' !== o.effect && s.setTranslate(v),
              'reset' !== y && (s.transitionStart(n, y), s.transitionEnd(n, y)),
              !1
            );
          if (o.cssMode) {
            const e = s.isHorizontal(),
              n = h ? v : -v;
            if (0 === t) {
              const t = s.virtual && s.params.virtual.enabled;
              t && ((s.wrapperEl.style.scrollSnapType = 'none'), (s._immediateVirtual = !0)),
                t && !s._cssModeVirtualInitialSet && s.params.initialSlide > 0
                  ? ((s._cssModeVirtualInitialSet = !0),
                    requestAnimationFrame(() => {
                      f[e ? 'scrollLeft' : 'scrollTop'] = n;
                    }))
                  : (f[e ? 'scrollLeft' : 'scrollTop'] = n),
                t &&
                  requestAnimationFrame(() => {
                    (s.wrapperEl.style.scrollSnapType = ''), (s._immediateVirtual = !1);
                  });
            } else {
              if (!s.support.smoothScroll) return Zw({ swiper: s, targetPosition: n, side: e ? 'left' : 'top' }), !0;
              f.scrollTo({ [e ? 'left' : 'top']: n, behavior: 'smooth' });
            }
            return !0;
          }
          return (
            s.setTransition(t),
            s.setTranslate(v),
            s.updateActiveIndex(a),
            s.updateSlidesClasses(),
            s.emit('beforeTransitionStart', t, r),
            s.transitionStart(n, y),
            0 === t
              ? s.transitionEnd(n, y)
              : s.animating ||
                ((s.animating = !0),
                s.onSlideToWrapperTransitionEnd ||
                  (s.onSlideToWrapperTransitionEnd = function (e) {
                    s &&
                      !s.destroyed &&
                      e.target === this &&
                      (s.wrapperEl.removeEventListener('transitionend', s.onSlideToWrapperTransitionEnd),
                      (s.onSlideToWrapperTransitionEnd = null),
                      delete s.onSlideToWrapperTransitionEnd,
                      s.transitionEnd(n, y));
                  }),
                s.wrapperEl.addEventListener('transitionend', s.onSlideToWrapperTransitionEnd)),
            !0
          );
        },
        slideToLoop: function (e, t, n, r) {
          if ((void 0 === e && (e = 0), void 0 === n && (n = !0), 'string' === typeof e)) {
            e = parseInt(e, 10);
          }
          const i = this;
          if (i.destroyed) return;
          'undefined' === typeof t && (t = i.params.speed);
          const s = i.grid && i.params.grid && i.params.grid.rows > 1;
          let a = e;
          if (i.params.loop)
            if (i.virtual && i.params.virtual.enabled) a += i.virtual.slidesBefore;
            else {
              let e;
              if (s) {
                const t = a * i.params.grid.rows;
                e = i.slides.filter((e) => 1 * e.getAttribute('data-swiper-slide-index') === t)[0].column;
              } else e = i.getSlideIndexByData(a);
              const t = s ? Math.ceil(i.slides.length / i.params.grid.rows) : i.slides.length,
                { centeredSlides: n } = i.params;
              let o = i.params.slidesPerView;
              'auto' === o
                ? (o = i.slidesPerViewDynamic())
                : ((o = Math.ceil(parseFloat(i.params.slidesPerView, 10))), n && o % 2 === 0 && (o += 1));
              let l = t - e < o;
              if ((n && (l = l || e < Math.ceil(o / 2)), r && n && 'auto' !== i.params.slidesPerView && !s && (l = !1), l)) {
                const r = n
                  ? e < i.activeIndex
                    ? 'prev'
                    : 'next'
                  : e - i.activeIndex - 1 < i.params.slidesPerView
                    ? 'next'
                    : 'prev';
                i.loopFix({
                  direction: r,
                  slideTo: !0,
                  activeSlideIndex: 'next' === r ? e + 1 : e - t + 1,
                  slideRealIndex: 'next' === r ? i.realIndex : void 0,
                });
              }
              if (s) {
                const e = a * i.params.grid.rows;
                a = i.slides.filter((t) => 1 * t.getAttribute('data-swiper-slide-index') === e)[0].column;
              } else a = i.getSlideIndexByData(a);
            }
          return (
            requestAnimationFrame(() => {
              i.slideTo(a, t, n, r);
            }),
            i
          );
        },
        slideNext: function (e, t, n) {
          void 0 === t && (t = !0);
          const r = this,
            { enabled: i, params: s, animating: a } = r;
          if (!i || r.destroyed) return r;
          'undefined' === typeof e && (e = r.params.speed);
          let o = s.slidesPerGroup;
          'auto' === s.slidesPerView &&
            1 === s.slidesPerGroup &&
            s.slidesPerGroupAuto &&
            (o = Math.max(r.slidesPerViewDynamic('current', !0), 1));
          const l = r.activeIndex < s.slidesPerGroupSkip ? 1 : o,
            c = r.virtual && s.virtual.enabled;
          if (s.loop) {
            if (a && !c && s.loopPreventsSliding) return !1;
            if (
              (r.loopFix({ direction: 'next' }),
              (r._clientLeft = r.wrapperEl.clientLeft),
              r.activeIndex === r.slides.length - 1 && s.cssMode)
            )
              return (
                requestAnimationFrame(() => {
                  r.slideTo(r.activeIndex + l, e, t, n);
                }),
                !0
              );
          }
          return s.rewind && r.isEnd ? r.slideTo(0, e, t, n) : r.slideTo(r.activeIndex + l, e, t, n);
        },
        slidePrev: function (e, t, n) {
          void 0 === t && (t = !0);
          const r = this,
            { params: i, snapGrid: s, slidesGrid: a, rtlTranslate: o, enabled: l, animating: c } = r;
          if (!l || r.destroyed) return r;
          'undefined' === typeof e && (e = r.params.speed);
          const u = r.virtual && i.virtual.enabled;
          if (i.loop) {
            if (c && !u && i.loopPreventsSliding) return !1;
            r.loopFix({ direction: 'prev' }), (r._clientLeft = r.wrapperEl.clientLeft);
          }
          function d(e) {
            return e < 0 ? -Math.floor(Math.abs(e)) : Math.floor(e);
          }
          const h = d(o ? r.translate : -r.translate),
            f = s.map((e) => d(e));
          let p = s[f.indexOf(h) - 1];
          if ('undefined' === typeof p && i.cssMode) {
            let e;
            s.forEach((t, n) => {
              h >= t && (e = n);
            }),
              'undefined' !== typeof e && (p = s[e > 0 ? e - 1 : e]);
          }
          let m = 0;
          if (
            ('undefined' !== typeof p &&
              ((m = a.indexOf(p)),
              m < 0 && (m = r.activeIndex - 1),
              'auto' === i.slidesPerView &&
                1 === i.slidesPerGroup &&
                i.slidesPerGroupAuto &&
                ((m = m - r.slidesPerViewDynamic('previous', !0) + 1), (m = Math.max(m, 0)))),
            i.rewind && r.isBeginning)
          ) {
            const i =
              r.params.virtual && r.params.virtual.enabled && r.virtual ? r.virtual.slides.length - 1 : r.slides.length - 1;
            return r.slideTo(i, e, t, n);
          }
          return i.loop && 0 === r.activeIndex && i.cssMode
            ? (requestAnimationFrame(() => {
                r.slideTo(m, e, t, n);
              }),
              !0)
            : r.slideTo(m, e, t, n);
        },
        slideReset: function (e, t, n) {
          void 0 === t && (t = !0);
          const r = this;
          if (!r.destroyed) return 'undefined' === typeof e && (e = r.params.speed), r.slideTo(r.activeIndex, e, t, n);
        },
        slideToClosest: function (e, t, n, r) {
          void 0 === t && (t = !0), void 0 === r && (r = 0.5);
          const i = this;
          if (i.destroyed) return;
          'undefined' === typeof e && (e = i.params.speed);
          let s = i.activeIndex;
          const a = Math.min(i.params.slidesPerGroupSkip, s),
            o = a + Math.floor((s - a) / i.params.slidesPerGroup),
            l = i.rtlTranslate ? i.translate : -i.translate;
          if (l >= i.snapGrid[o]) {
            const e = i.snapGrid[o];
            l - e > (i.snapGrid[o + 1] - e) * r && (s += i.params.slidesPerGroup);
          } else {
            const e = i.snapGrid[o - 1];
            l - e <= (i.snapGrid[o] - e) * r && (s -= i.params.slidesPerGroup);
          }
          return (s = Math.max(s, 0)), (s = Math.min(s, i.slidesGrid.length - 1)), i.slideTo(s, e, t, n);
        },
        slideToClickedSlide: function () {
          const e = this;
          if (e.destroyed) return;
          const { params: t, slidesEl: n } = e,
            r = 'auto' === t.slidesPerView ? e.slidesPerViewDynamic() : t.slidesPerView;
          let i,
            s = e.clickedIndex;
          const a = e.isElement ? 'swiper-slide' : '.'.concat(t.slideClass);
          if (t.loop) {
            if (e.animating) return;
            (i = parseInt(e.clickedSlide.getAttribute('data-swiper-slide-index'), 10)),
              t.centeredSlides
                ? s < e.loopedSlides - r / 2 || s > e.slides.length - e.loopedSlides + r / 2
                  ? (e.loopFix(),
                    (s = e.getSlideIndex(tb(n, ''.concat(a, '[data-swiper-slide-index="').concat(i, '"]'))[0])),
                    Ww(() => {
                      e.slideTo(s);
                    }))
                  : e.slideTo(s)
                : s > e.slides.length - r
                  ? (e.loopFix(),
                    (s = e.getSlideIndex(tb(n, ''.concat(a, '[data-swiper-slide-index="').concat(i, '"]'))[0])),
                    Ww(() => {
                      e.slideTo(s);
                    }))
                  : e.slideTo(s);
          } else e.slideTo(s);
        },
      };
      var Ib = {
        loopCreate: function (e) {
          const t = this,
            { params: n, slidesEl: r } = t;
          if (!n.loop || (t.virtual && t.params.virtual.enabled)) return;
          const i = () => {
              tb(r, '.'.concat(n.slideClass, ', swiper-slide')).forEach((e, t) => {
                e.setAttribute('data-swiper-slide-index', t);
              });
            },
            s = t.grid && n.grid && n.grid.rows > 1,
            a = n.slidesPerGroup * (s ? n.grid.rows : 1),
            o = t.slides.length % a !== 0,
            l = s && t.slides.length % n.grid.rows !== 0,
            c = (e) => {
              for (let r = 0; r < e; r += 1) {
                const e = t.isElement ? rb('swiper-slide', [n.slideBlankClass]) : rb('div', [n.slideClass, n.slideBlankClass]);
                t.slidesEl.append(e);
              }
            };
          if (o) {
            if (n.loopAddBlankSlides) {
              c(a - (t.slides.length % a)), t.recalcSlides(), t.updateSlides();
            } else
              nb(
                'Swiper Loop Warning: The number of slides is not even to slidesPerGroup, loop mode may not function properly. You need to add more slides (or make duplicates, or empty slides)',
              );
            i();
          } else if (l) {
            if (n.loopAddBlankSlides) {
              c(n.grid.rows - (t.slides.length % n.grid.rows)), t.recalcSlides(), t.updateSlides();
            } else
              nb(
                'Swiper Loop Warning: The number of slides is not even to grid.rows, loop mode may not function properly. You need to add more slides (or make duplicates, or empty slides)',
              );
            i();
          } else i();
          t.loopFix({ slideRealIndex: e, direction: n.centeredSlides ? void 0 : 'next' });
        },
        loopFix: function (e) {
          let {
            slideRealIndex: t,
            slideTo: n = !0,
            direction: r,
            setTranslate: i,
            activeSlideIndex: s,
            byController: a,
            byMousewheel: o,
          } = void 0 === e ? {} : e;
          const l = this;
          if (!l.params.loop) return;
          l.emit('beforeLoopFix');
          const { slides: c, allowSlidePrev: u, allowSlideNext: d, slidesEl: h, params: f } = l,
            { centeredSlides: p } = f;
          if (((l.allowSlidePrev = !0), (l.allowSlideNext = !0), l.virtual && f.virtual.enabled))
            return (
              n &&
                (f.centeredSlides || 0 !== l.snapIndex
                  ? f.centeredSlides && l.snapIndex < f.slidesPerView
                    ? l.slideTo(l.virtual.slides.length + l.snapIndex, 0, !1, !0)
                    : l.snapIndex === l.snapGrid.length - 1 && l.slideTo(l.virtual.slidesBefore, 0, !1, !0)
                  : l.slideTo(l.virtual.slides.length, 0, !1, !0)),
              (l.allowSlidePrev = u),
              (l.allowSlideNext = d),
              void l.emit('loopFix')
            );
          let m = f.slidesPerView;
          'auto' === m
            ? (m = l.slidesPerViewDynamic())
            : ((m = Math.ceil(parseFloat(f.slidesPerView, 10))), p && m % 2 === 0 && (m += 1));
          const g = f.slidesPerGroupAuto ? m : f.slidesPerGroup;
          let v = g;
          v % g !== 0 && (v += g - (v % g)), (v += f.loopAdditionalSlides), (l.loopedSlides = v);
          const y = l.grid && f.grid && f.grid.rows > 1;
          c.length < m + v
            ? nb(
                'Swiper Loop Warning: The number of slides is not enough for loop mode, it will be disabled and not function properly. You need to add more slides (or make duplicates) or lower the values of slidesPerView and slidesPerGroup parameters',
              )
            : y && 'row' === f.grid.fill && nb('Swiper Loop Warning: Loop mode is not compatible with grid.fill = `row`');
          const w = [],
            b = [];
          let S = l.activeIndex;
          'undefined' === typeof s
            ? (s = l.getSlideIndex(c.filter((e) => e.classList.contains(f.slideActiveClass))[0]))
            : (S = s);
          const E = 'next' === r || !r,
            T = 'prev' === r || !r;
          let _ = 0,
            I = 0;
          const x = y ? Math.ceil(c.length / f.grid.rows) : c.length,
            k = (y ? c[s].column : s) + (p && 'undefined' === typeof i ? -m / 2 + 0.5 : 0);
          if (k < v) {
            _ = Math.max(v - k, g);
            for (let e = 0; e < v - k; e += 1) {
              const t = e - Math.floor(e / x) * x;
              if (y) {
                const e = x - t - 1;
                for (let t = c.length - 1; t >= 0; t -= 1) c[t].column === e && w.push(t);
              } else w.push(x - t - 1);
            }
          } else if (k + m > x - v) {
            I = Math.max(k - (x - 2 * v), g);
            for (let e = 0; e < I; e += 1) {
              const t = e - Math.floor(e / x) * x;
              y
                ? c.forEach((e, n) => {
                    e.column === t && b.push(n);
                  })
                : b.push(t);
            }
          }
          if (
            ((l.__preventObserver__ = !0),
            requestAnimationFrame(() => {
              l.__preventObserver__ = !1;
            }),
            T &&
              w.forEach((e) => {
                (c[e].swiperLoopMoveDOM = !0), h.prepend(c[e]), (c[e].swiperLoopMoveDOM = !1);
              }),
            E &&
              b.forEach((e) => {
                (c[e].swiperLoopMoveDOM = !0), h.append(c[e]), (c[e].swiperLoopMoveDOM = !1);
              }),
            l.recalcSlides(),
            'auto' === f.slidesPerView
              ? l.updateSlides()
              : y &&
                ((w.length > 0 && T) || (b.length > 0 && E)) &&
                l.slides.forEach((e, t) => {
                  l.grid.updateSlide(t, e, l.slides);
                }),
            f.watchSlidesProgress && l.updateSlidesOffset(),
            n)
          )
            if (w.length > 0 && T) {
              if ('undefined' === typeof t) {
                const e = l.slidesGrid[S],
                  t = l.slidesGrid[S + _] - e;
                o
                  ? l.setTranslate(l.translate - t)
                  : (l.slideTo(S + Math.ceil(_), 0, !1, !0),
                    i &&
                      ((l.touchEventsData.startTranslate = l.touchEventsData.startTranslate - t),
                      (l.touchEventsData.currentTranslate = l.touchEventsData.currentTranslate - t)));
              } else if (i) {
                const e = y ? w.length / f.grid.rows : w.length;
                l.slideTo(l.activeIndex + e, 0, !1, !0), (l.touchEventsData.currentTranslate = l.translate);
              }
            } else if (b.length > 0 && E)
              if ('undefined' === typeof t) {
                const e = l.slidesGrid[S],
                  t = l.slidesGrid[S - I] - e;
                o
                  ? l.setTranslate(l.translate - t)
                  : (l.slideTo(S - I, 0, !1, !0),
                    i &&
                      ((l.touchEventsData.startTranslate = l.touchEventsData.startTranslate - t),
                      (l.touchEventsData.currentTranslate = l.touchEventsData.currentTranslate - t)));
              } else {
                const e = y ? b.length / f.grid.rows : b.length;
                l.slideTo(l.activeIndex - e, 0, !1, !0);
              }
          if (((l.allowSlidePrev = u), (l.allowSlideNext = d), l.controller && l.controller.control && !a)) {
            const e = { slideRealIndex: t, direction: r, setTranslate: i, activeSlideIndex: s, byController: !0 };
            Array.isArray(l.controller.control)
              ? l.controller.control.forEach((t) => {
                  !t.destroyed && t.params.loop && t.loopFix({ ...e, slideTo: t.params.slidesPerView === f.slidesPerView && n });
                })
              : l.controller.control instanceof l.constructor &&
                l.controller.control.params.loop &&
                l.controller.control.loopFix({
                  ...e,
                  slideTo: l.controller.control.params.slidesPerView === f.slidesPerView && n,
                });
          }
          l.emit('loopFix');
        },
        loopDestroy: function () {
          const e = this,
            { params: t, slidesEl: n } = e;
          if (!t.loop || (e.virtual && e.params.virtual.enabled)) return;
          e.recalcSlides();
          const r = [];
          e.slides.forEach((e) => {
            const t =
              'undefined' === typeof e.swiperSlideIndex ? 1 * e.getAttribute('data-swiper-slide-index') : e.swiperSlideIndex;
            r[t] = e;
          }),
            e.slides.forEach((e) => {
              e.removeAttribute('data-swiper-slide-index');
            }),
            r.forEach((e) => {
              n.append(e);
            }),
            e.recalcSlides(),
            e.slideTo(e.realIndex, 0);
        },
      };
      var xb = {
        setGrabCursor: function (e) {
          const t = this;
          if (!t.params.simulateTouch || (t.params.watchOverflow && t.isLocked) || t.params.cssMode) return;
          const n = 'container' === t.params.touchEventsTarget ? t.el : t.wrapperEl;
          t.isElement && (t.__preventObserver__ = !0),
            (n.style.cursor = 'move'),
            (n.style.cursor = e ? 'grabbing' : 'grab'),
            t.isElement &&
              requestAnimationFrame(() => {
                t.__preventObserver__ = !1;
              });
        },
        unsetGrabCursor: function () {
          const e = this;
          (e.params.watchOverflow && e.isLocked) ||
            e.params.cssMode ||
            (e.isElement && (e.__preventObserver__ = !0),
            (e['container' === e.params.touchEventsTarget ? 'el' : 'wrapperEl'].style.cursor = ''),
            e.isElement &&
              requestAnimationFrame(() => {
                e.__preventObserver__ = !1;
              }));
        },
      };
      function kb(e, t, n) {
        const r = Kw(),
          { params: i } = e,
          s = i.edgeSwipeDetection,
          a = i.edgeSwipeThreshold;
        return !s || !(n <= a || n >= r.innerWidth - a) || ('prevent' === s && (t.preventDefault(), !0));
      }
      function Cb(e) {
        const t = this,
          n = Gw();
        let r = e;
        r.originalEvent && (r = r.originalEvent);
        const i = t.touchEventsData;
        if ('pointerdown' === r.type) {
          if (null !== i.pointerId && i.pointerId !== r.pointerId) return;
          i.pointerId = r.pointerId;
        } else 'touchstart' === r.type && 1 === r.targetTouches.length && (i.touchId = r.targetTouches[0].identifier);
        if ('touchstart' === r.type) return void kb(t, r, r.targetTouches[0].pageX);
        const { params: s, touches: a, enabled: o } = t;
        if (!o) return;
        if (!s.simulateTouch && 'mouse' === r.pointerType) return;
        if (t.animating && s.preventInteractionOnTransition) return;
        !t.animating && s.cssMode && s.loop && t.loopFix();
        let l = r.target;
        if ('wrapper' === s.touchEventsTarget && !t.wrapperEl.contains(l)) return;
        if ('which' in r && 3 === r.which) return;
        if ('button' in r && r.button > 0) return;
        if (i.isTouched && i.isMoved) return;
        const c = !!s.noSwipingClass && '' !== s.noSwipingClass,
          u = r.composedPath ? r.composedPath() : r.path;
        c && r.target && r.target.shadowRoot && u && (l = u[0]);
        const d = s.noSwipingSelector ? s.noSwipingSelector : '.'.concat(s.noSwipingClass),
          h = !(!r.target || !r.target.shadowRoot);
        if (
          s.noSwiping &&
          (h
            ? (function (e, t) {
                return (
                  void 0 === t && (t = this),
                  (function t(n) {
                    if (!n || n === Gw() || n === Kw()) return null;
                    n.assignedSlot && (n = n.assignedSlot);
                    const r = n.closest(e);
                    return r || n.getRootNode ? r || t(n.getRootNode().host) : null;
                  })(t)
                );
              })(d, l)
            : l.closest(d))
        )
          return void (t.allowClick = !0);
        if (s.swipeHandler && !l.closest(s.swipeHandler)) return;
        (a.currentX = r.pageX), (a.currentY = r.pageY);
        const f = a.currentX,
          p = a.currentY;
        if (!kb(t, r, f)) return;
        Object.assign(i, { isTouched: !0, isMoved: !1, allowTouchCallbacks: !0, isScrolling: void 0, startMoving: void 0 }),
          (a.startX = f),
          (a.startY = p),
          (i.touchStartTime = Qw()),
          (t.allowClick = !0),
          t.updateSize(),
          (t.swipeDirection = void 0),
          s.threshold > 0 && (i.allowThresholdMove = !1);
        let m = !0;
        l.matches(i.focusableElements) && ((m = !1), 'SELECT' === l.nodeName && (i.isTouched = !1)),
          n.activeElement && n.activeElement.matches(i.focusableElements) && n.activeElement !== l && n.activeElement.blur();
        const g = m && t.allowTouchMove && s.touchStartPreventDefault;
        (!s.touchStartForcePreventDefault && !g) || l.isContentEditable || r.preventDefault(),
          s.freeMode && s.freeMode.enabled && t.freeMode && t.animating && !s.cssMode && t.freeMode.onTouchStart(),
          t.emit('touchStart', r);
      }
      function Nb(e) {
        const t = Gw(),
          n = this,
          r = n.touchEventsData,
          { params: i, touches: s, rtlTranslate: a, enabled: o } = n;
        if (!o) return;
        if (!i.simulateTouch && 'mouse' === e.pointerType) return;
        let l,
          c = e;
        if ((c.originalEvent && (c = c.originalEvent), 'pointermove' === c.type)) {
          if (null !== r.touchId) return;
          if (c.pointerId !== r.pointerId) return;
        }
        if ('touchmove' === c.type) {
          if (((l = [...c.changedTouches].filter((e) => e.identifier === r.touchId)[0]), !l || l.identifier !== r.touchId))
            return;
        } else l = c;
        if (!r.isTouched) return void (r.startMoving && r.isScrolling && n.emit('touchMoveOpposite', c));
        const u = l.pageX,
          d = l.pageY;
        if (c.preventedByNestedSwiper) return (s.startX = u), void (s.startY = d);
        if (!n.allowTouchMove)
          return (
            c.target.matches(r.focusableElements) || (n.allowClick = !1),
            void (
              r.isTouched && (Object.assign(s, { startX: u, startY: d, currentX: u, currentY: d }), (r.touchStartTime = Qw()))
            )
          );
        if (i.touchReleaseOnEdges && !i.loop)
          if (n.isVertical()) {
            if ((d < s.startY && n.translate <= n.maxTranslate()) || (d > s.startY && n.translate >= n.minTranslate()))
              return (r.isTouched = !1), void (r.isMoved = !1);
          } else if ((u < s.startX && n.translate <= n.maxTranslate()) || (u > s.startX && n.translate >= n.minTranslate()))
            return;
        if (t.activeElement && c.target === t.activeElement && c.target.matches(r.focusableElements))
          return (r.isMoved = !0), void (n.allowClick = !1);
        r.allowTouchCallbacks && n.emit('touchMove', c),
          (s.previousX = s.currentX),
          (s.previousY = s.currentY),
          (s.currentX = u),
          (s.currentY = d);
        const h = s.currentX - s.startX,
          f = s.currentY - s.startY;
        if (n.params.threshold && Math.sqrt(h ** 2 + f ** 2) < n.params.threshold) return;
        if ('undefined' === typeof r.isScrolling) {
          let e;
          (n.isHorizontal() && s.currentY === s.startY) || (n.isVertical() && s.currentX === s.startX)
            ? (r.isScrolling = !1)
            : h * h + f * f >= 25 &&
              ((e = (180 * Math.atan2(Math.abs(f), Math.abs(h))) / Math.PI),
              (r.isScrolling = n.isHorizontal() ? e > i.touchAngle : 90 - e > i.touchAngle));
        }
        if (
          (r.isScrolling && n.emit('touchMoveOpposite', c),
          'undefined' === typeof r.startMoving && ((s.currentX === s.startX && s.currentY === s.startY) || (r.startMoving = !0)),
          r.isScrolling || ('touchmove' === c.type && r.preventTouchMoveFromPointerMove))
        )
          return void (r.isTouched = !1);
        if (!r.startMoving) return;
        (n.allowClick = !1),
          !i.cssMode && c.cancelable && c.preventDefault(),
          i.touchMoveStopPropagation && !i.nested && c.stopPropagation();
        let p = n.isHorizontal() ? h : f,
          m = n.isHorizontal() ? s.currentX - s.previousX : s.currentY - s.previousY;
        i.oneWayMovement && ((p = Math.abs(p) * (a ? 1 : -1)), (m = Math.abs(m) * (a ? 1 : -1))),
          (s.diff = p),
          (p *= i.touchRatio),
          a && ((p = -p), (m = -m));
        const g = n.touchesDirection;
        (n.swipeDirection = p > 0 ? 'prev' : 'next'), (n.touchesDirection = m > 0 ? 'prev' : 'next');
        const v = n.params.loop && !i.cssMode,
          y = ('next' === n.touchesDirection && n.allowSlideNext) || ('prev' === n.touchesDirection && n.allowSlidePrev);
        if (!r.isMoved) {
          if (
            (v && y && n.loopFix({ direction: n.swipeDirection }),
            (r.startTranslate = n.getTranslate()),
            n.setTransition(0),
            n.animating)
          ) {
            const e = new window.CustomEvent('transitionend', { bubbles: !0, cancelable: !0, detail: { bySwiperTouchMove: !0 } });
            n.wrapperEl.dispatchEvent(e);
          }
          (r.allowMomentumBounce = !1),
            !i.grabCursor || (!0 !== n.allowSlideNext && !0 !== n.allowSlidePrev) || n.setGrabCursor(!0),
            n.emit('sliderFirstMove', c);
        }
        if ((new Date().getTime(), r.isMoved && r.allowThresholdMove && g !== n.touchesDirection && v && y && Math.abs(p) >= 1))
          return (
            Object.assign(s, { startX: u, startY: d, currentX: u, currentY: d, startTranslate: r.currentTranslate }),
            (r.loopSwapReset = !0),
            void (r.startTranslate = r.currentTranslate)
          );
        n.emit('sliderMove', c), (r.isMoved = !0), (r.currentTranslate = p + r.startTranslate);
        let w = !0,
          b = i.resistanceRatio;
        if (
          (i.touchReleaseOnEdges && (b = 0),
          p > 0
            ? (v &&
                y &&
                r.allowThresholdMove &&
                r.currentTranslate >
                  (i.centeredSlides ? n.minTranslate() - n.slidesSizesGrid[n.activeIndex + 1] : n.minTranslate()) &&
                n.loopFix({ direction: 'prev', setTranslate: !0, activeSlideIndex: 0 }),
              r.currentTranslate > n.minTranslate() &&
                ((w = !1),
                i.resistance && (r.currentTranslate = n.minTranslate() - 1 + (-n.minTranslate() + r.startTranslate + p) ** b)))
            : p < 0 &&
              (v &&
                y &&
                r.allowThresholdMove &&
                r.currentTranslate <
                  (i.centeredSlides ? n.maxTranslate() + n.slidesSizesGrid[n.slidesSizesGrid.length - 1] : n.maxTranslate()) &&
                n.loopFix({
                  direction: 'next',
                  setTranslate: !0,
                  activeSlideIndex:
                    n.slides.length -
                    ('auto' === i.slidesPerView ? n.slidesPerViewDynamic() : Math.ceil(parseFloat(i.slidesPerView, 10))),
                }),
              r.currentTranslate < n.maxTranslate() &&
                ((w = !1),
                i.resistance && (r.currentTranslate = n.maxTranslate() + 1 - (n.maxTranslate() - r.startTranslate - p) ** b))),
          w && (c.preventedByNestedSwiper = !0),
          !n.allowSlideNext &&
            'next' === n.swipeDirection &&
            r.currentTranslate < r.startTranslate &&
            (r.currentTranslate = r.startTranslate),
          !n.allowSlidePrev &&
            'prev' === n.swipeDirection &&
            r.currentTranslate > r.startTranslate &&
            (r.currentTranslate = r.startTranslate),
          n.allowSlidePrev || n.allowSlideNext || (r.currentTranslate = r.startTranslate),
          i.threshold > 0)
        ) {
          if (!(Math.abs(p) > i.threshold || r.allowThresholdMove)) return void (r.currentTranslate = r.startTranslate);
          if (!r.allowThresholdMove)
            return (
              (r.allowThresholdMove = !0),
              (s.startX = s.currentX),
              (s.startY = s.currentY),
              (r.currentTranslate = r.startTranslate),
              void (s.diff = n.isHorizontal() ? s.currentX - s.startX : s.currentY - s.startY)
            );
        }
        i.followFinger &&
          !i.cssMode &&
          (((i.freeMode && i.freeMode.enabled && n.freeMode) || i.watchSlidesProgress) &&
            (n.updateActiveIndex(), n.updateSlidesClasses()),
          i.freeMode && i.freeMode.enabled && n.freeMode && n.freeMode.onTouchMove(),
          n.updateProgress(r.currentTranslate),
          n.setTranslate(r.currentTranslate));
      }
      function Pb(e) {
        const t = this,
          n = t.touchEventsData;
        let r,
          i = e;
        i.originalEvent && (i = i.originalEvent);
        if ('touchend' === i.type || 'touchcancel' === i.type) {
          if (((r = [...i.changedTouches].filter((e) => e.identifier === n.touchId)[0]), !r || r.identifier !== n.touchId))
            return;
        } else {
          if (null !== n.touchId) return;
          if (i.pointerId !== n.pointerId) return;
          r = i;
        }
        if (['pointercancel', 'pointerout', 'pointerleave', 'contextmenu'].includes(i.type)) {
          if (!(['pointercancel', 'contextmenu'].includes(i.type) && (t.browser.isSafari || t.browser.isWebView))) return;
        }
        (n.pointerId = null), (n.touchId = null);
        const { params: s, touches: a, rtlTranslate: o, slidesGrid: l, enabled: c } = t;
        if (!c) return;
        if (!s.simulateTouch && 'mouse' === i.pointerType) return;
        if ((n.allowTouchCallbacks && t.emit('touchEnd', i), (n.allowTouchCallbacks = !1), !n.isTouched))
          return n.isMoved && s.grabCursor && t.setGrabCursor(!1), (n.isMoved = !1), void (n.startMoving = !1);
        s.grabCursor && n.isMoved && n.isTouched && (!0 === t.allowSlideNext || !0 === t.allowSlidePrev) && t.setGrabCursor(!1);
        const u = Qw(),
          d = u - n.touchStartTime;
        if (t.allowClick) {
          const e = i.path || (i.composedPath && i.composedPath());
          t.updateClickedSlide((e && e[0]) || i.target, e),
            t.emit('tap click', i),
            d < 300 && u - n.lastClickTime < 300 && t.emit('doubleTap doubleClick', i);
        }
        if (
          ((n.lastClickTime = Qw()),
          Ww(() => {
            t.destroyed || (t.allowClick = !0);
          }),
          !n.isTouched ||
            !n.isMoved ||
            !t.swipeDirection ||
            (0 === a.diff && !n.loopSwapReset) ||
            (n.currentTranslate === n.startTranslate && !n.loopSwapReset))
        )
          return (n.isTouched = !1), (n.isMoved = !1), void (n.startMoving = !1);
        let h;
        if (
          ((n.isTouched = !1),
          (n.isMoved = !1),
          (n.startMoving = !1),
          (h = s.followFinger ? (o ? t.translate : -t.translate) : -n.currentTranslate),
          s.cssMode)
        )
          return;
        if (s.freeMode && s.freeMode.enabled) return void t.freeMode.onTouchEnd({ currentPos: h });
        const f = h >= -t.maxTranslate() && !t.params.loop;
        let p = 0,
          m = t.slidesSizesGrid[0];
        for (let b = 0; b < l.length; b += b < s.slidesPerGroupSkip ? 1 : s.slidesPerGroup) {
          const e = b < s.slidesPerGroupSkip - 1 ? 1 : s.slidesPerGroup;
          'undefined' !== typeof l[b + e]
            ? (f || (h >= l[b] && h < l[b + e])) && ((p = b), (m = l[b + e] - l[b]))
            : (f || h >= l[b]) && ((p = b), (m = l[l.length - 1] - l[l.length - 2]));
        }
        let g = null,
          v = null;
        s.rewind &&
          (t.isBeginning
            ? (v = s.virtual && s.virtual.enabled && t.virtual ? t.virtual.slides.length - 1 : t.slides.length - 1)
            : t.isEnd && (g = 0));
        const y = (h - l[p]) / m,
          w = p < s.slidesPerGroupSkip - 1 ? 1 : s.slidesPerGroup;
        if (d > s.longSwipesMs) {
          if (!s.longSwipes) return void t.slideTo(t.activeIndex);
          'next' === t.swipeDirection && (y >= s.longSwipesRatio ? t.slideTo(s.rewind && t.isEnd ? g : p + w) : t.slideTo(p)),
            'prev' === t.swipeDirection &&
              (y > 1 - s.longSwipesRatio
                ? t.slideTo(p + w)
                : null !== v && y < 0 && Math.abs(y) > s.longSwipesRatio
                  ? t.slideTo(v)
                  : t.slideTo(p));
        } else {
          if (!s.shortSwipes) return void t.slideTo(t.activeIndex);
          t.navigation && (i.target === t.navigation.nextEl || i.target === t.navigation.prevEl)
            ? i.target === t.navigation.nextEl
              ? t.slideTo(p + w)
              : t.slideTo(p)
            : ('next' === t.swipeDirection && t.slideTo(null !== g ? g : p + w),
              'prev' === t.swipeDirection && t.slideTo(null !== v ? v : p));
        }
      }
      function Db() {
        const e = this,
          { params: t, el: n } = e;
        if (n && 0 === n.offsetWidth) return;
        t.breakpoints && e.setBreakpoint();
        const { allowSlideNext: r, allowSlidePrev: i, snapGrid: s } = e,
          a = e.virtual && e.params.virtual.enabled;
        (e.allowSlideNext = !0), (e.allowSlidePrev = !0), e.updateSize(), e.updateSlides(), e.updateSlidesClasses();
        const o = a && t.loop;
        !('auto' === t.slidesPerView || t.slidesPerView > 1) || !e.isEnd || e.isBeginning || e.params.centeredSlides || o
          ? e.params.loop && !a
            ? e.slideToLoop(e.realIndex, 0, !1, !0)
            : e.slideTo(e.activeIndex, 0, !1, !0)
          : e.slideTo(e.slides.length - 1, 0, !1, !0),
          e.autoplay &&
            e.autoplay.running &&
            e.autoplay.paused &&
            (clearTimeout(e.autoplay.resizeTimeout),
            (e.autoplay.resizeTimeout = setTimeout(() => {
              e.autoplay && e.autoplay.running && e.autoplay.paused && e.autoplay.resume();
            }, 500))),
          (e.allowSlidePrev = i),
          (e.allowSlideNext = r),
          e.params.watchOverflow && s !== e.snapGrid && e.checkOverflow();
      }
      function Ab(e) {
        const t = this;
        t.enabled &&
          (t.allowClick ||
            (t.params.preventClicks && e.preventDefault(),
            t.params.preventClicksPropagation && t.animating && (e.stopPropagation(), e.stopImmediatePropagation())));
      }
      function Ob() {
        const e = this,
          { wrapperEl: t, rtlTranslate: n, enabled: r } = e;
        if (!r) return;
        let i;
        (e.previousTranslate = e.translate),
          e.isHorizontal() ? (e.translate = -t.scrollLeft) : (e.translate = -t.scrollTop),
          0 === e.translate && (e.translate = 0),
          e.updateActiveIndex(),
          e.updateSlidesClasses();
        const s = e.maxTranslate() - e.minTranslate();
        (i = 0 === s ? 0 : (e.translate - e.minTranslate()) / s),
          i !== e.progress && e.updateProgress(n ? -e.translate : e.translate),
          e.emit('setTranslate', e.translate, !1);
      }
      function Lb(e) {
        const t = this;
        vb(t, e.target), t.params.cssMode || ('auto' !== t.params.slidesPerView && !t.params.autoHeight) || t.update();
      }
      function Rb() {
        const e = this;
        e.documentTouchHandlerProceeded ||
          ((e.documentTouchHandlerProceeded = !0), e.params.touchReleaseOnEdges && (e.el.style.touchAction = 'auto'));
      }
      const Mb = (e, t) => {
        const n = Gw(),
          { params: r, el: i, wrapperEl: s, device: a } = e,
          o = !!r.nested,
          l = 'on' === t ? 'addEventListener' : 'removeEventListener',
          c = t;
        n[l]('touchstart', e.onDocumentTouchStart, { passive: !1, capture: o }),
          i[l]('touchstart', e.onTouchStart, { passive: !1 }),
          i[l]('pointerdown', e.onTouchStart, { passive: !1 }),
          n[l]('touchmove', e.onTouchMove, { passive: !1, capture: o }),
          n[l]('pointermove', e.onTouchMove, { passive: !1, capture: o }),
          n[l]('touchend', e.onTouchEnd, { passive: !0 }),
          n[l]('pointerup', e.onTouchEnd, { passive: !0 }),
          n[l]('pointercancel', e.onTouchEnd, { passive: !0 }),
          n[l]('touchcancel', e.onTouchEnd, { passive: !0 }),
          n[l]('pointerout', e.onTouchEnd, { passive: !0 }),
          n[l]('pointerleave', e.onTouchEnd, { passive: !0 }),
          n[l]('contextmenu', e.onTouchEnd, { passive: !0 }),
          (r.preventClicks || r.preventClicksPropagation) && i[l]('click', e.onClick, !0),
          r.cssMode && s[l]('scroll', e.onScroll),
          r.updateOnWindowResize
            ? e[c](a.ios || a.android ? 'resize orientationchange observerUpdate' : 'resize observerUpdate', Db, !0)
            : e[c]('observerUpdate', Db, !0),
          i[l]('load', e.onLoad, { capture: !0 });
      };
      var Fb = {
        attachEvents: function () {
          const e = this,
            { params: t } = e;
          (e.onTouchStart = Cb.bind(e)),
            (e.onTouchMove = Nb.bind(e)),
            (e.onTouchEnd = Pb.bind(e)),
            (e.onDocumentTouchStart = Rb.bind(e)),
            t.cssMode && (e.onScroll = Ob.bind(e)),
            (e.onClick = Ab.bind(e)),
            (e.onLoad = Lb.bind(e)),
            Mb(e, 'on');
        },
        detachEvents: function () {
          Mb(this, 'off');
        },
      };
      const jb = (e, t) => e.grid && t.grid && t.grid.rows > 1;
      var Ub = {
        setBreakpoint: function () {
          const e = this,
            { realIndex: t, initialized: n, params: r, el: i } = e,
            s = r.breakpoints;
          if (!s || (s && 0 === Object.keys(s).length)) return;
          const a = e.getBreakpoint(s, e.params.breakpointsBase, e.el);
          if (!a || e.currentBreakpoint === a) return;
          const o = (a in s ? s[a] : void 0) || e.originalParams,
            l = jb(e, r),
            c = jb(e, o),
            u = e.params.grabCursor,
            d = o.grabCursor,
            h = r.enabled;
          l && !c
            ? (i.classList.remove(
                ''.concat(r.containerModifierClass, 'grid'),
                ''.concat(r.containerModifierClass, 'grid-column'),
              ),
              e.emitContainerClasses())
            : !l &&
              c &&
              (i.classList.add(''.concat(r.containerModifierClass, 'grid')),
              ((o.grid.fill && 'column' === o.grid.fill) || (!o.grid.fill && 'column' === r.grid.fill)) &&
                i.classList.add(''.concat(r.containerModifierClass, 'grid-column')),
              e.emitContainerClasses()),
            u && !d ? e.unsetGrabCursor() : !u && d && e.setGrabCursor(),
            ['navigation', 'pagination', 'scrollbar'].forEach((t) => {
              if ('undefined' === typeof o[t]) return;
              const n = r[t] && r[t].enabled,
                i = o[t] && o[t].enabled;
              n && !i && e[t].disable(), !n && i && e[t].enable();
            });
          const f = o.direction && o.direction !== r.direction,
            p = r.loop && (o.slidesPerView !== r.slidesPerView || f),
            m = r.loop;
          f && n && e.changeDirection(), Xw(e.params, o);
          const g = e.params.enabled,
            v = e.params.loop;
          Object.assign(e, {
            allowTouchMove: e.params.allowTouchMove,
            allowSlideNext: e.params.allowSlideNext,
            allowSlidePrev: e.params.allowSlidePrev,
          }),
            h && !g ? e.disable() : !h && g && e.enable(),
            (e.currentBreakpoint = a),
            e.emit('_beforeBreakpoint', o),
            n &&
              (p
                ? (e.loopDestroy(), e.loopCreate(t), e.updateSlides())
                : !m && v
                  ? (e.loopCreate(t), e.updateSlides())
                  : m && !v && e.loopDestroy()),
            e.emit('breakpoint', o);
        },
        getBreakpoint: function (e, t, n) {
          if ((void 0 === t && (t = 'window'), !e || ('container' === t && !n))) return;
          let r = !1;
          const i = Kw(),
            s = 'window' === t ? i.innerHeight : n.clientHeight,
            a = Object.keys(e).map((e) => {
              if ('string' === typeof e && 0 === e.indexOf('@')) {
                const t = parseFloat(e.substr(1));
                return { value: s * t, point: e };
              }
              return { value: e, point: e };
            });
          a.sort((e, t) => parseInt(e.value, 10) - parseInt(t.value, 10));
          for (let o = 0; o < a.length; o += 1) {
            const { point: e, value: s } = a[o];
            'window' === t ? i.matchMedia('(min-width: '.concat(s, 'px)')).matches && (r = e) : s <= n.clientWidth && (r = e);
          }
          return r || 'max';
        },
      };
      var Vb = {
        addClasses: function () {
          const e = this,
            { classNames: t, params: n, rtl: r, el: i, device: s } = e,
            a = (function (e, t) {
              const n = [];
              return (
                e.forEach((e) => {
                  'object' === typeof e
                    ? Object.keys(e).forEach((r) => {
                        e[r] && n.push(t + r);
                      })
                    : 'string' === typeof e && n.push(t + e);
                }),
                n
              );
            })(
              [
                'initialized',
                n.direction,
                { 'free-mode': e.params.freeMode && n.freeMode.enabled },
                { autoheight: n.autoHeight },
                { rtl: r },
                { grid: n.grid && n.grid.rows > 1 },
                { 'grid-column': n.grid && n.grid.rows > 1 && 'column' === n.grid.fill },
                { android: s.android },
                { ios: s.ios },
                { 'css-mode': n.cssMode },
                { centered: n.cssMode && n.centeredSlides },
                { 'watch-progress': n.watchSlidesProgress },
              ],
              n.containerModifierClass,
            );
          t.push(...a), i.classList.add(...t), e.emitContainerClasses();
        },
        removeClasses: function () {
          const { el: e, classNames: t } = this;
          e.classList.remove(...t), this.emitContainerClasses();
        },
      };
      var zb = {
          checkOverflow: function () {
            const e = this,
              { isLocked: t, params: n } = e,
              { slidesOffsetBefore: r } = n;
            if (r) {
              const t = e.slides.length - 1,
                n = e.slidesGrid[t] + e.slidesSizesGrid[t] + 2 * r;
              e.isLocked = e.size > n;
            } else e.isLocked = 1 === e.snapGrid.length;
            !0 === n.allowSlideNext && (e.allowSlideNext = !e.isLocked),
              !0 === n.allowSlidePrev && (e.allowSlidePrev = !e.isLocked),
              t && t !== e.isLocked && (e.isEnd = !1),
              t !== e.isLocked && e.emit(e.isLocked ? 'lock' : 'unlock');
          },
        },
        Bb = {
          init: !0,
          direction: 'horizontal',
          oneWayMovement: !1,
          swiperElementNodeName: 'SWIPER-CONTAINER',
          touchEventsTarget: 'wrapper',
          initialSlide: 0,
          speed: 300,
          cssMode: !1,
          updateOnWindowResize: !0,
          resizeObserver: !0,
          nested: !1,
          createElements: !1,
          eventsPrefix: 'swiper',
          enabled: !0,
          focusableElements: 'input, select, option, textarea, button, video, label',
          width: null,
          height: null,
          preventInteractionOnTransition: !1,
          userAgent: null,
          url: null,
          edgeSwipeDetection: !1,
          edgeSwipeThreshold: 20,
          autoHeight: !1,
          setWrapperSize: !1,
          virtualTranslate: !1,
          effect: 'slide',
          breakpoints: void 0,
          breakpointsBase: 'window',
          spaceBetween: 0,
          slidesPerView: 1,
          slidesPerGroup: 1,
          slidesPerGroupSkip: 0,
          slidesPerGroupAuto: !1,
          centeredSlides: !1,
          centeredSlidesBounds: !1,
          slidesOffsetBefore: 0,
          slidesOffsetAfter: 0,
          normalizeSlideIndex: !0,
          centerInsufficientSlides: !1,
          watchOverflow: !0,
          roundLengths: !1,
          touchRatio: 1,
          touchAngle: 45,
          simulateTouch: !0,
          shortSwipes: !0,
          longSwipes: !0,
          longSwipesRatio: 0.5,
          longSwipesMs: 300,
          followFinger: !0,
          allowTouchMove: !0,
          threshold: 5,
          touchMoveStopPropagation: !1,
          touchStartPreventDefault: !0,
          touchStartForcePreventDefault: !1,
          touchReleaseOnEdges: !1,
          uniqueNavElements: !0,
          resistance: !0,
          resistanceRatio: 0.85,
          watchSlidesProgress: !1,
          grabCursor: !1,
          preventClicks: !0,
          preventClicksPropagation: !0,
          slideToClickedSlide: !1,
          loop: !1,
          loopAddBlankSlides: !0,
          loopAdditionalSlides: 0,
          loopPreventsSliding: !0,
          rewind: !1,
          allowSlidePrev: !0,
          allowSlideNext: !0,
          swipeHandler: null,
          noSwiping: !0,
          noSwipingClass: 'swiper-no-swiping',
          noSwipingSelector: null,
          passiveListeners: !0,
          maxBackfaceHiddenSlides: 10,
          containerModifierClass: 'swiper-',
          slideClass: 'swiper-slide',
          slideBlankClass: 'swiper-slide-blank',
          slideActiveClass: 'swiper-slide-active',
          slideVisibleClass: 'swiper-slide-visible',
          slideFullyVisibleClass: 'swiper-slide-fully-visible',
          slideNextClass: 'swiper-slide-next',
          slidePrevClass: 'swiper-slide-prev',
          wrapperClass: 'swiper-wrapper',
          lazyPreloaderClass: 'swiper-lazy-preloader',
          lazyPreloadPrevNext: 0,
          runCallbacksOnInit: !0,
          _emitClasses: !1,
        };
      function qb(e, t) {
        return function (n) {
          void 0 === n && (n = {});
          const r = Object.keys(n)[0],
            i = n[r];
          'object' === typeof i && null !== i
            ? (!0 === e[r] && (e[r] = { enabled: !0 }),
              'navigation' === r && e[r] && e[r].enabled && !e[r].prevEl && !e[r].nextEl && (e[r].auto = !0),
              ['pagination', 'scrollbar'].indexOf(r) >= 0 && e[r] && e[r].enabled && !e[r].el && (e[r].auto = !0),
              r in e && 'enabled' in i
                ? ('object' !== typeof e[r] || 'enabled' in e[r] || (e[r].enabled = !0),
                  e[r] || (e[r] = { enabled: !1 }),
                  Xw(t, n))
                : Xw(t, n))
            : Xw(t, n);
        };
      }
      const Gb = {
          eventsEmitter: pb,
          update: bb,
          translate: Sb,
          transition: Tb,
          slide: _b,
          loop: Ib,
          grabCursor: xb,
          events: Fb,
          breakpoints: Ub,
          checkOverflow: zb,
          classes: Vb,
        },
        Hb = {};
      class Kb {
        constructor() {
          let e, t;
          for (var n = arguments.length, r = new Array(n), i = 0; i < n; i++) r[i] = arguments[i];
          1 === r.length && r[0].constructor && 'Object' === Object.prototype.toString.call(r[0]).slice(8, -1)
            ? (t = r[0])
            : ([e, t] = r),
            t || (t = {}),
            (t = Xw({}, t)),
            e && !t.el && (t.el = e);
          const s = Gw();
          if (t.el && 'string' === typeof t.el && s.querySelectorAll(t.el).length > 1) {
            const e = [];
            return (
              s.querySelectorAll(t.el).forEach((n) => {
                const r = Xw({}, t, { el: n });
                e.push(new Kb(r));
              }),
              e
            );
          }
          const a = this;
          (a.__swiper__ = !0),
            (a.support = db()),
            (a.device = hb({ userAgent: t.userAgent })),
            (a.browser = fb()),
            (a.eventsListeners = {}),
            (a.eventsAnyListeners = []),
            (a.modules = [...a.__modules__]),
            t.modules && Array.isArray(t.modules) && a.modules.push(...t.modules);
          const o = {};
          a.modules.forEach((e) => {
            e({
              params: t,
              swiper: a,
              extendParams: qb(t, o),
              on: a.on.bind(a),
              once: a.once.bind(a),
              off: a.off.bind(a),
              emit: a.emit.bind(a),
            });
          });
          const l = Xw({}, Bb, o);
          return (
            (a.params = Xw({}, l, Hb, t)),
            (a.originalParams = Xw({}, a.params)),
            (a.passedParams = Xw({}, t)),
            a.params &&
              a.params.on &&
              Object.keys(a.params.on).forEach((e) => {
                a.on(e, a.params.on[e]);
              }),
            a.params && a.params.onAny && a.onAny(a.params.onAny),
            Object.assign(a, {
              enabled: a.params.enabled,
              el: e,
              classNames: [],
              slides: [],
              slidesGrid: [],
              snapGrid: [],
              slidesSizesGrid: [],
              isHorizontal: () => 'horizontal' === a.params.direction,
              isVertical: () => 'vertical' === a.params.direction,
              activeIndex: 0,
              realIndex: 0,
              isBeginning: !0,
              isEnd: !1,
              translate: 0,
              previousTranslate: 0,
              progress: 0,
              velocity: 0,
              animating: !1,
              cssOverflowAdjustment() {
                return Math.trunc(this.translate / 2 ** 23) * 2 ** 23;
              },
              allowSlideNext: a.params.allowSlideNext,
              allowSlidePrev: a.params.allowSlidePrev,
              touchEventsData: {
                isTouched: void 0,
                isMoved: void 0,
                allowTouchCallbacks: void 0,
                touchStartTime: void 0,
                isScrolling: void 0,
                currentTranslate: void 0,
                startTranslate: void 0,
                allowThresholdMove: void 0,
                focusableElements: a.params.focusableElements,
                lastClickTime: 0,
                clickTimeout: void 0,
                velocities: [],
                allowMomentumBounce: void 0,
                startMoving: void 0,
                pointerId: null,
                touchId: null,
              },
              allowClick: !0,
              allowTouchMove: a.params.allowTouchMove,
              touches: { startX: 0, startY: 0, currentX: 0, currentY: 0, diff: 0 },
              imagesToLoad: [],
              imagesLoaded: 0,
            }),
            a.emit('_swiper'),
            a.params.init && a.init(),
            a
          );
        }
        getDirectionLabel(e) {
          return this.isHorizontal()
            ? e
            : {
                width: 'height',
                'margin-top': 'margin-left',
                'margin-bottom ': 'margin-right',
                'margin-left': 'margin-top',
                'margin-right': 'margin-bottom',
                'padding-left': 'padding-top',
                'padding-right': 'padding-bottom',
                marginRight: 'marginBottom',
              }[e];
        }
        getSlideIndex(e) {
          const { slidesEl: t, params: n } = this,
            r = sb(tb(t, '.'.concat(n.slideClass, ', swiper-slide'))[0]);
          return sb(e) - r;
        }
        getSlideIndexByData(e) {
          return this.getSlideIndex(this.slides.filter((t) => 1 * t.getAttribute('data-swiper-slide-index') === e)[0]);
        }
        recalcSlides() {
          const { slidesEl: e, params: t } = this;
          this.slides = tb(e, '.'.concat(t.slideClass, ', swiper-slide'));
        }
        enable() {
          const e = this;
          e.enabled || ((e.enabled = !0), e.params.grabCursor && e.setGrabCursor(), e.emit('enable'));
        }
        disable() {
          const e = this;
          e.enabled && ((e.enabled = !1), e.params.grabCursor && e.unsetGrabCursor(), e.emit('disable'));
        }
        setProgress(e, t) {
          const n = this;
          e = Math.min(Math.max(e, 0), 1);
          const r = n.minTranslate(),
            i = (n.maxTranslate() - r) * e + r;
          n.translateTo(i, 'undefined' === typeof t ? 0 : t), n.updateActiveIndex(), n.updateSlidesClasses();
        }
        emitContainerClasses() {
          const e = this;
          if (!e.params._emitClasses || !e.el) return;
          const t = e.el.className
            .split(' ')
            .filter((t) => 0 === t.indexOf('swiper') || 0 === t.indexOf(e.params.containerModifierClass));
          e.emit('_containerClasses', t.join(' '));
        }
        getSlideClasses(e) {
          const t = this;
          return t.destroyed
            ? ''
            : e.className
                .split(' ')
                .filter((e) => 0 === e.indexOf('swiper-slide') || 0 === e.indexOf(t.params.slideClass))
                .join(' ');
        }
        emitSlidesClasses() {
          const e = this;
          if (!e.params._emitClasses || !e.el) return;
          const t = [];
          e.slides.forEach((n) => {
            const r = e.getSlideClasses(n);
            t.push({ slideEl: n, classNames: r }), e.emit('_slideClass', n, r);
          }),
            e.emit('_slideClasses', t);
        }
        slidesPerViewDynamic(e, t) {
          void 0 === e && (e = 'current'), void 0 === t && (t = !1);
          const { params: n, slides: r, slidesGrid: i, slidesSizesGrid: s, size: a, activeIndex: o } = this;
          let l = 1;
          if ('number' === typeof n.slidesPerView) return n.slidesPerView;
          if (n.centeredSlides) {
            let e,
              t = r[o] ? Math.ceil(r[o].swiperSlideSize) : 0;
            for (let n = o + 1; n < r.length; n += 1)
              r[n] && !e && ((t += Math.ceil(r[n].swiperSlideSize)), (l += 1), t > a && (e = !0));
            for (let n = o - 1; n >= 0; n -= 1) r[n] && !e && ((t += r[n].swiperSlideSize), (l += 1), t > a && (e = !0));
          } else if ('current' === e)
            for (let c = o + 1; c < r.length; c += 1) {
              (t ? i[c] + s[c] - i[o] < a : i[c] - i[o] < a) && (l += 1);
            }
          else
            for (let c = o - 1; c >= 0; c -= 1) {
              i[o] - i[c] < a && (l += 1);
            }
          return l;
        }
        update() {
          const e = this;
          if (!e || e.destroyed) return;
          const { snapGrid: t, params: n } = e;
          function r() {
            const t = e.rtlTranslate ? -1 * e.translate : e.translate,
              n = Math.min(Math.max(t, e.maxTranslate()), e.minTranslate());
            e.setTranslate(n), e.updateActiveIndex(), e.updateSlidesClasses();
          }
          let i;
          if (
            (n.breakpoints && e.setBreakpoint(),
            [...e.el.querySelectorAll('[loading="lazy"]')].forEach((t) => {
              t.complete && vb(e, t);
            }),
            e.updateSize(),
            e.updateSlides(),
            e.updateProgress(),
            e.updateSlidesClasses(),
            n.freeMode && n.freeMode.enabled && !n.cssMode)
          )
            r(), n.autoHeight && e.updateAutoHeight();
          else {
            if (('auto' === n.slidesPerView || n.slidesPerView > 1) && e.isEnd && !n.centeredSlides) {
              const t = e.virtual && n.virtual.enabled ? e.virtual.slides : e.slides;
              i = e.slideTo(t.length - 1, 0, !1, !0);
            } else i = e.slideTo(e.activeIndex, 0, !1, !0);
            i || r();
          }
          n.watchOverflow && t !== e.snapGrid && e.checkOverflow(), e.emit('update');
        }
        changeDirection(e, t) {
          void 0 === t && (t = !0);
          const n = this,
            r = n.params.direction;
          return (
            e || (e = 'horizontal' === r ? 'vertical' : 'horizontal'),
            e === r ||
              ('horizontal' !== e && 'vertical' !== e) ||
              (n.el.classList.remove(''.concat(n.params.containerModifierClass).concat(r)),
              n.el.classList.add(''.concat(n.params.containerModifierClass).concat(e)),
              n.emitContainerClasses(),
              (n.params.direction = e),
              n.slides.forEach((t) => {
                'vertical' === e ? (t.style.width = '') : (t.style.height = '');
              }),
              n.emit('changeDirection'),
              t && n.update()),
            n
          );
        }
        changeLanguageDirection(e) {
          const t = this;
          (t.rtl && 'rtl' === e) ||
            (!t.rtl && 'ltr' === e) ||
            ((t.rtl = 'rtl' === e),
            (t.rtlTranslate = 'horizontal' === t.params.direction && t.rtl),
            t.rtl
              ? (t.el.classList.add(''.concat(t.params.containerModifierClass, 'rtl')), (t.el.dir = 'rtl'))
              : (t.el.classList.remove(''.concat(t.params.containerModifierClass, 'rtl')), (t.el.dir = 'ltr')),
            t.update());
        }
        mount(e) {
          const t = this;
          if (t.mounted) return !0;
          let n = e || t.params.el;
          if (('string' === typeof n && (n = document.querySelector(n)), !n)) return !1;
          (n.swiper = t),
            n.parentNode &&
              n.parentNode.host &&
              n.parentNode.host.nodeName === t.params.swiperElementNodeName.toUpperCase() &&
              (t.isElement = !0);
          const r = () => '.'.concat((t.params.wrapperClass || '').trim().split(' ').join('.'));
          let i = (() => {
            if (n && n.shadowRoot && n.shadowRoot.querySelector) {
              return n.shadowRoot.querySelector(r());
            }
            return tb(n, r())[0];
          })();
          return (
            !i &&
              t.params.createElements &&
              ((i = rb('div', t.params.wrapperClass)),
              n.append(i),
              tb(n, '.'.concat(t.params.slideClass)).forEach((e) => {
                i.append(e);
              })),
            Object.assign(t, {
              el: n,
              wrapperEl: i,
              slidesEl: t.isElement && !n.parentNode.host.slideSlots ? n.parentNode.host : i,
              hostEl: t.isElement ? n.parentNode.host : n,
              mounted: !0,
              rtl: 'rtl' === n.dir.toLowerCase() || 'rtl' === ib(n, 'direction'),
              rtlTranslate:
                'horizontal' === t.params.direction && ('rtl' === n.dir.toLowerCase() || 'rtl' === ib(n, 'direction')),
              wrongRTL: '-webkit-box' === ib(i, 'display'),
            }),
            !0
          );
        }
        init(e) {
          const t = this;
          if (t.initialized) return t;
          if (!1 === t.mount(e)) return t;
          t.emit('beforeInit'),
            t.params.breakpoints && t.setBreakpoint(),
            t.addClasses(),
            t.updateSize(),
            t.updateSlides(),
            t.params.watchOverflow && t.checkOverflow(),
            t.params.grabCursor && t.enabled && t.setGrabCursor(),
            t.params.loop && t.virtual && t.params.virtual.enabled
              ? t.slideTo(t.params.initialSlide + t.virtual.slidesBefore, 0, t.params.runCallbacksOnInit, !1, !0)
              : t.slideTo(t.params.initialSlide, 0, t.params.runCallbacksOnInit, !1, !0),
            t.params.loop && t.loopCreate(),
            t.attachEvents();
          const n = [...t.el.querySelectorAll('[loading="lazy"]')];
          return (
            t.isElement && n.push(...t.hostEl.querySelectorAll('[loading="lazy"]')),
            n.forEach((e) => {
              e.complete
                ? vb(t, e)
                : e.addEventListener('load', (e) => {
                    vb(t, e.target);
                  });
            }),
            wb(t),
            (t.initialized = !0),
            wb(t),
            t.emit('init'),
            t.emit('afterInit'),
            t
          );
        }
        destroy(e, t) {
          void 0 === e && (e = !0), void 0 === t && (t = !0);
          const n = this,
            { params: r, el: i, wrapperEl: s, slides: a } = n;
          return (
            'undefined' === typeof n.params ||
              n.destroyed ||
              (n.emit('beforeDestroy'),
              (n.initialized = !1),
              n.detachEvents(),
              r.loop && n.loopDestroy(),
              t &&
                (n.removeClasses(),
                i.removeAttribute('style'),
                s.removeAttribute('style'),
                a &&
                  a.length &&
                  a.forEach((e) => {
                    e.classList.remove(
                      r.slideVisibleClass,
                      r.slideFullyVisibleClass,
                      r.slideActiveClass,
                      r.slideNextClass,
                      r.slidePrevClass,
                    ),
                      e.removeAttribute('style'),
                      e.removeAttribute('data-swiper-slide-index');
                  })),
              n.emit('destroy'),
              Object.keys(n.eventsListeners).forEach((e) => {
                n.off(e);
              }),
              !1 !== e &&
                ((n.el.swiper = null),
                (function (e) {
                  const t = e;
                  Object.keys(t).forEach((e) => {
                    try {
                      t[e] = null;
                    } catch (Wy) {}
                    try {
                      delete t[e];
                    } catch (Wy) {}
                  });
                })(n)),
              (n.destroyed = !0)),
            null
          );
        }
        static extendDefaults(e) {
          Xw(Hb, e);
        }
        static get extendedDefaults() {
          return Hb;
        }
        static get defaults() {
          return Bb;
        }
        static installModule(e) {
          Kb.prototype.__modules__ || (Kb.prototype.__modules__ = []);
          const t = Kb.prototype.__modules__;
          'function' === typeof e && t.indexOf(e) < 0 && t.push(e);
        }
        static use(e) {
          return Array.isArray(e) ? (e.forEach((e) => Kb.installModule(e)), Kb) : (Kb.installModule(e), Kb);
        }
      }
      Object.keys(Gb).forEach((e) => {
        Object.keys(Gb[e]).forEach((t) => {
          Kb.prototype[t] = Gb[e][t];
        });
      }),
        Kb.use([
          function (e) {
            let { swiper: t, on: n, emit: r } = e;
            const i = Kw();
            let s = null,
              a = null;
            const o = () => {
                t && !t.destroyed && t.initialized && (r('beforeResize'), r('resize'));
              },
              l = () => {
                t && !t.destroyed && t.initialized && r('orientationchange');
              };
            n('init', () => {
              t.params.resizeObserver && 'undefined' !== typeof i.ResizeObserver
                ? t &&
                  !t.destroyed &&
                  t.initialized &&
                  ((s = new ResizeObserver((e) => {
                    a = i.requestAnimationFrame(() => {
                      const { width: n, height: r } = t;
                      let i = n,
                        s = r;
                      e.forEach((e) => {
                        let { contentBoxSize: n, contentRect: r, target: a } = e;
                        (a && a !== t.el) ||
                          ((i = r ? r.width : (n[0] || n).inlineSize), (s = r ? r.height : (n[0] || n).blockSize));
                      }),
                        (i === n && s === r) || o();
                    });
                  })),
                  s.observe(t.el))
                : (i.addEventListener('resize', o), i.addEventListener('orientationchange', l));
            }),
              n('destroy', () => {
                a && i.cancelAnimationFrame(a),
                  s && s.unobserve && t.el && (s.unobserve(t.el), (s = null)),
                  i.removeEventListener('resize', o),
                  i.removeEventListener('orientationchange', l);
              });
          },
          function (e) {
            let { swiper: t, extendParams: n, on: r, emit: i } = e;
            const s = [],
              a = Kw(),
              o = function (e, n) {
                void 0 === n && (n = {});
                const r = new (a.MutationObserver || a.WebkitMutationObserver)((e) => {
                  if (t.__preventObserver__) return;
                  if (1 === e.length) return void i('observerUpdate', e[0]);
                  const n = function () {
                    i('observerUpdate', e[0]);
                  };
                  a.requestAnimationFrame ? a.requestAnimationFrame(n) : a.setTimeout(n, 0);
                });
                r.observe(e, {
                  attributes: 'undefined' === typeof n.attributes || n.attributes,
                  childList: 'undefined' === typeof n.childList || n.childList,
                  characterData: 'undefined' === typeof n.characterData || n.characterData,
                }),
                  s.push(r);
              };
            n({ observer: !1, observeParents: !1, observeSlideChildren: !1 }),
              r('init', () => {
                if (t.params.observer) {
                  if (t.params.observeParents) {
                    const e = (function (e, t) {
                      const n = [];
                      let r = e.parentElement;
                      for (; r; ) t ? r.matches(t) && n.push(r) : n.push(r), (r = r.parentElement);
                      return n;
                    })(t.hostEl);
                    for (let t = 0; t < e.length; t += 1) o(e[t]);
                  }
                  o(t.hostEl, { childList: t.params.observeSlideChildren }), o(t.wrapperEl, { attributes: !1 });
                }
              }),
              r('destroy', () => {
                s.forEach((e) => {
                  e.disconnect();
                }),
                  s.splice(0, s.length);
              });
          },
        ]);
      const Wb = [
        'eventsPrefix',
        'injectStyles',
        'injectStylesUrls',
        'modules',
        'init',
        '_direction',
        'oneWayMovement',
        'swiperElementNodeName',
        'touchEventsTarget',
        'initialSlide',
        '_speed',
        'cssMode',
        'updateOnWindowResize',
        'resizeObserver',
        'nested',
        'focusableElements',
        '_enabled',
        '_width',
        '_height',
        'preventInteractionOnTransition',
        'userAgent',
        'url',
        '_edgeSwipeDetection',
        '_edgeSwipeThreshold',
        '_freeMode',
        '_autoHeight',
        'setWrapperSize',
        'virtualTranslate',
        '_effect',
        'breakpoints',
        'breakpointsBase',
        '_spaceBetween',
        '_slidesPerView',
        'maxBackfaceHiddenSlides',
        '_grid',
        '_slidesPerGroup',
        '_slidesPerGroupSkip',
        '_slidesPerGroupAuto',
        '_centeredSlides',
        '_centeredSlidesBounds',
        '_slidesOffsetBefore',
        '_slidesOffsetAfter',
        'normalizeSlideIndex',
        '_centerInsufficientSlides',
        '_watchOverflow',
        'roundLengths',
        'touchRatio',
        'touchAngle',
        'simulateTouch',
        '_shortSwipes',
        '_longSwipes',
        'longSwipesRatio',
        'longSwipesMs',
        '_followFinger',
        'allowTouchMove',
        '_threshold',
        'touchMoveStopPropagation',
        'touchStartPreventDefault',
        'touchStartForcePreventDefault',
        'touchReleaseOnEdges',
        'uniqueNavElements',
        '_resistance',
        '_resistanceRatio',
        '_watchSlidesProgress',
        '_grabCursor',
        'preventClicks',
        'preventClicksPropagation',
        '_slideToClickedSlide',
        '_loop',
        'loopAdditionalSlides',
        'loopAddBlankSlides',
        'loopPreventsSliding',
        '_rewind',
        '_allowSlidePrev',
        '_allowSlideNext',
        '_swipeHandler',
        '_noSwiping',
        'noSwipingClass',
        'noSwipingSelector',
        'passiveListeners',
        'containerModifierClass',
        'slideClass',
        'slideActiveClass',
        'slideVisibleClass',
        'slideFullyVisibleClass',
        'slideNextClass',
        'slidePrevClass',
        'slideBlankClass',
        'wrapperClass',
        'lazyPreloaderClass',
        'lazyPreloadPrevNext',
        'runCallbacksOnInit',
        'observer',
        'observeParents',
        'observeSlideChildren',
        'a11y',
        '_autoplay',
        '_controller',
        'coverflowEffect',
        'cubeEffect',
        'fadeEffect',
        'flipEffect',
        'creativeEffect',
        'cardsEffect',
        'hashNavigation',
        'history',
        'keyboard',
        'mousewheel',
        '_navigation',
        '_pagination',
        'parallax',
        '_scrollbar',
        '_thumbs',
        'virtual',
        'zoom',
        'control',
      ];
      function Qb(e) {
        return (
          'object' === typeof e &&
          null !== e &&
          e.constructor &&
          'Object' === Object.prototype.toString.call(e).slice(8, -1) &&
          !e.__swiper__
        );
      }
      function Yb(e, t) {
        const n = ['__proto__', 'constructor', 'prototype'];
        Object.keys(t)
          .filter((e) => n.indexOf(e) < 0)
          .forEach((n) => {
            'undefined' === typeof e[n]
              ? (e[n] = t[n])
              : Qb(t[n]) && Qb(e[n]) && Object.keys(t[n]).length > 0
                ? t[n].__swiper__
                  ? (e[n] = t[n])
                  : Yb(e[n], t[n])
                : (e[n] = t[n]);
          });
      }
      function Jb(e) {
        return (
          void 0 === e && (e = {}),
          e.navigation && 'undefined' === typeof e.navigation.nextEl && 'undefined' === typeof e.navigation.prevEl
        );
      }
      function Xb(e) {
        return void 0 === e && (e = {}), e.pagination && 'undefined' === typeof e.pagination.el;
      }
      function $b(e) {
        return void 0 === e && (e = {}), e.scrollbar && 'undefined' === typeof e.scrollbar.el;
      }
      function Zb(e) {
        void 0 === e && (e = '');
        const t = e
            .split(' ')
            .map((e) => e.trim())
            .filter((e) => !!e),
          n = [];
        return (
          t.forEach((e) => {
            n.indexOf(e) < 0 && n.push(e);
          }),
          n.join(' ')
        );
      }
      function eS(e) {
        return void 0 === e && (e = ''), e ? (e.includes('swiper-wrapper') ? e : 'swiper-wrapper '.concat(e)) : 'swiper-wrapper';
      }
      function tS() {
        return (
          (tS = Object.assign
            ? Object.assign.bind()
            : function (e) {
                for (var t = 1; t < arguments.length; t++) {
                  var n = arguments[t];
                  for (var r in n) Object.prototype.hasOwnProperty.call(n, r) && (e[r] = n[r]);
                }
                return e;
              }),
          tS.apply(this, arguments)
        );
      }
      function nS(e) {
        return e.type && e.type.displayName && e.type.displayName.includes('SwiperSlide');
      }
      function rS(e) {
        const n = [];
        return (
          t.Children.toArray(e).forEach((e) => {
            nS(e) ? n.push(e) : e.props && e.props.children && rS(e.props.children).forEach((e) => n.push(e));
          }),
          n
        );
      }
      function iS(e) {
        const n = [],
          r = { 'container-start': [], 'container-end': [], 'wrapper-start': [], 'wrapper-end': [] };
        return (
          t.Children.toArray(e).forEach((e) => {
            if (nS(e)) n.push(e);
            else if (e.props && e.props.slot && r[e.props.slot]) r[e.props.slot].push(e);
            else if (e.props && e.props.children) {
              const t = rS(e.props.children);
              t.length > 0 ? t.forEach((e) => n.push(e)) : r['container-end'].push(e);
            } else r['container-end'].push(e);
          }),
          { slides: n, slots: r }
        );
      }
      function sS(e, n) {
        return 'undefined' === typeof window ? (0, t.useEffect)(e, n) : (0, t.useLayoutEffect)(e, n);
      }
      const aS = (0, t.createContext)(null),
        oS = (0, t.createContext)(null),
        lS = (0, t.forwardRef)(function (e, n) {
          let { className: r, tag: i = 'div', wrapperTag: s = 'div', children: a, onSwiper: o, ...l } = void 0 === e ? {} : e,
            c = !1;
          const [u, d] = (0, t.useState)('swiper'),
            [h, f] = (0, t.useState)(null),
            [p, m] = (0, t.useState)(!1),
            g = (0, t.useRef)(!1),
            v = (0, t.useRef)(null),
            y = (0, t.useRef)(null),
            w = (0, t.useRef)(null),
            b = (0, t.useRef)(null),
            S = (0, t.useRef)(null),
            E = (0, t.useRef)(null),
            T = (0, t.useRef)(null),
            _ = (0, t.useRef)(null),
            {
              params: I,
              passedParams: x,
              rest: k,
              events: C,
            } = (function (e, t) {
              void 0 === e && (e = {}), void 0 === t && (t = !0);
              const n = { on: {} },
                r = {},
                i = {};
              Yb(n, Bb), (n._emitClasses = !0), (n.init = !1);
              const s = {},
                a = Wb.map((e) => e.replace(/_/, '')),
                o = Object.assign({}, e);
              return (
                Object.keys(o).forEach((o) => {
                  'undefined' !== typeof e[o] &&
                    (a.indexOf(o) >= 0
                      ? Qb(e[o])
                        ? ((n[o] = {}), (i[o] = {}), Yb(n[o], e[o]), Yb(i[o], e[o]))
                        : ((n[o] = e[o]), (i[o] = e[o]))
                      : 0 === o.search(/on[A-Z]/) && 'function' === typeof e[o]
                        ? t
                          ? (r[''.concat(o[2].toLowerCase()).concat(o.substr(3))] = e[o])
                          : (n.on[''.concat(o[2].toLowerCase()).concat(o.substr(3))] = e[o])
                        : (s[o] = e[o]));
                }),
                ['navigation', 'pagination', 'scrollbar'].forEach((e) => {
                  !0 === n[e] && (n[e] = {}), !1 === n[e] && delete n[e];
                }),
                { params: n, passedParams: i, rest: s, events: r }
              );
            })(l),
            { slides: N, slots: P } = iS(a),
            D = () => {
              m(!p);
            };
          Object.assign(I.on, {
            _containerClasses(e, t) {
              d(t);
            },
          });
          const A = () => {
            Object.assign(I.on, C), (c = !0);
            const e = { ...I };
            if ((delete e.wrapperClass, (y.current = new Kb(e)), y.current.virtual && y.current.params.virtual.enabled)) {
              y.current.virtual.slides = N;
              const e = { cache: !1, slides: N, renderExternal: f, renderExternalUpdate: !1 };
              Yb(y.current.params.virtual, e), Yb(y.current.originalParams.virtual, e);
            }
          };
          v.current || A(), y.current && y.current.on('_beforeBreakpoint', D);
          return (
            (0, t.useEffect)(() => () => {
              y.current && y.current.off('_beforeBreakpoint', D);
            }),
            (0, t.useEffect)(() => {
              !g.current && y.current && (y.current.emitSlidesClasses(), (g.current = !0));
            }),
            sS(() => {
              if ((n && (n.current = v.current), v.current))
                return (
                  y.current.destroyed && A(),
                  (function (e, t) {
                    let { el: n, nextEl: r, prevEl: i, paginationEl: s, scrollbarEl: a, swiper: o } = e;
                    Jb(t) &&
                      r &&
                      i &&
                      ((o.params.navigation.nextEl = r),
                      (o.originalParams.navigation.nextEl = r),
                      (o.params.navigation.prevEl = i),
                      (o.originalParams.navigation.prevEl = i)),
                      Xb(t) && s && ((o.params.pagination.el = s), (o.originalParams.pagination.el = s)),
                      $b(t) && a && ((o.params.scrollbar.el = a), (o.originalParams.scrollbar.el = a)),
                      o.init(n);
                  })(
                    {
                      el: v.current,
                      nextEl: S.current,
                      prevEl: E.current,
                      paginationEl: T.current,
                      scrollbarEl: _.current,
                      swiper: y.current,
                    },
                    I,
                  ),
                  o && !y.current.destroyed && o(y.current),
                  () => {
                    y.current && !y.current.destroyed && y.current.destroy(!0, !1);
                  }
                );
            }, []),
            sS(() => {
              !c &&
                C &&
                y.current &&
                Object.keys(C).forEach((e) => {
                  y.current.on(e, C[e]);
                });
              const e = (function (e, t, n, r, i) {
                const s = [];
                if (!t) return s;
                const a = (e) => {
                  s.indexOf(e) < 0 && s.push(e);
                };
                if (n && r) {
                  const e = r.map(i),
                    t = n.map(i);
                  e.join('') !== t.join('') && a('children'), r.length !== n.length && a('children');
                }
                return (
                  Wb.filter((e) => '_' === e[0])
                    .map((e) => e.replace(/_/, ''))
                    .forEach((n) => {
                      if (n in e && n in t)
                        if (Qb(e[n]) && Qb(t[n])) {
                          const r = Object.keys(e[n]),
                            i = Object.keys(t[n]);
                          r.length !== i.length
                            ? a(n)
                            : (r.forEach((r) => {
                                e[n][r] !== t[n][r] && a(n);
                              }),
                              i.forEach((r) => {
                                e[n][r] !== t[n][r] && a(n);
                              }));
                        } else e[n] !== t[n] && a(n);
                    }),
                  s
                );
              })(x, w.current, N, b.current, (e) => e.key);
              return (
                (w.current = x),
                (b.current = N),
                e.length &&
                  y.current &&
                  !y.current.destroyed &&
                  (function (e) {
                    let {
                      swiper: t,
                      slides: n,
                      passedParams: r,
                      changedParams: i,
                      nextEl: s,
                      prevEl: a,
                      scrollbarEl: o,
                      paginationEl: l,
                    } = e;
                    const c = i.filter((e) => 'children' !== e && 'direction' !== e && 'wrapperClass' !== e),
                      { params: u, pagination: d, navigation: h, scrollbar: f, virtual: p, thumbs: m } = t;
                    let g, v, y, w, b, S, E, T;
                    i.includes('thumbs') && r.thumbs && r.thumbs.swiper && u.thumbs && !u.thumbs.swiper && (g = !0),
                      i.includes('controller') &&
                        r.controller &&
                        r.controller.control &&
                        u.controller &&
                        !u.controller.control &&
                        (v = !0),
                      i.includes('pagination') &&
                        r.pagination &&
                        (r.pagination.el || l) &&
                        (u.pagination || !1 === u.pagination) &&
                        d &&
                        !d.el &&
                        (y = !0),
                      i.includes('scrollbar') &&
                        r.scrollbar &&
                        (r.scrollbar.el || o) &&
                        (u.scrollbar || !1 === u.scrollbar) &&
                        f &&
                        !f.el &&
                        (w = !0),
                      i.includes('navigation') &&
                        r.navigation &&
                        (r.navigation.prevEl || a) &&
                        (r.navigation.nextEl || s) &&
                        (u.navigation || !1 === u.navigation) &&
                        h &&
                        !h.prevEl &&
                        !h.nextEl &&
                        (b = !0);
                    const _ = (e) => {
                      t[e] &&
                        (t[e].destroy(),
                        'navigation' === e
                          ? (t.isElement && (t[e].prevEl.remove(), t[e].nextEl.remove()),
                            (u[e].prevEl = void 0),
                            (u[e].nextEl = void 0),
                            (t[e].prevEl = void 0),
                            (t[e].nextEl = void 0))
                          : (t.isElement && t[e].el.remove(), (u[e].el = void 0), (t[e].el = void 0)));
                    };
                    i.includes('loop') && t.isElement && (u.loop && !r.loop ? (S = !0) : !u.loop && r.loop ? (E = !0) : (T = !0)),
                      c.forEach((e) => {
                        if (Qb(u[e]) && Qb(r[e]))
                          Object.assign(u[e], r[e]),
                            ('navigation' !== e && 'pagination' !== e && 'scrollbar' !== e) ||
                              !('enabled' in r[e]) ||
                              r[e].enabled ||
                              _(e);
                        else {
                          const t = r[e];
                          (!0 !== t && !1 !== t) || ('navigation' !== e && 'pagination' !== e && 'scrollbar' !== e)
                            ? (u[e] = r[e])
                            : !1 === t && _(e);
                        }
                      }),
                      c.includes('controller') &&
                        !v &&
                        t.controller &&
                        t.controller.control &&
                        u.controller &&
                        u.controller.control &&
                        (t.controller.control = u.controller.control),
                      i.includes('children') && n && p && u.virtual.enabled
                        ? ((p.slides = n), p.update(!0))
                        : i.includes('virtual') && p && u.virtual.enabled && (n && (p.slides = n), p.update(!0)),
                      i.includes('children') && n && u.loop && (T = !0),
                      g && m.init() && m.update(!0);
                    v && (t.controller.control = u.controller.control),
                      y &&
                        (!t.isElement ||
                          (l && 'string' !== typeof l) ||
                          ((l = document.createElement('div')),
                          l.classList.add('swiper-pagination'),
                          l.part.add('pagination'),
                          t.el.appendChild(l)),
                        l && (u.pagination.el = l),
                        d.init(),
                        d.render(),
                        d.update()),
                      w &&
                        (!t.isElement ||
                          (o && 'string' !== typeof o) ||
                          ((o = document.createElement('div')),
                          o.classList.add('swiper-scrollbar'),
                          o.part.add('scrollbar'),
                          t.el.appendChild(o)),
                        o && (u.scrollbar.el = o),
                        f.init(),
                        f.updateSize(),
                        f.setTranslate()),
                      b &&
                        (t.isElement &&
                          ((s && 'string' !== typeof s) ||
                            ((s = document.createElement('div')),
                            s.classList.add('swiper-button-next'),
                            (s.innerHTML = t.hostEl.constructor.nextButtonSvg),
                            s.part.add('button-next'),
                            t.el.appendChild(s)),
                          (a && 'string' !== typeof a) ||
                            ((a = document.createElement('div')),
                            a.classList.add('swiper-button-prev'),
                            (a.innerHTML = t.hostEl.constructor.prevButtonSvg),
                            a.part.add('button-prev'),
                            t.el.appendChild(a))),
                        s && (u.navigation.nextEl = s),
                        a && (u.navigation.prevEl = a),
                        h.init(),
                        h.update()),
                      i.includes('allowSlideNext') && (t.allowSlideNext = r.allowSlideNext),
                      i.includes('allowSlidePrev') && (t.allowSlidePrev = r.allowSlidePrev),
                      i.includes('direction') && t.changeDirection(r.direction, !1),
                      (S || T) && t.loopDestroy(),
                      (E || T) && t.loopCreate(),
                      t.update();
                  })({
                    swiper: y.current,
                    slides: N,
                    passedParams: x,
                    changedParams: e,
                    nextEl: S.current,
                    prevEl: E.current,
                    scrollbarEl: _.current,
                    paginationEl: T.current,
                  }),
                () => {
                  C &&
                    y.current &&
                    Object.keys(C).forEach((e) => {
                      y.current.off(e, C[e]);
                    });
                }
              );
            }),
            sS(() => {
              ((e) => {
                !e ||
                  e.destroyed ||
                  !e.params.virtual ||
                  (e.params.virtual && !e.params.virtual.enabled) ||
                  (e.updateSlides(),
                  e.updateProgress(),
                  e.updateSlidesClasses(),
                  e.parallax && e.params.parallax && e.params.parallax.enabled && e.parallax.setTranslate());
              })(y.current);
            }, [h]),
            t.createElement(
              i,
              tS({ ref: v, className: Zb(''.concat(u).concat(r ? ' '.concat(r) : '')) }, k),
              t.createElement(
                oS.Provider,
                { value: y.current },
                P['container-start'],
                t.createElement(
                  s,
                  { className: eS(I.wrapperClass) },
                  P['wrapper-start'],
                  I.virtual
                    ? (function (e, n, r) {
                        if (!r) return null;
                        const i = (e) => {
                            let t = e;
                            return e < 0 ? (t = n.length + e) : t >= n.length && (t -= n.length), t;
                          },
                          s = e.isHorizontal()
                            ? { [e.rtlTranslate ? 'right' : 'left']: ''.concat(r.offset, 'px') }
                            : { top: ''.concat(r.offset, 'px') },
                          { from: a, to: o } = r,
                          l = e.params.loop ? -n.length : 0,
                          c = e.params.loop ? 2 * n.length : n.length,
                          u = [];
                        for (let t = l; t < c; t += 1) t >= a && t <= o && u.push(n[i(t)]);
                        return u.map((n, r) =>
                          t.cloneElement(n, { swiper: e, style: s, key: n.props.virtualIndex || n.key || 'slide-'.concat(r) }),
                        );
                      })(y.current, N, h)
                    : N.map((e, n) => t.cloneElement(e, { swiper: y.current, swiperSlideIndex: n })),
                  P['wrapper-end'],
                ),
                Jb(I) &&
                  t.createElement(
                    t.Fragment,
                    null,
                    t.createElement('div', { ref: E, className: 'swiper-button-prev' }),
                    t.createElement('div', { ref: S, className: 'swiper-button-next' }),
                  ),
                $b(I) && t.createElement('div', { ref: _, className: 'swiper-scrollbar' }),
                Xb(I) && t.createElement('div', { ref: T, className: 'swiper-pagination' }),
                P['container-end'],
              ),
            )
          );
        });
      lS.displayName = 'Swiper';
      const cS = (0, t.forwardRef)(function (e, n) {
        let {
          tag: r = 'div',
          children: i,
          className: s = '',
          swiper: a,
          zoom: o,
          lazy: l,
          virtualIndex: c,
          swiperSlideIndex: u,
          ...d
        } = void 0 === e ? {} : e;
        const h = (0, t.useRef)(null),
          [f, p] = (0, t.useState)('swiper-slide'),
          [m, g] = (0, t.useState)(!1);
        function v(e, t, n) {
          t === h.current && p(n);
        }
        sS(() => {
          if (('undefined' !== typeof u && (h.current.swiperSlideIndex = u), n && (n.current = h.current), h.current && a)) {
            if (!a.destroyed)
              return (
                a.on('_slideClass', v),
                () => {
                  a && a.off('_slideClass', v);
                }
              );
            'swiper-slide' !== f && p('swiper-slide');
          }
        }),
          sS(() => {
            a && h.current && !a.destroyed && p(a.getSlideClasses(h.current));
          }, [a]);
        const y = {
            isActive: f.indexOf('swiper-slide-active') >= 0,
            isVisible: f.indexOf('swiper-slide-visible') >= 0,
            isPrev: f.indexOf('swiper-slide-prev') >= 0,
            isNext: f.indexOf('swiper-slide-next') >= 0,
          },
          w = () => ('function' === typeof i ? i(y) : i);
        return t.createElement(
          r,
          tS(
            {
              ref: h,
              className: Zb(''.concat(f).concat(s ? ' '.concat(s) : '')),
              'data-swiper-slide-index': c,
              onLoad: () => {
                g(!0);
              },
            },
            d,
          ),
          o &&
            t.createElement(
              aS.Provider,
              { value: y },
              t.createElement(
                'div',
                { className: 'swiper-zoom-container', 'data-swiper-zoom': 'number' === typeof o ? o : void 0 },
                w(),
                l && !m && t.createElement('div', { className: 'swiper-lazy-preloader' }),
              ),
            ),
          !o &&
            t.createElement(
              aS.Provider,
              { value: y },
              w(),
              l && !m && t.createElement('div', { className: 'swiper-lazy-preloader' }),
            ),
        );
      });
      function uS(e) {
        let { swiper: t, extendParams: n, on: r, emit: i } = e;
        function s(e) {
          let n;
          return e && 'string' === typeof e && t.isElement && ((n = t.el.querySelector(e)), n)
            ? n
            : (e &&
                ('string' === typeof e && (n = [...document.querySelectorAll(e)]),
                t.params.uniqueNavElements && 'string' === typeof e && n && n.length > 1 && 1 === t.el.querySelectorAll(e).length
                  ? (n = t.el.querySelector(e))
                  : n && 1 === n.length && (n = n[0])),
              e && !n ? e : n);
        }
        function a(e, n) {
          const r = t.params.navigation;
          (e = ob(e)).forEach((e) => {
            e &&
              (e.classList[n ? 'add' : 'remove'](...r.disabledClass.split(' ')),
              'BUTTON' === e.tagName && (e.disabled = n),
              t.params.watchOverflow && t.enabled && e.classList[t.isLocked ? 'add' : 'remove'](r.lockClass));
          });
        }
        function o() {
          const { nextEl: e, prevEl: n } = t.navigation;
          if (t.params.loop) return a(n, !1), void a(e, !1);
          a(n, t.isBeginning && !t.params.rewind), a(e, t.isEnd && !t.params.rewind);
        }
        function l(e) {
          e.preventDefault(), (!t.isBeginning || t.params.loop || t.params.rewind) && (t.slidePrev(), i('navigationPrev'));
        }
        function c(e) {
          e.preventDefault(), (!t.isEnd || t.params.loop || t.params.rewind) && (t.slideNext(), i('navigationNext'));
        }
        function u() {
          const e = t.params.navigation;
          if (
            ((t.params.navigation = (function (e, t, n, r) {
              return (
                e.params.createElements &&
                  Object.keys(r).forEach((i) => {
                    if (!n[i] && !0 === n.auto) {
                      let s = tb(e.el, '.'.concat(r[i]))[0];
                      s || ((s = rb('div', r[i])), (s.className = r[i]), e.el.append(s)), (n[i] = s), (t[i] = s);
                    }
                  }),
                n
              );
            })(t, t.originalParams.navigation, t.params.navigation, {
              nextEl: 'swiper-button-next',
              prevEl: 'swiper-button-prev',
            })),
            !e.nextEl && !e.prevEl)
          )
            return;
          let n = s(e.nextEl),
            r = s(e.prevEl);
          Object.assign(t.navigation, { nextEl: n, prevEl: r }), (n = ob(n)), (r = ob(r));
          const i = (n, r) => {
            n && n.addEventListener('click', 'next' === r ? c : l), !t.enabled && n && n.classList.add(...e.lockClass.split(' '));
          };
          n.forEach((e) => i(e, 'next')), r.forEach((e) => i(e, 'prev'));
        }
        function d() {
          let { nextEl: e, prevEl: n } = t.navigation;
          (e = ob(e)), (n = ob(n));
          const r = (e, n) => {
            e.removeEventListener('click', 'next' === n ? c : l),
              e.classList.remove(...t.params.navigation.disabledClass.split(' '));
          };
          e.forEach((e) => r(e, 'next')), n.forEach((e) => r(e, 'prev'));
        }
        n({
          navigation: {
            nextEl: null,
            prevEl: null,
            hideOnClick: !1,
            disabledClass: 'swiper-button-disabled',
            hiddenClass: 'swiper-button-hidden',
            lockClass: 'swiper-button-lock',
            navigationDisabledClass: 'swiper-navigation-disabled',
          },
        }),
          (t.navigation = { nextEl: null, prevEl: null }),
          r('init', () => {
            !1 === t.params.navigation.enabled ? h() : (u(), o());
          }),
          r('toEdge fromEdge lock unlock', () => {
            o();
          }),
          r('destroy', () => {
            d();
          }),
          r('enable disable', () => {
            let { nextEl: e, prevEl: n } = t.navigation;
            (e = ob(e)),
              (n = ob(n)),
              t.enabled ? o() : [...e, ...n].filter((e) => !!e).forEach((e) => e.classList.add(t.params.navigation.lockClass));
          }),
          r('click', (e, n) => {
            let { nextEl: r, prevEl: s } = t.navigation;
            (r = ob(r)), (s = ob(s));
            const a = n.target;
            if (t.params.navigation.hideOnClick && !s.includes(a) && !r.includes(a)) {
              if (
                t.pagination &&
                t.params.pagination &&
                t.params.pagination.clickable &&
                (t.pagination.el === a || t.pagination.el.contains(a))
              )
                return;
              let e;
              r.length
                ? (e = r[0].classList.contains(t.params.navigation.hiddenClass))
                : s.length && (e = s[0].classList.contains(t.params.navigation.hiddenClass)),
                i(!0 === e ? 'navigationShow' : 'navigationHide'),
                [...r, ...s].filter((e) => !!e).forEach((e) => e.classList.toggle(t.params.navigation.hiddenClass));
            }
          });
        const h = () => {
          t.el.classList.add(...t.params.navigation.navigationDisabledClass.split(' ')), d();
        };
        Object.assign(t.navigation, {
          enable: () => {
            t.el.classList.remove(...t.params.navigation.navigationDisabledClass.split(' ')), u(), o();
          },
          disable: h,
          update: o,
          init: u,
          destroy: d,
        });
      }
      function dS(e) {
        let t,
          n,
          { swiper: r, extendParams: i, on: s, emit: a, params: o } = e;
        (r.autoplay = { running: !1, paused: !1, timeLeft: 0 }),
          i({
            autoplay: {
              enabled: !1,
              delay: 3e3,
              waitForTransition: !0,
              disableOnInteraction: !1,
              stopOnLastSlide: !1,
              reverseDirection: !1,
              pauseOnMouseEnter: !1,
            },
          });
        let l,
          c,
          u,
          d,
          h,
          f,
          p,
          m,
          g = o && o.autoplay ? o.autoplay.delay : 3e3,
          v = o && o.autoplay ? o.autoplay.delay : 3e3,
          y = new Date().getTime();
        function w(e) {
          r &&
            !r.destroyed &&
            r.wrapperEl &&
            e.target === r.wrapperEl &&
            (r.wrapperEl.removeEventListener('transitionend', w), m || (e.detail && e.detail.bySwiperTouchMove) || I());
        }
        const b = () => {
            if (r.destroyed || !r.autoplay.running) return;
            r.autoplay.paused ? (c = !0) : c && ((v = l), (c = !1));
            const e = r.autoplay.paused ? l : y + v - new Date().getTime();
            (r.autoplay.timeLeft = e),
              a('autoplayTimeLeft', e, e / g),
              (n = requestAnimationFrame(() => {
                b();
              }));
          },
          S = (e) => {
            if (r.destroyed || !r.autoplay.running) return;
            cancelAnimationFrame(n), b();
            let i = 'undefined' === typeof e ? r.params.autoplay.delay : e;
            (g = r.params.autoplay.delay), (v = r.params.autoplay.delay);
            const s = (() => {
              let e;
              if (
                ((e =
                  r.virtual && r.params.virtual.enabled
                    ? r.slides.filter((e) => e.classList.contains('swiper-slide-active'))[0]
                    : r.slides[r.activeIndex]),
                !e)
              )
                return;
              return parseInt(e.getAttribute('data-swiper-autoplay'), 10);
            })();
            !Number.isNaN(s) && s > 0 && 'undefined' === typeof e && ((i = s), (g = s), (v = s)), (l = i);
            const o = r.params.speed,
              c = () => {
                r &&
                  !r.destroyed &&
                  (r.params.autoplay.reverseDirection
                    ? !r.isBeginning || r.params.loop || r.params.rewind
                      ? (r.slidePrev(o, !0, !0), a('autoplay'))
                      : r.params.autoplay.stopOnLastSlide || (r.slideTo(r.slides.length - 1, o, !0, !0), a('autoplay'))
                    : !r.isEnd || r.params.loop || r.params.rewind
                      ? (r.slideNext(o, !0, !0), a('autoplay'))
                      : r.params.autoplay.stopOnLastSlide || (r.slideTo(0, o, !0, !0), a('autoplay')),
                  r.params.cssMode &&
                    ((y = new Date().getTime()),
                    requestAnimationFrame(() => {
                      S();
                    })));
              };
            return (
              i > 0
                ? (clearTimeout(t),
                  (t = setTimeout(() => {
                    c();
                  }, i)))
                : requestAnimationFrame(() => {
                    c();
                  }),
              i
            );
          },
          E = () => {
            (y = new Date().getTime()), (r.autoplay.running = !0), S(), a('autoplayStart');
          },
          T = () => {
            (r.autoplay.running = !1), clearTimeout(t), cancelAnimationFrame(n), a('autoplayStop');
          },
          _ = (e, n) => {
            if (r.destroyed || !r.autoplay.running) return;
            clearTimeout(t), e || (p = !0);
            const i = () => {
              a('autoplayPause'), r.params.autoplay.waitForTransition ? r.wrapperEl.addEventListener('transitionend', w) : I();
            };
            if (((r.autoplay.paused = !0), n)) return f && (l = r.params.autoplay.delay), (f = !1), void i();
            const s = l || r.params.autoplay.delay;
            (l = s - (new Date().getTime() - y)), (r.isEnd && l < 0 && !r.params.loop) || (l < 0 && (l = 0), i());
          },
          I = () => {
            (r.isEnd && l < 0 && !r.params.loop) ||
              r.destroyed ||
              !r.autoplay.running ||
              ((y = new Date().getTime()), p ? ((p = !1), S(l)) : S(), (r.autoplay.paused = !1), a('autoplayResume'));
          },
          x = () => {
            if (r.destroyed || !r.autoplay.running) return;
            const e = Gw();
            'hidden' === e.visibilityState && ((p = !0), _(!0)), 'visible' === e.visibilityState && I();
          },
          k = (e) => {
            'mouse' === e.pointerType && ((p = !0), (m = !0), r.animating || r.autoplay.paused || _(!0));
          },
          C = (e) => {
            'mouse' === e.pointerType && ((m = !1), r.autoplay.paused && I());
          };
        s('init', () => {
          r.params.autoplay.enabled &&
            (r.params.autoplay.pauseOnMouseEnter &&
              (r.el.addEventListener('pointerenter', k), r.el.addEventListener('pointerleave', C)),
            Gw().addEventListener('visibilitychange', x),
            E());
        }),
          s('destroy', () => {
            r.el.removeEventListener('pointerenter', k),
              r.el.removeEventListener('pointerleave', C),
              Gw().removeEventListener('visibilitychange', x),
              r.autoplay.running && T();
          }),
          s('_freeModeStaticRelease', () => {
            (d || p) && I();
          }),
          s('_freeModeNoMomentumRelease', () => {
            r.params.autoplay.disableOnInteraction ? T() : _(!0, !0);
          }),
          s('beforeTransitionStart', (e, t, n) => {
            !r.destroyed && r.autoplay.running && (n || !r.params.autoplay.disableOnInteraction ? _(!0, !0) : T());
          }),
          s('sliderFirstMove', () => {
            !r.destroyed &&
              r.autoplay.running &&
              (r.params.autoplay.disableOnInteraction
                ? T()
                : ((u = !0),
                  (d = !1),
                  (p = !1),
                  (h = setTimeout(() => {
                    (p = !0), (d = !0), _(!0);
                  }, 200))));
          }),
          s('touchEnd', () => {
            if (!r.destroyed && r.autoplay.running && u) {
              if ((clearTimeout(h), clearTimeout(t), r.params.autoplay.disableOnInteraction)) return (d = !1), void (u = !1);
              d && r.params.cssMode && I(), (d = !1), (u = !1);
            }
          }),
          s('slideChange', () => {
            !r.destroyed && r.autoplay.running && (f = !0);
          }),
          Object.assign(r.autoplay, { start: E, stop: T, pause: _, resume: I });
      }
      function hS(e, t) {
        const n = eb(t);
        return n !== t && ((n.style.backfaceVisibility = 'hidden'), (n.style['-webkit-backface-visibility'] = 'hidden')), n;
      }
      function fS(e, t, n) {
        const r = 'swiper-slide-shadow'.concat(n ? '-'.concat(n) : '').concat(e ? ' swiper-slide-shadow-'.concat(e) : ''),
          i = eb(t);
        let s = i.querySelector('.'.concat(r.split(' ').join('.')));
        return s || ((s = rb('div', r.split(' '))), i.append(s)), s;
      }
      function pS(e) {
        let { swiper: t, extendParams: n, on: r } = e;
        n({ coverflowEffect: { rotate: 50, stretch: 0, depth: 100, scale: 1, modifier: 1, slideShadows: !0 } });
        !(function (e) {
          const {
            effect: t,
            swiper: n,
            on: r,
            setTranslate: i,
            setTransition: s,
            overwriteParams: a,
            perspective: o,
            recreateShadows: l,
            getEffectParams: c,
          } = e;
          let u;
          r('beforeInit', () => {
            if (n.params.effect !== t) return;
            n.classNames.push(''.concat(n.params.containerModifierClass).concat(t)),
              o && o() && n.classNames.push(''.concat(n.params.containerModifierClass, '3d'));
            const e = a ? a() : {};
            Object.assign(n.params, e), Object.assign(n.originalParams, e);
          }),
            r('setTranslate', () => {
              n.params.effect === t && i();
            }),
            r('setTransition', (e, r) => {
              n.params.effect === t && s(r);
            }),
            r('transitionEnd', () => {
              if (n.params.effect === t && l) {
                if (!c || !c().slideShadows) return;
                n.slides.forEach((e) => {
                  e.querySelectorAll(
                    '.swiper-slide-shadow-top, .swiper-slide-shadow-right, .swiper-slide-shadow-bottom, .swiper-slide-shadow-left',
                  ).forEach((e) => e.remove());
                }),
                  l();
              }
            }),
            r('virtualUpdate', () => {
              n.params.effect === t &&
                (n.slides.length || (u = !0),
                requestAnimationFrame(() => {
                  u && n.slides && n.slides.length && (i(), (u = !1));
                }));
            });
        })({
          effect: 'coverflow',
          swiper: t,
          on: r,
          setTranslate: () => {
            const { width: e, height: n, slides: r, slidesSizesGrid: i } = t,
              s = t.params.coverflowEffect,
              a = t.isHorizontal(),
              o = t.translate,
              l = a ? e / 2 - o : n / 2 - o,
              c = a ? s.rotate : -s.rotate,
              u = s.depth;
            for (let d = 0, h = r.length; d < h; d += 1) {
              const e = r[d],
                n = i[d],
                o = (l - e.swiperSlideOffset - n / 2) / n,
                h = 'function' === typeof s.modifier ? s.modifier(o) : o * s.modifier;
              let f = a ? c * h : 0,
                p = a ? 0 : c * h,
                m = -u * Math.abs(h),
                g = s.stretch;
              'string' === typeof g && -1 !== g.indexOf('%') && (g = (parseFloat(s.stretch) / 100) * n);
              let v = a ? 0 : g * h,
                y = a ? g * h : 0,
                w = 1 - (1 - s.scale) * Math.abs(h);
              Math.abs(y) < 0.001 && (y = 0),
                Math.abs(v) < 0.001 && (v = 0),
                Math.abs(m) < 0.001 && (m = 0),
                Math.abs(f) < 0.001 && (f = 0),
                Math.abs(p) < 0.001 && (p = 0),
                Math.abs(w) < 0.001 && (w = 0),
                t.browser &&
                  t.browser.need3dFix &&
                  ((Math.abs(f) / 90) % 2 === 1 && (f += 0.001), (Math.abs(p) / 90) % 2 === 1 && (p += 0.001));
              const b = 'translate3d('
                .concat(y, 'px,')
                .concat(v, 'px,')
                .concat(m, 'px)  rotateX(')
                .concat(p, 'deg) rotateY(')
                .concat(f, 'deg) scale(')
                .concat(w, ')');
              if (((hS(0, e).style.transform = b), (e.style.zIndex = 1 - Math.abs(Math.round(h))), s.slideShadows)) {
                let t = a ? e.querySelector('.swiper-slide-shadow-left') : e.querySelector('.swiper-slide-shadow-top'),
                  n = a ? e.querySelector('.swiper-slide-shadow-right') : e.querySelector('.swiper-slide-shadow-bottom');
                t || (t = fS('coverflow', e, a ? 'left' : 'top')),
                  n || (n = fS('coverflow', e, a ? 'right' : 'bottom')),
                  t && (t.style.opacity = h > 0 ? h : 0),
                  n && (n.style.opacity = -h > 0 ? -h : 0);
              }
            }
          },
          setTransition: (e) => {
            t.slides
              .map((e) => eb(e))
              .forEach((t) => {
                (t.style.transitionDuration = ''.concat(e, 'ms')),
                  t
                    .querySelectorAll(
                      '.swiper-slide-shadow-top, .swiper-slide-shadow-right, .swiper-slide-shadow-bottom, .swiper-slide-shadow-left',
                    )
                    .forEach((t) => {
                      t.style.transitionDuration = ''.concat(e, 'ms');
                    });
              });
          },
          perspective: () => !0,
          overwriteParams: () => ({ watchSlidesProgress: !0 }),
        });
      }
      cS.displayName = 'SwiperSlide';
      const mS = (e) => {
          let { games: t } = e;
          return (0, Jy.jsx)('section', {
            className: 'hidden md:block md:mx-auto lg:mx-auto xl:mx-24',
            children: (0, Jy.jsx)(lS, {
              modules: [pS, uS, dS],
              effect: 'coverflow',
              autoplay: { disableOnInterface: !1, delay: 3e3, pauseOnMouseEnter: !0 },
              spaceBetween: 30,
              slidesPerView: 3,
              navigation: !0,
              centeredSlides: !1,
              grabCursor: !0,
              coverflowEffect: { rotate: 0, slideShadows: !1 },
              children: t.map((e) => (0, Jy.jsx)(cS, { children: (0, Jy.jsx)(Uw, { game: e }) }, e.id)),
            }),
          });
        },
        gS = (e) => {
          let { label: t, htmlLabel: n, idLabel: r, onChange: i } = e;
          return (0, Jy.jsxs)(Jy.Fragment, {
            children: [
              (0, Jy.jsx)('label', { className: 'pr-2', htmlFor: n, children: t }),
              (0, Jy.jsx)(Pw, { inputType: 'checkbox', idLabel: r, onChange: i, styles: '' }),
            ],
          });
        },
        vS = () => {
          const [e, n] = (0, t.useState)(!1),
            [r, i] = (0, t.useState)(!1),
            { games: s, loading: a } = Rw(e, r);
          return (0, Jy.jsx)(Jy.Fragment, {
            children: (0, Jy.jsxs)('section', {
              className: 'sm:mt-4 md:mt-4 h-[100%]',
              children: [
                (0, Jy.jsxs)('div', {
                  className: 'flex justify-center',
                  children: [
                    (0, Jy.jsx)(gS, {
                      label: 'Filter Created Games',
                      htmlLabel: 'filterCreated',
                      idLabel: 'filterCreated',
                      onChange: () => {
                        n(!e);
                      },
                    }),
                    (0, Jy.jsx)(gS, {
                      label: 'Filter Joined Games',
                      htmlLabel: 'filterJoined',
                      idLabel: 'filterJoined',
                      onChange: () => {
                        i(!r);
                      },
                    }),
                  ],
                }),
                (0, Jy.jsx)('div', {
                  className: '',
                  children: a('gameList')
                    ? (0, Jy.jsx)('div', {
                        className: 'flex items-center justify-center z-50',
                        children: (0, Jy.jsx)(rw, { styles: 'animate-spin h-10 w-10 text-black' }),
                      })
                    : (0, Jy.jsxs)(Jy.Fragment, { children: [(0, Jy.jsx)(mS, { games: s }), (0, Jy.jsx)(Vw, { games: s })] }),
                }),
              ],
            }),
          });
        },
        yS = () => {
          const { loading: e } = Rw();
          return (0, Jy.jsx)(Jy.Fragment, {
            children: e('gameList')
              ? (0, Jy.jsx)('div', { children: (0, Jy.jsx)(rw, { styles: 'animate-spin h-10 w-10 text-black' }) })
              : (0, Jy.jsx)(Jy.Fragment, {
                  children: (0, Jy.jsxs)('section', {
                    className: '',
                    children: [
                      (0, Jy.jsx)(Lw, {}),
                      (0, Jy.jsx)('h1', { className: 'text-xl font-bold mb-4 text-center ', children: 'Game List' }),
                      (0, Jy.jsx)(vS, {}),
                    ],
                  }),
                }),
          });
        },
        wS = (e) => {
          let { hand: n, handleSelectCard: r, handleRemoveSelected: i } = e;
          const [s, a] = (0, t.useState)([]);
          return (0, Jy.jsxs)('form', {
            className: 'flex gap-2',
            onSubmit: async (e) => {
              e.preventDefault(), await i(s);
            },
            children: [
              n &&
                n.length > 0 &&
                n.map((e, t) =>
                  (0, Jy.jsxs)(
                    'div',
                    {
                      className: 'cursor-pointer border border-gray-300 rounded-md p-2 '.concat(
                        s.includes(e) ? 'bg-yellow-300' : 'hover:bg-blue-200',
                      ),
                      onClick: () => {
                        ((e) => {
                          s.includes(e) ? a(s.filter((t) => t !== e)) : a([...s, e]);
                        })(e),
                          r(s);
                      },
                      children: [e.suit, ' ', e.rank.label],
                    },
                    t,
                  ),
                ),
              (0, Jy.jsx)('button', { children: 'Discard Selected' }),
            ],
          });
        },
        bS = () => {
          const { gameId: e } = $e(),
            { user: n } = $y(),
            [r, i] = (0, t.useState)([]),
            [s, a] = (0, t.useState)(!0),
            [o, l] = (0, t.useState)([]);
          (0, t.useEffect)(() => {
            let t;
            return (
              (async () => {
                try {
                  t = await (async (e, t, n) => {
                    try {
                      return jy(
                        Mv(Yy, 'games', e, 'players', t),
                        (e) => {
                          console.log(e.data());
                          const t = e.data();
                          n(t.hand);
                        },
                        (e) => {
                          console.error('Error fetching player hand:', e);
                        },
                      );
                    } catch (r) {
                      throw (console.error('Error fetching player hand:', r), r);
                    }
                  })(e, n, (e) => {
                    i(e), a(!1);
                  });
                } catch (r) {
                  console.error('Error fetching player hand:', r), a(!1);
                }
              })(),
              () => {
                t && t();
              }
            );
          }, [e, n]);
          return (0, Jy.jsx)(Jy.Fragment, {
            children: s
              ? (0, Jy.jsx)('p', { children: 'Loading...' })
              : (0, Jy.jsx)(wS, {
                  hand: r,
                  handleSelectCard: (e) => {
                    l(e);
                  },
                  handleRemoveSelected: async () => {
                    try {
                      await kw(e, n, o);
                    } catch (t) {
                      console.error('Error removing selected cards and drawing new ones:', t);
                    }
                  },
                }),
          });
        },
        SS = [
          { path: '/', label: 'Home', element: (0, Jy.jsx)(ew, {}) },
          { path: '/games', label: 'Games', element: (0, Jy.jsx)(yS, {}) },
          { path: '/login', label: 'Sign Up / Sign In', element: (0, Jy.jsx)(gw, {}) },
          { path: '/games/lobby/:gameId', label: 'Game', element: (0, Jy.jsx)(Nw, {}) },
          { path: '/games/session/:gameId', label: 'Poker', element: (0, Jy.jsx)(bS, {}) },
          { path: '/signout', label: 'Sign out', element: (0, Jy.jsx)(vw, {}) },
        ],
        ES = () => {
          const { user: e } = $y(),
            n = (0, t.useMemo)(
              () =>
                ((e, t) =>
                  t
                    ? e.filter(
                        (e) => '/login' !== e.path && '/games/lobby/:gameId' !== e.path && '/games/session/:gameId' !== e.path,
                      )
                    : e.filter(
                        (e) =>
                          '/signout' !== e.path &&
                          '/games/lobby/:gameId' !== e.path &&
                          '/games' !== e.path &&
                          '/games/session/:gameId' !== e.path,
                      ))(SS, e),
              [SS, e],
            );
          return (0, Jy.jsx)('ul', {
            className: 'flex gap-4 mt-2 md:flex-row md:gap-2 md:mr-4 md:px-4',
            children: n.map((e, t) =>
              (0, Jy.jsx)(
                'li',
                {
                  className:
                    'flex ring-3 rounded-lg p-4 md:items-center italic md:h-8 md:px-10 md:bg-gradient-to-r md:from-sky-500 md:via-slate-500 md:to-gray-900 md:rounded-tl-full md:rounded-br-full md:font-bold md:uppercase md:italic md:text-white hover:opacity-70 md:mr-4',
                  children: (0, Jy.jsx)(Rt, { to: e.path, children: e.label }),
                },
                t,
              ),
            ),
          });
        },
        TS = () => {
          const [e, n] = (0, t.useState)(!1);
          return (0, Jy.jsx)(Jy.Fragment, {
            children: (0, Jy.jsxs)('section', {
              className:
                'flex sticky size-full top-0 z-50 flex-col sm:flex-row items-center md:justify-between p-2 border-b-2 bg-gray-100',
              children: [
                (0, Jy.jsx)('div', {
                  children: (0, Jy.jsx)(Rt, {
                    to: '/',
                    children: (0, Jy.jsx)(Xt, {
                      'aria-label': 'Home',
                      className:
                        'text-6xl text-black transition ease-in-out hover:rotate-6 duration-500 -rotate-6 hover:text-sky-500',
                    }),
                  }),
                }),
                (0, Jy.jsx)('nav', {
                  className: 'hidden md:flex justify-between items-center gap-4 font-semibold',
                  children: (0, Jy.jsx)(ES, {}),
                }),
                (0, Jy.jsxs)('nav', {
                  className: 'md:hidden flex flex-col items-end gap-1 font-semibold',
                  children: [
                    (0, Jy.jsx)(iw, {
                      onClick: () => n(!e),
                      styles: 'md:hidden font-bold text-xl hover:text-gray-500 top-0 right-4 absolute',
                      label: e ? (0, Jy.jsx)(tn, { className: 'text-3xl' }) : (0, Jy.jsx)(Zt, { className: 'text-3xl' }),
                    }),
                    e && (0, Jy.jsx)(ES, {}),
                  ],
                }),
              ],
            }),
          });
        },
        _S = () => (0, Jy.jsx)(Jy.Fragment, { children: (0, Jy.jsx)(TS, {}) });
      function IS(e) {
        return Qt({
          tag: 'svg',
          attr: {
            viewBox: '0 0 24 24',
            fill: 'none',
            stroke: 'currentColor',
            strokeWidth: '2',
            strokeLinecap: 'round',
            strokeLinejoin: 'round',
          },
          child: [
            { tag: 'path', attr: { d: 'M3 7v4a1 1 0 0 0 1 1h3' }, child: [] },
            { tag: 'path', attr: { d: 'M7 7v10' }, child: [] },
            {
              tag: 'path',
              attr: { d: 'M10 8v8a1 1 0 0 0 1 1h2a1 1 0 0 0 1 -1v-8a1 1 0 0 0 -1 -1h-2a1 1 0 0 0 -1 1z' },
              child: [],
            },
            { tag: 'path', attr: { d: 'M17 7v4a1 1 0 0 0 1 1h3' }, child: [] },
            { tag: 'path', attr: { d: 'M21 7v10' }, child: [] },
          ],
        })(e);
      }
      const xS = () =>
          (0, Jy.jsxs)('div', {
            className: 'flex flex-col justify-center items-center h-screen',
            children: [
              (0, Jy.jsx)(IS, { className: 'text-9xl text-red-500' }),
              (0, Jy.jsx)('div', { children: 'Page not found' }),
              (0, Jy.jsx)(Lt, {
                to: '/',
                className: 'border rounded-lg bg-green-500 text-white py-2 px-4 hover:bg-green-600',
                children: 'Return',
              }),
            ],
          }),
        kS = () => (0, Jy.jsxs)(Jy.Fragment, { children: [(0, Jy.jsx)(_S, {}), (0, Jy.jsx)(ft, {})] }),
        CS = (function (e, t) {
          return ee({
            basename: null == t ? void 0 : t.basename,
            future: yt({}, null == t ? void 0 : t.future, { v7_prependBasename: !0 }),
            history:
              ((n = { window: null == t ? void 0 : t.window }),
              void 0 === n && (n = {}),
              f(
                function (e, t) {
                  let { pathname: n, search: r, hash: i } = e.location;
                  return u(
                    '',
                    { pathname: n, search: r, hash: i },
                    (t.state && t.state.usr) || null,
                    (t.state && t.state.key) || 'default',
                  );
                },
                function (e, t) {
                  return 'string' === typeof t ? t : d(t);
                },
                null,
                n,
              )),
            hydrationData: (null == t ? void 0 : t.hydrationData) || Et(),
            routes: e,
            mapRouteProperties: mt,
            unstable_dataStrategy: null == t ? void 0 : t.unstable_dataStrategy,
            window: null == t ? void 0 : t.window,
          }).initialize();
          var n;
        })([
          {
            element: (0, Jy.jsx)(kS, {}),
            errorElement: (0, Jy.jsx)(xS, {}),
            children: SS.map((e) => ({ path: e.path, element: e.element })),
          },
        ]),
        NS = CS,
        PS = () => (0, Jy.jsx)(Jy.Fragment, { children: (0, Jy.jsx)(Zy, { children: (0, Jy.jsx)(Pt, { router: NS }) }) }),
        DS = Boolean(
          'localhost' === window.location.hostname ||
            '[::1]' === window.location.hostname ||
            window.location.hostname.match(/^127(?:\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/),
        );
      function AS(e, t) {
        navigator.serviceWorker
          .register(e)
          .then((e) => {
            e.onupdatefound = () => {
              const n = e.installing;
              null != n &&
                (n.onstatechange = () => {
                  'installed' === n.state &&
                    (navigator.serviceWorker.controller
                      ? (console.log(
                          'New content is available and will be used when all tabs for this page are closed. See https://cra.link/PWA.',
                        ),
                        t && t.onUpdate && t.onUpdate(e))
                      : (console.log('Content is cached for offline use.'), t && t.onSuccess && t.onSuccess(e)));
                });
            };
          })
          .catch((e) => {
            console.error('Error during service worker registration:', e);
          });
      }
      const OS = (e) => {
        e &&
          e instanceof Function &&
          n
            .e(453)
            .then(n.bind(n, 453))
            .then((t) => {
              let { getCLS: n, getFID: r, getFCP: i, getLCP: s, getTTFB: a } = t;
              n(e), r(e), i(e), s(e), a(e);
            });
      };
      i.createRoot(document.getElementById('root')).render((0, Jy.jsx)(t.StrictMode, { children: (0, Jy.jsx)(PS, {}) })),
        (function (e) {
          if ('serviceWorker' in navigator) {
            if (new URL('', window.location.href).origin !== window.location.origin) return;
            window.addEventListener('load', () => {
              const t = ''.concat('', '/service-worker.js');
              DS
                ? (!(function (e, t) {
                    fetch(e, { headers: { 'Service-Worker': 'script' } })
                      .then((n) => {
                        const r = n.headers.get('content-type');
                        404 === n.status || (null != r && -1 === r.indexOf('javascript'))
                          ? navigator.serviceWorker.ready.then((e) => {
                              e.unregister().then(() => {
                                window.location.reload();
                              });
                            })
                          : AS(e, t);
                      })
                      .catch(() => {
                        console.log('No internet connection found. App is running in offline mode.');
                      });
                  })(t, e),
                  navigator.serviceWorker.ready.then(() => {
                    console.log(
                      'This web app is being served cache-first by a service worker. To learn more, visit https://cra.link/PWA',
                    );
                  }))
                : AS(t, e);
            });
          }
        })(),
        OS();
    })();
})();
//# sourceMappingURL=main.5b1b32c4.js.map
